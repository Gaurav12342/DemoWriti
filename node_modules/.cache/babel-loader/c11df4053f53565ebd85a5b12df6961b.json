{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/ResidentListFilter.js\";\nimport { fil } from \"date-fns/locale\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"../../../components/common\";\nimport DoctorFilter from \"../../../components/DoctorFilter\";\nimport HomeAreaFilter from \"../../../components/HomeAreaFilter\";\nimport { STATUS } from \"../../../constants/resident\";\nimport _ from 'lodash';\n\nconst ResidentListFilter = props => {\n  var _filter$sortBy, _filter$find, _filter$find2;\n\n  const [filter, setFilter] = useState(props.filter);\n  const [isApplied, setIsApplied] = useState(false);\n  useEffect(() => {\n    if (!props.showFilter && !isApplied) {\n      setData(initData);\n    }\n  }, [props.showFilter]);\n  const initData = {\n    active: STATUS.ACTIVE === filter.find.status,\n    inactive: STATUS.DEACTIVE === filter.find.status,\n    phy: false,\n    ha: false,\n    vvs: false,\n    ptd: false,\n    mergeLFName: (_filter$sortBy = filter.sortBy) === null || _filter$sortBy === void 0 ? void 0 : _filter$sortBy.mergeLFName\n  };\n  const [data, setData] = useState(initData);\n\n  const prepareFilter = (options, sortOpt) => {\n    let obj = { ...filter,\n      pageNo: 1,\n      sortBy: { ...filter.sortBy,\n        ...sortOpt\n      },\n      find: { ...filter.find,\n        ...options\n      }\n    };\n    setFilter(obj);\n  };\n\n  const onSetStatus = e => {\n    const {\n      value,\n      checked\n    } = e.target;\n    prepareFilter({\n      status: value === \"active\" ? STATUS.ACTIVE : STATUS.DEACTIVE\n    });\n    setData({ ...data,\n      active: value === \"active\",\n      inactive: value === \"inactive\"\n    });\n  };\n\n  const onSetSorting = e => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let obj = {};\n\n    if (value === \"mergeLFName\") {\n      if (checked) obj[\"mergeLFName\"] = \"ASC\";else delete obj[\"mergeLFName\"];\n    } // else if (value === 'ha') {\n    //   if (checked)\n    //     obj['homeAreaId.name'] = 'ASC'\n    //   else delete obj['homeAreaId.name']\n    // }\n\n\n    prepareFilter({}, obj);\n    setData({ ...data,\n      [value]: checked\n    });\n  };\n\n  const onSetOthers = e => {\n    const {\n      value,\n      checked\n    } = e.target;\n    let obj = {};\n\n    if (value === \"vvs\") {\n      obj[\"vvs\"] = value;\n      setData({ ...data,\n        vvs: checked\n      });\n    } else if (value === \"ptd\") {\n      obj[\"ptd\"] = value;\n      setData({ ...data,\n        ptd: checked\n      });\n    }\n\n    prepareFilter(obj);\n  };\n\n  const handleFilter = str => {\n    if (str === \"clear\") {\n      props.onChangeFilter(props.initFilter);\n      setFilter(props.initFilter); // setData(initData)\n\n      setIsApplied(false);\n    } else {\n      setIsApplied(true);\n      props.onChangeFilter(filter);\n    }\n  };\n\n  const setDoctorFilter = doctorId => {\n    const tempFilter = { ...filter\n    };\n    tempFilter.find = { ...tempFilter.find,\n      doctorId: doctorId\n    };\n    setFilter(tempFilter);\n  };\n\n  const setHomeareaFilter = homeAreaId => {\n    console.log(\"ðŸš€ ~ file: ResidentListFilter.js ~ line 102 ~ setHomeareaFilter ~ homeAreaId\", homeAreaId);\n    const tempFilter = { ...filter\n    };\n\n    if (_.size(homeAreaId)) {\n      tempFilter.find = { ...tempFilter.find,\n        homeAreaId: homeAreaId\n      };\n    } else {\n      tempFilter.find = _.omit(tempFilter.find, \"homeAreaId\");\n    }\n\n    setFilter(tempFilter);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.showFilter ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter_section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"filter_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \" Sort By \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter_value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"phy\",\n    className: \"filter_switch mb-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"mergeLFName\",\n    id: \"phy\",\n    value: \"mergeLFName\",\n    checked: !!data.mergeLFName,\n    onChange: onSetSorting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"Name\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter_section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"filter_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \" Status \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter_value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"a\",\n    className: \"filter_switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"st\",\n    id: \"a\",\n    value: \"active\",\n    checked: data.active,\n    onChange: onSetStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"Active\")), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"in\",\n    className: \"filter_switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"st\",\n    id: \"in\",\n    value: \"inactive\",\n    checked: data.inactive,\n    onChange: onSetStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"In Active\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter_section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HomeAreaFilter, {\n    showFilter: true,\n    onChange: e => setHomeareaFilter(e),\n    multiple: true,\n    defaultValue: (_filter$find = filter.find) === null || _filter$find === void 0 ? void 0 : _filter$find.homeAreaId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter_section\",\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DoctorFilter, {\n    onChange: e => setDoctorFilter(e),\n    value: (_filter$find2 = filter.find) === null || _filter$find2 === void 0 ? void 0 : _filter$find2.doctorId,\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"secondary\",\n    style: {\n      width: \"50%\",\n      borderRadius: \"unset\"\n    },\n    onClick: () => handleFilter(\"clear\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, \"Clear Filter\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    style: {\n      width: \"50%\",\n      borderRadius: \"unset\"\n    },\n    onClick: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"Apply Filter\"))) : null);\n};\n\nexport default ResidentListFilter;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/ResidentListFilter.js"],"names":["fil","React","useState","useEffect","Button","DoctorFilter","HomeAreaFilter","STATUS","_","ResidentListFilter","props","filter","setFilter","isApplied","setIsApplied","showFilter","setData","initData","active","ACTIVE","find","status","inactive","DEACTIVE","phy","ha","vvs","ptd","mergeLFName","sortBy","data","prepareFilter","options","sortOpt","obj","pageNo","onSetStatus","e","value","checked","target","onSetSorting","onSetOthers","handleFilter","str","onChangeFilter","initFilter","setDoctorFilter","doctorId","tempFilter","setHomeareaFilter","homeAreaId","console","log","size","omit","marginTop","width","borderRadius"],"mappings":"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","sourcesContent":["import { fil } from \"date-fns/locale\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"../../../components/common\";\nimport DoctorFilter from \"../../../components/DoctorFilter\";\nimport HomeAreaFilter from \"../../../components/HomeAreaFilter\";\nimport { STATUS } from \"../../../constants/resident\";\nimport _ from 'lodash'\nconst ResidentListFilter = (props) => {\n  const [filter, setFilter] = useState(props.filter);\n  const [isApplied, setIsApplied] = useState(false);\n\n  useEffect(() => {\n    if (!props.showFilter && !isApplied) {\n      setData(initData);\n    }\n  }, [props.showFilter]);\n\n  const initData = {\n    active: STATUS.ACTIVE === filter.find.status,\n    inactive: STATUS.DEACTIVE === filter.find.status,\n    phy: false,\n    ha: false,\n    vvs: false,\n    ptd: false,\n    mergeLFName: filter.sortBy?.mergeLFName,\n  };\n\n  const [data, setData] = useState(initData);\n  const prepareFilter = (options, sortOpt) => {\n    let obj = {\n      ...filter,\n      pageNo: 1,\n      sortBy: { ...filter.sortBy, ...sortOpt },\n      find: {\n        ...filter.find,\n        ...options,\n      },\n    };\n    setFilter(obj);\n  };\n\n  const onSetStatus = (e) => {\n    const { value, checked } = e.target;\n    prepareFilter({\n      status: value === \"active\" ? STATUS.ACTIVE : STATUS.DEACTIVE,\n    });\n    setData({\n      ...data,\n      active: value === \"active\",\n      inactive: value === \"inactive\",\n    });\n  };\n\n  const onSetSorting = (e) => {\n    const { value, checked } = e.target;\n    let obj = {};\n    if (value === \"mergeLFName\") {\n      if (checked) obj[\"mergeLFName\"] = \"ASC\";\n      else delete obj[\"mergeLFName\"];\n    }\n    // else if (value === 'ha') {\n    //   if (checked)\n    //     obj['homeAreaId.name'] = 'ASC'\n    //   else delete obj['homeAreaId.name']\n    // }\n    prepareFilter({}, obj);\n    setData({ ...data, [value]: checked });\n  };\n\n  const onSetOthers = (e) => {\n    const { value, checked } = e.target;\n    let obj = {};\n    if (value === \"vvs\") {\n      obj[\"vvs\"] = value;\n      setData({ ...data, vvs: checked });\n    } else if (value === \"ptd\") {\n      obj[\"ptd\"] = value;\n      setData({ ...data, ptd: checked });\n    }\n    prepareFilter(obj);\n  };\n\n  const handleFilter = (str) => {\n    if (str === \"clear\") {\n      props.onChangeFilter(props.initFilter);\n      setFilter(props.initFilter);\n      // setData(initData)\n      setIsApplied(false);\n    } else {\n      setIsApplied(true);\n      props.onChangeFilter(filter);\n    }\n  };\n\n  const setDoctorFilter = (doctorId) => {\n    const tempFilter = { ...filter };\n    tempFilter.find = {\n      ...tempFilter.find,\n      doctorId: doctorId,\n    };\n    setFilter(tempFilter);\n  };\n  const setHomeareaFilter = (homeAreaId) => {\n    console.log(\n      \"ðŸš€ ~ file: ResidentListFilter.js ~ line 102 ~ setHomeareaFilter ~ homeAreaId\",\n      homeAreaId\n    );\n    const tempFilter = { ...filter };\n    if (_.size(homeAreaId)) {\n      tempFilter.find = {\n        ...tempFilter.find,\n        homeAreaId: homeAreaId,\n      };\n    } else {\n      tempFilter.find = _.omit(tempFilter.find, \"homeAreaId\");\n    }\n    setFilter(tempFilter);\n  };\n  return (\n    <>\n      {props.showFilter ? (\n        <div className=\"filter_wrap\">\n          <div className=\"filter_section\">\n            <h4 className=\"filter_head\"> Sort By </h4>\n            <div className=\"filter_value\">\n              <label htmlFor=\"phy\" className=\"filter_switch mb-md-10\">\n                <input\n                  type=\"checkbox\"\n                  name=\"mergeLFName\"\n                  id=\"phy\"\n                  value=\"mergeLFName\"\n                  checked={!!data.mergeLFName}\n                  onChange={onSetSorting}\n                />\n                <span>Name</span>\n              </label>\n              {/* <label for=\"ha\" className=\"filter_switch\">\n            <input type=\"checkbox\" name=\"ha\" id=\"ha\" value='ha' checked={data.ha}\n              onChange={onSetSorting} />\n            <span>Home Area</span>\n          </label> */}\n            </div>\n          </div>\n          <div className=\"filter_section\">\n            <h4 className=\"filter_head\"> Status </h4>\n            <div className=\"filter_value\">\n              <label for=\"a\" className=\"filter_switch\">\n                <input\n                  type=\"radio\"\n                  name=\"st\"\n                  id=\"a\"\n                  value=\"active\"\n                  checked={data.active}\n                  onChange={onSetStatus}\n                />\n                <span>Active</span>\n              </label>\n              <label for=\"in\" className=\"filter_switch\">\n                <input\n                  type=\"radio\"\n                  name=\"st\"\n                  id=\"in\"\n                  value=\"inactive\"\n                  checked={data.inactive}\n                  onChange={onSetStatus}\n                />\n                <span>In Active</span>\n              </label>\n            </div>\n            <div className=\"filter_section\">\n              <HomeAreaFilter\n                showFilter={true}\n                onChange={(e) => setHomeareaFilter(e)}\n                multiple={true}\n                defaultValue={filter.find?.homeAreaId}\n              />\n            </div>\n            <div className=\"filter_section\" style={{ marginTop: \"10px\" }}>\n              <DoctorFilter\n                onChange={(e) => setDoctorFilter(e)}\n                value={filter.find?.doctorId}\n                allowClear={true}\n              />\n            </div>\n\n            {/* <div className=\"filter_value pt_0\">\n          <label for=\"vvs\" className=\"filter_check\">\n            <input type=\"checkbox\" name=\"vvs\" id=\"vvs\" value=\"vvs\" checked={data.vvs}\n              onChange={onSetOthers} />\n            <span className=\"checkbox\"></span>\n            <span className=\"lbl\">Virtual Visit Scheduled</span>\n          </label>\n          <label for=\"ptd\" className=\"filter_check\">\n            <input type=\"checkbox\" name=\"ptd\" id=\"ptd\" value=\"ptd\" checked={data.ptd}\n              onChange={onSetOthers} />\n            <span className=\"checkbox\"></span>\n            <span className=\"lbl\">Pending To Do</span>\n          </label>\n\n        </div> */}\n          </div>\n          <div style={{ marginTop: \"10px\" }}>\n            <Button\n              type=\"secondary\"\n              style={{ width: \"50%\", borderRadius: \"unset\" }}\n              onClick={() => handleFilter(\"clear\")}\n            >\n              Clear Filter\n            </Button>\n            <Button\n              type=\"primary\"\n              style={{ width: \"50%\", borderRadius: \"unset\" }}\n              onClick={handleFilter}\n            >\n              Apply Filter\n            </Button>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\nexport default ResidentListFilter;\n"]},"metadata":{},"sourceType":"module"}