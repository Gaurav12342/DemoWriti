{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Feedback/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Toast } from '../../components/common';\nimport axios from '../../services/api/services/common';\nimport { feedbackUpsert } from '../../../src/services/api/routes/supportFeedback';\nimport { createForm } from 'rc-form';\nimport { dateTimeFormat, displayDateTime } from '../../util/moment';\nimport PageHead from './components/PageHead';\nimport { feedbackPaginate } from '../../services/api/routes/supportFeedback';\nimport Table from '../../components/common/Table/index';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { USER_TYPE } from '../../constants/User';\nimport UpsertForm from './components/UpsertForm';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport FeedbackDetail from './components/FeedbackDetail';\nimport { canPerformAction, getUserNameWithDesignation } from '../../../src/util/common';\nimport { MODULE, ACTIONS } from '../../../src/constants/subscription';\n\nconst _ = require('lodash');\n\nconst moment = require('moment');\n\nconst Feedback = props => {\n  const tod = moment();\n  const fromd = moment().subtract(15, 'days');\n  const [feedbackDetail, setFeedbackDetail] = useState('');\n  const [feedbackDetailVisible, setFeedbackDetailVisible] = useState(false);\n  const {\n    form,\n    authUser\n  } = props;\n  const isAdmin = authUser && (authUser.type === USER_TYPE.ADMIN.SUPER || authUser.type === USER_TYPE.ADMIN.GENERAL);\n  const [defaultDate, setDefaultDate] = useState([fromd, tod]);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState();\n  const [count, setCount] = useState(0);\n  const [visible, setVisible] = useState(false);\n  const [saveLoader, setSaveLoader] = useState(false);\n\n  const onOpenModal = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n    changeSaveLoader(false);\n  };\n\n  const changeSaveLoader = value => {\n    setSaveLoader(value);\n  };\n\n  const [apiFilter, setApiFilter] = useState(() => {\n    const filter = {\n      page: 1,\n      limit: 10,\n      populate: [{\n        addedBy: ['mergeLFName']\n      }],\n      lte: [{\n        createdAt: tod\n      }],\n      gte: [{\n        createdAt: fromd\n      }],\n      fields: [],\n      find: {},\n      sort: {\n        createdAt: 'DESC'\n      }\n    };\n\n    if (!isAdmin) {\n      _.extend(filter.find, {\n        addedBy: authUser._id\n      });\n    }\n\n    return filter;\n  });\n  useEffect(() => {\n    fetch();\n  }, [apiFilter]);\n\n  const fetch = async () => {\n    setLoading(true);\n    let res = await axios({ ...feedbackPaginate,\n      data: {\n        query: apiFilter\n      }\n    });\n\n    if (res) {\n      if (res.code === 'OK') {\n        setData(res.data.data);\n        setCount(res.data.count);\n      } else {\n        Toast.error(res.message);\n      }\n    }\n\n    setLoading(false); // filter.find && filter.find.facId ? setDetailLoader(false) : setLoading(false);\n  };\n\n  const handleFeedbackSubmit = () => {\n    const {\n      method,\n      url,\n      baseURL\n    } = feedbackUpsert;\n    props.form.validateFields((error, value) => {\n      if (!error) {\n        changeSaveLoader(true);\n        axios({\n          method,\n          url,\n          data: value,\n          baseURL\n        }).then(data => {\n          if (data.code == 'OK') {\n            Toast.success(data.message);\n            form.resetFields();\n            onClose();\n            changeSaveLoader(false);\n            setDefaultDate([fromd, moment()]);\n            setApiFilter(filter => {\n              return { ...filter,\n                lte: [{\n                  createdAt: moment()\n                }],\n                gte: [{\n                  createdAt: fromd\n                }]\n              };\n            });\n          }\n        }).catch(error => {\n          Toast.error(error);\n          changeSaveLoader(false);\n        });\n      }\n    });\n  };\n\n  const onDateChange = dateRange => {\n    setDefaultDate(dateRange);\n    setApiFilter(exFilter => {\n      return { ...exFilter,\n        gte: [{\n          createdAt: dateRange[0]\n        }],\n        lte: [{\n          createdAt: dateRange[1]\n        }],\n        page: 1,\n        limit: 10\n      };\n    });\n  };\n\n  const getColumns = () => [{\n    title: 'Sr.No',\n    keyword: 'index',\n    dataIndex: 'index',\n    width: '20px',\n    render: (text, record, index) => (apiFilter.page - 1) * apiFilter.limit + (index + 1)\n  }, {\n    title: 'Query',\n    dataIndex: 'message',\n    // className:  Column_classNames.query,\n    width: '500px',\n    render: (text, record) =>\n    /*#__PURE__*/\n    // <span>{text}</span>\n    React.createElement(Tooltip, {\n      overlay: text,\n      id: record._id,\n      className: \"max-w-500\",\n      onClick: () => {\n        console.log('sfsrfhbewsfujsbfhj');\n        setFeedbackDetail(text);\n        setFeedbackDetailVisible(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: text.length > 150 ? {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        cursor: 'pointer'\n      } : {\n        cursor: 'pointer'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, text))\n  }, {\n    title: 'Feedback By',\n    dataIndex: 'addedBy',\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, \" \", getUserNameWithDesignation(text))\n  }, {\n    title: 'Feedback Date',\n    dataIndex: 'createdAt',\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, displayDateTime(text) || '-')\n  }];\n\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    //  console.log(\"ðŸš€ ~ file: index.js ~ line 56 ~ handleTableChange ~ pagination, tfilter, sorte\", pagination, tfilter)\n    let tempFilter = { ...apiFilter,\n      page: pagination.current,\n      limit: pagination.pageSize\n    }; //  console.log(\"ðŸš€ ~ file: index.js ~ line 58 ~ handleTableChange ~ tempFilter\", tempFilter)\n\n    setApiFilter(tempFilter);\n  };\n\n  const onShowSizeChange = size => {\n    if (size) {\n      setApiFilter(prevFilter => ({ ...prevFilter,\n        page: 1,\n        limit: size,\n        page: 1\n      }));\n    }\n  };\n\n  const closeFeedbackDetail = () => {\n    //   console.log(\"CLOSED\")\n    setFeedbackDetailVisible(false);\n  };\n\n  let addParams = {\n    moduleId: MODULE.FEEDBACK,\n    actiontoCheck: ACTIONS.ADD.CODE\n  };\n  let tableListParams = {\n    moduleId: MODULE.FEEDBACK,\n    actiontoCheck: ACTIONS.LIST.CODE\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, visible && /*#__PURE__*/React.createElement(UpsertForm, {\n    form: form,\n    visible: visible,\n    title: \"Submit Feedback\",\n    onCancel: onClose,\n    handleFeedbackSubmit: handleFeedbackSubmit,\n    okText: \"Submit\",\n    okButtonProps: {\n      loading: saveLoader\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }), feedbackDetailVisible && /*#__PURE__*/React.createElement(FeedbackDetail, {\n    visible: feedbackDetailVisible,\n    data: feedbackDetail,\n    maskClosable: true,\n    onClose: closeFeedbackDetail,\n    title: 'Message',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageHead, {\n    onAddParams: addParams,\n    total: count,\n    onDateChange: onDateChange,\n    defaultDate: defaultDate,\n    onUpsertButtonClick: onOpenModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Table // columns={canPerformAction(tableListParams) ? getColumns() : null}\n  , {\n    columns: getColumns(),\n    datasource: data,\n    loading: loading,\n    onChange: handleTableChange,\n    pagination: {\n      current: apiFilter.page,\n      pageSize: apiFilter.limit,\n      total: count,\n      showSizeChanger: true,\n      onShowSizeChange: onShowSizeChange\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = props => {\n  const {\n    auth\n  } = props;\n  return auth;\n};\n\nexport default connect(mapStateToProps)(createForm()(withRouter(Feedback)));","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Feedback/index.js"],"names":["React","useEffect","useState","Toast","axios","feedbackUpsert","createForm","dateTimeFormat","displayDateTime","PageHead","feedbackPaginate","Table","connect","withRouter","USER_TYPE","UpsertForm","Tooltip","FeedbackDetail","canPerformAction","getUserNameWithDesignation","MODULE","ACTIONS","_","require","moment","Feedback","props","tod","fromd","subtract","feedbackDetail","setFeedbackDetail","feedbackDetailVisible","setFeedbackDetailVisible","form","authUser","isAdmin","type","ADMIN","SUPER","GENERAL","defaultDate","setDefaultDate","loading","setLoading","data","setData","count","setCount","visible","setVisible","saveLoader","setSaveLoader","onOpenModal","onClose","changeSaveLoader","value","apiFilter","setApiFilter","filter","page","limit","populate","addedBy","lte","createdAt","gte","fields","find","sort","extend","_id","fetch","res","query","code","error","message","handleFeedbackSubmit","method","url","baseURL","validateFields","then","success","resetFields","catch","onDateChange","dateRange","exFilter","getColumns","title","keyword","dataIndex","width","render","text","record","index","console","log","length","overflow","textOverflow","whiteSpace","cursor","textTransform","handleTableChange","pagination","tfilter","sorter","tempFilter","current","pageSize","onShowSizeChange","size","prevFilter","closeFeedbackDetail","addParams","moduleId","FEEDBACK","actiontoCheck","ADD","CODE","tableListParams","LIST","total","showSizeChanger","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Toast } from '../../components/common';\nimport axios from '../../services/api/services/common';\nimport { feedbackUpsert } from '../../../src/services/api/routes/supportFeedback';\nimport { createForm } from 'rc-form';\nimport { dateTimeFormat, displayDateTime } from '../../util/moment';\nimport PageHead from './components/PageHead';\nimport { feedbackPaginate } from '../../services/api/routes/supportFeedback';\nimport Table from '../../components/common/Table/index';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { USER_TYPE } from '../../constants/User';\nimport UpsertForm from './components/UpsertForm';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport FeedbackDetail from './components/FeedbackDetail';\nimport { canPerformAction, getUserNameWithDesignation } from '../../../src/util/common';\nimport { MODULE, ACTIONS } from '../../../src/constants/subscription';\n\nconst _ = require('lodash');\nconst moment = require('moment');\nconst Feedback = (props) => {\n  const tod = moment();\n\n  const fromd = moment().subtract(15, 'days');\n  const [feedbackDetail, setFeedbackDetail] = useState('');\n  const [feedbackDetailVisible, setFeedbackDetailVisible] = useState(false);\n  const { form, authUser } = props;\n  const isAdmin =\n    authUser &&\n    (authUser.type === USER_TYPE.ADMIN.SUPER ||\n      authUser.type === USER_TYPE.ADMIN.GENERAL);\n  const [defaultDate, setDefaultDate] = useState([fromd, tod]);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState();\n  const [count, setCount] = useState(0);\n  const [visible, setVisible] = useState(false);\n  const [saveLoader, setSaveLoader] = useState(false);\n  const onOpenModal = () => {\n    setVisible(true);\n  };\n  const onClose = () => {\n    setVisible(false);\n    changeSaveLoader(false);\n  };\n  const changeSaveLoader = (value) => {\n    setSaveLoader(value);\n  };\n  const [apiFilter, setApiFilter] = useState(() => {\n    const filter = {\n      page: 1,\n      limit: 10,\n      populate: [{ addedBy: ['mergeLFName'] }],\n      lte: [{ createdAt: tod }],\n      gte: [{ createdAt: fromd }],\n      fields: [],\n      find: {},\n      sort: { createdAt: 'DESC' },\n    };\n    if (!isAdmin) {\n      _.extend(filter.find, { addedBy: authUser._id });\n    }\n    return filter;\n  });\n\n  useEffect(() => {\n    fetch();\n  }, [apiFilter]);\n  const fetch = async () => {\n    setLoading(true);\n    let res = await axios({ ...feedbackPaginate, data: { query: apiFilter } });\n    if (res) {\n      if (res.code === 'OK') {\n        setData(res.data.data);\n        setCount(res.data.count);\n      } else {\n        Toast.error(res.message);\n      }\n    }\n    setLoading(false);\n    // filter.find && filter.find.facId ? setDetailLoader(false) : setLoading(false);\n  };\n\n  const handleFeedbackSubmit = () => {\n    const { method, url, baseURL } = feedbackUpsert;\n    props.form.validateFields((error, value) => {\n      if (!error) {\n        changeSaveLoader(true);\n        axios({ method, url, data: value, baseURL })\n          .then((data) => {\n            if (data.code == 'OK') {\n              Toast.success(data.message);\n              form.resetFields();\n              onClose();\n              changeSaveLoader(false);\n              setDefaultDate([fromd, moment()]);\n\n              setApiFilter((filter) => {\n                return {\n                  ...filter,\n                  lte: [{ createdAt: moment() }],\n                  gte: [{ createdAt: fromd }],\n                };\n              });\n            }\n          })\n          .catch((error) => {\n            Toast.error(error);\n            changeSaveLoader(false);\n          });\n      }\n    });\n  };\n  const onDateChange = (dateRange) => {\n    setDefaultDate(dateRange);\n    setApiFilter((exFilter) => {\n      return {\n        ...exFilter,\n        gte: [{ createdAt: dateRange[0] }],\n        lte: [{ createdAt: dateRange[1] }],\n        page: 1,\n        limit: 10,\n      };\n    });\n  };\n  const getColumns = () => [\n    {\n      title: 'Sr.No',\n      keyword: 'index',\n      dataIndex: 'index',\n      width: '20px',\n      render: (text, record, index) =>\n        (apiFilter.page - 1) * apiFilter.limit + (index + 1),\n    },\n    {\n      title: 'Query',\n      dataIndex: 'message',\n      // className:  Column_classNames.query,\n      width: '500px',\n\n      render: (text, record) => (\n        // <span>{text}</span>\n        <Tooltip\n          overlay={text}\n          id={record._id}\n          className='max-w-500'\n          onClick={() => {\n            console.log('sfsrfhbewsfujsbfhj');\n            setFeedbackDetail(text);\n            setFeedbackDetailVisible(true);\n          }}\n        >\n          <div\n            style={\n              text.length > 150\n                ? {\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap',\n                  cursor: 'pointer',\n                }\n                : { cursor: 'pointer' }\n            }\n          >\n            {text}\n          </div>\n        </Tooltip>\n      ),\n    },\n    {\n      title: 'Feedback By',\n      dataIndex: 'addedBy',\n      render: (text) => <span> {getUserNameWithDesignation(text)}</span>,\n    },\n    {\n      title: 'Feedback Date',\n      dataIndex: 'createdAt',\n      render: (text) => (\n        <span style={{ textTransform: 'capitalize' }}>\n          {displayDateTime(text) || '-'}\n        </span>\n      ),\n    },\n  ];\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    //  console.log(\"ðŸš€ ~ file: index.js ~ line 56 ~ handleTableChange ~ pagination, tfilter, sorte\", pagination, tfilter)\n    let tempFilter = {\n      ...apiFilter,\n      page: pagination.current,\n      limit: pagination.pageSize,\n    };\n    //  console.log(\"ðŸš€ ~ file: index.js ~ line 58 ~ handleTableChange ~ tempFilter\", tempFilter)\n    setApiFilter(tempFilter);\n  };\n\n  const onShowSizeChange = (size) => {\n    if (size) {\n      setApiFilter((prevFilter) => ({ ...prevFilter, page: 1, limit: size, page: 1 }));\n    }\n  };\n  const closeFeedbackDetail = () => {\n    //   console.log(\"CLOSED\")\n    setFeedbackDetailVisible(false);\n  };\n\n  let addParams = {\n    moduleId: MODULE.FEEDBACK,\n    actiontoCheck: ACTIONS.ADD.CODE,\n  };\n  let tableListParams = {\n    moduleId: MODULE.FEEDBACK,\n    actiontoCheck: ACTIONS.LIST.CODE,\n  };\n\n  return (\n    <>\n      {visible && (\n        <UpsertForm\n          form={form}\n          visible={visible}\n          title='Submit Feedback'\n          onCancel={onClose}\n          handleFeedbackSubmit={handleFeedbackSubmit}\n          okText='Submit'\n          okButtonProps={{ loading: saveLoader }}\n        ></UpsertForm>\n      )}\n      {feedbackDetailVisible && (\n        <FeedbackDetail\n          visible={feedbackDetailVisible}\n          data={feedbackDetail}\n          maskClosable={true}\n          onClose={closeFeedbackDetail}\n          title={'Message'}\n        ></FeedbackDetail>\n      )}\n      <div className='pmr_wrap'>\n        <div className='container'>\n          <PageHead\n            onAddParams={addParams}\n            total={count}\n            onDateChange={onDateChange}\n            defaultDate={defaultDate}\n            onUpsertButtonClick={onOpenModal}\n          />\n\n          <Table\n            // columns={canPerformAction(tableListParams) ? getColumns() : null}\n            columns={getColumns()}\n            datasource={data}\n            loading={loading}\n            onChange={handleTableChange}\n            pagination={{\n              current: apiFilter.page,\n              pageSize: apiFilter.limit,\n              total: count,\n              showSizeChanger: true,\n              onShowSizeChange: onShowSizeChange,\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (props) => {\n  const { auth } = props;\n  return auth;\n};\nexport default connect(mapStateToProps)(createForm()(withRouter(Feedback)));\n"]},"metadata":{},"sourceType":"module"}