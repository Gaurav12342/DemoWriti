{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/PmrGroup/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport UpsertModal from './components/Upsert';\nimport Header from './components/Header';\nimport Table from '../../components/common/Table/index';\nimport ActiveDeactive from '../../components/common/ActiveDeactive';\nimport axios from '../../services/api/config';\nimport { Edit } from '../../assets/images/resident-detail/index';\nimport { AddFriend } from '../../assets/images/virtualvisit/index';\nimport { pmrGroupPaginate } from '../../services/api/routes/pmr';\nimport { Toast } from '../../components/common';\nimport { displayDate } from '../../util/moment';\nimport { PMR_SCHEDULE_GROUP_FREQUENCY } from '../../constants/pmr';\nimport { updatePmrGroup } from '../../services/api/routes/pmr';\nimport AssignHomeModal from './components/AssignHomeModal';\nimport Modal from '../../components/common/Popup/index';\nimport ReactTableScroll from 'rc-table-s';\nimport { canPerformAction } from '../../util/common';\nimport { MODULE, SUB_MODULE, ACTIONS } from '../../constants/subscription';\n\nconst _ = require('lodash');\n\nconst PmrGroup = props => {\n  const [visible, setVisible] = useState(false);\n  const [editVisible, setEditVisible] = useState(false);\n  const [assignHomeVisible, setAssignResidentVisible] = useState(false);\n  const [pmrDetails, setPmrDetails] = useState('');\n  const [selectedPmrGroupId, setSelectedPmrGroupId] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [residentLoader, setResidentLoader] = useState(false);\n  const [filter, setFilter] = useState({\n    page: 1,\n    limit: 10,\n    sortBy: {\n      createdAt: 'DESC'\n    },\n    find: {}\n  });\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const checkAddAction = canPerformAction({\n    moduleId: MODULE.PMR,\n    subModuleId: SUB_MODULE.PMR_GROUP,\n    actiontoCheck: ACTIONS.ADD.CODE\n  });\n  useEffect(() => {\n    if (filter.hasOwnProperty('search') && filter.search['keyword']) {\n      const delayDebounceFn = setTimeout(() => {\n        fetch();\n      }, 600);\n      return () => clearTimeout(delayDebounceFn);\n    } else fetch();\n  }, [filter]);\n\n  const visibleUpsert = () => {\n    setVisible(true);\n  };\n\n  const closeUpsert = () => {\n    setVisible(false);\n  };\n\n  const visibleEditModal = record => {\n    setEditVisible(true);\n    setPmrDetails(record);\n  };\n\n  const closeEditModal = () => {\n    setEditVisible(false);\n  };\n\n  const handleAssignResident = record => {\n    setSelectedPmrGroupId(record === null || record === void 0 ? void 0 : record._id);\n    setAssignResidentVisible(true);\n  };\n\n  const closeAssignHomeModal = isMoved => {\n    setAssignResidentVisible(false);\n    if (isMoved) fetch();\n  };\n\n  const modifiedList = list => {\n    let modifiedList = list.map(current => {\n      return current;\n    });\n    return modifiedList;\n  };\n\n  const fetch = () => {\n    setLoading(true);\n    axios({ ...pmrGroupPaginate,\n      data: {\n        query: { ...filter\n        }\n      }\n    }).then(response => {\n      if (response.data.code === 'OK') {\n        let updatedList = modifiedList(response.data.data.list);\n        setData(updatedList);\n        setTotal(response.data.data.count);\n        setLoading(false);\n      } else {\n        setLoading(false);\n      }\n    }).catch(err => {\n      setLoading(false);\n    });\n  };\n\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    if (!pagination) return;\n    let tempFilter = filter;\n    tempFilter = { ...tempFilter,\n      page: pagination.current,\n      limit: pagination.pageSize\n    };\n\n    if (tfilter && Object.keys(tfilter).length) {\n      if (tfilter.isActive && tfilter.isActive.length) {\n        tempFilter.find.isActive = tfilter.isActive;\n      } else if (tempFilter.find.isActive) {\n        delete tempFilter.find['isActive'];\n      }\n\n      tempFilter.page = 1;\n    } else {// tempFilter.filter = {\n      //     type: tempFilter.filter.type\n      // }\n    }\n\n    setFilter(tempFilter);\n  };\n\n  const onShowSizeChange = size => {\n    if (size) {\n      setFilter(prevFilter => ({ ...prevFilter,\n        limit: size,\n        page: 1\n      }));\n    }\n  };\n\n  const handleActiveDeactive = record => {\n    let tempData = data.map(rec => {\n      if (rec._id === record._id) {\n        return { ...rec,\n          isActive: !rec.isActive\n        };\n      } else {\n        return rec;\n      }\n    });\n    setData(tempData);\n  };\n\n  const getColumns = () => [{\n    title: 'Sr.No',\n    keyword: 'index',\n    dataIndex: 'index',\n    render: (text, record, index) => (filter.page - 1) * filter.limit + (index + 1)\n  }, {\n    title: 'Group Name',\n    dataIndex: 'groupName',\n    render: (text, record) => /*#__PURE__*/React.createElement(React.Fragment, null, text ? text : '-')\n  }, {\n    title: 'Frequency',\n    dataIndex: 'frequency',\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, text ? _.findKey(PMR_SCHEDULE_GROUP_FREQUENCY, _.partial(_.isEqual, text)).replace(/_/g, ' ') : '-')\n  }, {\n    title: 'Next PMR',\n    dataIndex: 'startDate',\n    render: (text, record) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, (record === null || record === void 0 ? void 0 : record.startDate) ? displayDate(record.startDate) : '-'), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, (record === null || record === void 0 ? void 0 : record.endDate) ? displayDate(record.endDate) : '-'))\n  }, {\n    title: 'Running PMR',\n    dataIndex: 'lastPMR',\n    render: (text, record) => {\n      var _record$lastPMR, _record$lastPMR2;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }, ((_record$lastPMR = record.lastPMR) === null || _record$lastPMR === void 0 ? void 0 : _record$lastPMR.endDate) ? displayDate(record.lastPMR.endDate) : '-'), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }\n      }, ((_record$lastPMR2 = record.lastPMR) === null || _record$lastPMR2 === void 0 ? void 0 : _record$lastPMR2.startDate) ? displayDate(record.lastPMR.startDate) : '-'));\n    }\n  }, {\n    title: 'Push Days',\n    dataIndex: 'pushDays',\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, text ? text : '-')\n  }, {\n    title: 'Due Days',\n    dataIndex: 'dueDays',\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }, text ? text : '-')\n  }, {\n    title: 'Active',\n    dataIndex: 'isActive',\n    render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ActiveDeactive, {\n      documentId: record._id,\n      record: record,\n      isActive: record.isActive,\n      API: updatePmrGroup,\n      onActiveDeactive: record => {\n        handleActiveDeactive(record);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    })),\n    filters: [{\n      text: 'Active',\n      value: true\n    }, {\n      text: 'De-active',\n      value: false\n    }],\n    onFilter: (value, record) => record.isActive === value\n  }, {\n    title: 'Action',\n    showRefresh: true,\n    render: (text, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => {\n        visibleEditModal(record);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    }, \"Edit\")), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => {\n        handleAssignResident(record);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AddFriend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 15\n      }\n    }, \"Assigned resident\"))))\n  }];\n\n  const handleSearch = e => {\n    let value = e.target.value;\n    let obj = { ...filter,\n      page: 1,\n      search: {\n        keyword: value,\n        keys: ['groupName']\n      }\n    };\n    setFilter(obj);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    total: total,\n    onSearch: handleSearch,\n    onVisible: visibleUpsert,\n    checkAddAction: checkAddAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    columns: getColumns(),\n    datasource: data,\n    loading: loading,\n    onChange: handleTableChange,\n    pagination: {\n      current: filter.page,\n      pageSize: filter.limit,\n      total: total,\n      showSizeChanger: true,\n      onShowSizeChange: onShowSizeChange\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }))), visible ? /*#__PURE__*/React.createElement(UpsertModal, {\n    onOk: fetch,\n    visible: visible,\n    onCancel: closeUpsert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }) : null, editVisible ? /*#__PURE__*/React.createElement(UpsertModal, {\n    onOk: fetch,\n    data: pmrDetails,\n    visible: editVisible,\n    onCancel: closeEditModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }\n  }) : null, assignHomeVisible && /*#__PURE__*/React.createElement(AssignHomeModal, {\n    title: \"Assigned Residents\",\n    loading: residentLoader,\n    selectedPmrGroupId: selectedPmrGroupId,\n    onClose: closeAssignHomeModal,\n    visible: assignHomeVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default PmrGroup;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/PmrGroup/index.js"],"names":["React","useEffect","useState","UpsertModal","Header","Table","ActiveDeactive","axios","Edit","AddFriend","pmrGroupPaginate","Toast","displayDate","PMR_SCHEDULE_GROUP_FREQUENCY","updatePmrGroup","AssignHomeModal","Modal","ReactTableScroll","canPerformAction","MODULE","SUB_MODULE","ACTIONS","_","require","PmrGroup","props","visible","setVisible","editVisible","setEditVisible","assignHomeVisible","setAssignResidentVisible","pmrDetails","setPmrDetails","selectedPmrGroupId","setSelectedPmrGroupId","loading","setLoading","residentLoader","setResidentLoader","filter","setFilter","page","limit","sortBy","createdAt","find","data","setData","total","setTotal","checkAddAction","moduleId","PMR","subModuleId","PMR_GROUP","actiontoCheck","ADD","CODE","hasOwnProperty","search","delayDebounceFn","setTimeout","fetch","clearTimeout","visibleUpsert","closeUpsert","visibleEditModal","record","closeEditModal","handleAssignResident","_id","closeAssignHomeModal","isMoved","modifiedList","list","map","current","query","then","response","code","updatedList","count","catch","err","handleTableChange","pagination","tfilter","sorter","tempFilter","pageSize","Object","keys","length","isActive","onShowSizeChange","size","prevFilter","handleActiveDeactive","tempData","rec","getColumns","title","keyword","dataIndex","render","text","index","findKey","partial","isEqual","replace","startDate","endDate","lastPMR","textTransform","filters","value","onFilter","showRefresh","handleSearch","e","target","obj","showSizeChanger"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport UpsertModal from './components/Upsert';\nimport Header from './components/Header';\nimport Table from '../../components/common/Table/index';\nimport ActiveDeactive from '../../components/common/ActiveDeactive';\nimport axios from '../../services/api/config';\nimport { Edit } from '../../assets/images/resident-detail/index';\nimport { AddFriend } from '../../assets/images/virtualvisit/index';\nimport { pmrGroupPaginate } from '../../services/api/routes/pmr';\nimport { Toast } from '../../components/common';\nimport { displayDate } from '../../util/moment';\nimport { PMR_SCHEDULE_GROUP_FREQUENCY } from '../../constants/pmr';\nimport { updatePmrGroup } from '../../services/api/routes/pmr';\nimport AssignHomeModal from './components/AssignHomeModal';\nimport Modal from '../../components/common/Popup/index';\nimport ReactTableScroll from 'rc-table-s';\nimport { canPerformAction } from '../../util/common';\nimport { MODULE, SUB_MODULE, ACTIONS } from '../../constants/subscription';\nconst _ = require('lodash');\n\nconst PmrGroup = (props) => {\n  const [visible, setVisible] = useState(false);\n  const [editVisible, setEditVisible] = useState(false);\n  const [assignHomeVisible, setAssignResidentVisible] = useState(false);\n  const [pmrDetails, setPmrDetails] = useState('');\n  const [selectedPmrGroupId, setSelectedPmrGroupId] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [residentLoader, setResidentLoader] = useState(false);\n  const [filter, setFilter] = useState({\n    page: 1,\n    limit: 10,\n    sortBy: { createdAt: 'DESC' },\n    find: {},\n  });\n  const [data, setData] = useState([]);\n\n  const [total, setTotal] = useState(0);\n\n  const checkAddAction = canPerformAction({\n    moduleId: MODULE.PMR,\n    subModuleId: SUB_MODULE.PMR_GROUP,\n    actiontoCheck: ACTIONS.ADD.CODE\n  })\n\n  useEffect(() => {\n    if (filter.hasOwnProperty('search') && filter.search['keyword']) {\n      const delayDebounceFn = setTimeout(() => {\n        fetch();\n      }, 600);\n      return () => clearTimeout(delayDebounceFn);\n    } else fetch();\n  }, [filter]);\n\n  const visibleUpsert = () => {\n    setVisible(true);\n  };\n  const closeUpsert = () => {\n    setVisible(false);\n  };\n\n  const visibleEditModal = (record) => {\n    setEditVisible(true);\n    setPmrDetails(record);\n  };\n\n  const closeEditModal = () => {\n    setEditVisible(false);\n  };\n\n  const handleAssignResident = (record) => {\n    setSelectedPmrGroupId(record?._id);\n    setAssignResidentVisible(true);\n  };\n  const closeAssignHomeModal = (isMoved) => {\n    setAssignResidentVisible(false);\n    if (isMoved)\n      fetch()\n  };\n\n  const modifiedList = (list) => {\n    let modifiedList = list.map((current) => {\n      return current;\n    });\n    return modifiedList;\n  };\n\n  const fetch = () => {\n    setLoading(true);\n\n    axios({ ...pmrGroupPaginate, data: { query: { ...filter } } })\n      .then((response) => {\n        if (response.data.code === 'OK') {\n          let updatedList = modifiedList(response.data.data.list);\n          setData(updatedList);\n          setTotal(response.data.data.count);\n          setLoading(false);\n        } else {\n          setLoading(false);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    if (!pagination) return;\n    let tempFilter = filter;\n    tempFilter = {\n      ...tempFilter,\n      page: pagination.current,\n      limit: pagination.pageSize,\n    };\n    if (tfilter && Object.keys(tfilter).length) {\n      if (tfilter.isActive && tfilter.isActive.length) {\n        tempFilter.find.isActive = tfilter.isActive;\n      } else if (tempFilter.find.isActive) {\n        delete tempFilter.find['isActive'];\n      }\n      tempFilter.page = 1;\n    } else {\n      // tempFilter.filter = {\n      //     type: tempFilter.filter.type\n      // }\n    }\n    setFilter(tempFilter);\n  };\n\n  const onShowSizeChange = (size) => {\n    if (size) {\n      setFilter((prevFilter) => ({ ...prevFilter, limit: size, page: 1 }));\n    }\n  };\n\n  const handleActiveDeactive = (record) => {\n    let tempData = data.map((rec) => {\n      if (rec._id === record._id) {\n        return { ...rec, isActive: !rec.isActive };\n      } else {\n        return rec;\n      }\n    });\n    setData(tempData);\n  };\n\n  const getColumns = () => [\n    {\n      title: 'Sr.No',\n      keyword: 'index',\n      dataIndex: 'index',\n      render: (text, record, index) =>\n        (filter.page - 1) * filter.limit + (index + 1),\n    },\n    {\n      title: 'Group Name',\n      dataIndex: 'groupName',\n      render: (text, record) => <>{text ? text : '-'}</>,\n    },\n    {\n      title: 'Frequency',\n      dataIndex: 'frequency',\n      render: (text) => (\n        <span>\n          {text\n            ? _.findKey(\n              PMR_SCHEDULE_GROUP_FREQUENCY,\n              _.partial(_.isEqual, text)\n            ).replace(/_/g, ' ')\n            : '-'}\n        </span>\n      ),\n    },\n    {\n      title: 'Next PMR',\n      dataIndex: 'startDate',\n      render: (text, record) => (\n        <div>\n          <div>{record?.startDate ? displayDate(record.startDate) : '-'}</div>\n          <div>{record?.endDate ? displayDate(record.endDate) : '-'}</div>\n        </div>\n      ),\n    },\n    {\n      title: 'Running PMR',\n      dataIndex: 'lastPMR',\n      render: (text, record) => (\n        <div>\n          <div>\n            {record.lastPMR?.endDate\n              ? displayDate(record.lastPMR.endDate)\n              : '-'}\n          </div>\n          <div>\n            {record.lastPMR?.startDate\n              ? displayDate(record.lastPMR.startDate)\n              : '-'}\n          </div>\n        </div>\n      ),\n    },\n    {\n      title: 'Push Days',\n      dataIndex: 'pushDays',\n      render: (text) => (\n        <span style={{ textTransform: 'capitalize' }}>{text ? text : '-'}</span>\n      ),\n    },\n    {\n      title: 'Due Days',\n      dataIndex: 'dueDays',\n      render: (text) => (\n        <span style={{ textTransform: 'capitalize' }}>{text ? text : '-'}</span>\n      ),\n    },\n    {\n      title: 'Active',\n      dataIndex: 'isActive',\n      render: (text, record) => (\n        <span style={{ textTransform: 'capitalize' }}>\n          <ActiveDeactive\n            documentId={record._id}\n            record={record}\n            isActive={record.isActive}\n            API={updatePmrGroup}\n            onActiveDeactive={(record) => {\n              handleActiveDeactive(record);\n            }}\n          />\n        </span>\n      ),\n      filters: [\n        { text: 'Active', value: true },\n        { text: 'De-active', value: false },\n      ],\n      onFilter: (value, record) => record.isActive === value,\n    },\n    {\n      title: 'Action',\n      showRefresh: true,\n      render: (text, record) => (\n        <>\n          <div className='actions'>\n            {/* {\n              canPerformAction({\n                moduleId: MODULE.PMR,\n                subModuleId: SUB_MODULE.PMR_GROUP,\n                actiontoCheck: ACTIONS.EDIT.CODE\n              }) ? */}\n            <div\n              onClick={() => {\n                visibleEditModal(record);\n              }}\n            >\n              <Edit />\n              <p>Edit</p>\n            </div>\n            {/* : null\n            } */}\n            <div\n              onClick={() => {\n                handleAssignResident(record);\n              }}\n            >\n              <AddFriend />\n              <p>Assigned resident</p>\n            </div>\n          </div>\n        </>\n      ),\n    },\n  ];\n\n  const handleSearch = (e) => {\n    let value = e.target.value;\n    let obj = {\n      ...filter,\n      page: 1,\n      search: {\n        keyword: value,\n        keys: ['groupName'],\n      },\n    };\n    setFilter(obj);\n  };\n\n  return (\n    <>\n      <div className='pmr_wrap'>\n        <div className='container'>\n          <Header\n            total={total}\n            onSearch={handleSearch}\n            onVisible={visibleUpsert}\n            checkAddAction={checkAddAction}\n          />\n          <Table\n            columns={getColumns()}\n            datasource={data}\n            loading={loading}\n            onChange={handleTableChange}\n            pagination={{\n              current: filter.page,\n              pageSize: filter.limit,\n              total: total,\n              showSizeChanger: true,\n              onShowSizeChange: onShowSizeChange,\n            }}\n          />\n        </div>\n      </div>\n\n      {visible ? (\n        <UpsertModal onOk={fetch} visible={visible} onCancel={closeUpsert} />\n      ) : null}\n\n      {editVisible ? (\n        <UpsertModal\n          onOk={fetch}\n          data={pmrDetails}\n          visible={editVisible}\n          onCancel={closeEditModal}\n        />\n      ) : null}\n\n      {assignHomeVisible && (\n        <AssignHomeModal\n          title='Assigned Residents'\n          loading={residentLoader}\n          selectedPmrGroupId={selectedPmrGroupId}\n          onClose={closeAssignHomeModal}\n          visible={assignHomeVisible}\n        />\n      )}\n    </>\n  );\n};\nexport default PmrGroup;\n"]},"metadata":{},"sourceType":"module"}