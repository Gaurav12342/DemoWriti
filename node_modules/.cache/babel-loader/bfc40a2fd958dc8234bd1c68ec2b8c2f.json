{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/SubscriptionUpsert/components/UpsertContainer.js\";\nimport React, { useState, useEffect } from 'react';\nimport AddSubscription from './AddSubscription';\nimport PermissionList from './PermissionList';\nimport axios from '../../../services/api/services/common';\nimport { insert, get, update } from '../../../services/api/routes/subscription';\nimport { PERMISSION_ACCESS_TYPE, TODOS } from '../../../constants/subscription';\nimport { Spin, Toast } from '../../../components/common';\nimport PERMISSIONS from '../../../constants/roleBaseAccessPermission';\n\nconst _ = require('lodash');\n\nconst Container = props => {\n  const {\n    visibleAdd,\n    onAdd,\n    edit,\n    onCancel,\n    detail\n  } = props;\n  const [loader, setLoader] = useState(false);\n  const [saveLoader, setSaveLoader] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [groupPermissions, setGroupPermissions] = useState([]);\n  useEffect(() => {\n    if (visibleAdd && !edit) {\n      fetchJson();\n    }\n  }, [edit, visibleAdd]);\n  useEffect(() => {\n    if (detail) {\n      fetch();\n    }\n  }, [detail]);\n\n  const prepareGroupPermissions = listData => {\n    listData.forEach(x => {\n      x.isSelect = typeof x.isSelect === 'boolean' ? x.isSelect : false;\n      x.permissionAccesstype = x.isSelect ? x.permissionAccesstype || PERMISSION_ACCESS_TYPE['DATA'] : 0;\n\n      if (x.subModules && x.subModules.length) {\n        x.subModules.forEach(y => {\n          y.isSelect = typeof y.isSelect === 'boolean' ? y.isSelect : false;\n          y.permissionAccesstype = y.isSelect ? y.permissionAccesstype || PERMISSION_ACCESS_TYPE['DATA'] : 0; // if (y.permissionAccesstype === PERMISSION_ACCESS_TYPE.DATA &&\n          //     TODOS.includes(y.subModule)) {\n          //show Todos\n\n          if (y.actions && y.actions.length) {\n            y.actions.forEach(act => {\n              act.label = act.name || act.label;\n              act.isSelect = typeof act.isSelect === 'boolean' ? act.isSelect : false;\n              delete act.name;\n            });\n          } // }\n\n        });\n      }\n    });\n    return listData;\n  };\n\n  const fetchJson = () => {\n    let newData = prepareGroupPermissions(PERMISSIONS);\n    setResponse({\n      groupPermissions: _.cloneDeep(newData)\n    });\n    setGroupPermissions(_.cloneDeep(newData));\n  };\n\n  const fetch = async () => {\n    setLoader(true);\n    const {\n      method,\n      url,\n      baseURL\n    } = get;\n    let res = await axios({\n      baseURL,\n      method,\n      url: url + detail._id,\n      params: {\n        populate: true\n      }\n    });\n\n    if (res) {\n      if (res.code === 'OK') {\n        res.data.groupPermissions = prepareGroupPermissions(res.data.groupPermissions);\n        setResponse({ ...res.data\n        });\n        setGroupPermissions(_.cloneDeep(res.data.groupPermissions));\n      }\n    }\n\n    setLoader(false);\n  };\n\n  const handleSave = async params => {\n    setSaveLoader(true);\n    let groups = [];\n    groupPermissions.forEach((mod, i) => {\n      // if (mod.isSelect) {\n      if (mod.actions && mod.actions.length) {\n        mod.actions.forEach(x => {\n          x.name = x.label;\n          x.isSelect = x.isSelect || false;\n          delete x.label;\n          return x;\n        });\n      }\n\n      let obj = {\n        'module': mod.module,\n        'moduleName': mod.moduleName,\n        'actions': mod.actions || [],\n        'sequence': i + 1,\n        'permissionAccesstype': mod.permissionAccesstype,\n        'isSelect': mod.isSelect,\n        \"subModules\": []\n      };\n\n      if (edit) {\n        obj['_id'] = mod['_id'];\n        obj.isActive = mod.isActive;\n        obj.subscriptionId = mod.subscriptionId;\n      }\n\n      if (mod.subModules && mod.subModules.length) {\n        mod.subModules.forEach(sub => {\n          // if (sub.isSelect) {\n          if (sub.actions && sub.actions.length) {\n            sub.actions.map(x => {\n              x.name = x.label;\n              x.isSelect = x.isSelect || false;\n              delete x.label;\n              return x;\n            });\n          }\n\n          let subObj = {\n            \"subModule\": sub.subModule,\n            \"subModuleName\": sub.subModuleName,\n            'permissionAccesstype': sub.permissionAccesstype,\n            'isSelect': sub.isSelect,\n            'actions': sub.actions || []\n          };\n\n          if (edit) {\n            subObj.isActive = sub.isActive;\n          }\n\n          obj.subModules.push(subObj); // }\n        });\n      }\n\n      groups.push(obj); // }\n    });\n    let {\n      method,\n      url,\n      baseURL\n    } = edit ? update : insert;\n    const data = { ...params,\n      groupPermissions: groups\n    };\n\n    if (edit) {\n      url = url + detail._id;\n    }\n\n    let res = await axios({\n      method,\n      url,\n      data,\n      baseURL\n    });\n\n    if (res && res.code === 'OK') {\n      Toast.success(res.message);\n      setGroupPermissions(res.data.groupPermissions);\n      onAdd(res.data.subscriptionGroup);\n    }\n\n    setSaveLoader(false);\n  };\n\n  const handlePermission = opt => {\n    let newGroupPermissions = [...groupPermissions];\n    newGroupPermissions.forEach(x => {\n      if (x.module === opt.data.module) {\n        x.permissionAccesstype = opt.type;\n        if (x.permissionAccesstype && !x.isSelect) x.isSelect = true;\n      } else if (x.module === opt.module) {\n        //submodule\n        if (x.subModules && x.subModules.length) {\n          x.subModules.forEach(y => {\n            if (y.subModule === opt.data.subModule) {\n              y.permissionAccesstype = opt.type;\n              if (y.permissionAccesstype && !y.isSelect) y.isSelect = true;\n\n              if (y.permissionAccesstype === PERMISSION_ACCESS_TYPE.DATA && TODOS.includes(y.subModule)) {\n                //show all Todos on check DATA\n                y.actions.forEach(act => {\n                  act.isSelect = true;\n                });\n              }\n            } else if (y.subModule === opt.subModule) {\n              if (y.permissionAccesstype === PERMISSION_ACCESS_TYPE.DATA && TODOS.includes(y.subModule)) {\n                //show all Todos on check DATA\n                y.actions.forEach(act => {\n                  if (act.code === opt.data.code) {\n                    act.isSelect = !act.isSelect;\n                  }\n                });\n              }\n            }\n          });\n        }\n      }\n    });\n    setGroupPermissions(newGroupPermissions);\n  };\n\n  const handleSelection = opt => {\n    let newGroupPermissions = [...groupPermissions];\n    newGroupPermissions.forEach(x => {\n      if (x.module === opt.module) {\n        if (x.subModules && x.subModules.length) {\n          //submodule\n          x.subModules.forEach(y => {\n            if (y.subModule === opt.data.subModule) {\n              y.isSelect = !y.isSelect;\n              let type = y.isSelect ? PERMISSION_ACCESS_TYPE['DATA'] : 0;\n              y.permissionAccesstype = type;\n            }\n          });\n        }\n      } else if (x.module === opt.data.module) {\n        x.isSelect = !x.isSelect;\n        let type = x.isSelect ? PERMISSION_ACCESS_TYPE['DATA'] : 0;\n        x.permissionAccesstype = type;\n\n        if (!type) {\n          if (x.subModules && x.subModules.length) {\n            //deselct submodule\n            x.subModules.forEach(y => {\n              y.isSelect = false;\n              let type = y.isSelect ? PERMISSION_ACCESS_TYPE['DATA'] : 0;\n              y.permissionAccesstype = type;\n            });\n          }\n        }\n      }\n    });\n    setGroupPermissions(newGroupPermissions);\n  };\n\n  const handleCancel = () => {\n    setGroupPermissions(response.groupPermissions);\n    onCancel();\n  };\n\n  const handleSortEnd = mod => {\n    let newGroupPermissions = [...groupPermissions];\n    newGroupPermissions.map(x => {\n      if (x.module === mod.module) return mod;else return x;\n    });\n    setGroupPermissions(newGroupPermissions);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loader ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"permission_part_nodata\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Spin, {\n    spinning: loader,\n    str: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 62\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"permission_part\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, visibleAdd ? /*#__PURE__*/React.createElement(AddSubscription, {\n    onSave: handleSave,\n    onCancel: handleCancel,\n    loading: saveLoader,\n    edit: edit,\n    detail: detail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"permission_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 29\n    }\n  }, groupPermissions && groupPermissions.length > 0 ? detail && detail.name || 'Subscription' : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"permission_tab_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, groupPermissions && groupPermissions.length > 0 ? /*#__PURE__*/React.createElement(PermissionList, {\n    listData: groupPermissions,\n    saveLoader: saveLoader,\n    onSetPermission: handlePermission,\n    onSelection: handleSelection,\n    detail: detail,\n    visibleAdd: visibleAdd,\n    onSortEnd: handleSortEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 33\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"permissions_list_wrap text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 37\n    }\n  }, \" No subscription found. Please Add Subscription.\")))));\n};\n\nexport default Container;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/SubscriptionUpsert/components/UpsertContainer.js"],"names":["React","useState","useEffect","AddSubscription","PermissionList","axios","insert","get","update","PERMISSION_ACCESS_TYPE","TODOS","Spin","Toast","PERMISSIONS","_","require","Container","props","visibleAdd","onAdd","edit","onCancel","detail","loader","setLoader","saveLoader","setSaveLoader","response","setResponse","groupPermissions","setGroupPermissions","fetchJson","fetch","prepareGroupPermissions","listData","forEach","x","isSelect","permissionAccesstype","subModules","length","y","actions","act","label","name","newData","cloneDeep","method","url","baseURL","res","_id","params","populate","code","data","handleSave","groups","mod","i","obj","module","moduleName","isActive","subscriptionId","sub","map","subObj","subModule","subModuleName","push","success","message","subscriptionGroup","handlePermission","opt","newGroupPermissions","type","DATA","includes","handleSelection","handleCancel","handleSortEnd"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AddSubscription from './AddSubscription'\nimport PermissionList from './PermissionList'\nimport axios from '../../../services/api/services/common'\nimport { insert, get, update } from '../../../services/api/routes/subscription'\nimport { PERMISSION_ACCESS_TYPE, TODOS } from '../../../constants/subscription'\nimport { Spin, Toast } from '../../../components/common'\nimport PERMISSIONS from '../../../constants/roleBaseAccessPermission'\nconst _ = require('lodash')\n\nconst Container = props => {\n    const { visibleAdd, onAdd, edit, onCancel, detail } = props\n    const [loader, setLoader] = useState(false)\n    const [saveLoader, setSaveLoader] = useState(false)\n    const [response, setResponse] = useState(null)\n    const [groupPermissions, setGroupPermissions] = useState([])\n\n    useEffect(() => {\n        if ((visibleAdd) && !edit) {\n            fetchJson()\n        }\n    }, [edit, visibleAdd])\n\n    useEffect(() => {\n        if (detail) {\n            fetch()\n        }\n    }, [detail])\n\n    const prepareGroupPermissions = (listData) => {\n        listData.forEach(x => {\n            x.isSelect = typeof x.isSelect === 'boolean' ? x.isSelect : false\n            x.permissionAccesstype = x.isSelect ? x.permissionAccesstype || PERMISSION_ACCESS_TYPE['DATA'] : 0\n            if (x.subModules && x.subModules.length) {\n                x.subModules.forEach(y => {\n                    y.isSelect = typeof y.isSelect === 'boolean' ? y.isSelect : false\n                    y.permissionAccesstype = y.isSelect ? y.permissionAccesstype || PERMISSION_ACCESS_TYPE['DATA'] : 0\n                    // if (y.permissionAccesstype === PERMISSION_ACCESS_TYPE.DATA &&\n                    //     TODOS.includes(y.subModule)) {\n                    //show Todos\n                    if (y.actions && y.actions.length) {\n                        y.actions.forEach(act => {\n                            act.label = act.name || act.label\n                            act.isSelect = typeof act.isSelect === 'boolean' ? act.isSelect : false\n                            delete act.name\n                        })\n                    }\n                    // }\n                })\n            }\n        })\n        return listData\n    }\n\n    const fetchJson = () => {\n        let newData = prepareGroupPermissions(PERMISSIONS)\n        setResponse({ groupPermissions: _.cloneDeep(newData) })\n        setGroupPermissions(_.cloneDeep(newData))\n    }\n\n    const fetch = async () => {\n        setLoader(true)\n        const { method, url, baseURL } = get\n        let res = await axios({ baseURL, method, url: url + detail._id, params: { populate: true } })\n        if (res) {\n            if (res.code === 'OK') {\n                res.data.groupPermissions = prepareGroupPermissions(res.data.groupPermissions)\n                setResponse({ ...res.data })\n                setGroupPermissions(_.cloneDeep(res.data.groupPermissions))\n            }\n        }\n        setLoader(false)\n    }\n\n    const handleSave = async (params) => {\n        setSaveLoader(true)\n        let groups = []\n        groupPermissions.forEach((mod, i) => {\n            // if (mod.isSelect) {\n            if (mod.actions && mod.actions.length) {\n                mod.actions.forEach((x) => {\n                    x.name = x.label\n                    x.isSelect = x.isSelect || false\n                    delete x.label\n                    return x\n                })\n            }\n            let obj = {\n                'module': mod.module,\n                'moduleName': mod.moduleName,\n                'actions': mod.actions || [],\n                'sequence': i + 1,\n                'permissionAccesstype': mod.permissionAccesstype,\n                'isSelect': mod.isSelect,\n                \"subModules\": []\n            }\n            if (edit) {\n                obj['_id'] = mod['_id']\n                obj.isActive = mod.isActive\n                obj.subscriptionId = mod.subscriptionId\n            }\n            if (mod.subModules && mod.subModules.length) {\n                mod.subModules.forEach(sub => {\n                    // if (sub.isSelect) {\n                    if (sub.actions && sub.actions.length) {\n                        sub.actions.map((x) => {\n                            x.name = x.label\n                            x.isSelect = x.isSelect || false\n                            delete x.label\n                            return x\n                        })\n                    }\n                    let subObj = {\n                        \"subModule\": sub.subModule,\n                        \"subModuleName\": sub.subModuleName,\n                        'permissionAccesstype': sub.permissionAccesstype,\n                        'isSelect': sub.isSelect,\n                        'actions': sub.actions || [],\n                    }\n                    if (edit) {\n                        subObj.isActive = sub.isActive\n                    }\n                    obj.subModules.push(subObj)\n                    // }\n                })\n            }\n            groups.push(obj)\n            // }\n        })\n        let { method, url, baseURL } = edit ? update : insert\n        const data = {\n            ...params,\n            groupPermissions: groups\n        }\n        if (edit) {\n            url = url + detail._id\n        }\n        let res = await axios({ method, url, data, baseURL })\n        if (res && res.code === 'OK') {\n            Toast.success(res.message)\n            setGroupPermissions(res.data.groupPermissions)\n            onAdd(res.data.subscriptionGroup)\n        }\n        setSaveLoader(false)\n    }\n\n    const handlePermission = opt => {\n        let newGroupPermissions = [...groupPermissions]\n        newGroupPermissions.forEach(x => {\n            if (x.module === opt.data.module) {\n                x.permissionAccesstype = opt.type\n                if (x.permissionAccesstype && !x.isSelect)\n                    x.isSelect = true\n            } else if (x.module === opt.module) {\n                //submodule\n                if (x.subModules && x.subModules.length) {\n                    x.subModules.forEach(y => {\n                        if (y.subModule === opt.data.subModule) {\n                            y.permissionAccesstype = opt.type\n                            if (y.permissionAccesstype && !y.isSelect)\n                                y.isSelect = true\n\n                            if (y.permissionAccesstype === PERMISSION_ACCESS_TYPE.DATA &&\n                                TODOS.includes(y.subModule)) {\n                                //show all Todos on check DATA\n                                y.actions.forEach(act => {\n                                    act.isSelect = true\n                                })\n                            }\n                        } else if (y.subModule === opt.subModule) {\n                            if (y.permissionAccesstype === PERMISSION_ACCESS_TYPE.DATA &&\n                                TODOS.includes(y.subModule)) {\n                                //show all Todos on check DATA\n                                y.actions.forEach(act => {\n                                    if (act.code === opt.data.code) {\n                                        act.isSelect = !act.isSelect\n                                    }\n                                })\n                            }\n                        }\n                    })\n                }\n            }\n        })\n        setGroupPermissions(newGroupPermissions)\n    }\n    const handleSelection = opt => {\n        let newGroupPermissions = [...groupPermissions]\n        newGroupPermissions.forEach(x => {\n            if (x.module === opt.module) {\n                if (x.subModules && x.subModules.length) {\n                    //submodule\n                    x.subModules.forEach(y => {\n                        if (y.subModule === opt.data.subModule) {\n                            y.isSelect = !y.isSelect\n                            let type = y.isSelect ? PERMISSION_ACCESS_TYPE['DATA'] : 0\n                            y.permissionAccesstype = type\n                        }\n                    })\n                }\n            }\n            else if (x.module === opt.data.module) {\n                x.isSelect = !x.isSelect\n                let type = x.isSelect ? PERMISSION_ACCESS_TYPE['DATA'] : 0\n                x.permissionAccesstype = type\n                if (!type) {\n                    if (x.subModules && x.subModules.length) {\n                        //deselct submodule\n                        x.subModules.forEach(y => {\n                            y.isSelect = false\n                            let type = y.isSelect ? PERMISSION_ACCESS_TYPE['DATA'] : 0\n                            y.permissionAccesstype = type\n                        })\n                    }\n                }\n            }\n        })\n        setGroupPermissions(newGroupPermissions)\n    }\n\n    const handleCancel = () => {\n        setGroupPermissions(response.groupPermissions)\n        onCancel()\n    }\n\n    const handleSortEnd = (mod) => {\n        let newGroupPermissions = [...groupPermissions]\n        newGroupPermissions.map(x => {\n            if (x.module === mod.module)\n                return mod\n            else return x\n        })\n        setGroupPermissions(newGroupPermissions)\n    }\n\n    return (<>\n        {\n            loader ? <div className='permission_part_nodata'><Spin spinning={loader} str='center' /></div>\n                :\n                <div className='permission_part'>\n                    {/* {visibleAdd ? detail ? */}\n                    {visibleAdd ?\n                        <AddSubscription onSave={handleSave} onCancel={handleCancel}\n                            loading={saveLoader} edit={edit} detail={detail} />\n                        : <div className='permission_label'>\n                            <h4>{\n                                groupPermissions && groupPermissions.length > 0 ?\n                                    ((detail && detail.name) || 'Subscription') : ''\n                            }</h4>\n                        </div>\n                    }\n                    <div className='permission_tab_wrap'>\n                        {\n                            groupPermissions && groupPermissions.length > 0 ?\n                                <PermissionList listData={groupPermissions}\n                                    saveLoader={saveLoader}\n                                    onSetPermission={handlePermission}\n                                    onSelection={handleSelection}\n                                    detail={detail}\n                                    visibleAdd={visibleAdd}\n                                    onSortEnd={handleSortEnd}\n                                />\n                                : <div className=\"permissions_list_wrap text-center\">\n                                    <strong> No subscription found. Please Add Subscription.</strong>\n                                </div>\n                        }\n                    </div>\n                </div>\n\n        }\n    </>);\n}\nexport default Container;"]},"metadata":{},"sourceType":"module"}