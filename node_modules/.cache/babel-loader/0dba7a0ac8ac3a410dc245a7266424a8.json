{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/ResidentDocument/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../../components/common/Table/index';\nimport axios from '../../services/api/config';\nimport { Link } from 'react-router-dom';\nimport { listResidentDocuments, createResidentDocument, deleteResidentDocument } from '../../services/api/routes/residentDocument';\nimport { masterPaginate } from '../../services/api/routes/master';\nimport { View, Notes } from '../../assets/images/pmr/index';\nimport { Edit } from '../../assets/images/popup/index';\nimport { Trash } from '../../assets/images/resident-detail/index';\nimport AddResidentDocument from './AddResidentDocument';\nimport { getResidents } from '../../services/api/routes/resident';\nimport { displayDateTime } from '../../util/moment';\nimport { createForm } from 'rc-form';\nimport PageHead from './PageHead';\nimport { displayCatchErrorMsg, isInvalidTokenError } from '../../util/common';\nimport DeleteResidentDocModal from './DeleteResidentDoc';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport { Toast } from '../../components/common/index';\nimport { USER_TYPE } from '../../constants/User';\nimport { STATUS } from '../../constants/resident';\nimport { MODULE, SUB_MODULE, ACTIONS } from '../../constants/subscription';\nimport { canPerformAction } from '../../util/common';\n\nconst moment = require('moment');\n\nlet residentTimeout;\n\nfunction ResidentDocumentMain(props) {\n  const [total, setTotal] = useState(0);\n  const [filter, setFilter] = useState({\n    page: 1,\n    limit: 10,\n    sortBy: {\n      createdAt: 'DESC'\n    },\n    find: {}\n  });\n  const [isEdit, setIsEdit] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [addDocLoading, setAddDocLoading] = useState(false);\n  const [documentFilter, setDocumentFilter] = useState(undefined);\n  const [data, setData] = useState([]);\n  const [addDocumentModal, setAddDocumentModal] = useState(false);\n  const [recordTypeList, setRecordTypeList] = useState([]);\n  const [residentListing, setResidentListing] = useState([]);\n  const [isUploadVisible, setIsUploadVisible] = useState(false);\n  const [documentDate, setDocumentDate] = useState(undefined);\n  const [editDelRec, setEditDelRec] = useState(undefined);\n  const [isDeleteDoc, setIsDeleteDoc] = useState(false);\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [reasonList, setReasonList] = useState([]);\n  const [imagesData, setImagesData] = useState([]);\n  const [currImg, setCurrImg] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n  const [residentDocumentPathList, setResidentDocumentPathList] = useState([]);\n  const {\n    authUser,\n    form\n  } = props;\n  useEffect(() => {\n    fetchresidentDocumentType();\n  }, []);\n  useEffect(() => {\n    if (filter.hasOwnProperty('search') && filter.search['keyword']) {\n      const delayDebounceFn = setTimeout(() => {\n        fetch();\n      }, 600);\n      return () => clearTimeout(delayDebounceFn);\n    } else fetch();\n  }, [filter]);\n\n  const fetchresidentDocumentType = () => {\n    let data = {\n      query: {\n        find: {\n          isActive: true,\n          parentId: null,\n          code: 'RESIDENT_DOCUMENT_TYPE'\n        },\n        populate: [{\n          subMaster: [],\n          match: {\n            isActive: true\n          }\n        }],\n        select: 'parentId code name isActive description slug _id updatedAt createdAt'\n      }\n    };\n    axios({ ...masterPaginate,\n      data\n    }).then(({\n      data\n    }) => {\n      if (data.code === 'OK') {\n        if (data.data.data.length > 0) {\n          if (data.data.data[0].subMaster && data.data.data[0].subMaster.length) {\n            let filter = [];\n            let uniqueVal = [];\n            data.data.data[0].subMaster.forEach(obj => {\n              let str = obj.name.replace(/_/g, ' ');\n\n              if (!uniqueVal.includes(str)) {\n                uniqueVal.push(str);\n                filter.push({\n                  text: str,\n                  value: obj._id\n                });\n              }\n            });\n            setDocumentFilter(filter);\n          }\n        }\n      }\n    });\n  };\n\n  const fetchrDeleteReasonList = () => {\n    let data = {\n      query: {\n        find: {\n          isActive: true,\n          parentId: null,\n          code: 'RESIDENT_DOCUMENT_CANCELLATION_REASON'\n        },\n        populate: [{\n          subMaster: [],\n          match: {\n            isActive: true\n          }\n        }],\n        select: 'parentId code name isActive description slug _id updatedAt createdAt'\n      }\n    };\n    axios({ ...masterPaginate,\n      data\n    }).then(({\n      data\n    }) => {\n      if (data.code === 'OK') {\n        if (data.data.data.length > 0) {\n          if (data.data.data[0].subMaster && data.data.data[0].subMaster.length) {\n            setReasonList(data.data.data[0].subMaster);\n          }\n        }\n      }\n    });\n  };\n\n  const fetchResident = filter => {\n    if (residentTimeout) {\n      clearTimeout(residentTimeout);\n      residentTimeout = null;\n    }\n\n    residentTimeout = setTimeout(() => {\n      axios({ ...getResidents,\n        data: { ...filter\n        }\n      }).then(({\n        data\n      }) => {\n        if (data.code === 'OK') {\n          if (data.data.data) {\n            setResidentListing(data.data.data);\n          }\n        } else {\n          displayCatchErrorMsg(data.message);\n        }\n      }).catch(err => {\n        displayCatchErrorMsg(err);\n      });\n    }, 300);\n  };\n\n  const onResidentSearch = name => {\n    if (name) {\n      let filter = {\n        query: {\n          // page:1,\n          // limit:10,\n          find: {\n            status: STATUS.ACTIVE\n          },\n          search: {\n            keyword: name,\n            keys: ['firstName', 'lastName']\n          },\n          populate: [{\n            homeAreaId: ['name']\n          }]\n        }\n      };\n      fetchResident(filter);\n    } else {\n      form.setFieldsValue({\n        residentId: undefined\n      });\n    }\n  };\n\n  const constructImageList = records => {\n    let assembledImagesList = [];\n    let updatedRecords = records.map(obj => {\n      if (obj.documents && obj.documents.length > 0) {\n        if (assembledImagesList.length === 0) {\n          obj.attachmentIndex = 0;\n        } else if (assembledImagesList.length > 0) {\n          obj.attachmentIndex = assembledImagesList.length;\n        }\n\n        let imageData = obj.documents[obj.documents.length - 1];\n        let temp = { ...obj\n        };\n        temp.src = imageData.path;\n        temp.caption = `${obj.residentDocId}-1` || null;\n        temp.residentName = obj.residentId && obj.residentId.lastName ? `${obj.residentId.lastName} , ${obj.residentId.firstName}` : '';\n        assembledImagesList.push(temp);\n      }\n\n      return obj;\n    });\n    return {\n      assembledImagesList,\n      updatedRecords\n    };\n  };\n\n  const handleSearch = e => {\n    if (e.target.value) {\n      setFilter({ ...filter,\n        page: 1,\n        limit: 10,\n        search: {\n          keyword: e.target.value,\n          keys: ['residentDocId', 'residentId.firstName', 'residentId.lastName']\n        }\n      });\n    } else {\n      if (filter.search) {\n        let tempFilter = filter;\n        delete tempFilter['search'];\n        setFilter({ ...tempFilter,\n          page: 1,\n          limit: 10\n        });\n      }\n    }\n  };\n\n  const fetch = () => {\n    setLoading(true);\n    axios({ ...listResidentDocuments,\n      data: {\n        query: { ...filter,\n          find: {\n            isDelete: false,\n            ...filter.find\n          },\n          populate: [{\n            masterId: ['name']\n          }, {\n            residentId: ['firstName', 'lastName']\n          }, {\n            homeAreaId: ['name']\n          }]\n        }\n      }\n    }).then(({\n      data\n    }) => {\n      setLoading(false);\n\n      if (data.code === 'OK') {\n        if (data.data.data && data.data.data.length) {\n          let {\n            assembledImagesList,\n            updatedRecords\n          } = constructImageList(data.data.data);\n          setData(updatedRecords); // assembledImagesList.map((data)=>{\n          //     setImagesData(data)\n          // })\n\n          setImagesData(assembledImagesList);\n        } else {\n          setData(data.data.data);\n          setImagesData([]);\n        }\n\n        setTotal(data.data.count);\n      }\n    }).catch(err => {\n      setLoading(false);\n    });\n  };\n\n  const openViewer = record => {\n    setViewerIsOpen(true);\n    setCurrImg(record.attachmentIndex);\n    setEditDelRec(record);\n  };\n\n  const getColumns = () => [{\n    title: 'Sr.No',\n    keyword: 'index',\n    dataIndex: 'index',\n    render: (text, record, index) => (filter.page - 1) * filter.limit + (index + 1)\n  }, {\n    title: 'Doc. No',\n    dataIndex: 'residentDocId'\n  }, {\n    title: 'Resident',\n    dataIndex: 'residentId',\n    render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }\n    }, record.patientId && record.patientId.id ? /*#__PURE__*/React.createElement(Link, {\n      to: `/wa/resident/${record.patientId.id}`,\n      style: {\n        textDecoration: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"resident-document-name\",\n      style: {\n        textTransform: 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 15\n      }\n    }, text ? `${text.lastName || ''}, ${text.firstName || ''}` : '-')) : /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 15\n      }\n    }, ' ', text ? `${text.lastName || ''}, ${text.firstName || ''}` : '-'))\n  }, {\n    title: 'Home Area',\n    dataIndex: 'homeAreaId',\n    render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }\n    }, text && text.name ? text.name : null)\n  }, {\n    title: 'Document Type',\n    dataIndex: 'masterId',\n    filters: documentFilter,\n    onFilter: (value, record) => {\n      return record.masterId._id === value;\n    },\n    render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dcTypeTag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }\n    }, text && text.name ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"o_status submitted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }\n    }, text.name) : null)\n  }, {\n    title: 'Date/Time',\n    dataIndex: 'documents',\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }\n    }, text && text.length && displayDateTime(text[0].documentDate))\n  }, {\n    title: 'Actions',\n    render: (text, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => openViewer(record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 13\n      }\n    }, \"Info\")), [USER_TYPE.ADMIN.SUPER, USER_TYPE.ADMIN.GENERAL, USER_TYPE.PHARMACY.ADMIN, USER_TYPE.HOME.ADMIN].indexOf(authUser.type) >= 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => handleDocDeleteModal(true, record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Trash, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }\n    }, \"Delete\")) : null)\n  }];\n\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    let tempFilter = filter;\n    tempFilter = { ...tempFilter,\n      page: pagination.current,\n      limit: pagination.pageSize\n    };\n\n    if (tfilter && Object.keys(tfilter).length) {\n      Object.keys(tfilter).map(k => {\n        if (tfilter[k] && tfilter[k].length > 0) {\n          tempFilter.find = { ...tempFilter.find,\n            [k]: tfilter[k]\n          };\n        } else {\n          delete tempFilter['find'][k];\n        }\n      });\n    } else {\n      delete tempFilter['find']['masterId'];\n    }\n\n    setFilter(tempFilter);\n  };\n\n  const handleAddEdit = (action, isEditOp, record) => {\n    setAddDocumentModal(action);\n\n    if (action === false) {\n      setResidentDocumentPathList([]);\n\n      if (isEdit) {\n        setIsEdit(false);\n        setEditDelRec(undefined);\n      }\n    }\n\n    if (isEditOp && isEditOp === true) {\n      let tempList = record.documents.map(obj => {\n        obj.name = obj.path;\n        obj.status = true;\n        return obj;\n      });\n      setResidentDocumentPathList(tempList);\n      setIsEdit(isEditOp);\n    }\n\n    if (record && record._id) {\n      var _record$residentId;\n\n      if (record === null || record === void 0 ? void 0 : (_record$residentId = record.residentId) === null || _record$residentId === void 0 ? void 0 : _record$residentId.lastName) {\n        onResidentSearch(record.residentId.lastName);\n      }\n\n      setEditDelRec(record);\n    }\n\n    form.resetFields();\n  };\n\n  const handleSubmit = () => {\n    setAddDocLoading(true);\n    form.validateFields((error, value) => {\n      if (error) {\n        setAddDocLoading(false);\n        return;\n      }\n\n      if (residentDocumentPathList.length === 0) {\n        Toast.error('Please Upload Document ');\n        return;\n      }\n\n      let tempDate = moment(value.documentDate).toISOString();\n      let tempDocList = residentDocumentPathList.map(obj => {\n        obj.documentDate = tempDate;\n        return obj;\n      });\n      let valueData;\n      residentListing && residentListing.map(data => {\n        return data._id === value.residentId ? valueData = data : null;\n      });\n      let request = { ...value,\n        documents: [...tempDocList],\n        homeAreaId: valueData.homeAreaId._id\n      };\n\n      if (isEdit) {\n        request = { ...editDelRec,\n          ...request\n        };\n      }\n\n      axios({ ...createResidentDocument,\n        data: { ...request\n        }\n      }).then(({\n        data\n      }) => {\n        setAddDocLoading(false);\n        setAddDocumentModal(false);\n        setResidentDocumentPathList([]);\n\n        if (isEdit) {\n          setIsEdit(false);\n          setEditDelRec(undefined);\n        }\n\n        if (data.code === 'OK') {\n          fetch();\n        } else {\n          displayCatchErrorMsg(data.message);\n        }\n      }).catch(err => {\n        displayCatchErrorMsg(err);\n        setAddDocLoading(false);\n\n        if (isInvalidTokenError(err)) {\n          setAddDocumentModal(false);\n        }\n      });\n    });\n  };\n\n  const handleUploadAction = action => {\n    setIsUploadVisible(action);\n  };\n\n  const handleUploader = (action, uploadedData) => {\n    handleUploadAction(action);\n\n    if (uploadedData && uploadedData.data && uploadedData.data.length) {\n      let list = uploadedData.data.map(obj => {\n        if (obj.path && obj.status) {\n          let temp = {\n            path: obj.path,\n            sequence: residentDocumentPathList.length - 1,\n            uploadedBy: authUser._id\n          };\n          return temp;\n        }\n      });\n      setResidentDocumentPathList([...residentDocumentPathList, ...list]);\n    }\n  };\n\n  const handleDatePickerChange = date => {\n    // setDocumentDate(date)\n    form.setFieldsValue({\n      documentDate: date\n    });\n  };\n\n  const handleDocumentDelete = request => {\n    setBtnLoading(true);\n\n    if (editDelRec && editDelRec._id) {\n      request._id = editDelRec._id;\n    } else {\n      return;\n    }\n\n    axios({ ...deleteResidentDocument,\n      data: { ...request\n      }\n    }).then(({\n      data\n    }) => {\n      if (data.code === 'OK') {\n        setBtnLoading(false);\n        fetch();\n        setIsDeleteDoc(false);\n        setEditDelRec(undefined);\n        form.resetFields();\n      }\n    }).catch(err => setBtnLoading(false));\n  };\n\n  const handleDocDeleteModal = (action, record) => {\n    setIsDeleteDoc(action);\n\n    if (action && reasonList.length === 0) {\n      fetchrDeleteReasonList();\n    }\n\n    if (record && record._id) {\n      setEditDelRec(record);\n    }\n  };\n\n  const handleDateChange = dateRange => {\n    let tempFilter = filter;\n\n    if (dateRange) {\n      tempFilter = { ...filter,\n        gte: [{\n          'documents.documentDate': moment(dateRange[0]).format('YYYY-MM-DDT00:00:00.000') + 'Z'\n        }],\n        lte: [{\n          'documents.documentDate': moment(dateRange[1]).format('YYYY-MM-DDT23:59:59.000') + 'Z'\n        }] // \"gte\": [{ \"documents.documentDate\": moment(dateRange[0]).startOf('day').toISOString() }],\n        // \"lte\": [{ \"documents.documentDate\": moment(dateRange[1]).endOf('day').toISOString() }]\n\n      };\n      tempFilter.dateRange = dateRange;\n    } else if (tempFilter.gte && tempFilter.lte) {\n      delete tempFilter['gte'];\n      delete tempFilter['lte'];\n\n      if (tempFilter.dateRange) {\n        delete tempFilter['dateRange'];\n      }\n    }\n\n    setFilter({ ...tempFilter\n    });\n  };\n\n  const checkAddAction = canPerformAction({\n    moduleId: MODULE.RESIDENT_DOCUMENT,\n    // subModuleId: SUB_MODULE.PMR_GROUP,\n    actiontoCheck: ACTIONS.ADD.CODE\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PageHead, {\n    total: total,\n    onSearch: handleSearch,\n    onAdd: handleAddEdit,\n    loginUser: authUser,\n    filter: filter,\n    onDateChange: handleDateChange,\n    documentDate: documentDate,\n    checkAddAction: checkAddAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    columns: getColumns(),\n    datasource: data,\n    loading: loading,\n    onChange: handleTableChange,\n    pagination: {\n      current: filter.page,\n      pageSize: filter.limit,\n      total: total\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 9\n    }\n  }), addDocumentModal ? /*#__PURE__*/React.createElement(AddResidentDocument, {\n    isEdit: isEdit,\n    visible: addDocumentModal,\n    residentListing: residentListing,\n    onResidentSearch: onResidentSearch,\n    isUploadVisible: isUploadVisible,\n    onSubmit: handleSubmit,\n    documentList: residentDocumentPathList,\n    onDatePickerChange: handleDatePickerChange,\n    documentDate: documentDate,\n    onCancel: handleAddEdit,\n    loading: addDocLoading,\n    form: form,\n    recordTypeList: documentFilter // onUploadAction={handleUploadAction}\n    ,\n    onUploadAction: handleUploader,\n    editRecord: editDelRec,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 11\n    }\n  }) : null, isDeleteDoc ? /*#__PURE__*/React.createElement(DeleteResidentDocModal, {\n    visible: isDeleteDoc,\n    onCancel: handleDocDeleteModal,\n    reasonList: reasonList,\n    record: editDelRec,\n    loading: btnLoading,\n    onDocumentDelete: handleDocumentDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 11\n    }\n  }) : null, viewerIsOpen ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Lightbox, {\n    mainSrc: imagesData[currImg].src,\n    imageTitle: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginRight: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 21\n      }\n    }, imagesData[currImg].residentName || ' '), imagesData[currImg].masterId ? `${'   |   '}${imagesData[currImg].masterId.name}` : null), imagesData[currImg].notesCount && imagesData[currImg].notesCount > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '10px',\n        cursor: 'pointer',\n        float: 'right'\n      },\n      onClick: () => this.visibleNotesModal(true, imagesData[currImg], 'imageViewer'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 21\n      }\n    }, \" | \", imagesData[currImg].notesCount, \"  \", \"Note(s) \") : null),\n    nextSrc: imagesData[(currImg + 1) % imagesData.length].src,\n    prevSrc: imagesData[(currImg + imagesData.length - 1) % imagesData.length].src,\n    onCloseRequest: () => setViewerIsOpen(false),\n    onMovePrevRequest: () => setCurrImg(currImg => (currImg + imagesData.length - 1) % imagesData.length),\n    onMoveNextRequest: () => setCurrImg(currImg => (currImg + 1) % imagesData.length),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 13\n    }\n  })) : null));\n}\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  const {\n    authUser,\n    homeId\n  } = auth;\n  return {\n    authUser,\n    homeId\n  };\n};\n\nexport default connect(mapStateToProps)(createForm()(ResidentDocumentMain));","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/ResidentDocument/index.js"],"names":["React","useEffect","useState","connect","Table","axios","Link","listResidentDocuments","createResidentDocument","deleteResidentDocument","masterPaginate","View","Notes","Edit","Trash","AddResidentDocument","getResidents","displayDateTime","createForm","PageHead","displayCatchErrorMsg","isInvalidTokenError","DeleteResidentDocModal","Lightbox","Toast","USER_TYPE","STATUS","MODULE","SUB_MODULE","ACTIONS","canPerformAction","moment","require","residentTimeout","ResidentDocumentMain","props","total","setTotal","filter","setFilter","page","limit","sortBy","createdAt","find","isEdit","setIsEdit","loading","setLoading","addDocLoading","setAddDocLoading","documentFilter","setDocumentFilter","undefined","data","setData","addDocumentModal","setAddDocumentModal","recordTypeList","setRecordTypeList","residentListing","setResidentListing","isUploadVisible","setIsUploadVisible","documentDate","setDocumentDate","editDelRec","setEditDelRec","isDeleteDoc","setIsDeleteDoc","btnLoading","setBtnLoading","reasonList","setReasonList","imagesData","setImagesData","currImg","setCurrImg","viewerIsOpen","setViewerIsOpen","residentDocumentPathList","setResidentDocumentPathList","authUser","form","fetchresidentDocumentType","hasOwnProperty","search","delayDebounceFn","setTimeout","fetch","clearTimeout","query","isActive","parentId","code","populate","subMaster","match","select","then","length","uniqueVal","forEach","obj","str","name","replace","includes","push","text","value","_id","fetchrDeleteReasonList","fetchResident","message","catch","err","onResidentSearch","status","ACTIVE","keyword","keys","homeAreaId","setFieldsValue","residentId","constructImageList","records","assembledImagesList","updatedRecords","map","documents","attachmentIndex","imageData","temp","src","path","caption","residentDocId","residentName","lastName","firstName","handleSearch","e","target","tempFilter","isDelete","masterId","count","openViewer","record","getColumns","title","dataIndex","render","index","patientId","id","textDecoration","textTransform","filters","onFilter","ADMIN","SUPER","GENERAL","PHARMACY","HOME","indexOf","type","handleDocDeleteModal","handleTableChange","pagination","tfilter","sorter","current","pageSize","Object","k","handleAddEdit","action","isEditOp","tempList","resetFields","handleSubmit","validateFields","error","tempDate","toISOString","tempDocList","valueData","request","handleUploadAction","handleUploader","uploadedData","list","sequence","uploadedBy","handleDatePickerChange","date","handleDocumentDelete","handleDateChange","dateRange","gte","format","lte","checkAddAction","moduleId","RESIDENT_DOCUMENT","actiontoCheck","ADD","CODE","float","marginRight","notesCount","marginLeft","cursor","visibleNotesModal","mapStateToProps","auth","homeId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../../components/common/Table/index';\nimport axios from '../../services/api/config';\nimport { Link } from 'react-router-dom';\nimport {\n  listResidentDocuments,\n  createResidentDocument,\n  deleteResidentDocument,\n} from '../../services/api/routes/residentDocument';\nimport { masterPaginate } from '../../services/api/routes/master';\nimport { View, Notes } from '../../assets/images/pmr/index';\nimport { Edit } from '../../assets/images/popup/index';\nimport { Trash } from '../../assets/images/resident-detail/index';\nimport AddResidentDocument from './AddResidentDocument';\nimport { getResidents } from '../../services/api/routes/resident';\nimport { displayDateTime } from '../../util/moment';\nimport { createForm } from 'rc-form';\nimport PageHead from './PageHead';\nimport { displayCatchErrorMsg, isInvalidTokenError } from '../../util/common';\nimport DeleteResidentDocModal from './DeleteResidentDoc';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport { Toast } from '../../components/common/index';\nimport { USER_TYPE } from '../../constants/User';\nimport { STATUS } from '../../constants/resident';\nimport { MODULE, SUB_MODULE, ACTIONS } from '../../constants/subscription';\nimport { canPerformAction } from '../../util/common';\nconst moment = require('moment');\nlet residentTimeout;\nfunction ResidentDocumentMain(props) {\n  const [total, setTotal] = useState(0);\n  const [filter, setFilter] = useState({\n    page: 1,\n    limit: 10,\n    sortBy: { createdAt: 'DESC' },\n    find: {},\n  });\n  const [isEdit, setIsEdit] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [addDocLoading, setAddDocLoading] = useState(false);\n  const [documentFilter, setDocumentFilter] = useState(undefined);\n  const [data, setData] = useState([]);\n  const [addDocumentModal, setAddDocumentModal] = useState(false);\n  const [recordTypeList, setRecordTypeList] = useState([]);\n  const [residentListing, setResidentListing] = useState([]);\n  const [isUploadVisible, setIsUploadVisible] = useState(false);\n  const [documentDate, setDocumentDate] = useState(undefined);\n  const [editDelRec, setEditDelRec] = useState(undefined);\n  const [isDeleteDoc, setIsDeleteDoc] = useState(false);\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [reasonList, setReasonList] = useState([]);\n  const [imagesData, setImagesData] = useState([]);\n  const [currImg, setCurrImg] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n  const [residentDocumentPathList, setResidentDocumentPathList] = useState([]);\n  const { authUser, form } = props;\n\n  useEffect(() => {\n    fetchresidentDocumentType();\n  }, []);\n\n  useEffect(() => {\n    if (filter.hasOwnProperty('search') && filter.search['keyword']) {\n      const delayDebounceFn = setTimeout(() => {\n        fetch();\n      }, 600);\n      return () => clearTimeout(delayDebounceFn);\n    } else fetch();\n  }, [filter]);\n\n  const fetchresidentDocumentType = () => {\n    let data = {\n      query: {\n        find: {\n          isActive: true,\n          parentId: null,\n          code: 'RESIDENT_DOCUMENT_TYPE',\n        },\n        populate: [\n          {\n            subMaster: [],\n            match: { isActive: true },\n          },\n        ],\n        select:\n          'parentId code name isActive description slug _id updatedAt createdAt',\n      },\n    };\n    axios({ ...masterPaginate, data }).then(({ data }) => {\n      if (data.code === 'OK') {\n        if (data.data.data.length > 0) {\n          if (\n            data.data.data[0].subMaster &&\n            data.data.data[0].subMaster.length\n          ) {\n            let filter = [];\n            let uniqueVal = [];\n            data.data.data[0].subMaster.forEach((obj) => {\n              let str = obj.name.replace(/_/g, ' ');\n              if (!uniqueVal.includes(str)) {\n                uniqueVal.push(str);\n                filter.push({ text: str, value: obj._id });\n              }\n            });\n            setDocumentFilter(filter);\n          }\n        }\n      }\n    });\n  };\n  const fetchrDeleteReasonList = () => {\n    let data = {\n      query: {\n        find: {\n          isActive: true,\n          parentId: null,\n          code: 'RESIDENT_DOCUMENT_CANCELLATION_REASON',\n        },\n        populate: [\n          {\n            subMaster: [],\n            match: { isActive: true },\n          },\n        ],\n        select:\n          'parentId code name isActive description slug _id updatedAt createdAt',\n      },\n    };\n    axios({ ...masterPaginate, data }).then(({ data }) => {\n      if (data.code === 'OK') {\n        if (data.data.data.length > 0) {\n          if (\n            data.data.data[0].subMaster &&\n            data.data.data[0].subMaster.length\n          ) {\n            setReasonList(data.data.data[0].subMaster);\n          }\n        }\n      }\n    });\n  };\n  const fetchResident = (filter) => {\n    if (residentTimeout) {\n      clearTimeout(residentTimeout);\n      residentTimeout = null;\n    }\n    residentTimeout = setTimeout(() => {\n      axios({ ...getResidents, data: { ...filter } })\n        .then(({ data }) => {\n          if (data.code === 'OK') {\n            if (data.data.data) {\n              setResidentListing(data.data.data);\n            }\n          } else {\n            displayCatchErrorMsg(data.message);\n          }\n        })\n        .catch((err) => {\n          displayCatchErrorMsg(err);\n        });\n    }, 300);\n  };\n  const onResidentSearch = (name) => {\n    if (name) {\n      let filter = {\n        query: {\n          // page:1,\n          // limit:10,\n          find: { status: STATUS.ACTIVE },\n          search: {\n            keyword: name,\n            keys: ['firstName', 'lastName'],\n          },\n          populate: [\n            {\n              homeAreaId: ['name'],\n            },\n          ],\n        },\n      };\n      fetchResident(filter);\n    } else {\n      form.setFieldsValue({\n        residentId: undefined,\n      });\n    }\n  };\n\n  const constructImageList = (records) => {\n    let assembledImagesList = [];\n    let updatedRecords = records.map((obj) => {\n      if (obj.documents && obj.documents.length > 0) {\n        if (assembledImagesList.length === 0) {\n          obj.attachmentIndex = 0;\n        } else if (assembledImagesList.length > 0) {\n          obj.attachmentIndex = assembledImagesList.length;\n        }\n        let imageData = obj.documents[obj.documents.length - 1];\n        let temp = { ...obj };\n        temp.src = imageData.path;\n        temp.caption = `${obj.residentDocId}-1` || null;\n        temp.residentName =\n          obj.residentId && obj.residentId.lastName\n            ? `${obj.residentId.lastName} , ${obj.residentId.firstName}`\n            : '';\n        assembledImagesList.push(temp);\n      }\n      return obj;\n    });\n    return { assembledImagesList, updatedRecords };\n  };\n  const handleSearch = (e) => {\n    if (e.target.value) {\n      setFilter({\n        ...filter,\n        page: 1,\n        limit: 10,\n        search: {\n          keyword: e.target.value,\n          keys: [\n            'residentDocId',\n            'residentId.firstName',\n            'residentId.lastName',\n          ],\n        },\n      });\n    } else {\n      if (filter.search) {\n        let tempFilter = filter;\n        delete tempFilter['search'];\n        setFilter({ ...tempFilter, page: 1, limit: 10 });\n      }\n    }\n  };\n  const fetch = () => {\n    setLoading(true);\n    axios({\n      ...listResidentDocuments,\n      data: {\n        query: {\n          ...filter,\n          find: {\n            isDelete: false,\n            ...filter.find,\n          },\n          populate: [\n            {\n              masterId: ['name'],\n            },\n            {\n              residentId: ['firstName', 'lastName'],\n            },\n            {\n              homeAreaId: ['name'],\n            },\n          ],\n        },\n      },\n    })\n      .then(({ data }) => {\n        setLoading(false);\n        if (data.code === 'OK') {\n          if (data.data.data && data.data.data.length) {\n            let { assembledImagesList, updatedRecords } = constructImageList(\n              data.data.data\n            );\n            setData(updatedRecords);\n            // assembledImagesList.map((data)=>{\n\n            //     setImagesData(data)\n            // })\n            setImagesData(assembledImagesList);\n          } else {\n            setData(data.data.data);\n            setImagesData([]);\n          }\n          setTotal(data.data.count);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  const openViewer = (record) => {\n    setViewerIsOpen(true);\n    setCurrImg(record.attachmentIndex);\n    setEditDelRec(record);\n  };\n\n  const getColumns = () => [\n    {\n      title: 'Sr.No',\n      keyword: 'index',\n      dataIndex: 'index',\n      render: (text, record, index) =>\n        (filter.page - 1) * filter.limit + (index + 1),\n    },\n    {\n      title: 'Doc. No',\n      dataIndex: 'residentDocId',\n    },\n    {\n      title: 'Resident',\n      dataIndex: 'residentId',\n      render: (text, record) => (\n        <span>\n          {record.patientId && record.patientId.id ? (\n            <Link\n              to={`/wa/resident/${record.patientId.id}`}\n              style={{ textDecoration: 'none' }}\n            >\n              <span\n                className='resident-document-name'\n                style={{ textTransform: 'capitalize' }}\n              >\n\n                {text\n                  ? `${text.lastName || ''}, ${text.firstName || ''}`\n                  : '-'}\n              </span>\n            </Link>\n          ) : (\n              <span style={{ textTransform: 'capitalize' }}>\n                {' '}\n                {text ? `${text.lastName || ''}, ${text.firstName || ''}` : '-'}\n              </span>\n            )}\n        </span>\n      ),\n    },\n    {\n      title: 'Home Area',\n      dataIndex: 'homeAreaId',\n      render: (text, record) => (\n        <span>{text && text.name ? text.name : null}</span>\n      ),\n    },\n    {\n      title: 'Document Type',\n      dataIndex: 'masterId',\n      filters: documentFilter,\n      onFilter: (value, record) => {\n        return record.masterId._id === value;\n      },\n      render: (text, record) => (\n        <span className='dcTypeTag'>\n          {text && text.name ? (\n            <span className='o_status submitted'>{text.name}</span>\n          ) : null}\n        </span>\n      ),\n    },\n    {\n      title: 'Date/Time',\n      dataIndex: 'documents',\n      render: (text) => (\n        <span>\n          {text && text.length && displayDateTime(text[0].documentDate)}\n        </span>\n      ),\n    },\n    {\n      title: 'Actions',\n      render: (text, record) => (\n        <div className='actions'>\n          <div onClick={() => openViewer(record)}>\n            <View />\n            <p>Info</p>\n          </div>\n          {/* <div>\n                        <Notes />\n                        <p>Notes</p>\n                    </div> */}\n          {/* <div onClick={() => handleAddEdit(true, true, record)}>\n                        <Edit />\n                        <p>Edit</p>\n                    </div> */}\n          {[\n            USER_TYPE.ADMIN.SUPER,\n            USER_TYPE.ADMIN.GENERAL,\n            USER_TYPE.PHARMACY.ADMIN,\n            USER_TYPE.HOME.ADMIN,\n          ].indexOf(authUser.type) >= 0 ? (\n              <div onClick={() => handleDocDeleteModal(true, record)}>\n                <Trash />\n                <p>Delete</p>\n              </div>\n            ) : null}\n        </div>\n      ),\n    },\n  ];\n\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    let tempFilter = filter;\n    tempFilter = {\n      ...tempFilter,\n      page: pagination.current,\n      limit: pagination.pageSize,\n    };\n    if (tfilter && Object.keys(tfilter).length) {\n      Object.keys(tfilter).map((k) => {\n        if (tfilter[k] && tfilter[k].length > 0) {\n          tempFilter.find = {\n            ...tempFilter.find,\n            [k]: tfilter[k],\n          };\n        } else {\n          delete tempFilter['find'][k];\n        }\n      });\n    } else {\n      delete tempFilter['find']['masterId'];\n    }\n    setFilter(tempFilter);\n  };\n  const handleAddEdit = (action, isEditOp, record) => {\n    setAddDocumentModal(action);\n    if (action === false) {\n      setResidentDocumentPathList([]);\n      if (isEdit) {\n        setIsEdit(false);\n        setEditDelRec(undefined);\n      }\n    }\n    if (isEditOp && isEditOp === true) {\n      let tempList = record.documents.map((obj) => {\n        obj.name = obj.path;\n        obj.status = true;\n        return obj;\n      });\n      setResidentDocumentPathList(tempList);\n      setIsEdit(isEditOp);\n    }\n    if (record && record._id) {\n      if (record?.residentId?.lastName) {\n        onResidentSearch(record.residentId.lastName);\n      }\n      setEditDelRec(record);\n    }\n    form.resetFields();\n  };\n  const handleSubmit = () => {\n    setAddDocLoading(true);\n    form.validateFields((error, value) => {\n      if (error) {\n        setAddDocLoading(false);\n        return;\n      }\n      if (residentDocumentPathList.length === 0) {\n        Toast.error('Please Upload Document ');\n        return;\n      }\n\n      let tempDate = moment(value.documentDate).toISOString();\n\n      let tempDocList = residentDocumentPathList.map((obj) => {\n        obj.documentDate = tempDate;\n        return obj;\n      });\n      let valueData;\n\n      residentListing &&\n        residentListing.map((data) => {\n          return data._id === value.residentId ? (valueData = data) : null;\n        });\n      let request = {\n        ...value,\n        documents: [...tempDocList],\n        homeAreaId: valueData.homeAreaId._id,\n      };\n      if (isEdit) {\n        request = {\n          ...editDelRec,\n          ...request,\n        };\n      }\n      axios({ ...createResidentDocument, data: { ...request } })\n        .then(({ data }) => {\n          setAddDocLoading(false);\n          setAddDocumentModal(false);\n          setResidentDocumentPathList([]);\n          if (isEdit) {\n            setIsEdit(false);\n            setEditDelRec(undefined);\n          }\n          if (data.code === 'OK') {\n            fetch();\n          } else {\n            displayCatchErrorMsg(data.message);\n          }\n        })\n        .catch((err) => {\n          displayCatchErrorMsg(err);\n          setAddDocLoading(false);\n          if (isInvalidTokenError(err)) {\n            setAddDocumentModal(false);\n          }\n        });\n    });\n  };\n  const handleUploadAction = (action) => {\n    setIsUploadVisible(action);\n  };\n\n  const handleUploader = (action, uploadedData) => {\n    handleUploadAction(action);\n    if (uploadedData && uploadedData.data && uploadedData.data.length) {\n      let list = uploadedData.data.map((obj) => {\n        if (obj.path && obj.status) {\n          let temp = {\n            path: obj.path,\n            sequence: residentDocumentPathList.length - 1,\n            uploadedBy: authUser._id,\n          };\n          return temp;\n        }\n      });\n      setResidentDocumentPathList([...residentDocumentPathList, ...list]);\n    }\n  };\n  const handleDatePickerChange = (date) => {\n    // setDocumentDate(date)\n    form.setFieldsValue({ documentDate: date });\n  };\n  const handleDocumentDelete = (request) => {\n    setBtnLoading(true);\n    if (editDelRec && editDelRec._id) {\n      request._id = editDelRec._id;\n    } else {\n      return;\n    }\n    axios({ ...deleteResidentDocument, data: { ...request } })\n      .then(({ data }) => {\n        if (data.code === 'OK') {\n          setBtnLoading(false);\n          fetch();\n          setIsDeleteDoc(false);\n          setEditDelRec(undefined);\n          form.resetFields();\n        }\n      })\n      .catch((err) => setBtnLoading(false));\n  };\n  const handleDocDeleteModal = (action, record) => {\n    setIsDeleteDoc(action);\n    if (action && reasonList.length === 0) {\n      fetchrDeleteReasonList();\n    }\n    if (record && record._id) {\n      setEditDelRec(record);\n    }\n  };\n  const handleDateChange = (dateRange) => {\n    let tempFilter = filter;\n    if (dateRange) {\n      tempFilter = {\n        ...filter,\n        gte: [\n          {\n            'documents.documentDate':\n              moment(dateRange[0]).format('YYYY-MM-DDT00:00:00.000') + 'Z',\n          },\n        ],\n        lte: [\n          {\n            'documents.documentDate':\n              moment(dateRange[1]).format('YYYY-MM-DDT23:59:59.000') + 'Z',\n          },\n        ],\n        // \"gte\": [{ \"documents.documentDate\": moment(dateRange[0]).startOf('day').toISOString() }],\n        // \"lte\": [{ \"documents.documentDate\": moment(dateRange[1]).endOf('day').toISOString() }]\n      };\n      tempFilter.dateRange = dateRange;\n    } else if (tempFilter.gte && tempFilter.lte) {\n      delete tempFilter['gte'];\n      delete tempFilter['lte'];\n      if (tempFilter.dateRange) {\n        delete tempFilter['dateRange'];\n      }\n    }\n    setFilter({ ...tempFilter });\n  };\n\n  const checkAddAction = canPerformAction({\n    moduleId: MODULE.RESIDENT_DOCUMENT,\n    // subModuleId: SUB_MODULE.PMR_GROUP,\n    actiontoCheck: ACTIONS.ADD.CODE\n  })\n\n  return (\n    <div className='pmr_wrap'>\n      <div className='container'>\n        <PageHead\n          total={total}\n          onSearch={handleSearch}\n          onAdd={handleAddEdit}\n          loginUser={authUser}\n          filter={filter}\n          onDateChange={handleDateChange}\n          documentDate={documentDate}\n          checkAddAction={checkAddAction}\n        />\n        <Table\n          columns={getColumns()}\n          datasource={data}\n          loading={loading}\n          onChange={handleTableChange}\n          pagination={{\n            current: filter.page,\n            pageSize: filter.limit,\n            total: total,\n          }}\n        />\n        {addDocumentModal ? (\n          <AddResidentDocument\n            isEdit={isEdit}\n            visible={addDocumentModal}\n            residentListing={residentListing}\n            onResidentSearch={onResidentSearch}\n            isUploadVisible={isUploadVisible}\n            onSubmit={handleSubmit}\n            documentList={residentDocumentPathList}\n            onDatePickerChange={handleDatePickerChange}\n            documentDate={documentDate}\n            onCancel={handleAddEdit}\n            loading={addDocLoading}\n            form={form}\n            recordTypeList={documentFilter}\n            // onUploadAction={handleUploadAction}\n            onUploadAction={handleUploader}\n            editRecord={editDelRec}\n          />\n        ) : null}\n        {isDeleteDoc ? (\n          <DeleteResidentDocModal\n            visible={isDeleteDoc}\n            onCancel={handleDocDeleteModal}\n            reasonList={reasonList}\n            record={editDelRec}\n            loading={btnLoading}\n            onDocumentDelete={handleDocumentDelete}\n          />\n        ) : null}\n        {viewerIsOpen ? (\n          <>\n            <Lightbox\n              mainSrc={imagesData[currImg].src}\n              imageTitle={\n                <div>\n                  <div style={{ float: 'left' }}>\n                    <span style={{ marginRight: '10px' }}>\n                      {imagesData[currImg].residentName || ' '}\n                    </span>\n                    {imagesData[currImg].masterId\n                      ? `${'   |   '}${imagesData[currImg].masterId.name}`\n                      : null}\n                  </div>\n                  {imagesData[currImg].notesCount &&\n                    imagesData[currImg].notesCount > 0 ?\n                    <div style={{ marginLeft: '10px', cursor: 'pointer', float: 'right' }}\n                      onClick={() => this.visibleNotesModal(true, imagesData[currImg], 'imageViewer')}>\n                      {\" | \"}{imagesData[currImg].notesCount}\n                      {\"  \"}Note(s) </div> : null\n                  }\n                </div>\n              }\n              nextSrc={imagesData[(currImg + 1) % imagesData.length].src}\n              prevSrc={\n                imagesData[\n                  (currImg + imagesData.length - 1) % imagesData.length\n                ].src\n              }\n              onCloseRequest={() => setViewerIsOpen(false)}\n              onMovePrevRequest={() =>\n                setCurrImg(\n                  (currImg) =>\n                    (currImg + imagesData.length - 1) % imagesData.length\n                )\n              }\n              onMoveNextRequest={() =>\n                setCurrImg((currImg) => (currImg + 1) % imagesData.length)\n              }\n            />\n          </>\n        ) : null}\n      </div>\n    </div>\n  );\n}\nconst mapStateToProps = ({ auth }) => {\n  const { authUser, homeId } = auth;\n  return {\n    authUser,\n    homeId,\n  };\n};\nexport default connect(mapStateToProps)(createForm()(ResidentDocumentMain));\n"]},"metadata":{},"sourceType":"module"}