{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/HomeAreaFilter.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Select, Option } from './common';\nimport axios from '../services/api/services/common';\nimport { getAllHomeArea } from '../services/api/routes/customer';\nimport { connect } from 'react-redux';\nimport { isKeyExist } from '../util/common';\nimport { setUserData } from '../appRedux/actions/Auth';\n\nconst _ = require('lodash');\n\nconst HomeAreaFilter = props => {\n  const {\n    placeholder,\n    onChange,\n    authUser,\n    homeId,\n    multiple,\n    defaultValue,\n    name\n  } = props;\n  const [data, setData] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [homeAreaList, setHomeAreaList] = useState([]); // useEffect(() => {\n  //   // uncomment if u want to fetch home area from homeId (not switch home)\n  //   if (authUser?.homeId?._id)\n  //     fetch()\n  // }, [authUser])\n\n  useEffect(() => {\n    if (isKeyExist(authUser, ['homeId', 'homeAreas']) && authUser.homeId.homeAreas.length) {\n      setHomeAreaList(authUser.homeId.homeAreas);\n    }\n  }, [authUser]); // useEffect(() => {\n  // uncomment if u want to fetch home area from homeId (not switch home)\n  //   fetch()\n  // }, [homeId])\n  // fetch = async () => {\n  //   // if (authUser.homeAreas && authUser.homeAreas.length > 0) {\n  //   //   setHomeAreaList(authUser.homeAreas);\n  //   // } else {\n  //   setLoader(true);\n  //   const request = {\n  //     select: ['isActive', '_id', 'name'],\n  //     where: { isActive: true, homeId: homeId },\n  //   };\n  //   let res = await axios({ ...getAllHomeArea, data: request });\n  //   if (res && res.code === 'OK') {\n  //     setHomeAreaList(res.data.data);\n  //     props.setUserData({ ...authUser, homeAreas: res.data.data });\n  //   }\n  //   setLoader(false);\n  //   // }\n  // };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    multiple: multiple,\n    loading: loader,\n    placeholder: placeholder,\n    showSearch: true,\n    name: name,\n    defaultValue: defaultValue || undefined,\n    onChange: onChange,\n    allowClear: true,\n    filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, homeAreaList.length > 0 ? homeAreaList.map(curObj => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: curObj._id,\n      value: curObj._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, curObj.name);\n  }) : null));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  const {\n    authUser\n  } = auth;\n  return {\n    authUser\n  };\n};\n\nHomeAreaFilter.defaultProps = {\n  allowClear: true,\n  placeholder: 'Select Home Area'\n};\nHomeAreaFilter.propTypes = {\n  allowClear: PropTypes.bool,\n  placeholder: PropTypes.string\n};\nexport default connect(mapStateToProps, {\n  setUserData\n})(HomeAreaFilter);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/HomeAreaFilter.js"],"names":["React","useState","useEffect","PropTypes","Select","Option","axios","getAllHomeArea","connect","isKeyExist","setUserData","_","require","HomeAreaFilter","props","placeholder","onChange","authUser","homeId","multiple","defaultValue","name","data","setData","loader","setLoader","homeAreaList","setHomeAreaList","homeAreas","length","undefined","input","option","children","toLowerCase","indexOf","map","curObj","_id","mapStateToProps","auth","defaultProps","allowClear","propTypes","bool","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Select, Option } from './common';\nimport axios from '../services/api/services/common';\nimport { getAllHomeArea } from '../services/api/routes/customer';\nimport { connect } from 'react-redux';\nimport { isKeyExist } from '../util/common';\nimport { setUserData } from '../appRedux/actions/Auth';\nconst _ = require('lodash');\n\nconst HomeAreaFilter = (props) => {\n  const {\n    placeholder,\n    onChange,\n    authUser,\n    homeId,\n    multiple,\n    defaultValue,\n    name,\n  } = props;\n  const [data, setData] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [homeAreaList, setHomeAreaList] = useState([]);\n\n  // useEffect(() => {\n  //   // uncomment if u want to fetch home area from homeId (not switch home)\n  //   if (authUser?.homeId?._id)\n  //     fetch()\n  // }, [authUser])\n\n  useEffect(() => {\n    if (\n      isKeyExist(authUser, ['homeId', 'homeAreas']) &&\n      authUser.homeId.homeAreas.length\n    ) {\n      setHomeAreaList(authUser.homeId.homeAreas);\n    }\n  }, [authUser]);\n\n  // useEffect(() => {\n  // uncomment if u want to fetch home area from homeId (not switch home)\n  //   fetch()\n  // }, [homeId])\n\n  // fetch = async () => {\n  //   // if (authUser.homeAreas && authUser.homeAreas.length > 0) {\n  //   //   setHomeAreaList(authUser.homeAreas);\n  //   // } else {\n  //   setLoader(true);\n  //   const request = {\n  //     select: ['isActive', '_id', 'name'],\n  //     where: { isActive: true, homeId: homeId },\n  //   };\n  //   let res = await axios({ ...getAllHomeArea, data: request });\n  //   if (res && res.code === 'OK') {\n  //     setHomeAreaList(res.data.data);\n  //     props.setUserData({ ...authUser, homeAreas: res.data.data });\n  //   }\n  //   setLoader(false);\n  //   // }\n  // };\n\n  return (\n    <React.Fragment>\n      <Select\n        multiple={multiple}\n        loading={loader}\n        placeholder={placeholder}\n        showSearch\n        name={name}\n        defaultValue={defaultValue || undefined}\n        onChange={onChange}\n        allowClear\n        filterOption={(input, option) =>\n          option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n      >\n        {homeAreaList.length > 0\n          ? homeAreaList.map((curObj) => {\n            return (\n              <Option key={curObj._id} value={curObj._id}>\n                {curObj.name}\n              </Option>\n            );\n          })\n          : null}\n      </Select>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({ auth }) => {\n  const { authUser } = auth;\n  return { authUser };\n};\n\nHomeAreaFilter.defaultProps = {\n  allowClear: true,\n  placeholder: 'Select Home Area',\n};\nHomeAreaFilter.propTypes = {\n  allowClear: PropTypes.bool,\n  placeholder: PropTypes.string,\n};\nexport default connect(mapStateToProps, { setUserData })(HomeAreaFilter);\n"]},"metadata":{},"sourceType":"module"}