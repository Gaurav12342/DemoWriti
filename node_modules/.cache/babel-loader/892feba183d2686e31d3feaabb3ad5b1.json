{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/PmrTodo/components/ResidentList.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Search, Spin, Select, Option } from '../../../components/common';\nimport { Filters } from '../../../assets/images/resident-detail/index';\nimport axios from '../../../services/api/services/common';\nimport { getTodoList } from '../../../services/api/routes/pmr';\nimport SearchResidents from '../../../components/SearchResidents';\nimport HomeAreaFilter from '../../../components/HomeAreaFilter';\nimport { ViewTypeFilter } from '../../../components/Todo';\nimport { getLFName } from '../../../util/common';\nimport { displayPmrProcess } from '../../../util/todo';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport moment from 'moment';\nimport { TODO_CATEGORY, SUB_CATEGORY, STATUS } from '../../../constants/todo';\nimport { todoUpdate } from '../../../services/socket/routes/todo';\n\nconst ResidentList = props => {\n  const {\n    query,\n    onsetActiveTodo,\n    isPrimaryFilter,\n    socket\n  } = props;\n  const [loader, setLoader] = useState(false);\n  const [filter, setFilter] = useState({\n    // ...query,\n    page: 1,\n    limit: 15\n  });\n  const [todoList, setTodoList] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [search, setSearch] = useState();\n  const [residents, setResidents] = useState([]);\n  const [activeTodo, setActiveTodo] = useState(null);\n  const [infyLoader, setInfyLoader] = useState(false);\n  const mountRef = React.useRef(false);\n  let scrollParentRef = null;\n  useEffect(() => {\n    //bcz of this hook api is calling 2 times\n    if (mountRef.current) {\n      let tempObj = { ...filter,\n        ...query\n      };\n      setFilter(tempObj);\n    }\n  }, [query]);\n  useEffect(() => {\n    if (mountRef.current) {\n      if (filter.hasOwnProperty('orderNumber')) {\n        const delayDebounceFn = setTimeout(() => {\n          fetch();\n        }, 600);\n        return () => clearTimeout(delayDebounceFn);\n      } else fetch();\n    }\n  }, [filter]);\n  useEffect(() => {\n    //need to give ref of detail\n    if (!activeTodo) return;\n\n    if (socket) {\n      socket.on(todoUpdate, handleTodoUpdate);\n      return () => {\n        socket.off(todoUpdate);\n      };\n    }\n  }, [activeTodo]);\n  React.useEffect(() => {\n    mountRef.current = true;\n  }, []);\n\n  const handleTodoUpdate = data => {\n    if (data.length) {\n      //Todo update in Medscheck container and PmrContainer(for Undo)\n      let subCategory = data.filter(x => x.subCategory === SUB_CATEGORY.MED_REVIEW[\"MEDS_CHECK\"] || x.subCategory === SUB_CATEGORY.MED_REVIEW[\"PMR\"]);\n\n      if (subCategory && activeTodo) {\n        let todo = { ...activeTodo\n        };\n        let updatedTodo = data.filter(x => {\n          var _x$pmrId;\n\n          return ((_x$pmrId = x.pmrId) === null || _x$pmrId === void 0 ? void 0 : _x$pmrId._id) === todo._id;\n        });\n        console.log(\"SOCKET=>ResidentList -> updatedTodo\", updatedTodo);\n        let newTodoList = [...todoList];\n\n        if ((updatedTodo === null || updatedTodo === void 0 ? void 0 : updatedTodo.length) && newTodoList.length) {\n          let index = newTodoList.findIndex(x => x.todoDetail.toDoId === updatedTodo[0]._id);\n\n          if (index !== -1) {\n            //update entire object except latest key\n            newTodoList[index].todoDetail = { ...newTodoList[index].todoDetail,\n              status: updatedTodo[0].status,\n              completedBy: updatedTodo[0].completedBy,\n              completedAt: updatedTodo[0].completedAt\n            };\n            newTodoList[index].latest = todo.latest;\n          }\n\n          setTodoList(newTodoList);\n          let setTodo = newTodoList[index] || todo;\n          setActiveTodo({ ...setTodo,\n            isTodoUpdate: true\n          });\n          onsetActiveTodo({ ...setTodo,\n            isTodoUpdate: true\n          });\n        }\n      }\n    }\n  };\n\n  const fetch = () => {\n    // get todoList based on category and subcategory\n    if (filter.page === 1) {\n      setTodoList([]);\n      setLoader(true);\n    }\n\n    axios({ ...getTodoList,\n      data: filter\n    }).then(data => {\n      if (data.code === 'OK') {\n        var _lists, _lists2;\n\n        let lists = filter.page === 1 ? [] : [...todoList];\n        lists = lists.concat(data.data.list);\n        setTodoList(lists);\n        setTotal(data.data.count);\n        if (((_lists = lists) === null || _lists === void 0 ? void 0 : _lists.length) > 0) handleTodoClick(data.data.list[0]);\n        if (((_lists2 = lists) === null || _lists2 === void 0 ? void 0 : _lists2.length) === 0) handleTodoClick(null);\n        if (data.data.list.length < filter.limit) setHasMore(false);else setHasMore(true);\n      }\n\n      setLoader(false);\n      setInfyLoader(false);\n    }).catch(err => {\n      setLoader(false);\n      setInfyLoader(false);\n    });\n  };\n\n  const handleInfiniteOnLoad = page => {\n    setInfyLoader(false);\n    setFilter({ ...filter,\n      page: page + 1\n    });\n  };\n\n  const handleSearchRx = e => {\n    let value = e.target.value;\n    let obj = { ...filter,\n      orderNumber: value\n    };\n    setFilter(obj);\n  };\n\n  const handleSelectResident = val => {\n    let obj = { ...filter,\n      residentId: (val === null || val === void 0 ? void 0 : val.length) > 0 ? val : undefined\n    };\n    setFilter(obj);\n  };\n\n  const handleTodoClick = val => {\n    setActiveTodo(val);\n    onsetActiveTodo(val);\n  };\n\n  const text = latest => /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tooltip-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"desc-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, \"PMR Current Status\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"desc-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, (latest === null || latest === void 0 ? void 0 : latest.message) || displayPmrProcess(latest, 'list')));\n\n  const getOverDue = x => {\n    var _x$pmrScheduleGroupId;\n\n    let date = (_x$pmrScheduleGroupId = x.pmrScheduleGroupId) === null || _x$pmrScheduleGroupId === void 0 ? void 0 : _x$pmrScheduleGroupId.startDate;\n    let subtractDays = x.dueDays;\n    const dueDate = moment(date).subtract(subtractDays, 'days'); // const dueDays = dueDate.diff(moment(), 'days');\n    // const dueText = dueDays < 0 ? 'Overdue' : 'Due in';\n    // return dueText + ' ' + Math.abs(dueDays) + ' days';\n\n    const days = moment().diff(dueDate, 'days');\n    if (days > 0) return `Overdue ${Math.abs(days)} ${Math.abs(days) === 1 ? 'day' : 'days'}`;else if (days === 0) return `Due Today`;else return `Due in ${Math.abs(days)} ${Math.abs(days) === 1 ? 'day' : 'days'}`;\n  };\n\n  const handleHomeArea = val => {\n    let tempFilter = { ...filter,\n      homeAreaId: val ? val : undefined\n    };\n    setFilter(tempFilter);\n  };\n\n  const handleViewType = viewType => {\n    let tempFilter = { ...filter,\n      viewType: viewType\n    };\n    setFilter(tempFilter);\n  };\n\n  console.log(90, filter);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"prep_left_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stiky-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"components mb-12 wd100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HomeAreaFilter, {\n    placeholder: \"Filter Homearea\",\n    onChange: handleHomeArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"components mb-12 wd100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ViewTypeFilter, {\n    viewType: filter.viewType,\n    isPrimaryFilter: isPrimaryFilter,\n    onChangeListview: handleViewType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name-day-list\",\n    ref: ref => scrollParentRef = ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, loader ? /*#__PURE__*/React.createElement(Spin, {\n    spinning: loader,\n    str: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }) : (todoList === null || todoList === void 0 ? void 0 : todoList.length) > 0 ? /*#__PURE__*/React.createElement(InfiniteScroll, {\n    initialLoad: false,\n    loadMore: handleInfiniteOnLoad,\n    hasMore: hasMore && !loader && !infyLoader,\n    useWindow: false,\n    getScrollParent: () => scrollParentRef,\n    threshold: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, todoList.map(x => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: `overdue-block ${x._id === (activeTodo === null || activeTodo === void 0 ? void 0 : activeTodo._id) ? ' active' : ''}`,\n    onClick: () => handleTodoClick(x),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resi_img mr-17\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  }, x.patientId.image ? /*#__PURE__*/React.createElement(\"img\", {\n    src: x.patientId.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 23\n    }\n  }) : getLFName({\n    mergeLFName: x.patientId.mergeLFName\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"made-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }, x.patientId.mergeLFName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }, getOverDue(x))), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"top\",\n    overlay: text(x.latest),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../NursePrep/img/info.svg'),\n    className: \"info-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }))))), infyLoader ? /*#__PURE__*/React.createElement(Spin, {\n    spinning: infyLoader,\n    str: \"center autoheight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 27\n    }\n  }) : null) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }, \"No Data\"))) // <div className=\"searchlist\">\n  //   <div className=\"form_wrap col-12 form_group with_filter\" style={{ padding: '12px 20px 0', marginBottom: 0 }}>\n  //     <SearchResidents placeholder=\"Search Resident\" allowClear\n  //       onSelectResident={handleSelectResident} />\n  //     <Filters />\n  //   </div>\n  //   <div className=\"form_group\">\n  //     <Search placeholder='Search by Rx Order'\n  //       onChange={handleSearchRx}\n  //       allowClear={true} />\n  //   </div>\n  //   <div className=\"listing\" ref={(ref) => scrollParentRef = ref}>\n  //     {\n  //       loader ?\n  //         <Spin spinning={loader} str='center' />\n  //         : todoList?.length > 0 ?\n  //           <InfiniteScroll\n  //             initialLoad={false}\n  //             loadMore={handleInfiniteOnLoad}\n  //             hasMore={hasMore && !loader}\n  //             useWindow={false}\n  //             getScrollParent={() => scrollParentRef}\n  //           >\n  //             {\n  //               todoList.map(x => <>\n  //                 <a href=\"#\" className={`media ${x._id === activeTodo?._id ? \" active\" : \"\"}`} onClick={() => handleTodoClick(x)}>\n  //                   {/* <a href=\"#\" className=\"media offline\"> */}\n  //                   <div className=\"contact-profile\">\n  //                     {x.residentId.image ?\n  //                       <img src={x.residentId.image} />\n  //                       : getLFName({ mergeLFName: x.residentId.mergeLFName })}\n  //                   </div>\n  //                   <div className=\"media-body\">\n  //                     <h3 className=\"name\">{x.residentId.mergeLFName}</h3>\n  //                     <p className=\"desc\">{x.orderNumber}</p>\n  //                   </div>\n  //                 </a>\n  //               </>)\n  //             }\n  //           </InfiniteScroll>\n  //           : <p className=\"text-center\">No Data</p>\n  //     }\n  //   </div>\n  // </div>\n  ;\n};\n\nexport default ResidentList;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/PmrTodo/components/ResidentList.js"],"names":["React","Component","useEffect","useState","InfiniteScroll","Search","Spin","Select","Option","Filters","axios","getTodoList","SearchResidents","HomeAreaFilter","ViewTypeFilter","getLFName","displayPmrProcess","Tooltip","moment","TODO_CATEGORY","SUB_CATEGORY","STATUS","todoUpdate","ResidentList","props","query","onsetActiveTodo","isPrimaryFilter","socket","loader","setLoader","filter","setFilter","page","limit","todoList","setTodoList","total","setTotal","hasMore","setHasMore","search","setSearch","residents","setResidents","activeTodo","setActiveTodo","infyLoader","setInfyLoader","mountRef","useRef","scrollParentRef","current","tempObj","hasOwnProperty","delayDebounceFn","setTimeout","fetch","clearTimeout","on","handleTodoUpdate","off","data","length","subCategory","x","MED_REVIEW","todo","updatedTodo","pmrId","_id","console","log","newTodoList","index","findIndex","todoDetail","toDoId","status","completedBy","completedAt","latest","setTodo","isTodoUpdate","then","code","lists","concat","list","count","handleTodoClick","catch","err","handleInfiniteOnLoad","handleSearchRx","e","value","target","obj","orderNumber","handleSelectResident","val","residentId","undefined","text","message","getOverDue","date","pmrScheduleGroupId","startDate","subtractDays","dueDays","dueDate","subtract","days","diff","Math","abs","handleHomeArea","tempFilter","homeAreaId","handleViewType","viewType","ref","map","patientId","image","mergeLFName","require"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Search, Spin, Select, Option } from '../../../components/common';\nimport { Filters } from '../../../assets/images/resident-detail/index';\nimport axios from '../../../services/api/services/common';\nimport { getTodoList } from '../../../services/api/routes/pmr';\nimport SearchResidents from '../../../components/SearchResidents';\nimport HomeAreaFilter from '../../../components/HomeAreaFilter';\nimport { ViewTypeFilter } from '../../../components/Todo';\nimport { getLFName } from '../../../util/common';\nimport { displayPmrProcess } from '../../../util/todo';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport moment from 'moment';\nimport { TODO_CATEGORY, SUB_CATEGORY, STATUS } from '../../../constants/todo';\nimport { todoUpdate } from '../../../services/socket/routes/todo';\n\nconst ResidentList = (props) => {\n  const { query, onsetActiveTodo, isPrimaryFilter, socket } = props;\n  const [loader, setLoader] = useState(false);\n  const [filter, setFilter] = useState({\n    // ...query,\n    page: 1,\n    limit: 15,\n  });\n  const [todoList, setTodoList] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [search, setSearch] = useState();\n  const [residents, setResidents] = useState([]);\n  const [activeTodo, setActiveTodo] = useState(null);\n  const [infyLoader, setInfyLoader] = useState(false);\n  const mountRef = React.useRef(false);\n  let scrollParentRef = null;\n\n  useEffect(() => {\n    //bcz of this hook api is calling 2 times\n    if (mountRef.current) {\n      let tempObj = {\n        ...filter,\n        ...query,\n      };\n      setFilter(tempObj);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    if (mountRef.current) {\n      if (filter.hasOwnProperty('orderNumber')) {\n        const delayDebounceFn = setTimeout(() => {\n          fetch();\n        }, 600);\n        return () => clearTimeout(delayDebounceFn);\n      } else fetch();\n    }\n  }, [filter]);\n\n  useEffect(() => {\n    //need to give ref of detail\n    if (!activeTodo) return;\n    if (socket) {\n      socket.on(todoUpdate, handleTodoUpdate);\n      return () => {\n        socket.off(todoUpdate);\n      };\n    }\n  }, [activeTodo]);\n\n  React.useEffect(() => {\n    mountRef.current = true;\n  }, []);\n\n  const handleTodoUpdate = data => {\n    if (data.length) {\n      //Todo update in Medscheck container and PmrContainer(for Undo)\n      let subCategory = data.filter(x => x.subCategory === SUB_CATEGORY.MED_REVIEW[\"MEDS_CHECK\"] ||\n        x.subCategory === SUB_CATEGORY.MED_REVIEW[\"PMR\"])\n\n      if (subCategory && activeTodo) {\n        let todo = { ...activeTodo }\n        let updatedTodo = data.filter(x => x.pmrId?._id === todo._id)\n        console.log(\"SOCKET=>ResidentList -> updatedTodo\", updatedTodo)\n        let newTodoList = [...todoList]\n        if (updatedTodo?.length && newTodoList.length) {\n          let index = newTodoList.findIndex(x => x.todoDetail.toDoId === updatedTodo[0]._id)\n          if (index !== -1) {\n            //update entire object except latest key\n            newTodoList[index].todoDetail = {\n              ...newTodoList[index].todoDetail,\n              status: updatedTodo[0].status,\n              completedBy: updatedTodo[0].completedBy,\n              completedAt: updatedTodo[0].completedAt,\n            }\n            newTodoList[index].latest = todo.latest\n          }\n          setTodoList(newTodoList)\n          let setTodo = newTodoList[index] || todo\n          setActiveTodo({ ...setTodo, isTodoUpdate: true })\n          onsetActiveTodo({ ...setTodo, isTodoUpdate: true })\n\n        }\n      }\n    }\n  }\n\n  const fetch = () => {\n    // get todoList based on category and subcategory\n    if (filter.page === 1) {\n      setTodoList([])\n      setLoader(true)\n    }\n    axios({ ...getTodoList, data: filter })\n      .then((data) => {\n        if (data.code === 'OK') {\n          let lists = filter.page === 1 ? [] : [...todoList];\n          lists = lists.concat(data.data.list);\n          setTodoList(lists);\n          setTotal(data.data.count);\n          if (lists?.length > 0) handleTodoClick(data.data.list[0]);\n          if (lists?.length === 0) handleTodoClick(null);\n          if (data.data.list.length < filter.limit)\n            setHasMore(false)\n          else\n            setHasMore(true)\n        }\n        setLoader(false);\n        setInfyLoader(false)\n      })\n      .catch((err) => {\n        setLoader(false);\n        setInfyLoader(false)\n      });\n  };\n\n  const handleInfiniteOnLoad = (page) => {\n    setInfyLoader(false)\n    setFilter({\n      ...filter,\n      page: page + 1\n    })\n  }\n\n  const handleSearchRx = (e) => {\n    let value = e.target.value;\n    let obj = {\n      ...filter,\n      orderNumber: value,\n    };\n    setFilter(obj);\n  };\n\n  const handleSelectResident = (val) => {\n    let obj = {\n      ...filter,\n      residentId: val?.length > 0 ? val : undefined,\n    };\n    setFilter(obj);\n  };\n\n  const handleTodoClick = (val) => {\n    setActiveTodo(val);\n    onsetActiveTodo(val);\n  };\n  const text = (latest) => (<span className='tooltip-desc'>\n    <p className='desc-1'>PMR Current Status</p>\n    <p className='desc-2'>\n      {latest?.message || displayPmrProcess(latest, 'list')}\n    </p>\n  </span>\n  );\n\n  const getOverDue = (x) => {\n    let date = x.pmrScheduleGroupId?.startDate;\n    let subtractDays = x.dueDays;\n    const dueDate = moment(date).subtract(subtractDays, 'days');\n    // const dueDays = dueDate.diff(moment(), 'days');\n    // const dueText = dueDays < 0 ? 'Overdue' : 'Due in';\n    // return dueText + ' ' + Math.abs(dueDays) + ' days';\n    const days = moment().diff(dueDate, 'days');\n    if (days > 0)\n      return `Overdue ${Math.abs(days)} ${Math.abs(days) === 1 ? 'day' : 'days'}`\n    else if (days === 0)\n      return `Due Today`\n    else\n      return `Due in ${Math.abs(days)} ${Math.abs(days) === 1 ? 'day' : 'days'}`\n  };\n\n  const handleHomeArea = (val) => {\n    let tempFilter = {\n      ...filter,\n      homeAreaId: val ? val : undefined,\n    };\n    setFilter(tempFilter);\n  };\n\n  const handleViewType = (viewType) => {\n    let tempFilter = {\n      ...filter,\n      viewType: viewType,\n    };\n    setFilter(tempFilter);\n  };\n  console.log(90, filter)\n  return (\n    <div className='prep_left_wrap'>\n      <div className='stiky-box'>\n        <form action=''>\n          <div className='form_wrap'>\n            <div className='components mb-12 wd100'>\n              <HomeAreaFilter\n                placeholder='Filter Homearea'\n                onChange={handleHomeArea}\n              />\n            </div>\n          </div>\n          <div className='form_wrap'>\n            <div className='components mb-12 wd100'>\n              <ViewTypeFilter\n                viewType={filter.viewType}\n                isPrimaryFilter={isPrimaryFilter}\n                onChangeListview={handleViewType}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <div className='name-day-list' ref={(ref) => (scrollParentRef = ref)}>\n        {loader ? (\n          <Spin spinning={loader} str='center' />\n        ) : todoList?.length > 0 ? (\n          <InfiniteScroll\n            initialLoad={false}\n            loadMore={handleInfiniteOnLoad}\n            hasMore={hasMore && !loader && !infyLoader}\n            useWindow={false}\n            getScrollParent={() => scrollParentRef}\n            threshold={20}\n          >\n            {todoList.map((x) => (\n              <>\n                <div\n                  className={`overdue-block ${\n                    x._id === activeTodo?._id ? ' active' : ''\n                    }`}\n                  onClick={() => handleTodoClick(x)}\n                >\n                  <div className='resi_img mr-17'>\n                    {x.patientId.image ? (\n                      <img src={x.patientId.image} />\n                    ) : (\n                        getLFName({ mergeLFName: x.patientId.mergeLFName })\n                      )}\n                  </div>\n                  <div className='made-line'>\n                    <span>{x.patientId.mergeLFName}</span>\n                    <p>{getOverDue(x)}</p>\n                  </div>\n                  <Tooltip placement='top' overlay={text(x.latest)}>\n                    <img\n                      src={require('../../NursePrep/img/info.svg')}\n                      className='info-left'\n                    />\n                  </Tooltip>\n                </div>\n              </>\n            ))}\n            {infyLoader ? <Spin spinning={infyLoader} str='center autoheight' /> : null}\n          </InfiniteScroll>\n        ) : (\n              <p className='text-center'>No Data</p>\n            )}\n      </div>\n    </div>\n\n    // <div className=\"searchlist\">\n    //   <div className=\"form_wrap col-12 form_group with_filter\" style={{ padding: '12px 20px 0', marginBottom: 0 }}>\n    //     <SearchResidents placeholder=\"Search Resident\" allowClear\n    //       onSelectResident={handleSelectResident} />\n    //     <Filters />\n    //   </div>\n    //   <div className=\"form_group\">\n    //     <Search placeholder='Search by Rx Order'\n    //       onChange={handleSearchRx}\n    //       allowClear={true} />\n    //   </div>\n    //   <div className=\"listing\" ref={(ref) => scrollParentRef = ref}>\n    //     {\n    //       loader ?\n    //         <Spin spinning={loader} str='center' />\n    //         : todoList?.length > 0 ?\n    //           <InfiniteScroll\n    //             initialLoad={false}\n    //             loadMore={handleInfiniteOnLoad}\n    //             hasMore={hasMore && !loader}\n    //             useWindow={false}\n    //             getScrollParent={() => scrollParentRef}\n    //           >\n    //             {\n    //               todoList.map(x => <>\n    //                 <a href=\"#\" className={`media ${x._id === activeTodo?._id ? \" active\" : \"\"}`} onClick={() => handleTodoClick(x)}>\n    //                   {/* <a href=\"#\" className=\"media offline\"> */}\n    //                   <div className=\"contact-profile\">\n    //                     {x.residentId.image ?\n    //                       <img src={x.residentId.image} />\n    //                       : getLFName({ mergeLFName: x.residentId.mergeLFName })}\n    //                   </div>\n    //                   <div className=\"media-body\">\n    //                     <h3 className=\"name\">{x.residentId.mergeLFName}</h3>\n    //                     <p className=\"desc\">{x.orderNumber}</p>\n    //                   </div>\n    //                 </a>\n    //               </>)\n    //             }\n    //           </InfiniteScroll>\n    //           : <p className=\"text-center\">No Data</p>\n    //     }\n    //   </div>\n    // </div>\n  );\n};\nexport default ResidentList;\n"]},"metadata":{},"sourceType":"module"}