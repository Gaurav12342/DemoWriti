{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Profile/components/ChangesPasswordForm.js\";\nimport React from 'react'; // import { createForm } from \"rc-form\";\n\nimport { Input, Button, ErrorMsg } from '../../../components/common/index';\n\nconst _ = require('lodash');\n\nconst ChangesPasswordForm = props => {\n  let errors;\n  const {\n    form,\n    onResetPassword,\n    onPassLoader\n  } = props;\n  const {\n    getFieldError,\n    getFieldDecorator,\n    validateFields,\n    resetFields,\n    getFieldValue\n  } = form;\n\n  const compareToFirstPassword = (rule, value, callback) => {\n    if (value && value !== getFieldValue('newPassword')) {\n      callback('Confirm password not match.');\n    } else {\n      callback();\n    }\n  };\n\n  const validateToNextPassword = (rule, value, callback) => {\n    if (value) {\n      validateFields(['conPassword'], {\n        force: true\n      });\n    }\n\n    callback();\n  };\n\n  const handleResetPassword = () => {\n    validateFields((error, value) => {\n      if (!error) {\n        let obj = _.clone(value);\n\n        obj.currentPassword = obj.currentPassword;\n        obj.newPassword = obj.newPassword; // delete obj.conPassword;\n        // resetFields();\n\n        onResetPassword(obj);\n      } else {\n        console.log(error);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Current Passowrd\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, \"*\")), getFieldDecorator('currentPassword', {\n    rules: [{\n      required: true,\n      message: 'Please enter the password.!'\n    }, {\n      min: 8,\n      message: 'Password must be minimum of 8 digit.'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    type: \"password\" // placeholder=\"New Password *\"\n    ,\n    name: \"currentPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })), (errors = getFieldError('currentPassword')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"New Passowrd\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, \"*\")), getFieldDecorator('newPassword', {\n    rules: [{\n      required: true,\n      message: 'Please enter the password.!'\n    }, {\n      min: 8,\n      message: 'Password must be minimum of 8 digit.'\n    }, {\n      validator: validateToNextPassword\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    type: \"password\" // placeholder=\"New Password *\"\n    ,\n    name: \"newPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })), (errors = getFieldError('newPassword')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '2%',\n      paddingBottom: '18%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Confirm Password\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, \"*\")), getFieldDecorator('conPassword', {\n    rules: [{\n      required: true,\n      message: 'Please enter the confirm password.!'\n    }, {\n      validator: compareToFirstPassword\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    type: \"password\" // placeholder=\"Confirm Password *\"\n    ,\n    name: \"conPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  })), (errors = getFieldError('conPassword')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12\",\n    style: {\n      textAlign: 'right',\n      borderTop: '1px solid #919A9F',\n      paddingTop: '20px',\n      paddingBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    loading: onPassLoader,\n    onClick: handleResetPassword,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"Change Password\", ' '))));\n};\n\nexport default ChangesPasswordForm;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Profile/components/ChangesPasswordForm.js"],"names":["React","Input","Button","ErrorMsg","_","require","ChangesPasswordForm","props","errors","form","onResetPassword","onPassLoader","getFieldError","getFieldDecorator","validateFields","resetFields","getFieldValue","compareToFirstPassword","rule","value","callback","validateToNextPassword","force","handleResetPassword","error","obj","clone","currentPassword","newPassword","console","log","marginTop","rules","required","message","min","validator","paddingBottom","textAlign","borderTop","paddingTop"],"mappings":"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","sourcesContent":["import React from 'react';\n// import { createForm } from \"rc-form\";\nimport { Input, Button, ErrorMsg } from '../../../components/common/index';\nconst _ = require('lodash');\n\nconst ChangesPasswordForm = (props) => {\n  let errors;\n  const { form, onResetPassword, onPassLoader } = props;\n  const {\n    getFieldError,\n    getFieldDecorator,\n    validateFields,\n    resetFields,\n    getFieldValue,\n  } = form;\n\n  const compareToFirstPassword = (rule, value, callback) => {\n    if (value && value !== getFieldValue('newPassword')) {\n      callback('Confirm password not match.');\n    } else {\n      callback();\n    }\n  };\n\n  const validateToNextPassword = (rule, value, callback) => {\n    if (value) {\n      validateFields(['conPassword'], { force: true });\n    }\n    callback();\n  };\n\n  const handleResetPassword = () => {\n    validateFields((error, value) => {\n      if (!error) {\n        let obj = _.clone(value);\n        obj.currentPassword = obj.currentPassword;\n        obj.newPassword = obj.newPassword;\n        // delete obj.conPassword;\n        // resetFields();\n        onResetPassword(obj);\n      } else {\n        console.log(error);\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className='form_row' style={{ marginTop: '2%' }}>\n        <div className='form_group col-4 required'>\n          <label>\n            Current Passowrd<span>*</span>\n          </label>\n          {getFieldDecorator('currentPassword', {\n            rules: [\n              {\n                required: true,\n                message: 'Please enter the password.!',\n              },\n              {\n                min: 8,\n                message: 'Password must be minimum of 8 digit.',\n              },\n            ],\n          })(\n            <Input\n              type='password'\n              // placeholder=\"New Password *\"\n              name='currentPassword'\n            />\n          )}\n          {(errors = getFieldError('currentPassword')) ? (\n            <ErrorMsg errors={errors} />\n          ) : null}\n        </div>\n      </div>\n      <div className='form_row' style={{ marginTop: '2%' }}>\n        <div className='form_group col-4 required'>\n          <label>\n            New Passowrd<span>*</span>\n          </label>\n          {getFieldDecorator('newPassword', {\n            rules: [\n              {\n                required: true,\n                message: 'Please enter the password.!',\n              },\n              {\n                min: 8,\n                message: 'Password must be minimum of 8 digit.',\n              },\n              {\n                validator: validateToNextPassword,\n              },\n            ],\n          })(\n            <Input\n              type='password'\n              // placeholder=\"New Password *\"\n              name='newPassword'\n            />\n          )}\n          {(errors = getFieldError('newPassword')) ? (\n            <ErrorMsg errors={errors} />\n          ) : null}\n        </div>\n      </div>\n      <div\n        className='form_row'\n        style={{ marginTop: '2%', paddingBottom: '18%' }}\n      >\n        <div className='form_group col-4 required'>\n          <label>\n            Confirm Password<span>*</span>\n          </label>\n          {getFieldDecorator('conPassword', {\n            rules: [\n              {\n                required: true,\n                message: 'Please enter the confirm password.!',\n              },\n              {\n                validator: compareToFirstPassword,\n              },\n            ],\n          })(\n            <Input\n              type='password'\n              // placeholder=\"Confirm Password *\"\n              name='conPassword'\n            />\n          )}\n          {(errors = getFieldError('conPassword')) ? (\n            <ErrorMsg errors={errors} />\n          ) : null}\n        </div>\n      </div>\n\n      <div className='form_row' style={{ marginTop: '2%' }}>\n        <div\n          className='form_group col-12'\n          style={{\n            textAlign: 'right',\n            borderTop: '1px solid #919A9F',\n            paddingTop: '20px',\n            paddingBottom: '10px',\n          }}\n        >\n          <Button\n            loading={onPassLoader}\n            onClick={handleResetPassword}\n            size='lg'\n          >\n            Change Password{' '}\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ChangesPasswordForm;\n"]},"metadata":{},"sourceType":"module"}