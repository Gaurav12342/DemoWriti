{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Xray/View/ReviewPopup/ReviewPopup.js\";\nimport React from 'react';\nimport { Check } from '../../../../assets/images/todo/index';\nimport { Cancel, Clarification } from '../../../../assets/images/resident-detail/index';\nimport { Notes } from '../../../../assets/images/pmr/index';\nimport { AddNotes } from '../../../../assets/images/popup/index';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport Modal from \"../../../../components/common/Popup/index\";\nimport { getUserNameWithDesignation } from '../../../../util/common';\nimport { displayDateTime } from '../../../../util/moment';\nimport { Input, CheckBox } from '../../../../components/common';\n\nfunction XrayReviewPopup(props) {\n  const {\n    onOk,\n    onCancel,\n    isVisible,\n    title,\n    xRayDetail,\n    isDeleted,\n    isEdit,\n    S_isDeleted,\n    isInfectionChecked,\n    handleInfectionControl,\n    handleReasonText,\n    reasonText,\n    onUrgent,\n    isChecked,\n    onDelete,\n    onCreateNotesModal,\n    notesCount,\n    editData,\n    onExtensionChange,\n    onPhoneNoChange,\n    phoneNo,\n    extensionNo\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    visible: isVisible,\n    title: title,\n    maskClosable: true // customChildren={true}\n    ,\n    onCancel: onCancel,\n    onClose: onCancel,\n    onOk: onOk,\n    footer: false,\n    className: \"lock_popup xray_selection_popup xray_review\",\n    closable: false,\n    btnClass: \"d-flex-end f-end footer-block\",\n    footerDescription: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal_footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, \"Actions\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => onCreateNotesModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Notes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }\n    }, \"Notes\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"notes tot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }\n    }, notesCount, \" Notes\")), /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => onCreateNotesModal(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(AddNotes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }, \"Add Note\")), /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Clarification, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, \"Clarification\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal_actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary grey-btn\",\n      onClick: onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: onOk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"Submit\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, isEdit ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"created_by\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, \"Created By : \", editData && editData.requestedBy ? getUserNameWithDesignation(editData.requestedBy) : ''), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, \"Created At : \", editData && editData.createdAt ? displayDateTime(editData.createdAt) : '-')) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"xray_list_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, Object.keys(xRayDetail).length > 0 && xRayDetail.selectedOptions && Object.keys(xRayDetail.selectedOptions).length ? Object.keys(xRayDetail.selectedOptions).map((key, i) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \" \", xRayDetail.selectedOptions[key].optionItems && xRayDetail.selectedOptions[key].optionItems.length ? (isEdit ? !(S_isDeleted && S_isDeleted.hasOwnProperty(key) && isDeleted[key]) : true) ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"xray_list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"xray_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 53\n      }\n    }, key), isEdit ? null : /*#__PURE__*/React.createElement(Cancel, {\n      onClick: () => onDelete(key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"xray_detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 53\n      }\n    }, xRayDetail.selectedOptions[key].optionItems.join(',')))) : null : Object.keys(xRayDetail.selectedOptions[key]).length ? (isEdit ? !(S_isDeleted && S_isDeleted.hasOwnProperty(key) && isDeleted[key]) : true) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"xray_list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"xray_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 61\n      }\n    }, key)), Object.keys(xRayDetail.selectedOptions[key]).map((subKey, j) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 72\n        }\n      }, xRayDetail.selectedOptions[key][subKey] && xRayDetail.selectedOptions[key][subKey].optionItems && xRayDetail.selectedOptions[key][subKey].optionItems.length ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"xray_detail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 81\n        }\n      }, subKey), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 81\n        }\n      }, xRayDetail.selectedOptions[key][subKey].optionItems.join(',')), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cancel-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 81\n        }\n      }, isEdit ? null : /*#__PURE__*/React.createElement(Cancel, {\n        onClick: () => onDelete(key, subKey),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 105\n        }\n      }))) : null);\n    }))) : null : null);\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter_value d-flex infection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"vvs\",\n    className: \"filter_check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"infectionControl\",\n    id: \"infectionControl\",\n    checked: isInfectionChecked,\n    onClick: handleInfectionControl,\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 48\n    }\n  }, \" Infection control\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"components textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'inline',\n      maxWidth: '580px',\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, \"Reason for Examination (Clinical Information)\", isInfectionChecked ? /*#__PURE__*/React.createElement(React.Fragment, null, \" and Infection Control precautions\", /*#__PURE__*/React.createElement(\"label\", {\n    className: \"mandatory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 206\n    }\n  }, \"*\")) : '')), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: reasonText,\n    onChange: handleReasonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter_value d-flex infection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"vvs\",\n    className: \"filter_check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"isUrgent\",\n    id: \"isUrgent\",\n    checked: isChecked,\n    onClick: onUrgent,\n    style: {\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 47\n    }\n  }, \"Is this examination urgent?\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"components\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"inputForm\",\n    placeholder: `Phone No.${isChecked ? '*' : ''}`,\n    onChange: onPhoneNoChange,\n    value: phoneNo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"components\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"inputForm\",\n    placeholder: `Extension No.${isChecked ? '*' : ''}`,\n    value: extensionNo,\n    onChange: onExtensionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 29\n    }\n  })))))));\n}\n\nexport default XrayReviewPopup;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Xray/View/ReviewPopup/ReviewPopup.js"],"names":["React","Check","Cancel","Clarification","Notes","AddNotes","Modal","getUserNameWithDesignation","displayDateTime","Input","CheckBox","XrayReviewPopup","props","onOk","onCancel","isVisible","title","xRayDetail","isDeleted","isEdit","S_isDeleted","isInfectionChecked","handleInfectionControl","handleReasonText","reasonText","onUrgent","isChecked","onDelete","onCreateNotesModal","notesCount","editData","onExtensionChange","onPhoneNoChange","phoneNo","extensionNo","requestedBy","createdAt","Object","keys","length","selectedOptions","map","key","i","optionItems","hasOwnProperty","join","subKey","j","marginBottom","display","maxWidth","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Check } from '../../../../assets/images/todo/index'\nimport { Cancel, Clarification } from '../../../../assets/images/resident-detail/index';\nimport { Notes } from '../../../../assets/images/pmr/index';\nimport { AddNotes } from '../../../../assets/images/popup/index';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport Modal from \"../../../../components/common/Popup/index\"\nimport { getUserNameWithDesignation } from '../../../../util/common';\nimport { displayDateTime } from '../../../../util/moment';\nimport { Input, CheckBox } from '../../../../components/common';\n\nfunction XrayReviewPopup(props) {\n    const { onOk, onCancel, isVisible, title, xRayDetail, isDeleted,\n        isEdit, S_isDeleted, isInfectionChecked, handleInfectionControl, handleReasonText, reasonText\n        , onUrgent, isChecked, onDelete, onCreateNotesModal, notesCount, editData, onExtensionChange, onPhoneNoChange, phoneNo, extensionNo\n    } = props\n    return (<>\n        {/* start popup */}\n        <Modal\n            visible={isVisible}\n            title={title}\n            maskClosable={true}\n            // customChildren={true}\n            onCancel={onCancel}\n            onClose={onCancel}\n            onOk={onOk}\n            footer={false}\n            className=\"lock_popup xray_selection_popup xray_review\"\n            closable={false}\n            btnClass=\"d-flex-end f-end footer-block\"\n            footerDescription={\n                <div className=\"modal_footer\">\n                    <div className=\"actions_wrap\">\n                        <h4>Actions</h4>\n                        <div className=\"actions\">\n                            <a onClick={() => onCreateNotesModal(false)}>\n                                <Notes />\n                                <p>Notes</p>\n                                <span className=\"notes tot\" >{notesCount} Notes</span>\n                            </a>\n                            <a onClick={() => onCreateNotesModal(true)}>\n                                <AddNotes />\n                                <p>Add Note</p>\n                            </a>\n                            <a>\n                                <Clarification />\n                                <p>Clarification</p>\n                            </a>\n                        </div>\n                    </div>\n                    <div className=\"modal_actions\">\n                        <button className=\"btn btn-primary grey-btn\" onClick={onCancel}>Cancel</button>\n                        <button className=\"btn btn-primary\" onClick={onOk}>Submit</button>\n                    </div>\n                </div>\n            }\n        >\n            <form >\n                {\n                    isEdit ?\n                        <div className=\"created_by\">\n                            <span>Created By : {editData && editData.requestedBy ? getUserNameWithDesignation(editData.requestedBy) : ''}</span>\n                            <span>Created At : {editData && editData.createdAt ? displayDateTime(editData.createdAt) : '-'}</span>\n                        </div> : null\n                }\n\n                <div className=\"xray_list_wrap\">\n                    {\n                        Object.keys(xRayDetail).length > 0 && xRayDetail.selectedOptions && Object.keys(xRayDetail.selectedOptions).length ?\n                            Object.keys(xRayDetail.selectedOptions).map((key, i) => {\n                                return <> {\n                                    xRayDetail.selectedOptions[key].optionItems &&\n                                        xRayDetail.selectedOptions[key].optionItems.length ?\n                                        (isEdit ? !(S_isDeleted && S_isDeleted.hasOwnProperty(key) && isDeleted[key]) : true) ?\n                                            <div className=\"xray_list\">\n                                                <div className=\"xray_name\">\n                                                    <span>{key}</span>\n                                                    {\n                                                        isEdit ? null : <Cancel onClick={() => onDelete(key)} />\n                                                    }\n                                                </div>\n                                                <div className=\"xray_detail\">\n                                                    <p>{\n                                                        xRayDetail.selectedOptions[key].optionItems.join(',')\n                                                    }</p>\n                                                </div>\n                                            </div> : null :\n                                        Object.keys(xRayDetail.selectedOptions[key]).length ?\n                                            (isEdit ? !(S_isDeleted && S_isDeleted.hasOwnProperty(key) && isDeleted[key]) : true) ?\n                                                <>\n                                                    <div className=\"xray_list\">\n                                                        <div className=\"xray_name\">\n                                                            <span>{key}</span>\n                                                        </div>\n                                                        {\n                                                            Object.keys(xRayDetail.selectedOptions[key]).map((subKey, j) => {\n                                                                return <div style={{ marginBottom: '5px' }}>\n                                                                    {\n                                                                        xRayDetail.selectedOptions[key][subKey] &&\n                                                                            xRayDetail.selectedOptions[key][subKey].optionItems &&\n                                                                            xRayDetail.selectedOptions[key][subKey].optionItems.length ?\n                                                                            <div className=\"xray_detail\">\n                                                                                <h4>{subKey}</h4>\n                                                                                <p>{\n                                                                                    xRayDetail.selectedOptions[key][subKey].optionItems.join(',')\n                                                                                }</p>\n                                                                                <div className=\"cancel-list\">\n                                                                                    {\n                                                                                        isEdit ? null : <Cancel onClick={() => onDelete(key, subKey)} />\n                                                                                    }\n                                                                                </div>\n                                                                            </div>\n                                                                            : null\n                                                                    }\n                                                                </div>\n                                                            })\n                                                        }\n                                                    </div>\n                                                </> : null\n                                            : null\n                                }\n                                </>\n                            })\n                            : null\n                    }\n                </div>\n                <div className=\"filter_value d-flex infection\">\n                    <label htmlFor=\"vvs\" className=\"filter_check\">\n                        <input\n                            type=\"checkbox\"\n                            name=\"infectionControl\"\n                            id=\"infectionControl\"\n                            checked={isInfectionChecked} onClick={handleInfectionControl}\n                            style={{ display: 'block' }}\n                        />\n                        <span className=\"lbl\" ><strong> Infection control</strong></span>\n                    </label>\n                </div>\n                <div className=\"form_wrap\">\n                    <div className=\"components textarea\">\n                        <div className=\"label\">\n                            <span style={{ display: 'inline', maxWidth: '580px', textAlign: 'left' }}>Reason for Examination (Clinical Information){isInfectionChecked ? <> and Infection Control precautions<label className=\"mandatory\">*</label></> : ''}</span>\n                        </div>\n                        <textarea value={reasonText} onChange={handleReasonText}></textarea>\n                    </div>\n                </div>\n                {/* <div>\n                    <CheckBox >Is this examination urgent?</CheckBox>\n                </div> */}\n                <div className=\"filter_value d-flex infection\">\n                    <label htmlFor=\"vvs\" className=\"filter_check\">\n                        <input type=\"checkbox\" name=\"isUrgent\" id=\"isUrgent\"\n                            checked={isChecked}\n                            onClick={onUrgent}\n                            style={{ display: 'block' }}\n                        />\n                        {/* <span className=\"checkbox\"  ></span> */}\n                        <span className=\"lbl\"><strong>Is this examination urgent?</strong></span>\n                    </label>\n                </div>\n                <div className=\"custom-inputs\">\n                    <div className=\"form_wrap\">\n                        <div className=\"components\">\n                            <input type=\"text\" className=\"inputForm\"\n                                placeholder={`Phone No.${isChecked ? '*' : ''}`}\n                                onChange={onPhoneNoChange}\n                                value={phoneNo}\n                            />\n                        </div>\n                        <div className=\"components\">\n                            <input type=\"text\" className=\"inputForm\"\n                                placeholder={`Extension No.${isChecked ? '*' : ''}`}\n                                value={extensionNo}\n                                onChange={onExtensionChange} />\n                        </div>\n                    </div>\n                </div>\n            </form>\n\n        </Modal>\n        {/* end popup */}\n    </>);\n}\nexport default XrayReviewPopup;"]},"metadata":{},"sourceType":"module"}