{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/util/todo.js\";\nimport React from 'react';\nimport { MAP_TODOS, TODO_CATEGORY, SUB_CATEGORY, TODO_NAME, TODO_ICONS, DEVICE_VIEW } from '../constants/todo';\nimport { isDrOrNp, getUserNameWithDesignation } from '../util/common';\nimport { USER_TYPE, SUB_NURSE_TYPE, DESIGNATION_TYPE, USER_DESIGNATION_TYPE } from '../constants/User';\nimport { MED_REVIEW_TODO_TYPES, PMR_PROCESS_TYPE, MED_REVIEW_NAME } from '../constants/pmr';\nimport { displayDateTime } from '../util/moment';\nimport routes from '../routes/constant';\nexport const getTodoName = (category, subcat) => {\n  let todos, todoName;\n\n  if (category === TODO_CATEGORY.PRESCRIPTION) {\n    todos = SUB_CATEGORY.PRESCRIPTION;\n  } else if (category === TODO_CATEGORY.MED_REVIEW) {\n    todos = SUB_CATEGORY.MED_REVIEW;\n  }\n\n  if (todos) {\n    Object.keys(todos).map(x => {\n      if (todos[x] === subcat) {\n        todoName = TODO_NAME[x].replace(/_/g, ' ');\n      }\n    });\n    return todoName;\n  } else return '';\n},\n      getMappedTodoKey = subcat => {\n  let name;\n  Object.keys(MAP_TODOS).map(key => {\n    if (MAP_TODOS[key].includes(subcat)) name = key;\n  });\n  return name;\n},\n      getPath = attachment => {\n  let image = attachment.find(x => !x.revision),\n      path = '';\n  if (image) path = image.path;else path = attachment[0].path;\n  return path;\n},\n      getIcons = type => {\n  let subcat = getMappedTodoKey(type);\n  if (subcat && TODO_ICONS[subcat]) return require('../assets/images/dashboard/' + TODO_ICONS[subcat]);else return ''; // return require('../assets/images/dashboard/drugs.svg')\n},\n      getDeviceView = (queryObj, authUser) => {\n  if (!queryObj || !authUser) return;\n  let {\n    subCategory,\n    viewType\n  } = queryObj;\n  if (!subCategory || !viewType) return;\n  let deviceView = (MAP_TODOS['PMR'].includes(subCategory) || MAP_TODOS['MEDS_CHECK'].includes(subCategory) || MAP_TODOS['VERBAL_ORDER'].includes(subCategory)) && isDrOrNp(authUser) ? true : false;\n\n  if (deviceView && viewType === DEVICE_VIEW['PENDING']) {\n    viewType = DEVICE_VIEW['PRIMARY'];\n  } else if (!deviceView && (viewType === DEVICE_VIEW['PRIMARY'] || viewType === DEVICE_VIEW['SECONDARY'])) {\n    viewType = DEVICE_VIEW['PENDING'];\n  }\n\n  return {\n    deviceView,\n    viewType\n  };\n},\n      getTodoRedirectUrl = (options, pageName) => {\n  let pathname,\n      searchUrl = \"\",\n      path;\n\n  if (options.todoCategory === TODO_CATEGORY.PRESCRIPTION) {\n    pathname = routes.todo.path;\n    searchUrl = `?category=${options.todoCategory}&subCategory=${options.subCategory}&viewType=1${options.orderNumber ? `&orderNumber=${options.orderNumber}` : ''}`;\n    path = pathname + searchUrl;\n  } else if (options.todoCategory === TODO_CATEGORY.MED_REVIEW) {\n    searchUrl = `?category=${options.todoCategory}&subCategory=${options.subCategory}&viewType=1${options.orderNumber ? `&orderNumber=${options.orderNumber}` : ''}`;\n\n    if (options.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1 || options.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2 || options.subCategory === SUB_CATEGORY.MED_REVIEW.PMR) {\n      pathname = routes.pmrTodo.path;\n      path = pathname + searchUrl;\n    } else {\n      pathname = routes.medReviewTodo.path;\n      path = pathname + searchUrl; // return {\n      //   pathname: pathname,\n      //   state: {\n      //     category: TODO_CATEGORY.MED_REVIEW,\n      //     subCategory: options.subCategory,\n      //     viewType: 1,\n      //     orderNumber: options.orderNumber\n      //   }\n      // }\n    }\n  }\n\n  return path;\n};\nexport const displayPmrProcess = (val, view) => {\n  if (typeof val !== 'object') return;\n  let todoType;\n  Object.keys(SUB_CATEGORY.MED_REVIEW).map(todo => {\n    if (SUB_CATEGORY.MED_REVIEW[todo] === val.type) {\n      todoType = getTodoName(TODO_CATEGORY.MED_REVIEW, val.type);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, todoType, \" \"));\n    }\n  });\n  const completedByName = getUserNameWithDesignation(val.completedBy);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, view === 'list' ? val.processType === PMR_PROCESS_TYPE.INITIATED ? `Initiated by ${completedByName}` : `Completed by ${completedByName} at\n            ${displayDateTime(val.completedAt)}` : val.processType === PMR_PROCESS_TYPE.INITIATED ? `${todoType} is Initiated by ${completedByName}` : `${todoType} is Completed by ${completedByName} at\n              ${displayDateTime(val.completedAt)}`);\n};","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/util/todo.js"],"names":["React","MAP_TODOS","TODO_CATEGORY","SUB_CATEGORY","TODO_NAME","TODO_ICONS","DEVICE_VIEW","isDrOrNp","getUserNameWithDesignation","USER_TYPE","SUB_NURSE_TYPE","DESIGNATION_TYPE","USER_DESIGNATION_TYPE","MED_REVIEW_TODO_TYPES","PMR_PROCESS_TYPE","MED_REVIEW_NAME","displayDateTime","routes","getTodoName","category","subcat","todos","todoName","PRESCRIPTION","MED_REVIEW","Object","keys","map","x","replace","getMappedTodoKey","name","key","includes","getPath","attachment","image","find","revision","path","getIcons","type","require","getDeviceView","queryObj","authUser","subCategory","viewType","deviceView","getTodoRedirectUrl","options","pageName","pathname","searchUrl","todoCategory","todo","orderNumber","NURSE_REVIEW_1","NURSE_REVIEW_2","PMR","pmrTodo","medReviewTodo","displayPmrProcess","val","view","todoType","textTransform","completedByName","completedBy","processType","INITIATED","completedAt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  MAP_TODOS,\n  TODO_CATEGORY,\n  SUB_CATEGORY,\n  TODO_NAME,\n  TODO_ICONS,\n  DEVICE_VIEW,\n} from '../constants/todo';\nimport { isDrOrNp, getUserNameWithDesignation } from '../util/common';\nimport {\n  USER_TYPE,\n  SUB_NURSE_TYPE,\n  DESIGNATION_TYPE,\n  USER_DESIGNATION_TYPE,\n} from '../constants/User';\nimport {\n  MED_REVIEW_TODO_TYPES,\n  PMR_PROCESS_TYPE,\n  MED_REVIEW_NAME,\n} from '../constants/pmr';\nimport { displayDateTime } from '../util/moment';\nimport routes from '../routes/constant'\n\nexport const getTodoName = (category, subcat) => {\n  let todos, todoName;\n  if (category === TODO_CATEGORY.PRESCRIPTION) {\n    todos = SUB_CATEGORY.PRESCRIPTION;\n  } else if (category === TODO_CATEGORY.MED_REVIEW) {\n    todos = SUB_CATEGORY.MED_REVIEW;\n  }\n  if (todos) {\n    Object.keys(todos).map((x) => {\n      if (todos[x] === subcat) {\n        todoName = TODO_NAME[x].replace(/_/g, ' ');\n      }\n    });\n    return todoName\n  } else return '';\n},\n  getMappedTodoKey = (subcat) => {\n    let name;\n    Object.keys(MAP_TODOS).map((key) => {\n      if (MAP_TODOS[key].includes(subcat)) name = key;\n    });\n    return name;\n  },\n  getPath = (attachment) => {\n    let image = attachment.find((x) => !x.revision),\n      path = '';\n    if (image) path = image.path;\n    else path = attachment[0].path;\n    return path;\n  },\n  getIcons = (type) => {\n    let subcat = getMappedTodoKey(type);\n    if (subcat && TODO_ICONS[subcat])\n      return require('../assets/images/dashboard/' + TODO_ICONS[subcat]);\n    else return '';\n    // return require('../assets/images/dashboard/drugs.svg')\n  },\n  getDeviceView = (queryObj, authUser) => {\n    if (!queryObj || !authUser) return;\n    let { subCategory, viewType } = queryObj;\n    if (!subCategory || !viewType) return;\n    let deviceView =\n      (MAP_TODOS['PMR'].includes(subCategory) ||\n        MAP_TODOS['MEDS_CHECK'].includes(subCategory) ||\n        MAP_TODOS['VERBAL_ORDER'].includes(subCategory)) &&\n        isDrOrNp(authUser)\n        ? true\n        : false;\n    if (deviceView && viewType === DEVICE_VIEW['PENDING']) {\n      viewType = DEVICE_VIEW['PRIMARY'];\n    } else if (\n      !deviceView &&\n      (viewType === DEVICE_VIEW['PRIMARY'] ||\n        viewType === DEVICE_VIEW['SECONDARY'])\n    ) {\n      viewType = DEVICE_VIEW['PENDING'];\n    }\n    return { deviceView, viewType };\n  },\n  getTodoRedirectUrl = (options, pageName) => {\n    let pathname, searchUrl = \"\", path\n    if (options.todoCategory === TODO_CATEGORY.PRESCRIPTION) {\n      pathname = routes.todo.path;\n      searchUrl = `?category=${options.todoCategory}&subCategory=${options.subCategory}&viewType=1${options.orderNumber ? `&orderNumber=${options.orderNumber}` : ''}`;\n      path = pathname + searchUrl\n    } else if (options.todoCategory === TODO_CATEGORY.MED_REVIEW) {\n      searchUrl = `?category=${options.todoCategory}&subCategory=${options.subCategory}&viewType=1${options.orderNumber ? `&orderNumber=${options.orderNumber}` : ''}`;\n\n      if (options.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1 ||\n        options.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2 ||\n        options.subCategory === SUB_CATEGORY.MED_REVIEW.PMR) {\n        pathname = routes.pmrTodo.path;\n        path = pathname + searchUrl\n      } else {\n        pathname = routes.medReviewTodo.path;\n        path = pathname + searchUrl\n        // return {\n        //   pathname: pathname,\n        //   state: {\n        //     category: TODO_CATEGORY.MED_REVIEW,\n        //     subCategory: options.subCategory,\n        //     viewType: 1,\n        //     orderNumber: options.orderNumber\n        //   }\n        // }\n      }\n    }\n\n    return path\n  }\n\nexport const displayPmrProcess = (val, view) => {\n  if (typeof val !== 'object') return;\n  let todoType;\n  Object.keys(SUB_CATEGORY.MED_REVIEW).map((todo) => {\n    if (SUB_CATEGORY.MED_REVIEW[todo] === val.type) {\n      todoType = getTodoName(TODO_CATEGORY.MED_REVIEW, val.type)\n      return (<div>\n        <span style={{ textTransform: 'capitalize' }}>{todoType} </span>\n      </div>\n      );\n    }\n  });\n  const completedByName = getUserNameWithDesignation(val.completedBy)\n  return (\n    <div>\n      {view === 'list'\n        ? val.processType === PMR_PROCESS_TYPE.INITIATED\n          ? `Initiated by ${completedByName}`\n          : `Completed by ${completedByName} at\n            ${displayDateTime(val.completedAt)}`\n        : val.processType === PMR_PROCESS_TYPE.INITIATED\n          ? `${todoType} is Initiated by ${completedByName}`\n          : `${todoType} is Completed by ${completedByName} at\n              ${displayDateTime(val.completedAt)}`}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}