{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/UserAuth/Login/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { createForm } from 'rc-form';\nimport { connect } from 'react-redux';\nimport axios from '../../../services/api/config';\nimport { login } from '../../../services/api/routes/auth';\nimport LoginUI from './login';\nimport { prepareUserData } from '../../../services/api/services/Auth';\nimport { encryptData } from '../../../util/Crypto';\nimport { setUserData, setToken, setDefaultPassword } from '../../../appRedux/actions/Auth';\nimport { getUserDetail, initDB } from '../../../util/DBService';\nimport routes from '../../../routes/constant';\nimport { getUserBaseRedirect, clearLocalStorage, displayCatchErrorMsg } from '../../../util/common';\nimport { SET_USER_TOKEN, SET_USER_DATA, SET_USER_DEFAULT_PASSWORD } from '../../../appRedux/ActionTypes';\nimport { Toast } from '../../../components/common/index';\nconst loginAttempStr = 'noOfLoginAttemps';\nconst diableTime = 10;\n\nfunction Login(props) {\n  const [isDisableLogin, setIsDisable] = useState(false);\n  const [show, setShow] = useState(false);\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    initDB();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields((error, value) => {\n      if (error) {\n        return;\n      }\n\n      handleSignIn(value);\n    });\n  };\n\n  const handleDefaultPassword = (user, data) => {\n    let payloadData = {\n      userId: user._id,\n      defaultPassword: user.defaultPassword,\n      token: \"JWT \" + data.data.token.jwt\n    };\n\n    try {\n      props.setDefaultPassword(SET_USER_DEFAULT_PASSWORD, payloadData, function () {\n        console.log('here');\n        props.history.push({\n          pathname: routes.updateDefaultPassword.path\n        });\n      });\n    } catch (err) {\n      console.log(\"TCL: handleDefaultPassword -> err\", err);\n    }\n  };\n\n  const setRedirectPage = user => {\n    if (user.excludeOTPVerification) {\n      props.history.push({\n        pathname: getUserBaseRedirect(user)\n      });\n    } else {\n      props.history.push({\n        pathname: routes.verifyOtp.path\n      });\n    }\n  };\n\n  const handleForgotPassword = e => {\n    e.preventDefault();\n    props.history.push({\n      pathname: routes.forgotPassword.path\n    });\n  };\n\n  const startTimer = () => {\n    let timeLeft = diableTime;\n    let timerid = setInterval(countdown, 1000);\n\n    function countdown() {\n      if (timeLeft == 0) {\n        clearTimeout(timerid);\n        setIsDisable(false);\n        sessionStorage.setItem(loginAttempStr, '');\n        setCount(0);\n      } else {\n        setCount(timeLeft);\n        timeLeft--;\n      }\n    }\n  };\n\n  const canLogin = () => {\n    let noOfLoginAttemps = parseInt(sessionStorage.getItem(loginAttempStr));\n\n    if (noOfLoginAttemps) {\n      if (noOfLoginAttemps < 2) {\n        noOfLoginAttemps += 1;\n      } else {\n        startTimer();\n      }\n    } else {\n      noOfLoginAttemps = 1;\n    }\n\n    sessionStorage.setItem(loginAttempStr, noOfLoginAttemps);\n  };\n\n  async function handleSignIn(value) {\n    let userDetail = await getUserDetail({\n      email: value.email\n    });\n    let tempData = {\n      username: value.email,\n      password: value.password,\n      excludeOTPVerification: userDetail.excludeOTPVerification\n    };\n    clearLocalStorage();\n    setIsDisable(true);\n    axios({ ...login,\n      data: tempData\n    }).then(({\n      data\n    }) => {\n      if (data.code == 'OK') {\n        const user = prepareUserData(data.data.user);\n        localStorage.setItem('token', JSON.stringify(data.data.token.jwt));\n        localStorage.setItem('refreshToken', JSON.stringify(data.data.refreshToken.jwt));\n        axios.defaults.headers.common[\"Authorization\"] = \"JWT \" + data.data.token.jwt;\n        props.setToken(data.data.token.jwt);\n        localStorage.setItem('otpVerified', JSON.stringify(false));\n        localStorage.setItem('excludeOTPVerification', JSON.stringify(user.excludeOTPVerification));\n\n        if (user.defaultPassword) {\n          handleDefaultPassword(user, data);\n        } else {\n          localStorage.setItem('user', encryptData(user));\n\n          if (user && user.homeId && user.homeId.homeIdentifier) {\n            localStorage.setItem('tenantId', user.homeId.homeIdentifier);\n            localStorage.setItem('homeId', user.homeId._id);\n            axios.defaults.headers.common['homeId'] = user.homeId._id;\n          }\n        }\n\n        if (!user.defaultPassword) {\n          props.setUserData(SET_USER_DATA, user, function () {\n            setRedirectPage(user);\n          });\n        }\n      }\n\n      props.form.resetFields();\n      setIsDisable(false);\n    }).catch(err => {\n      if (err && err.response && err.response.status) {\n        if (err.response.status === 403) {\n          canLogin();\n        }\n      }\n\n      displayCatchErrorMsg(err);\n      setIsDisable(false);\n    });\n  }\n\n  const passwordVisible = () => {\n    setShow(show => !show);\n  };\n\n  return /*#__PURE__*/React.createElement(LoginUI, {\n    form: props.form,\n    onSubmit: handleSubmit,\n    onForgetPassword: handleForgotPassword,\n    show: show,\n    passwordVisible: passwordVisible,\n    count: count,\n    isDisableLogin: isDisableLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  });\n}\n\nconst mapStateToProps = ({\n  auth,\n  resident\n}) => {\n  console.log(\"mapStateToProps -> resident\", resident);\n  const {\n    authUser\n  } = auth;\n  return {\n    authUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDefaultPassword,\n  setToken,\n  setUserData\n})(createForm()(Login));","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/UserAuth/Login/index.js"],"names":["React","useState","useEffect","createForm","connect","axios","login","LoginUI","prepareUserData","encryptData","setUserData","setToken","setDefaultPassword","getUserDetail","initDB","routes","getUserBaseRedirect","clearLocalStorage","displayCatchErrorMsg","SET_USER_TOKEN","SET_USER_DATA","SET_USER_DEFAULT_PASSWORD","Toast","loginAttempStr","diableTime","Login","props","isDisableLogin","setIsDisable","show","setShow","count","setCount","handleSubmit","e","preventDefault","form","validateFields","error","value","handleSignIn","handleDefaultPassword","user","data","payloadData","userId","_id","defaultPassword","token","jwt","console","log","history","push","pathname","updateDefaultPassword","path","err","setRedirectPage","excludeOTPVerification","verifyOtp","handleForgotPassword","forgotPassword","startTimer","timeLeft","timerid","setInterval","countdown","clearTimeout","sessionStorage","setItem","canLogin","noOfLoginAttemps","parseInt","getItem","userDetail","email","tempData","username","password","then","code","localStorage","JSON","stringify","refreshToken","defaults","headers","common","homeId","homeIdentifier","resetFields","catch","response","status","passwordVisible","mapStateToProps","auth","resident","authUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { createForm } from 'rc-form';\nimport { connect } from 'react-redux'\nimport axios from '../../../services/api/config'\nimport { login } from '../../../services/api/routes/auth'\nimport LoginUI from './login'\nimport { prepareUserData } from '../../../services/api/services/Auth'\nimport { encryptData } from '../../../util/Crypto'\nimport { setUserData, setToken, setDefaultPassword } from '../../../appRedux/actions/Auth'\nimport { getUserDetail, initDB } from '../../../util/DBService'\nimport routes from '../../../routes/constant'\nimport { getUserBaseRedirect, clearLocalStorage, displayCatchErrorMsg } from '../../../util/common';\nimport { SET_USER_TOKEN, SET_USER_DATA, SET_USER_DEFAULT_PASSWORD } from '../../../appRedux/ActionTypes';\nimport { Toast } from '../../../components/common/index'\n\nconst loginAttempStr = 'noOfLoginAttemps'\nconst diableTime = 10\nfunction Login(props) {\n    const [isDisableLogin, setIsDisable] = useState(false)\n    const [show, setShow] = useState(false)\n    const [count, setCount] = useState(0)\n\n    useEffect(() => {\n        initDB()\n    }, [])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        props.form.validateFields((error, value) => {\n            if (error) {\n                return\n            }\n            handleSignIn(value)\n        });\n    }\n\n    const handleDefaultPassword = (user, data) => {\n        let payloadData = {\n            userId: user._id,\n            defaultPassword: user.defaultPassword,\n            token: \"JWT \" + data.data.token.jwt\n        }\n        try {\n            props.setDefaultPassword(SET_USER_DEFAULT_PASSWORD, payloadData, function () {\n                console.log('here')\n                props.history.push({\n                    pathname: routes.updateDefaultPassword.path\n                })\n            })\n        } catch (err) {\n            console.log(\"TCL: handleDefaultPassword -> err\", err)\n        }\n\n    }\n\n    const setRedirectPage = (user) => {\n\n        if (user.excludeOTPVerification) {\n            props.history.push({\n                pathname: getUserBaseRedirect(user)\n            })\n        }\n        else {\n            props.history.push({\n                pathname: routes.verifyOtp.path\n            })\n        }\n    }\n\n    const handleForgotPassword = (e) => {\n        e.preventDefault()\n        props.history.push({\n            pathname: routes.forgotPassword.path\n        })\n    }\n    const startTimer = () => {\n        let timeLeft = diableTime;\n        let timerid = setInterval(countdown, 1000);\n        function countdown() {\n            if (timeLeft == 0) {\n                clearTimeout(timerid);\n                setIsDisable(false)\n                sessionStorage.setItem(loginAttempStr, '')\n                setCount(0)\n            } else {\n                setCount(timeLeft)\n                timeLeft--;\n            }\n        }\n    };\n    const canLogin = () => {\n        let noOfLoginAttemps = parseInt(sessionStorage.getItem(loginAttempStr))\n        if (noOfLoginAttemps) {\n            if (noOfLoginAttemps < 2) {\n                noOfLoginAttemps += 1\n            }\n            else {\n                startTimer()\n            }\n        }\n        else {\n            noOfLoginAttemps = 1\n        }\n        sessionStorage.setItem(loginAttempStr, noOfLoginAttemps)\n    }\n    async function handleSignIn(value) {\n        let userDetail = await getUserDetail({ email: value.email })\n        let tempData = {\n            username: value.email,\n            password: value.password,\n            excludeOTPVerification: userDetail.excludeOTPVerification\n        }\n        clearLocalStorage()\n        setIsDisable(true)\n\n        axios({ ...login, data: tempData }).then(({ data }) => {\n            if (data.code == 'OK') {\n\n                const user = prepareUserData(data.data.user)\n\n                localStorage.setItem('token', JSON.stringify(data.data.token.jwt))\n                localStorage.setItem('refreshToken', JSON.stringify(data.data.refreshToken.jwt))\n\n                axios.defaults.headers.common[\"Authorization\"] = \"JWT \" + data.data.token.jwt;\n\n                props.setToken(data.data.token.jwt)\n                localStorage.setItem('otpVerified', JSON.stringify(false))\n                localStorage.setItem('excludeOTPVerification', JSON.stringify(user.excludeOTPVerification))\n                if (user.defaultPassword) {\n                    handleDefaultPassword(user, data)\n                }\n                else {\n                    localStorage.setItem('user', encryptData(user))\n\n                    if (user && user.homeId && user.homeId.homeIdentifier) {\n                        localStorage.setItem('tenantId', user.homeId.homeIdentifier)\n                        localStorage.setItem('homeId', user.homeId._id)\n\n                        axios.defaults.headers.common['homeId'] = user.homeId._id\n                    }\n                }\n\n                if (!user.defaultPassword) {\n                    props.setUserData(SET_USER_DATA, user, function () {\n                        setRedirectPage(user)\n                    })\n                }\n            }\n            props.form.resetFields()\n            setIsDisable(false)\n        }).catch(err => {\n            if (err && err.response && err.response.status) {\n                if (err.response.status === 403) {\n                    canLogin()\n                }\n            }\n            displayCatchErrorMsg(err)\n            setIsDisable(false)\n        })\n    }\n\n    const passwordVisible = () => {\n        setShow(show => !show)\n    }\n    return (<LoginUI form={props.form} onSubmit={handleSubmit}\n        onForgetPassword={handleForgotPassword}\n        show={show}\n        passwordVisible={passwordVisible}\n        count={count}\n        isDisableLogin={isDisableLogin} />)\n}\nconst mapStateToProps = ({ auth, resident }) => {\n    console.log(\"mapStateToProps -> resident\", resident)\n    const { authUser } = auth\n    return {\n        authUser\n    }\n}\n\nexport default connect(mapStateToProps, { setDefaultPassword, setToken, setUserData })(createForm()(Login));"]},"metadata":{},"sourceType":"module"}