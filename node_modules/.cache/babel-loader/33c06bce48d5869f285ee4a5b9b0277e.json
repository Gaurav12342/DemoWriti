{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/ResidentDetail.js\";\nimport React, { useMemo, useCallback, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PersistentTabs from '../../../components/common/Tab/PersistentTabs';\nimport UserResidentDetail from './UserResidentDetail';\nimport Image from '../../../components/common/Image';\nimport { Cancel } from '../../../assets/images/resident-detail/index';\nimport { closeResident, openResident } from '../../../appRedux/actions/Resident';\nimport { getLFName } from '../../../util/common';\n\nconst ResidentDetail = () => {\n  const openedResidents = useSelector(state => state.resident.openedResidents);\n  const currentResidentId = useSelector(state => state.resident.currentResidentId);\n  const residentList = useMemo(() => openedResidents ? Object.values(openedResidents) : [], [openedResidents]);\n  const activeTabIndex = useMemo(() => residentList ? residentList.findIndex(r => r._id == currentResidentId) : undefined, [currentResidentId]);\n  const handleCloseResident = useCallback((e, id) => {\n    e.stopPropagation();\n    closeResident({\n      id\n    });\n  }, []);\n\n  const handleChangeTab = index => {\n    if (openedResidents && Object.keys(openedResidents)) {\n      let resi = null;\n      resi = residentList[index];\n      if (resi) openResident(resi);\n    }\n  };\n\n  const renderHeader = useCallback(({\n    item,\n    isActive\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resi_d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, isActive && (item === null || item === void 0 ? void 0 : item.image) ? /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image,\n    alt: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }) : getLFName(item), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, item.mergeLFName)), isActive && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resi_c\",\n    onClick: e => handleCloseResident(e, item._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Cancel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }))), []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"residents_detail_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PersistentTabs, {\n    key: '1st',\n    data: residentList,\n    activeTabIndex: activeTabIndex,\n    titleKey: \"mergeLFName\",\n    renderHeader: renderHeader,\n    wrapperClass: 'resi_sub_tab',\n    onSelect: handleChangeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, residentList.map(d => /*#__PURE__*/React.createElement(UserResidentDetail, {\n    residentDetail: d,\n    key: d.mergeLFName,\n    userName: d.mergeLFName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default ResidentDetail;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/ResidentDetail.js"],"names":["React","useMemo","useCallback","useEffect","useSelector","PersistentTabs","UserResidentDetail","Image","Cancel","closeResident","openResident","getLFName","ResidentDetail","openedResidents","state","resident","currentResidentId","residentList","Object","values","activeTabIndex","findIndex","r","_id","undefined","handleCloseResident","e","id","stopPropagation","handleChangeTab","index","keys","resi","renderHeader","item","isActive","image","mergeLFName","map","d"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PersistentTabs from '../../../components/common/Tab/PersistentTabs';\nimport UserResidentDetail from './UserResidentDetail';\nimport Image from '../../../components/common/Image';\nimport { Cancel } from '../../../assets/images/resident-detail/index';\nimport {\n  closeResident,\n  openResident,\n} from '../../../appRedux/actions/Resident';\nimport { getLFName } from '../../../util/common';\n\nconst ResidentDetail = () => {\n  const openedResidents = useSelector(\n    (state) => state.resident.openedResidents\n  );\n  const currentResidentId = useSelector(\n    (state) => state.resident.currentResidentId\n  );\n\n  const residentList = useMemo(\n    () => (openedResidents ? Object.values(openedResidents) : []),\n    [openedResidents]\n  );\n  const activeTabIndex = useMemo(\n    () =>\n      residentList\n        ? residentList.findIndex((r) => r._id == currentResidentId)\n        : undefined,\n    [currentResidentId]\n  );\n\n  const handleCloseResident = useCallback((e, id) => {\n    e.stopPropagation();\n    closeResident({ id });\n  }, []);\n\n  const handleChangeTab = (index) => {\n    if (openedResidents && Object.keys(openedResidents)) {\n      let resi = null;\n      resi = residentList[index];\n      if (resi) openResident(resi);\n    }\n  };\n\n  const renderHeader = useCallback(\n    ({ item, isActive }) => (\n      (\n        <>\n          <div className='resi_d'>\n            {isActive && item?.image ? (\n              <img src={item.image} alt='image' />\n            ) : (\n              getLFName(item)\n            )}\n            <h3>{item.mergeLFName}</h3>\n          </div>\n          {isActive && (\n            <div\n              className='resi_c'\n              onClick={(e) => handleCloseResident(e, item._id)}\n            >\n              <Cancel />\n            </div>\n          )}\n        </>\n      )\n    ),\n    []\n  );\n\n  return (\n    <div className='residents_detail_container'>\n      <PersistentTabs\n        key={'1st'}\n        data={residentList}\n        activeTabIndex={activeTabIndex}\n        titleKey='mergeLFName'\n        renderHeader={renderHeader}\n        wrapperClass={'resi_sub_tab'}\n        onSelect={handleChangeTab}\n      >\n        {residentList.map((d) => (\n          <UserResidentDetail\n            residentDetail={d}\n            key={d.mergeLFName}\n            userName={d.mergeLFName}\n          />\n        ))}\n      </PersistentTabs>\n    </div>\n  );\n};\n\nexport default ResidentDetail;\n"]},"metadata":{},"sourceType":"module"}