{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/PCC/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport PageHead from './components/PageHead';\nimport axios from '../../services/api/services/common';\nimport { displayDateTime } from '../../util/moment';\nimport { View } from '../../assets/images/pmr/index';\nimport { Transfer } from '../../assets/images';\nimport { getPccList, syncPcc } from '../../services/api/routes/pcc';\nimport Table from '../../components/common/Table/index';\nimport { Toast, Spin } from '../../components/common';\nimport MappingModal from './components/MappingModal';\nimport DetailViewModal from './components/DetailModal';\n\nconst _ = require('lodash');\n\nconst EHR_MAPPED_AS = {\n  OLD: 1,\n  CREATED_NEW: 2\n};\n\nconst Pcc = props => {\n  const authUser = useSelector(state => state.auth.authUser);\n  const [loading, setLoading] = useState(false);\n  const [detailLoader, setDetailLoader] = useState(false);\n  const [syncLoader, setSyncLoader] = useState(false);\n  const [filter, setFilter] = useState({\n    page: 1,\n    limit: 10,\n    fields: [],\n    find: {},\n    populate: [{\n      mappedWith: []\n    }]\n  });\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [visibleMap, setVisibleMap] = useState(false);\n  const [record, setRecord] = useState(null);\n  const [visibleDetail, setVisibleDetail] = useState(false);\n  useEffect(() => {\n    fetch();\n  }, [filter]);\n\n  const fetch = async () => {\n    if (filter.find && filter.find.facId) setDetailLoader(true);else setLoading(true);\n    let res = await axios({ ...getPccList,\n      data: {\n        query: filter\n      }\n    });\n\n    if (res) {\n      if (res.code === 'OK') {\n        if (filter.find && filter.find.facId) {\n          let homeData = null,\n              homeAreaData = [];\n          res.data.data.map(obj => {\n            if (obj.floorId === null) {\n              homeData = obj;\n            } else {\n              homeAreaData.push(obj);\n            }\n          });\n          setRecord({\n            homeData,\n            homeAreaData\n          });\n          setVisibleDetail(true);\n        } else {\n          setData(res.data.data);\n          setTotal(res.data.count);\n        }\n      } else {\n        Toast.error(res.message);\n      }\n    }\n\n    setLoading(false);\n    filter.find && filter.find.facId ? setDetailLoader(false) : setLoading(false);\n  };\n\n  const handleSync = () => {\n    setSyncLoader(true);\n    axios({ ...syncPcc\n    }).then(data => {\n      if (data.code === 'OK') {\n        Toast.success(data.message);\n        setSyncLoader(false);\n      } else {\n        setSyncLoader(false);\n        Toast.error(data.message);\n      }\n    }).catch(err => {\n      setSyncLoader(false);\n      Toast.error(data.message);\n    });\n  };\n\n  const handleTableChange = (pagination, filter, sorter) => {\n    let tempFilter = { ...filter,\n      page: pagination.current,\n      limit: pagination.pageSize\n    };\n    setFilter(tempFilter);\n  };\n\n  const onShowSizeChange = size => {\n    if (size) {\n      setFilter(prevFilter => ({ ...prevFilter,\n        limit: size,\n        page: 1\n      }));\n    }\n  };\n\n  const getColumns = () => [{\n    title: 'Sr.No',\n    keyword: 'index',\n    dataIndex: 'index',\n    render: (text, record, index) => (filter.page - 1) * filter.limit + (index + 1)\n  }, {\n    title: \"Facility Name\",\n    dataIndex: \"facilityName\",\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: \"capitalize\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, text || \"-\")\n  }, {\n    title: \"Phone\",\n    dataIndex: \"phone\",\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: \"capitalize\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, text || \"-\")\n  }, {\n    title: \"Facility Id\",\n    dataIndex: \"facId\",\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: \"capitalize\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, text || \"-\")\n  }, {\n    title: \"Activation Date\",\n    dataIndex: \"mappedOn\",\n    render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, text ? displayDateTime(text) : '-'), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, record.mappedAs ? EHR_MAPPED_AS.CREATED_NEW === record.mappedAs ? '  New Added' : EHR_MAPPED_AS.OLD ? ` - Mapped With ${record.mappedWith ? record.mappedWith.name : ''} ` : '' : ''))\n  }, {\n    title: 'Action',\n    showRefresh: true,\n    render: (text, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, detailLoader ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Spin, {\n      spinning: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => handleDetailView(true, record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    }, \"View\")), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => handleMapping(true, record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Transfer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, \"Mapping\")))\n  }];\n\n  const handleMapping = (visible, record, str) => {\n    setVisibleMap(visible);\n    setRecord(record);\n    if (str === 'ok') fetch();\n  };\n\n  const handleDetailView = (visible, record) => {\n    if (visible) {\n      setFilter({ ...filter,\n        find: { ...filter.find,\n          facId: record.facId\n        }\n      });\n    } else {\n      let obj = { ...filter\n      };\n      delete obj.find.facId;\n      setFilter(obj);\n      setRecord(record);\n      setVisibleDetail(visible);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageHead, {\n    total: total,\n    onSync: handleSync,\n    syncLoader: syncLoader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    columns: getColumns(),\n    datasource: data,\n    loading: loading,\n    onChange: handleTableChange,\n    pagination: {\n      current: filter.page,\n      pageSize: filter.limit,\n      total: total,\n      showSizeChanger: true,\n      onShowSizeChange: onShowSizeChange\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }))), visibleMap ? /*#__PURE__*/React.createElement(MappingModal, {\n    visible: visibleMap,\n    onCancel: () => handleMapping(false, null),\n    onOk: () => handleMapping(false, null, 'ok'),\n    detail: record,\n    authUser: authUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }) : null, visibleDetail ? /*#__PURE__*/React.createElement(DetailViewModal, {\n    visible: visibleDetail,\n    onCancel: () => handleDetailView(false, null),\n    detail: record,\n    authUser: authUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }) : null);\n};\n\nexport default Pcc;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/PCC/index.js"],"names":["React","useState","useEffect","useSelector","PageHead","axios","displayDateTime","View","Transfer","getPccList","syncPcc","Table","Toast","Spin","MappingModal","DetailViewModal","_","require","EHR_MAPPED_AS","OLD","CREATED_NEW","Pcc","props","authUser","state","auth","loading","setLoading","detailLoader","setDetailLoader","syncLoader","setSyncLoader","filter","setFilter","page","limit","fields","find","populate","mappedWith","data","setData","total","setTotal","visibleMap","setVisibleMap","record","setRecord","visibleDetail","setVisibleDetail","fetch","facId","res","query","code","homeData","homeAreaData","map","obj","floorId","push","count","error","message","handleSync","then","success","catch","err","handleTableChange","pagination","sorter","tempFilter","current","pageSize","onShowSizeChange","size","prevFilter","getColumns","title","keyword","dataIndex","render","text","index","textTransform","mappedAs","name","showRefresh","handleDetailView","handleMapping","visible","str","showSizeChanger"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport PageHead from './components/PageHead';\nimport axios from '../../services/api/services/common';\nimport { displayDateTime } from '../../util/moment';\nimport { View } from '../../assets/images/pmr/index';\nimport { Transfer } from '../../assets/images';\nimport {\n    getPccList,\n    syncPcc\n} from '../../services/api/routes/pcc';\nimport Table from '../../components/common/Table/index';\nimport { Toast, Spin } from '../../components/common';\nimport MappingModal from './components/MappingModal'\nimport DetailViewModal from './components/DetailModal'\nconst _ = require('lodash');\n\nconst EHR_MAPPED_AS = {\n    OLD: 1,\n    CREATED_NEW: 2\n}\n\nconst Pcc = (props) => {\n    const authUser = useSelector(state => state.auth.authUser)\n    const [loading, setLoading] = useState(false);\n    const [detailLoader, setDetailLoader] = useState(false);\n    const [syncLoader, setSyncLoader] = useState(false);\n    const [filter, setFilter] = useState({\n        page: 1,\n        limit: 10,\n        fields: [],\n        find: {},\n        populate: [{ mappedWith: [] }]\n    });\n    const [data, setData] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [visibleMap, setVisibleMap] = useState(false);\n    const [record, setRecord] = useState(null);\n    const [visibleDetail, setVisibleDetail] = useState(false);\n\n    useEffect(() => {\n        fetch();\n    }, [filter]);\n\n    const fetch = async () => {\n        if (filter.find && filter.find.facId)\n            setDetailLoader(true)\n        else setLoading(true);\n        let res = await axios({ ...getPccList, data: { query: filter } })\n        if (res) {\n            if (res.code === 'OK') {\n                if (filter.find && filter.find.facId) {\n                    let homeData = null, homeAreaData = []\n                    res.data.data.map(obj => {\n                        if (obj.floorId === null) {\n                            homeData = obj\n                        }\n                        else {\n                            homeAreaData.push(obj)\n                        }\n                    })\n                    setRecord({ homeData, homeAreaData })\n                    setVisibleDetail(true)\n                } else {\n                    setData(res.data.data);\n                    setTotal(res.data.count);\n                }\n            } else {\n                Toast.error(res.message)\n            }\n        }\n        setLoading(false);\n        filter.find && filter.find.facId ? setDetailLoader(false) : setLoading(false);\n    };\n\n    const handleSync = () => {\n        setSyncLoader(true);\n        axios({ ...syncPcc })\n            .then((data) => {\n                if (data.code === 'OK') {\n                    Toast.success(data.message)\n                    setSyncLoader(false);\n                } else {\n                    setSyncLoader(false);\n                    Toast.error(data.message)\n                }\n            })\n            .catch((err) => {\n                setSyncLoader(false);\n                Toast.error(data.message)\n            });\n    };\n    const handleTableChange = (pagination, filter, sorter) => {\n        let tempFilter = {\n            ...filter,\n            page: pagination.current,\n            limit: pagination.pageSize,\n        };\n        setFilter(tempFilter);\n    };\n\n    const onShowSizeChange = (size) => {\n        if (size) {\n            setFilter((prevFilter) => ({ ...prevFilter, limit: size, page: 1 }));\n        }\n    };\n\n\n    const getColumns = () => [\n        {\n            title: 'Sr.No',\n            keyword: 'index',\n            dataIndex: 'index',\n            render: (text, record, index) =>\n                (filter.page - 1) * filter.limit + (index + 1),\n        },\n        {\n            title: \"Facility Name\",\n            dataIndex: \"facilityName\",\n            render: text => (\n                <span style={{ textTransform: \"capitalize\" }}>{text || \"-\"}</span>\n            )\n        },\n        {\n            title: \"Phone\",\n            dataIndex: \"phone\",\n            render: text => (\n                <span style={{ textTransform: \"capitalize\" }}>{text || \"-\"}</span>\n            )\n        },\n        {\n            title: \"Facility Id\",\n            dataIndex: \"facId\",\n            render: text => (\n                <span style={{ textTransform: \"capitalize\" }}>{text || \"-\"}</span>\n            )\n        },\n        {\n            title: \"Activation Date\",\n            dataIndex: \"mappedOn\",\n            render: (text, record) => (\n                <span>\n                    <span>{text ? displayDateTime(text) : '-'}</span>\n                    <span>{record.mappedAs ? EHR_MAPPED_AS.CREATED_NEW === record.mappedAs ? '  New Added' :\n                        EHR_MAPPED_AS.OLD ? ` - Mapped With ${record.mappedWith ? record.mappedWith.name : ''} ` : '' : ''}</span>\n                </span>\n            )\n        },\n        {\n            title: 'Action',\n            showRefresh: true,\n            render: (text, record) => (\n                <div className=\"actions\">\n                    {\n                        detailLoader ?\n                            <div>\n                                <Spin spinning={true} />\n                            </div> :\n                            <div onClick={() => handleDetailView(true, record)}>\n                                <View />\n                                <p>View</p>\n                            </div>\n                    }\n                    <div onClick={() => handleMapping(true, record)}>\n                        <Transfer />\n                        <p>Mapping</p>\n                    </div>\n                </div>\n            ),\n        },\n    ];\n\n    const handleMapping = (visible, record, str) => {\n        setVisibleMap(visible);\n        setRecord(record);\n        if (str === 'ok')\n            fetch()\n    };\n\n    const handleDetailView = (visible, record) => {\n        if (visible) {\n            setFilter({\n                ...filter,\n                find: {\n                    ...filter.find,\n                    facId: record.facId\n                }\n            })\n        } else {\n            let obj = { ...filter }\n            delete obj.find.facId\n            setFilter(obj)\n            setRecord(record)\n            setVisibleDetail(visible)\n        }\n    }\n\n    return (\n        <>\n            <div className='pmr_wrap'>\n                <div className='container'>\n                    <PageHead total={total} onSync={handleSync} syncLoader={syncLoader} />\n                    <Table\n                        columns={getColumns()}\n                        datasource={data}\n                        loading={loading}\n                        onChange={handleTableChange}\n                        pagination={{\n                            current: filter.page,\n                            pageSize: filter.limit,\n                            total: total,\n                            showSizeChanger: true,\n                            onShowSizeChange: onShowSizeChange,\n                        }}\n                    />\n                </div>\n            </div>\n            {\n                visibleMap ?\n                    <MappingModal\n                        visible={visibleMap}\n                        onCancel={() => handleMapping(false, null)}\n                        onOk={() => handleMapping(false, null, 'ok')}\n                        detail={record}\n                        authUser={authUser}\n                    />\n                    : null\n            }\n            {\n                visibleDetail ?\n                    <DetailViewModal\n                        visible={visibleDetail}\n                        onCancel={() => handleDetailView(false, null)}\n                        detail={record}\n                        authUser={authUser}\n                    /> : null\n            }\n        </>\n    );\n};\n\nexport default Pcc;\n"]},"metadata":{},"sourceType":"module"}