{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Xray/List/STLResponse.js\";\nimport React from 'react';\nimport { IMAGING_RESULT_STATUS } from '../../../constants/xray';\nimport { displayDate } from '../../../util/moment';\nimport ReactHtmlParser from 'react-html-parser';\n\nfunction STLResponse(props) {\n  let {\n    data\n  } = props;\n  console.log('response data', props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, data.xRayResult.length > 0 ? /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"my-fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    className: \"custom-legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, \"Response\"), data.xRayResult.map(resObj => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"result_table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 49\n    }\n  }, \"Filler Order Number:\"), resObj.order ? resObj.order.fillerOrderNum : ''), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 49\n    }\n  }, \" Status:\"), resObj.observationResult && resObj.observationResult.status && IMAGING_RESULT_STATUS.hasOwnProperty(resObj.observationResult.status) ? IMAGING_RESULT_STATUS[resObj.observationResult.status] : '-')), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 49\n    }\n  }, \"Expected Availability Date: \"), resObj.order && resObj.order.expectedAvailabilityDate ? displayDate(resObj.order.expectedAvailabilityDate) : '-'), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 49\n    }\n  }, \"Result Inspector:\"), `${resObj.observationRequest && resObj.observationRequest.resultInterpreterLastName ? resObj.observationRequest.resultInterpreterLastName : ''} ${resObj.observationRequest && resObj.observationRequest.resultInterpreterFirstName ? resObj.observationRequest.resultInterpreterFirstName : '' || ''}`)), /*#__PURE__*/React.createElement(\"tr\", {\n    colSpan: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"custom_tr\",\n    colSpan: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 41\n    }\n  }, resObj.observationResult && resObj.observationResult.status && resObj.observationResult.status === 'F' || resObj.observationResult.status === '' && resObj.observationResult.resultValue ? /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 53\n    }\n  }, ReactHtmlParser(resObj.observationResult.resultValue)) : null))))))) : null);\n}\n\nexport default STLResponse;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Xray/List/STLResponse.js"],"names":["React","IMAGING_RESULT_STATUS","displayDate","ReactHtmlParser","STLResponse","props","data","console","log","xRayResult","length","map","resObj","order","fillerOrderNum","observationResult","status","hasOwnProperty","expectedAvailabilityDate","observationRequest","resultInterpreterLastName","resultInterpreterFirstName","resultValue"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { IMAGING_RESULT_STATUS } from '../../../constants/xray'\nimport {displayDate} from '../../../util/moment'\nimport ReactHtmlParser from 'react-html-parser'\n\nfunction STLResponse(props) {\n    let { data } = props\n    console.log('response data', props)\n    return (<div>\n        {\n            data.xRayResult.length > 0 ?\n                <fieldset className=\"my-fieldset\">\n                    <legend className=\"custom-legend\">Response</legend>\n                    {\n                        data.xRayResult.map(resObj =>\n                            <>\n                                <ul>\n                                    <table className=\"result_table\">\n                                        <tbody>\n                                        <tr>\n                                            <td><strong>Filler Order Number:</strong>{resObj.order ? resObj.order.fillerOrderNum : ''}</td>\n                                            <td><strong> Status:</strong>{resObj.observationResult && resObj.observationResult.status && IMAGING_RESULT_STATUS.hasOwnProperty(resObj.observationResult.status) ?\n                                                IMAGING_RESULT_STATUS[resObj.observationResult.status] : '-'}</td>\n                                        </tr>\n                                        <tr>\n                                            <td><strong>Expected Availability Date: </strong>{resObj.order && resObj.order.expectedAvailabilityDate ?\n                                               displayDate(resObj.order.expectedAvailabilityDate) : '-'}</td>\n                                            <td><strong>Result Inspector:</strong>{`${resObj.observationRequest && resObj.observationRequest.resultInterpreterLastName ? resObj.observationRequest.resultInterpreterLastName : ''} ${resObj.observationRequest && resObj.observationRequest.resultInterpreterFirstName ? resObj.observationRequest.resultInterpreterFirstName : '' || ''}`}</td>\n                                        </tr>\n                                        <tr colSpan=\"2\">\n                                            <td><hr /></td>\n                                        </tr>\n                                        <tr className=\"custom_tr\" colSpan=\"2\">\n                                            {\n                                                resObj.observationResult && resObj.observationResult.status && resObj.observationResult.status === 'F' || resObj.observationResult.status === '' && resObj.observationResult.resultValue ?\n\n                                                    <td>{ReactHtmlParser(resObj.observationResult.resultValue)}</td>\n                                                    : null\n                                            }\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                </ul>\n                            </>\n                        )\n                    }\n                </fieldset>\n                : null\n        }\n    </div>)\n}\nexport default STLResponse"]},"metadata":{},"sourceType":"module"}