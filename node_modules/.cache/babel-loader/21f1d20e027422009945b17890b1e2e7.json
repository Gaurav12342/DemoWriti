{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/SubscriptionUpsert/components/AddSubscription.js\";\nimport React, { useState, useEffect } from 'react';\nimport { createForm, formShape } from 'rc-form';\nimport { Trash, Edit, PlusBtn } from '../../../assets/images/resident-detail/index';\nimport { Input, Button, ErrorMsg } from '../../../components/common';\n\nconst Add = props => {\n  const {\n    listData,\n    onDelete,\n    onEdit,\n    onSelect,\n    onInfiniteOnLoad,\n    onSave,\n    loading,\n    edit,\n    onCancel,\n    detail,\n    form,\n    isRole\n  } = props;\n  const {\n    getFieldError,\n    getFieldDecorator,\n    validateFields,\n    setFieldsValue\n  } = form;\n  let errors;\n  const str = isRole ? 'Role Permission' : 'Subscription';\n  useEffect(() => {\n    if (edit && detail) {\n      setFieldsValue({\n        name: detail.name\n      });\n    }\n  }, [edit, detail]);\n\n  const handleSave = () => {\n    validateFields((error, value) => {\n      if (!error) {\n        onSave({ ...value\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add_permision\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, getFieldDecorator('name', {\n    rules: [{\n      required: true,\n      message: `Please enter ${str} name`,\n      whitespace: true\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    placeholder: `Enter ${str} Name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  })), (errors = getFieldError('name')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 57\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-8 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"lg\",\n    type: \"secondary\",\n    onClick: onCancel,\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"lg\",\n    onClick: handleSave,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, edit ? 'Update' : 'Save')))));\n};\n\nexport default createForm()(Add);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/SubscriptionUpsert/components/AddSubscription.js"],"names":["React","useState","useEffect","createForm","formShape","Trash","Edit","PlusBtn","Input","Button","ErrorMsg","Add","props","listData","onDelete","onEdit","onSelect","onInfiniteOnLoad","onSave","loading","edit","onCancel","detail","form","isRole","getFieldError","getFieldDecorator","validateFields","setFieldsValue","errors","str","name","handleSave","error","value","rules","required","message","whitespace","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { createForm, formShape } from 'rc-form';\nimport { Trash, Edit, PlusBtn } from '../../../assets/images/resident-detail/index';\nimport { Input, Button, ErrorMsg } from '../../../components/common'\n\n\nconst Add = (props) => {\n    const { listData, onDelete, onEdit, onSelect, onInfiniteOnLoad, onSave, loading, edit, onCancel,\n        detail, form, isRole } = props\n    const { getFieldError, getFieldDecorator, validateFields, setFieldsValue } = form;\n    let errors\n    const str = isRole ? 'Role Permission' : 'Subscription'\n\n    useEffect(() => {\n        if (edit && detail) {\n            setFieldsValue({ name: detail.name })\n        }\n    }, [edit, detail])\n\n    const handleSave = () => {\n        validateFields((error, value) => {\n            if (!error) {\n                onSave({ ...value })\n            }\n        })\n    }\n\n    return (<>\n        <div className=\"add_permision\">\n            <div className=\"form_row\">\n                {/* <div className=\"form_wrap\"> */}\n                <div className=\"form_group col-4 required\">\n                    {getFieldDecorator('name', {\n                        rules: [{\n                            required: true, message: `Please enter ${str} name`,\n                            whitespace: true,\n                        }]\n                    })(\n                        <Input placeholder={`Enter ${str} Name`} />\n                    )}\n                    {(errors = getFieldError('name')) ? <ErrorMsg errors={errors} /> : null}\n                </div>\n                <div className='form_group col-8 text-right' >\n                    <Button size=\"lg\" type=\"secondary\" onClick={onCancel} style={{ marginRight: '10px' }} >\n                        Cancel</Button>\n                    <Button size=\"lg\" onClick={handleSave} loading={loading} >\n                        {edit ? 'Update' : 'Save'}</Button>\n                </div>\n                {/* </div> */}\n            </div>\n            {/* <form>\n                <div className=\"form_wrap\">\n                    <div className=\"sus_name\">\n                        {getFieldDecorator('name', {\n                            rules: [{\n                                required: true, message: `Please enter ${str} name`,\n                                whitespace: true,\n                            }]\n                        })(\n                            <Input placeholder={`Enter ${str} Name`} />\n                        )}\n                        {(errors = getFieldError('name')) ? <ErrorMsg errors={errors} /> : null}\n                    </div>\n                    <div className='m-r-10' >\n                        <Button size=\"lg\" type=\"secondary\"  onClick={onCancel} style={{ marginRight: '10px' }} >\n                            Cancel</Button>\n                        <Button size=\"lg\" onClick={handleSave} loading={loading} >\n                            {edit ? 'Update' : 'Save'}</Button>\n                    </div>\n                </div>\n            </form> */}\n        </div>\n    </>);\n}\nexport default createForm()(Add);"]},"metadata":{},"sourceType":"module"}