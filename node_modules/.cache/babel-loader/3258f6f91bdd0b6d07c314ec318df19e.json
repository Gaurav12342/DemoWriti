{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/UserAuth/ResetPassword/ResetPassword.js\";\nimport React from 'react';\nimport { Input, ErrorMsg, Button } from '../../../components/common/index';\nimport routes from '../../../routes/constant';\nimport { Logo } from '../../../assets/images/index';\nimport { Link } from 'react-router-dom';\n\nfunction ResetPassword(props) {\n  const {\n    form,\n    onReset,\n    btnLoading,\n    onUserLogout\n  } = props;\n  const {\n    getFieldError,\n    getFieldValue,\n    getFieldDecorator\n  } = form;\n  let errors;\n\n  const compareToFirstPassword = (rule, value, callback) => {\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  const validateToNextPassword = (rule, value, callback) => {\n    if (value && value === form.getFieldValue('currentPassword')) {\n      callback('Old password and new password could not be same');\n      return;\n    }\n\n    if (value) {\n      form.validateFields(['confirm'], {\n        force: true\n      });\n    }\n\n    callback();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_wrap defaultPasswordWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container defaultPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    width: \"500\",\n    height: \"70\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 24\n    }\n  }, \" Reset Password\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page_head2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"To access our panel you will have to reset a new password.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_list_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patient_order_wrap\",\n    style: {\n      border: \"none\",\n      marginTop: '-5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group required col-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 37\n    }\n  }, \"New Password\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 56\n    }\n  }, \"*\")), getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }, {\n      min: 8,\n      message: 'New Password must be minimum of 8 digit.'\n    }, {\n      validator: validateToNextPassword\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"New Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 41\n    }\n  })), (errors = getFieldError('password')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 77\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group required col-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 37\n    }\n  }, \"Confirm Password\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 60\n    }\n  }, \"*\")), getFieldDecorator('newPassword', {\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, {\n      validator: compareToFirstPassword\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Retype New Password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 41\n    }\n  })), (errors = getFieldError('newPassword')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 80\n    }\n  }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"compnents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signBtn send-btn2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"lg\",\n    onClick: onReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(Link, {\n    to: routes.login.path,\n    onClick: onUserLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"back-to-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 43\n    }\n  }, \"Back to Login\"))))))))));\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/UserAuth/ResetPassword/ResetPassword.js"],"names":["React","Input","ErrorMsg","Button","routes","Logo","Link","ResetPassword","props","form","onReset","btnLoading","onUserLogout","getFieldError","getFieldValue","getFieldDecorator","errors","compareToFirstPassword","rule","value","callback","validateToNextPassword","validateFields","force","border","marginTop","rules","required","message","min","validator","login","path"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Input, ErrorMsg, Button } from '../../../components/common/index'\nimport routes from '../../../routes/constant'\nimport { Logo } from '../../../assets/images/index'\nimport { Link } from 'react-router-dom'\n\nfunction ResetPassword(props) {\n\n    const { form, onReset, btnLoading, onUserLogout } = props\n    const { getFieldError, getFieldValue, getFieldDecorator } = form\n    let errors\n\n    const compareToFirstPassword = (rule, value, callback) => {\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    };\n\n    const validateToNextPassword = (rule, value, callback) => {\n        if (value && value === form.getFieldValue('currentPassword')) {\n            callback('Old password and new password could not be same');\n            return;\n        }\n        if (value) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n\n    return <div className=\"pmr_wrap defaultPasswordWrap\">\n        <div className=\"container defaultPassword\">\n            <div className=\"page_head\">\n                <Logo width=\"500\" height=\"70\" />\n            </div>\n            <div className=\"page_head\">\n                <label><h3> Reset Password</h3></label>\n            </div>\n            <div className=\"page_head2\">\n                <label>To access our panel you will have to reset a new password.</label>\n            </div>\n            \n            <div className=\"pmr_list_wrap\">\n                <div className=\"patient_order_wrap\" style={{ border: \"none\", marginTop: '-5px' }}>\n                    <div className=\"form_wrap flex-wrap\">\n                        <div className='form_row add-user'>\n                            <div className='form_row add-user'>\n                                <div className='form_group required col-10'>\n                                    <label>New Password<span>*</span></label>\n                                    {getFieldDecorator('password', {\n                                        rules: [{\n                                            required: true, message: 'Please input your password!',\n                                        }, {\n                                            min: 8,\n                                            message: 'New Password must be minimum of 8 digit.',\n                                        }, {\n                                            validator: validateToNextPassword,\n                                        }],\n                                    })(\n                                        <Input type=\"password\" placeholder=\"New Password\" />\n                                    )}\n                                    {(errors = getFieldError('password')) ? <ErrorMsg errors={errors} /> : null}\n                                </div>\n                            </div>\n                            <div className='form_row add-user'>\n                                <div className='form_group required col-10'>\n                                    <label>Confirm Password<span>*</span></label>\n                                    {getFieldDecorator('newPassword', {\n                                        rules: [{\n                                            required: true, message: 'Please confirm your password!',\n                                        }, {\n                                            validator: compareToFirstPassword,\n                                        }],\n                                    })(\n                                        <Input placeholder=\"Retype New Password\" type=\"password\" />\n                                    )}\n                                    {(errors = getFieldError('newPassword')) ? <ErrorMsg errors={errors} /> : null}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"compnents\">\n                            <div className=\"signBtn send-btn2\">\n                                <Button size=\"lg\" onClick={onReset}>Reset</Button>\n                                <Link to={routes.login.path} onClick={onUserLogout}>\n                                    <span><a className=\"back-to-login\">Back to Login</a></span>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div >\n    </div>\n}\nexport default ResetPassword"]},"metadata":{},"sourceType":"module"}