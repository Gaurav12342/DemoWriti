{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/ResidentDocument/AddResidentDocument.js\";\nimport React, { useState, useEffect } from 'react';\nimport Modal from '../../components/common/Popup/index';\nimport { ErrorMsg, Select, Option, DateTimePicker, Button, FileList } from '../../components/common/index';\nimport HomeAreaFilter from '../../components/HomeAreaFilter';\nimport Uploader, { FILE_TYPES, FILE_CATEGORY } from '../../components/common/Upload/Uploader';\nimport { fileUpload } from '../../services/api/routes/common';\nimport { Attachments } from '../../assets/images/resident-detail';\nimport Thumbnail from \"../../components/common/Upload/Thumbnail\";\nimport axios, { getPrivateBucketUrl } from \"../../services/api/services/common\";\nimport { Download } from \"../../assets/images/resident-detail\";\nimport { extensions } from \"../../components/common/Upload/Uploader\";\nimport moment from 'moment';\nimport { createForm } from 'rc-form';\n\nconst _ = require('lodash');\n\nconst MasterUpsortForm = props => {\n  const {\n    visible,\n    onCancel,\n    form,\n    isEdit,\n    onUploadAction,\n    isUploadVisible,\n    recordTypeList,\n    loading,\n    documentList,\n    onSubmit,\n    residentListing,\n    editRecord,\n    onResidentSearch,\n    onDatePickerChange\n  } = props;\n  let errors;\n  const [fileData, setFileData] = useState([]);\n  const [ext, setExt] = useState('');\n  let abc;\n  useEffect(() => {\n    var _abc;\n\n    _.map(fileData.data, data => {\n      abc = data.path;\n    });\n\n    var result = (_abc = abc) === null || _abc === void 0 ? void 0 : _abc.split(\"/\").pop();\n    var resultData = result === null || result === void 0 ? void 0 : result.split(\"?\", 1);\n    const ext = extensions.IMAGE.includes(resultData);\n\n    if (ext) {} else {\n      setExt(resultData);\n    }\n  }, [fileData]); // const GetFilename = (url) => {\n  //   console.log('URL', url);\n  //   var res = url?.split(\"/\").pop();\n  //   var res1 = res?.split(\"?\", 1);\n  //   const ext = extensions.IMAGE.includes(res)\n  //   if (ext) {\n  //   }\n  //   else {\n  //     setExt(res1)\n  //   }\n  //   // if (url) {\n  //   //   let p = url?.split('/').pop()\n  //   //   return p\n  //   // }\n  //   // return \"\";\n  // }\n\n  const {\n    getFieldError,\n    getFieldDecorator,\n    setFieldsValue,\n    validateFields\n  } = form;\n\n  const disableFutureDt = current => {\n    const today = moment();\n    return current.isAfter(today);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    title: isEdit ? 'Edit Resident Document' : 'Add Resident Document',\n    onCancel: () => onCancel(false),\n    onClose: () => onCancel(false),\n    okText: isEdit ? 'Update' : 'Ok',\n    maskClosable: false,\n    onOk: onSubmit,\n    style: {\n      width: '50%'\n    },\n    okButtonProps: {\n      loading: loading\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Resident\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, \"*\")), getFieldDecorator('residentId', {\n    rules: [{\n      required: true,\n      message: 'Please Search and Select Resident'\n    }]\n  })( /*#__PURE__*/React.createElement(Select, {\n    showSearch: true,\n    allowClear: true,\n    showArrow: false,\n    filterOption: false,\n    placeholder: \"Search Resident\",\n    onSearch: onResidentSearch,\n    notFoundContent: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, residentListing.length > 0 ? residentListing.map(resident => {\n    return /*#__PURE__*/React.createElement(Option, {\n      value: resident._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: 'inline !important'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 27\n      }\n    }, ' ', /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, resident.firstName, \" , \", resident.lastName, '  ', resident && resident.hc ? `(${resident.hc})` : '', '  ', resident && resident.homeAreaId && resident.homeAreaId.name ? `(${resident.homeAreaId.name})` : '')));\n  }) : null)), (errors = getFieldError('residentId')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, \"Date and Time\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 30\n    }\n  }, \"*\")), getFieldDecorator('documentDate', {\n    rules: [{\n      required: true,\n      message: 'Please Select Date and Time'\n    }]\n  })( /*#__PURE__*/React.createElement(DateTimePicker, {\n    placeholder: \"Select Date & Time*\",\n    timePicker: true,\n    onChange: onDatePickerChange,\n    disabled: false,\n    disabledDate: disableFutureDt,\n    showOk: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  })), (errors = getFieldError('documentDate')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, \"Record Type\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 28\n    }\n  }, \"*\")), getFieldDecorator('masterId', {\n    rules: [{\n      required: true,\n      message: `Please Select Record Type`,\n      whitespace: true\n    }]\n  })( /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Record Type\",\n    showSearch: true,\n    allowClear: true,\n    filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, recordTypeList && recordTypeList.map(data => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: data.value,\n      value: data.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }, data.text);\n  }))), (errors = getFieldError('masterId')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"lg\",\n    type: \"transparent\",\n    style: {\n      width: '280px'\n    },\n    onClick: () => onUploadAction(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, \"Upload Document\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, fileData && fileData.data && fileData.data.length > 0 && fileData.data.map(data => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"upd_img_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => {\n        window.open(data.path, '_blank');\n      },\n      download: true,\n      className: \"upd_img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dwn_img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: data.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dwn_ico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Download, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 27\n      }\n    }, ext)));\n  })))), isUploadVisible ? /*#__PURE__*/React.createElement(Uploader, {\n    visible: isUploadVisible,\n    multiple: true,\n    fileLength: 10 // defaultList={isEdit ? documentList : []}\n    ,\n    onRequestClose: () => onUploadAction(false),\n    uploadUrl: { ...fileUpload\n    },\n    extraData: {\n      isUploadToS3: true,\n      isPrivateBucket: true,\n      returnSignedURL: true,\n      category: [FILE_CATEGORY.IMAGE].join(',')\n    },\n    allowedTypes: [FILE_TYPES.IMAGE // FILE_TYPES.PDF,\n    // FILE_TYPES.DOC,\n    ] // maxSizeInMB={1}\n    ,\n    onError: err => {\n      console.log('on error => ', err);\n    },\n    onSuccess: uploaded => {\n      setFileData(uploaded);\n      onUploadAction(false, uploaded);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }) : null))));\n};\n\nexport default createForm()(MasterUpsortForm);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/ResidentDocument/AddResidentDocument.js"],"names":["React","useState","useEffect","Modal","ErrorMsg","Select","Option","DateTimePicker","Button","FileList","HomeAreaFilter","Uploader","FILE_TYPES","FILE_CATEGORY","fileUpload","Attachments","Thumbnail","axios","getPrivateBucketUrl","Download","extensions","moment","createForm","_","require","MasterUpsortForm","props","visible","onCancel","form","isEdit","onUploadAction","isUploadVisible","recordTypeList","loading","documentList","onSubmit","residentListing","editRecord","onResidentSearch","onDatePickerChange","errors","fileData","setFileData","ext","setExt","abc","map","data","path","result","split","pop","resultData","IMAGE","includes","getFieldError","getFieldDecorator","setFieldsValue","validateFields","disableFutureDt","current","today","isAfter","width","rules","required","message","length","resident","_id","display","firstName","lastName","hc","homeAreaId","name","whitespace","input","option","children","toLowerCase","indexOf","value","text","window","open","isUploadToS3","isPrivateBucket","returnSignedURL","category","join","err","console","log","uploaded"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from '../../components/common/Popup/index';\nimport {\n  ErrorMsg,\n  Select,\n  Option,\n  DateTimePicker,\n  Button,\n  FileList,\n} from '../../components/common/index';\nimport HomeAreaFilter from '../../components/HomeAreaFilter';\nimport Uploader, {\n  FILE_TYPES,\n  FILE_CATEGORY,\n} from '../../components/common/Upload/Uploader';\nimport { fileUpload } from '../../services/api/routes/common';\nimport { Attachments } from '../../assets/images/resident-detail';\nimport Thumbnail from \"../../components/common/Upload/Thumbnail\";\nimport axios, {\n  getPrivateBucketUrl,\n} from \"../../services/api/services/common\";\nimport { Download } from \"../../assets/images/resident-detail\";\nimport { extensions } from \"../../components/common/Upload/Uploader\"\nimport moment from 'moment';\nimport { createForm } from 'rc-form';\nconst _ = require('lodash');\n\nconst MasterUpsortForm = (props) => {\n  const {\n    visible,\n    onCancel,\n    form,\n    isEdit,\n    onUploadAction,\n    isUploadVisible,\n    recordTypeList,\n    loading,\n    documentList,\n    onSubmit,\n    residentListing,\n    editRecord,\n    onResidentSearch,\n    onDatePickerChange,\n  } = props;\n  let errors;\n\n  const [fileData, setFileData] = useState([]);\n\n  const [ext, setExt] = useState('')\n  let abc;\n  useEffect(() => {\n    _.map(fileData.data, (data) => {\n      abc = data.path\n    })\n    var result = abc?.split(\"/\").pop();\n    var resultData = result?.split(\"?\", 1);\n    const ext = extensions.IMAGE.includes(resultData)\n    if (ext) {\n    }\n    else {\n      setExt(resultData)\n    }\n  }, [fileData])\n\n\n\n  // const GetFilename = (url) => {\n  //   console.log('URL', url);\n  //   var res = url?.split(\"/\").pop();\n  //   var res1 = res?.split(\"?\", 1);\n  //   const ext = extensions.IMAGE.includes(res)\n  //   if (ext) {\n  //   }\n  //   else {\n  //     setExt(res1)\n  //   }\n  //   // if (url) {\n  //   //   let p = url?.split('/').pop()\n  //   //   return p\n  //   // }\n  //   // return \"\";\n  // }\n\n\n  const {\n    getFieldError,\n    getFieldDecorator,\n    setFieldsValue,\n    validateFields,\n  } = form;\n\n  const disableFutureDt = (current) => {\n    const today = moment();\n    return current.isAfter(today);\n  };\n\n\n\n\n  return (\n    <>\n      <Modal\n        visible={visible}\n        title={isEdit ? 'Edit Resident Document' : 'Add Resident Document'}\n        onCancel={() => onCancel(false)}\n        onClose={() => onCancel(false)}\n        okText={isEdit ? 'Update' : 'Ok'}\n        maskClosable={false}\n        onOk={onSubmit}\n        style={{ width: '50%' }}\n        okButtonProps={{ loading: loading }}\n      >\n        <div className='form_row'>\n          <div className='col-12'>\n            <div className='form_group col-12 required'>\n              <label>\n                Resident<span>*</span>\n              </label>\n              {getFieldDecorator('residentId', {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please Search and Select Resident',\n                  },\n                ],\n              })(\n                <Select\n                  showSearch\n                  allowClear={true}\n                  showArrow={false}\n                  filterOption={false}\n                  placeholder='Search Resident'\n                  onSearch={onResidentSearch}\n                  notFoundContent={null}\n                >\n                  {residentListing.length > 0\n                    ? residentListing.map((resident) => {\n                      return (\n                        <Option value={resident._id}>\n                          <span style={{ display: 'inline !important' }}>\n                            {' '}\n                            <p>\n                              {resident.firstName} , {resident.lastName}\n                              {'  '}\n                              {resident && resident.hc\n                                ? `(${resident.hc})`\n                                : ''}\n                              {'  '}\n                              {resident &&\n                                resident.homeAreaId &&\n                                resident.homeAreaId.name\n                                ? `(${resident.homeAreaId.name})`\n                                : ''}\n                            </p>\n                          </span>\n                        </Option>\n                      );\n                    })\n                    : null}\n                </Select>\n              )}\n              {(errors = getFieldError('residentId')) ? (\n                <ErrorMsg errors={errors} />\n              ) : null}\n            </div>\n            {/* <div className='form_group col-12 required'>\n              <label>\n                Home Area<span>*</span>\n              </label>\n              {getFieldDecorator('homeAreaId', {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please Select HomeArea',\n                  },\n                ],\n              })(<HomeAreaFilter placeholder='Filter Homearea' />)}\n              {(errors = getFieldError('homeAreaId')) ? (\n                <ErrorMsg errors={errors} />\n              ) : null}\n            </div> */}\n            <div className='form_group col-12 required'>\n              <label>\n                Date and Time<span>*</span>\n              </label>\n              {getFieldDecorator('documentDate', {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please Select Date and Time',\n                  },\n                ],\n              })(\n                <DateTimePicker\n                  placeholder='Select Date & Time*'\n                  timePicker={true}\n                  onChange={onDatePickerChange}\n                  disabled={false}\n                  disabledDate={disableFutureDt}\n                  showOk={true}\n                />\n              )}\n              {(errors = getFieldError('documentDate')) ? (\n                <ErrorMsg errors={errors} />\n              ) : null}\n            </div>\n\n            <div className='form_group col-12 required'>\n              <label>\n                Record Type<span>*</span>\n              </label>\n              {getFieldDecorator('masterId', {\n                rules: [\n                  {\n                    required: true,\n                    message: `Please Select Record Type`,\n                    whitespace: true,\n                  },\n                ],\n              })(\n                <Select\n                  placeholder='Select Record Type'\n                  showSearch\n                  allowClear\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {recordTypeList &&\n                    recordTypeList.map((data) => {\n                      return (\n                        <Option key={data.value} value={data.value}>\n                          {data.text}\n                        </Option>\n                      );\n                    })}\n                </Select>\n              )}\n              {(errors = getFieldError('masterId')) ? (\n                <ErrorMsg errors={errors} />\n              ) : null}\n            </div>\n\n            <div className='form_row'>\n              <div className='form_group col-12 required'>\n                <Button\n                  size='lg'\n                  type='transparent'\n                  style={{ width: '280px' }}\n                  onClick={() => onUploadAction(true)}\n                >\n                  Upload Document\n                </Button>\n                <div className=\"form_row add-user\">\n                  {fileData && fileData.data && fileData.data.length > 0 && fileData.data.map((data) => {\n                    return (\n                      <div className=\"upd_img_wrap\">\n                        {/* <Thumbnail path={data.path} /> */}\n                        <div onClick={() => { window.open(data.path, '_blank') }} download className=\"upd_img\">\n                          <div className=\"dwn_img\">\n                            <img src={data.path} />\n                            <div className=\"dwn_ico\">\n                              <Download />\n                            </div>\n                          </div>\n                          <p>{ext}</p>\n                          {/* <p>{GetFilename(data.path)}</p> */}\n                        </div>\n                      </div>\n                    )\n                  })}\n                </div>\n              </div>\n            </div>\n\n            {isUploadVisible ? (\n              <Uploader\n                visible={isUploadVisible}\n                multiple={true}\n                fileLength={10}\n                // defaultList={isEdit ? documentList : []}\n                onRequestClose={() => onUploadAction(false)}\n                uploadUrl={{ ...fileUpload }}\n                extraData={{\n                  isUploadToS3: true,\n                  isPrivateBucket: true,\n                  returnSignedURL: true,\n                  category: [FILE_CATEGORY.IMAGE].join(','),\n                }}\n\n                allowedTypes={[\n                  FILE_TYPES.IMAGE,\n                  // FILE_TYPES.PDF,\n                  // FILE_TYPES.DOC,\n                ]}\n                // maxSizeInMB={1}\n                onError={(err) => {\n                  console.log('on error => ', err);\n                }}\n                onSuccess={(uploaded) => {\n                  setFileData(uploaded);\n                  onUploadAction(false, uploaded);\n                }}\n              />\n            ) : null}\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default createForm()(MasterUpsortForm);\n"]},"metadata":{},"sourceType":"module"}