{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Master/SubMaster/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport MasterHeader from '../components/MasterHeader';\nimport MasterList from '../components/MasterList';\nimport MasterUpsertForm from '../components/MasterUpsertForm';\nimport axios from '../../../services/api/config';\nimport { Toast } from '../../../components/common/Toast';\nimport { createForm } from 'rc-form';\nimport { masterPaginate, masterUpsert, masterDelete, masterUpdate, getSpecificMaster } from '../../../services/api/routes/master';\nimport { pharmacyPaginate } from '../../../services/api/routes/customer';\nimport { Edit, Cancel } from '../../../assets/images/resident-detail/index';\nimport ActiveDeactive from '../../../components/common/ActiveDeactive';\nimport Table from '../../../components/common/Table/index';\nimport ConfirmPopup from '../../../components/common/ConfirmPopup';\nimport { MASTER_MEDIUM } from '../../../constants/MasterMedium';\nimport { USER_TYPE } from '../../../constants/User';\nimport { MODULE, ACTIONS } from '../../../constants/subscription';\nimport { canPerformAction } from '../../../util/common';\n\nconst _ = require('lodash');\n\nconst SubMaster = props => {\n  var _authUser$pharmacyId;\n\n  const {\n    form,\n    auth\n  } = props;\n  const {\n    authUser\n  } = auth;\n  const {\n    resetFields\n  } = form;\n  const [headerWidth, setHeaderWidth] = useState(false);\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [deleteLoading, setDeleteBtnLoading] = useState(false);\n  const [radioValue, setRadioValue] = useState(undefined);\n  const [pharmacy, setPharmacy] = useState([]);\n  const [UpsertModal, setUpsertModal] = useState(false);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n  const [getSpecificRecord, setSpecificRecord] = useState('');\n  const [getSpecificMasterName, setSpecificMasterName] = useState('');\n  const [masterDetail, setMasterDetail] = useState('');\n  const [mediumLists, setMediumLists] = useState([]);\n  const isHomeAdmin = authUser && authUser.type === USER_TYPE.HOME.ADMIN;\n  const isPharmacyAdmin = authUser && authUser.type === USER_TYPE.PHARMACY.ADMIN;\n  let filterBy = {\n    homeId: isHomeAdmin ? authUser.homeId._id : undefined,\n    pharmacyId: isPharmacyAdmin ? (_authUser$pharmacyId = authUser.pharmacyId) === null || _authUser$pharmacyId === void 0 ? void 0 : _authUser$pharmacyId._id : undefined\n  };\n  const [filter, setFilter] = useState({\n    page: 1,\n    limit: 10,\n    fields: [],\n    find: { ...filterBy\n    },\n    populate: [{\n      homeId: null\n    }, {\n      pharmacyId: null\n    }],\n    sortBy: {\n      createdAt: 'DESC'\n    }\n  });\n  const homes = (authUser === null || authUser === void 0 ? void 0 : authUser.homeList) || [];\n  const isAdmin = (authUser === null || authUser === void 0 ? void 0 : authUser.type) === USER_TYPE.ADMIN.SUPER || (authUser === null || authUser === void 0 ? void 0 : authUser.type) === USER_TYPE.ADMIN.GENERAL;\n  useEffect(() => {\n    if (props.match.params.id) {\n      if (filter.hasOwnProperty('search') && filter.search['keyword']) {\n        const delayDebounceFn = setTimeout(() => {\n          fetch();\n        }, 600);\n        return () => clearTimeout(delayDebounceFn);\n      } else fetch();\n    }\n  }, [filter, props.match.params.id]);\n  useEffect(() => {\n    if (props.match.params.id) {\n      getSpecificMasterRecord();\n    }\n  }, [props.match.params.id]);\n  useEffect(() => {\n    fetchPharmacy();\n  }, []);\n  useEffect(() => {\n    let tempFilter = { ...filter\n    };\n    if ((masterDetail === null || masterDetail === void 0 ? void 0 : masterDetail.masterForMedium) === MASTER_MEDIUM.PHARMACY) setMediumLists(pharmacy);else if ((masterDetail === null || masterDetail === void 0 ? void 0 : masterDetail.masterForMedium) === MASTER_MEDIUM.HOME) setMediumLists(homes);\n    setRadioValue(masterDetail.masterForMedium); // setFilter(tempFilter)\n  }, [masterDetail]);\n\n  const handleHomePharmacy = e => {\n    setRadioValue(parseInt(e.target.value));\n  };\n\n  const modifiedList = list => {\n    let modifiedList = list.map(current => {\n      return current;\n    });\n    return modifiedList;\n  };\n\n  const fetchPharmacy = () => {\n    let {\n      method,\n      url,\n      baseURL\n    } = pharmacyPaginate;\n    axios({\n      method,\n      url,\n      baseURL,\n      data: {\n        query: {\n          find: {\n            isActive: true\n          }\n        }\n      }\n    }).then(response => {\n      if (response.data.code == 'OK') {\n        setPharmacy(response.data.data.data);\n      } else {\n        Toast.error(response.data.message);\n      }\n    }).catch(error => {\n      Toast.error(error);\n    });\n  };\n\n  const fetch = () => {\n    var _props$match$params;\n\n    setLoading(true);\n    axios({ ...masterPaginate,\n      data: {\n        query: { ...filter,\n          find: { ...filter.find,\n            parentId: (_props$match$params = props.match.params) === null || _props$match$params === void 0 ? void 0 : _props$match$params.id\n          }\n        }\n      }\n    }).then(data => {\n      if (data.data.code === 'OK') {\n        if (props.match.params.id) {\n          let updatedList = data.data.data.data;\n          setData(updatedList);\n          setTotal(data.data.data.count);\n          setLoading(false);\n        }\n      }\n    }).catch(err => {\n      Toast.error(err);\n      setLoading(false);\n    });\n  };\n\n  const getSpecificMasterRecord = () => {\n    let {\n      method,\n      url,\n      baseURL\n    } = getSpecificMaster;\n    url = `${url}/${props.match.params.id}`;\n    axios({\n      method,\n      url,\n      baseURL\n    }).then(response => {\n      if (response.data.code === 'OK') {\n        setSpecificMasterName(response.data.data.name);\n      }\n    }).catch(err => {\n      Toast.error(err);\n    });\n  };\n\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    if (!pagination) return;\n    let tempFilter = filter;\n    tempFilter = { ...tempFilter,\n      page: pagination.current,\n      limit: pagination.pageSize\n    };\n\n    if (tfilter && Object.keys(tfilter).length) {\n      if (tfilter.isActive && tfilter.isActive.length) {\n        tempFilter.find.isActive = tfilter.isActive;\n      } else if (tempFilter.find.isActive) {\n        delete tempFilter.find['isActive'];\n      }\n\n      tempFilter.page = pagination.current;\n    } else {// tempFilter.filter = {\n      //     type: tempFilter.filter.type\n      // }\n    }\n\n    setFilter(tempFilter);\n  };\n\n  const onShowSizeChange = size => {\n    if (size) {\n      setFilter(prevFilter => ({ ...prevFilter,\n        limit: size,\n        page: 1\n      }));\n    }\n  };\n\n  const handleSearch = event => {\n    let value = event.target.value;\n    let obj = { ...filter,\n      page: 1,\n      search: {\n        keyword: value,\n        keys: ['name', 'code']\n      }\n    };\n    setFilter(obj);\n  };\n\n  const handleActiveDeactive = record => {\n    let tempData = data.map(rec => {\n      if (rec._id === record._id) {\n        return { ...rec,\n          isActive: !rec.isActive\n        };\n      } else {\n        return rec;\n      }\n    });\n    setData(tempData);\n  };\n\n  const getColumns = () => [{\n    title: 'Sr.No',\n    keyword: 'index',\n    dataIndex: 'index',\n    render: (text, record, index) => (filter.page - 1) * filter.limit + (index + 1)\n  }, {\n    title: 'Name',\n    dataIndex: 'name',\n    render: (text, record) => /*#__PURE__*/React.createElement(React.Fragment, null, text ? text : '')\n  }, {\n    title: 'Code',\n    dataIndex: 'code',\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }, text ? text : '')\n  }, {\n    title: 'Home/Pharmacy',\n    dataIndex: 'masterForMedium',\n    render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }\n    }, text ? Object.keys(MASTER_MEDIUM).map(x => MASTER_MEDIUM[x] === text ? `${text === MASTER_MEDIUM.HOME && record.homeId ? record.homeId.name : text === MASTER_MEDIUM.PHARMACY && record.pharmacyId ? record.pharmacyId.name : text === MASTER_MEDIUM.GENERAL ? '-' : ''}` : '') : '')\n  }, {\n    title: 'Active',\n    dataIndex: 'isActive',\n    render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ActiveDeactive, {\n      isActive: record.isActive,\n      status: record.isActive,\n      API: masterUpdate,\n      documentId: record._id,\n      record: record,\n      model: \"submaster\",\n      fieldName: record.isActive,\n      onActiveDeactive: record => {\n        handleActiveDeactive(record);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    })),\n    filters: [{\n      text: 'Active',\n      value: true\n    }, {\n      text: 'De-active',\n      value: false\n    }],\n    onFilter: (value, record) => record.isActive === value\n  }, {\n    title: 'Action',\n    width: '120px',\n    showRefresh: true,\n    render: (text, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }\n    }, canPerformAction({\n      moduleId: MODULE.MASTER,\n      actiontoCheck: ACTIONS.EDIT.CODE\n    }) ? /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => {\n        handleEditModalOpen(record);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 19\n      }\n    }, \"Edit\")) : null, canPerformAction({\n      moduleId: MODULE.MASTER,\n      actiontoCheck: ACTIONS.DELETE.CODE\n    }) ? /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => {\n        handleDeletePopupOpen(record);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Cancel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 19\n      }\n    }, \"Delete\")) : null))\n  }];\n\n  const handleUpsertModalOpen = () => {\n    setUpsertModal(true);\n    resetFields();\n  };\n\n  const handleUpsertModalClose = () => {\n    setUpsertModal(false);\n  };\n\n  const handleSubmit = value => {\n    setBtnLoading(true);\n\n    if (getSpecificRecord) {\n      let {\n        method,\n        url,\n        baseURL\n      } = masterUpdate;\n      url = `${url}/${getSpecificRecord._id}`;\n      let obj = { ...value,\n        parentId: props.match.params.id\n      };\n      axios({\n        method,\n        url,\n        data: obj,\n        baseURL\n      }).then(response => {\n        if (response.data.code == 'OK') {\n          setBtnLoading(false);\n          setEditModal(false);\n          Toast.success(response.data.message);\n          fetch();\n        }\n      }).catch(error => {\n        setBtnLoading(false);\n        Toast.err(error);\n      });\n    } else {\n      setBtnLoading(true);\n      let {\n        method,\n        url,\n        baseURL\n      } = masterUpsert;\n      let obj = { ...value,\n        parentId: props.match.params.id\n      };\n      axios({\n        method,\n        url,\n        data: obj,\n        baseURL\n      }).then(response => {\n        if (response.data.code == 'OK') {\n          setBtnLoading(false);\n          setUpsertModal(false);\n          Toast.success(response.data.message);\n          fetch();\n        }\n      }).catch(error => {\n        setBtnLoading(false);\n        Toast.error(error);\n      });\n    }\n  };\n\n  const handleEditModalOpen = data => {\n    setSpecificRecord(data);\n    setEditModal(true);\n  };\n\n  const handleEditModalClose = () => {\n    setEditModal(false);\n    setSpecificRecord(null);\n  };\n\n  const handleDeletePopupOpen = data => {\n    setSpecificRecord(data);\n    setDeletePopup(true);\n  };\n\n  const handleDeletePopupClose = () => {\n    setDeletePopup(false);\n    setSpecificRecord(null);\n  };\n\n  const handleDeleteRecord = id => {\n    setDeleteBtnLoading(true);\n    let {\n      url,\n      method,\n      baseURL\n    } = masterDelete;\n    url = `${url}/${id}`;\n    axios({\n      url,\n      method,\n      baseURL\n    }).then(data => {\n      if (data.data.code == 'OK') {\n        setDeleteBtnLoading(false);\n        setDeletePopup(false);\n        Toast.success(data.data.message);\n        fetch();\n      }\n    }).catch(error => {\n      setDeleteBtnLoading(false);\n      Toast.error(error);\n    });\n  };\n\n  const handleSelect = detail => {\n    // setFilter({\n    //   ...filter,\n    //   find: {\n    //     parentId: props.match.params?.id,\n    //   },\n    // });\n    setMasterDetail(detail);\n  };\n\n  const handleChangeMedium = val => {\n    let tempFilter = { ...filter\n    };\n    tempFilter.find = { ...tempFilter.find,\n      homeId: radioValue === MASTER_MEDIUM.HOME ? val : undefined,\n      pharmacyId: radioValue === MASTER_MEDIUM.PHARMACY ? val : undefined\n    };\n    setFilter(tempFilter);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"residents_detail_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MasterHeader, {\n    headerWidth: () => {\n      setHeaderWidth(false);\n    },\n    modalTitle: \"Sub Master\",\n    form: form,\n    masterName: getSpecificMasterName,\n    onAdd: handleUpsertModalOpen,\n    length: total,\n    onSearch: handleSearch,\n    masterDetail: masterDetail,\n    mediumLists: mediumLists,\n    onChangeMedium: handleChangeMedium,\n    isAdmin: isAdmin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MasterList, {\n    id: props.match.params.id,\n    onSelect: handleSelect,\n    authUser: authUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    columns: getColumns(),\n    datasource: data,\n    loading: loading,\n    onChange: handleTableChange,\n    pagination: {\n      current: filter.page,\n      pageSize: filter.limit,\n      total: total,\n      showSizeChanger: true,\n      onShowSizeChange: onShowSizeChange\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 13\n    }\n  })))), UpsertModal && /*#__PURE__*/React.createElement(MasterUpsertForm, {\n    form: form,\n    loading: btnLoading,\n    visible: UpsertModal,\n    title: \"Add Sub Master\",\n    authUser: authUser,\n    okText: \"Add\",\n    cancelText: \"Cancel\",\n    onOk: handleSubmit,\n    onCancel: handleUpsertModalClose,\n    onClose: handleUpsertModalClose,\n    maskClosable: true,\n    pharmacy: pharmacy,\n    home: authUser && authUser.homeList,\n    onHomePharmacy: handleHomePharmacy,\n    radioValue: radioValue,\n    masterDetail: masterDetail,\n    isAdmin: isAdmin,\n    masterParentId: props.match.params.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 9\n    }\n  }), deletePopup && /*#__PURE__*/React.createElement(ConfirmPopup, {\n    value: getSpecificRecord,\n    visible: deletePopup,\n    title: `Delete Note -  ${getSpecificRecord.name}`,\n    description: \"Are you want to delete this record\",\n    onOk: () => {\n      handleDeleteRecord(getSpecificRecord._id);\n    },\n    okText: \"Yes\",\n    cancelText: \"Cancel\",\n    loading: deleteLoading,\n    onClose: handleDeletePopupClose,\n    onCancel: handleDeletePopupClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }\n  }), editModal && /*#__PURE__*/React.createElement(MasterUpsertForm, {\n    value: getSpecificRecord,\n    authUser: authUser,\n    form: form,\n    loading: btnLoading,\n    visible: editModal,\n    title: \"Edit Sub Master\",\n    okText: \"Update\",\n    cancelText: \"Cancel\",\n    onCancel: handleEditModalClose,\n    onClose: handleEditModalClose,\n    maskClosable: true,\n    onOk: handleSubmit,\n    home: authUser && authUser.homeList,\n    onHomePharmacy: handleHomePharmacy,\n    radioValue: radioValue,\n    masterDetail: masterDetail,\n    isAdmin: isAdmin,\n    pharmacy: pharmacy,\n    masterParentId: props.match.params.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = props => {\n  return props;\n};\n\nexport default connect(mapStateToProps)(createForm()(withRouter(SubMaster)));","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Master/SubMaster/index.js"],"names":["React","useState","useEffect","connect","withRouter","MasterHeader","MasterList","MasterUpsertForm","axios","Toast","createForm","masterPaginate","masterUpsert","masterDelete","masterUpdate","getSpecificMaster","pharmacyPaginate","Edit","Cancel","ActiveDeactive","Table","ConfirmPopup","MASTER_MEDIUM","USER_TYPE","MODULE","ACTIONS","canPerformAction","_","require","SubMaster","props","form","auth","authUser","resetFields","headerWidth","setHeaderWidth","data","setData","total","setTotal","loading","setLoading","btnLoading","setBtnLoading","deleteLoading","setDeleteBtnLoading","radioValue","setRadioValue","undefined","pharmacy","setPharmacy","UpsertModal","setUpsertModal","deletePopup","setDeletePopup","editModal","setEditModal","getSpecificRecord","setSpecificRecord","getSpecificMasterName","setSpecificMasterName","masterDetail","setMasterDetail","mediumLists","setMediumLists","isHomeAdmin","type","HOME","ADMIN","isPharmacyAdmin","PHARMACY","filterBy","homeId","_id","pharmacyId","filter","setFilter","page","limit","fields","find","populate","sortBy","createdAt","homes","homeList","isAdmin","SUPER","GENERAL","match","params","id","hasOwnProperty","search","delayDebounceFn","setTimeout","fetch","clearTimeout","getSpecificMasterRecord","fetchPharmacy","tempFilter","masterForMedium","handleHomePharmacy","e","parseInt","target","value","modifiedList","list","map","current","method","url","baseURL","query","isActive","then","response","code","error","message","catch","parentId","updatedList","count","err","name","handleTableChange","pagination","tfilter","sorter","pageSize","Object","keys","length","onShowSizeChange","size","prevFilter","handleSearch","event","obj","keyword","handleActiveDeactive","record","tempData","rec","getColumns","title","dataIndex","render","text","index","x","textTransform","filters","onFilter","width","showRefresh","moduleId","MASTER","actiontoCheck","EDIT","CODE","handleEditModalOpen","DELETE","handleDeletePopupOpen","handleUpsertModalOpen","handleUpsertModalClose","handleSubmit","success","handleEditModalClose","handleDeletePopupClose","handleDeleteRecord","handleSelect","detail","handleChangeMedium","val","showSizeChanger","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport MasterHeader from '../components/MasterHeader';\nimport MasterList from '../components/MasterList';\nimport MasterUpsertForm from '../components/MasterUpsertForm';\nimport axios from '../../../services/api/config';\nimport { Toast } from '../../../components/common/Toast';\nimport { createForm } from 'rc-form';\nimport {\n  masterPaginate,\n  masterUpsert,\n  masterDelete,\n  masterUpdate,\n  getSpecificMaster,\n} from '../../../services/api/routes/master';\nimport { pharmacyPaginate } from '../../../services/api/routes/customer';\nimport { Edit, Cancel } from '../../../assets/images/resident-detail/index';\nimport ActiveDeactive from '../../../components/common/ActiveDeactive';\nimport Table from '../../../components/common/Table/index';\nimport ConfirmPopup from '../../../components/common/ConfirmPopup';\nimport { MASTER_MEDIUM } from '../../../constants/MasterMedium';\nimport { USER_TYPE } from '../../../constants/User';\nimport { MODULE, ACTIONS } from '../../../constants/subscription';\nimport { canPerformAction } from '../../../util/common';\nconst _ = require('lodash');\n\nconst SubMaster = (props) => {\n  const { form, auth } = props;\n  const { authUser } = auth;\n  const { resetFields } = form;\n  const [headerWidth, setHeaderWidth] = useState(false);\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [deleteLoading, setDeleteBtnLoading] = useState(false);\n  const [radioValue, setRadioValue] = useState(undefined);\n  const [pharmacy, setPharmacy] = useState([]);\n  const [UpsertModal, setUpsertModal] = useState(false);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n  const [getSpecificRecord, setSpecificRecord] = useState('');\n  const [getSpecificMasterName, setSpecificMasterName] = useState('');\n  const [masterDetail, setMasterDetail] = useState('');\n  const [mediumLists, setMediumLists] = useState([]);\n  const isHomeAdmin = authUser && authUser.type === USER_TYPE.HOME.ADMIN;\n  const isPharmacyAdmin =\n    authUser && authUser.type === USER_TYPE.PHARMACY.ADMIN;\n  let filterBy = {\n    homeId: isHomeAdmin ? authUser.homeId._id : undefined,\n    pharmacyId: isPharmacyAdmin ? authUser.pharmacyId?._id : undefined,\n  };\n  const [filter, setFilter] = useState({\n    page: 1,\n    limit: 10,\n    fields: [],\n    find: { ...filterBy },\n    populate: [{ homeId: null }, { pharmacyId: null }],\n    sortBy: { createdAt: 'DESC' },\n  });\n  const homes = authUser?.homeList || []\n  const isAdmin = authUser?.type === USER_TYPE.ADMIN.SUPER || authUser?.type === USER_TYPE.ADMIN.GENERAL\n\n  useEffect(() => {\n    if (props.match.params.id) {\n      if (filter.hasOwnProperty('search') && filter.search['keyword']) {\n        const delayDebounceFn = setTimeout(() => {\n          fetch();\n        }, 600);\n        return () => clearTimeout(delayDebounceFn);\n      } else fetch();\n    }\n  }, [filter, props.match.params.id]);\n\n  useEffect(() => {\n    if (props.match.params.id) {\n      getSpecificMasterRecord();\n    }\n  }, [props.match.params.id]);\n\n  useEffect(() => {\n    fetchPharmacy();\n  }, []);\n\n  useEffect(() => {\n    let tempFilter = { ...filter }\n    if (masterDetail?.masterForMedium === MASTER_MEDIUM.PHARMACY)\n      setMediumLists(pharmacy)\n    else if (masterDetail?.masterForMedium === MASTER_MEDIUM.HOME)\n      setMediumLists(homes)\n    setRadioValue(masterDetail.masterForMedium)\n    // setFilter(tempFilter)\n  }, [masterDetail])\n\n  const handleHomePharmacy = (e) => {\n    setRadioValue(parseInt(e.target.value));\n  };\n\n  const modifiedList = (list) => {\n    let modifiedList = list.map((current) => {\n      return current;\n    });\n    return modifiedList;\n  };\n\n  const fetchPharmacy = () => {\n    let { method, url, baseURL } = pharmacyPaginate;\n    axios({ method, url, baseURL, data: { query: { find: { isActive: true } } } })\n      .then((response) => {\n        if (response.data.code == 'OK') {\n          setPharmacy(response.data.data.data);\n        } else {\n          Toast.error(response.data.message);\n        }\n      })\n      .catch((error) => {\n        Toast.error(error);\n      });\n  };\n  const fetch = () => {\n    setLoading(true);\n    axios({\n      ...masterPaginate,\n      data: {\n        query: {\n          ...filter,\n          find: {\n            ...filter.find,\n            parentId: props.match.params?.id,\n          },\n        },\n      },\n    })\n      .then((data) => {\n        if (data.data.code === 'OK') {\n          if (props.match.params.id) {\n            let updatedList = data.data.data.data;\n            setData(updatedList);\n            setTotal(data.data.data.count);\n            setLoading(false);\n          }\n        }\n      })\n      .catch((err) => {\n        Toast.error(err);\n        setLoading(false);\n      });\n  };\n\n  const getSpecificMasterRecord = () => {\n    let { method, url, baseURL } = getSpecificMaster;\n    url = `${url}/${props.match.params.id}`;\n    axios({ method, url, baseURL })\n      .then((response) => {\n        if (response.data.code === 'OK') {\n          setSpecificMasterName(response.data.data.name);\n        }\n      })\n      .catch((err) => {\n        Toast.error(err);\n      });\n  };\n\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    if (!pagination) return;\n    let tempFilter = filter;\n    tempFilter = {\n      ...tempFilter,\n      page: pagination.current,\n      limit: pagination.pageSize,\n    };\n    if (tfilter && Object.keys(tfilter).length) {\n      if (tfilter.isActive && tfilter.isActive.length) {\n        tempFilter.find.isActive = tfilter.isActive;\n      } else if (tempFilter.find.isActive) {\n        delete tempFilter.find['isActive'];\n      }\n      tempFilter.page = pagination.current;\n    } else {\n      // tempFilter.filter = {\n      //     type: tempFilter.filter.type\n      // }\n    }\n    setFilter(tempFilter);\n  };\n\n  const onShowSizeChange = (size) => {\n    if (size) {\n      setFilter((prevFilter) => ({ ...prevFilter, limit: size, page: 1 }));\n    }\n  };\n\n  const handleSearch = (event) => {\n    let value = event.target.value;\n    let obj = {\n      ...filter,\n      page: 1,\n      search: {\n        keyword: value,\n        keys: ['name', 'code'],\n      },\n    };\n    setFilter(obj);\n  };\n\n  const handleActiveDeactive = (record) => {\n    let tempData = data.map((rec) => {\n      if (rec._id === record._id) {\n        return { ...rec, isActive: !rec.isActive };\n      } else {\n        return rec;\n      }\n    });\n    setData(tempData);\n  };\n\n  const getColumns = () => [\n    {\n      title: 'Sr.No',\n      keyword: 'index',\n      dataIndex: 'index',\n      render: (text, record, index) =>\n        (filter.page - 1) * filter.limit + (index + 1),\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      render: (text, record) => <>{text ? text : ''}</>,\n    },\n    {\n      title: 'Code',\n      dataIndex: 'code',\n      render: (text) => <span>{text ? text : ''}</span>,\n    },\n    {\n      title: 'Home/Pharmacy',\n      dataIndex: 'masterForMedium',\n      render: (text, record) => (\n        <span>\n          {text\n            ? Object.keys(MASTER_MEDIUM).map((x) =>\n              MASTER_MEDIUM[x] === text\n                ? `${\n                text === MASTER_MEDIUM.HOME && record.homeId\n                  ? record.homeId.name\n                  : text === MASTER_MEDIUM.PHARMACY && record.pharmacyId\n                    ? record.pharmacyId.name\n                    : text === MASTER_MEDIUM.GENERAL ? '-' : ''\n                }` : ''\n            )\n            : ''}\n        </span>\n      ),\n    },\n    {\n      title: 'Active',\n      dataIndex: 'isActive',\n      render: (text, record) => (\n        <span style={{ textTransform: 'capitalize' }}>\n          <ActiveDeactive\n            isActive={record.isActive}\n            status={record.isActive}\n            API={masterUpdate}\n            documentId={record._id}\n            record={record}\n            model='submaster'\n            fieldName={record.isActive}\n            onActiveDeactive={(record) => {\n              handleActiveDeactive(record);\n            }}\n          />\n        </span>\n      ),\n      filters: [\n        { text: 'Active', value: true },\n        { text: 'De-active', value: false },\n      ],\n      onFilter: (value, record) => record.isActive === value,\n    },\n    {\n      title: 'Action',\n      width: '120px',\n      showRefresh: true,\n      render: (text, record) => (\n        <>\n          <div className='actions'>\n            {\n              canPerformAction({\n                moduleId: MODULE.MASTER,\n                actiontoCheck: ACTIONS.EDIT.CODE,\n              }) ?\n                <a\n                  onClick={() => {\n                    handleEditModalOpen(record);\n                  }}\n                >\n                  <Edit />\n                  <p>Edit</p>\n                </a>\n                : null\n            }\n            {\n              canPerformAction({\n                moduleId: MODULE.MASTER,\n                actiontoCheck: ACTIONS.DELETE.CODE,\n              }) ?\n                <a\n                  onClick={() => {\n                    handleDeletePopupOpen(record);\n                  }}\n                >\n                  <Cancel />\n                  <p>Delete</p>\n                </a>\n                : null\n            }\n          </div>\n        </>\n      ),\n    },\n  ];\n\n  const handleUpsertModalOpen = () => {\n    setUpsertModal(true);\n    resetFields();\n  };\n\n  const handleUpsertModalClose = () => {\n    setUpsertModal(false);\n  };\n\n  const handleSubmit = (value) => {\n    setBtnLoading(true);\n    if (getSpecificRecord) {\n      let { method, url, baseURL } = masterUpdate;\n      url = `${url}/${getSpecificRecord._id}`;\n      let obj = {\n        ...value,\n        parentId: props.match.params.id,\n      };\n      axios({ method, url, data: obj, baseURL })\n        .then((response) => {\n          if (response.data.code == 'OK') {\n            setBtnLoading(false);\n            setEditModal(false);\n            Toast.success(response.data.message);\n            fetch();\n          }\n        })\n        .catch((error) => {\n          setBtnLoading(false);\n          Toast.err(error);\n        });\n    } else {\n      setBtnLoading(true);\n      let { method, url, baseURL } = masterUpsert;\n      let obj = {\n        ...value,\n        parentId: props.match.params.id,\n      };\n      axios({ method, url, data: obj, baseURL })\n        .then((response) => {\n          if (response.data.code == 'OK') {\n            setBtnLoading(false);\n            setUpsertModal(false);\n            Toast.success(response.data.message);\n            fetch();\n          }\n        })\n        .catch((error) => {\n          setBtnLoading(false);\n          Toast.error(error);\n        });\n    }\n  };\n  \n  \n\n  const handleEditModalOpen = (data) => {\n    setSpecificRecord(data);\n    setEditModal(true);\n  };\n\n  const handleEditModalClose = () => {\n    setEditModal(false);\n    setSpecificRecord(null);\n  };\n\n  const handleDeletePopupOpen = (data) => {\n    setSpecificRecord(data);\n    setDeletePopup(true);\n  };\n\n  const handleDeletePopupClose = () => {\n    setDeletePopup(false);\n    setSpecificRecord(null);\n  };\n\n  const handleDeleteRecord = (id) => {\n    setDeleteBtnLoading(true);\n    let { url, method, baseURL } = masterDelete;\n    url = `${url}/${id}`;\n    axios({ url, method, baseURL })\n      .then((data) => {\n        if (data.data.code == 'OK') {\n          setDeleteBtnLoading(false);\n          setDeletePopup(false);\n          Toast.success(data.data.message);\n          fetch();\n        }\n      })\n      .catch((error) => {\n        setDeleteBtnLoading(false);\n        Toast.error(error);\n      });\n  };\n\n  const handleSelect = (detail) => {\n    // setFilter({\n    //   ...filter,\n    //   find: {\n    //     parentId: props.match.params?.id,\n    //   },\n    // });\n\n    setMasterDetail(detail);\n  };\n\n  const handleChangeMedium = (val) => {\n    let tempFilter = { ...filter }\n    tempFilter.find = {\n      ...tempFilter.find,\n      homeId: radioValue === MASTER_MEDIUM.HOME ? val : undefined,\n      pharmacyId: radioValue === MASTER_MEDIUM.PHARMACY ? val : undefined,\n    }\n    setFilter(tempFilter)\n  }\n\n  return (\n    <>\n      <div className='pmr_wrap'>\n        <div className='container'>\n          <div className='residents_detail_container'>\n            <MasterHeader\n              headerWidth={() => {\n                setHeaderWidth(false);\n              }}\n              modalTitle='Sub Master'\n              form={form}\n              masterName={getSpecificMasterName}\n              onAdd={handleUpsertModalOpen}\n              length={total}\n              onSearch={handleSearch}\n              masterDetail={masterDetail}\n              mediumLists={mediumLists}\n              onChangeMedium={handleChangeMedium}\n              isAdmin={isAdmin}\n            />\n            <MasterList\n              id={props.match.params.id}\n              onSelect={handleSelect}\n              authUser={authUser}\n            />\n            <Table\n              columns={getColumns()}\n              datasource={data}\n              loading={loading}\n              onChange={handleTableChange}\n              pagination={{\n                current: filter.page,\n                pageSize: filter.limit,\n                total: total,\n                showSizeChanger: true,\n                onShowSizeChange: onShowSizeChange,\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {UpsertModal && (\n        <MasterUpsertForm\n          form={form}\n          loading={btnLoading}\n          visible={UpsertModal}\n          title='Add Sub Master'\n          authUser={authUser}\n          okText='Add'\n          cancelText='Cancel'\n          onOk={handleSubmit}\n          onCancel={handleUpsertModalClose}\n          onClose={handleUpsertModalClose}\n          maskClosable={true}\n          pharmacy={pharmacy}\n          home={authUser && authUser.homeList}\n          onHomePharmacy={handleHomePharmacy}\n          radioValue={radioValue}\n          masterDetail={masterDetail}\n          isAdmin={isAdmin}\n          masterParentId={props.match.params.id}\n        />\n      )}\n\n      {deletePopup && (\n        <ConfirmPopup\n          value={getSpecificRecord}\n          visible={deletePopup}\n          title={`Delete Note -  ${getSpecificRecord.name}`}\n          description='Are you want to delete this record'\n          onOk={() => {\n            handleDeleteRecord(getSpecificRecord._id);\n          }}\n          okText='Yes'\n          cancelText='Cancel'\n          loading={deleteLoading}\n          onClose={handleDeletePopupClose}\n          onCancel={handleDeletePopupClose}\n        />\n      )}\n\n      {editModal && (\n        <MasterUpsertForm\n          value={getSpecificRecord}\n          authUser={authUser}\n          form={form}\n          loading={btnLoading}\n          visible={editModal}\n          title='Edit Sub Master'\n          okText='Update'\n          cancelText='Cancel'\n          onCancel={handleEditModalClose}\n          onClose={handleEditModalClose}\n          maskClosable={true}\n          onOk={handleSubmit}\n          home={authUser && authUser.homeList}\n          onHomePharmacy={handleHomePharmacy}\n          radioValue={radioValue}\n          masterDetail={masterDetail}\n          isAdmin={isAdmin}\n          pharmacy={pharmacy}\n          masterParentId={props.match.params.id}\n        />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (props) => {\n  return props;\n};\nexport default connect(mapStateToProps)(createForm()(withRouter(SubMaster)));\n"]},"metadata":{},"sourceType":"module"}