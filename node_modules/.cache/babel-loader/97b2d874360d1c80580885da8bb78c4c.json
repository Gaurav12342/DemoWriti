{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/DigitalBinder/Table.js\";\nimport React from 'react';\nimport { useTable, usePagination } from 'react-table';\nimport { Refresh } from '../../../../assets/images/pmr';\nimport DisplayNoData from '../../../../components/common/Table/NoData';\nimport Pagination from '../../../../components/common/Table/Pagination/Pagination';\n\nconst Table = ({\n  columns,\n  data,\n  onTableRefresh,\n  isLoading\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    prepareRow,\n    headerGroups,\n    rows,\n    page,\n    gotoPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageSize: 15,\n      pageIndex: 0\n    }\n  }, usePagination);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data_table_cotainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps({\n    className: 'data_table'\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p_head_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, column.render(\"Header\"), !!column.hasRefresh && /*#__PURE__*/React.createElement(Refresh, {\n    onClick: onTableRefresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }))))))), !page || page.length === 0 || isLoading ? /*#__PURE__*/React.createElement(DisplayNoData, {\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }) : page.map((row, i) => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patient_order_d\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, cell.render(\"Cell\")));\n    })));\n  }))), !isLoading && !!rows && !!rows.length && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    total: rows.length,\n    itemsCountPerPage: pageSize,\n    activePage: pageIndex + 1,\n    pagination: {\n      showSizeChanger: true,\n      pageSize: pageSize\n    },\n    pageRangeDisplayed: 5,\n    onPageChange: val => gotoPage(Number(val - 1)),\n    onSizeChange: val => setPageSize(Number(val)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Table;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/DigitalBinder/Table.js"],"names":["React","useTable","usePagination","Refresh","DisplayNoData","Pagination","Table","columns","data","onTableRefresh","isLoading","getTableProps","getTableBodyProps","prepareRow","headerGroups","rows","page","gotoPage","setPageSize","state","pageIndex","pageSize","initialState","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","hasRefresh","length","row","i","getRowProps","cells","cell","getCellProps","display","showSizeChanger","val","Number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useTable, usePagination } from 'react-table';\nimport { Refresh } from '../../../../assets/images/pmr';\nimport DisplayNoData from '../../../../components/common/Table/NoData';\nimport Pagination from '../../../../components/common/Table/Pagination/Pagination';\n\nconst Table = ({ columns, data, onTableRefresh, isLoading }) => {\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    prepareRow,\n    headerGroups,\n    rows,\n    page,\n    gotoPage,\n    setPageSize,\n    state: { pageIndex, pageSize }\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageSize: 15, pageIndex: 0 }\n    },\n    usePagination\n  )\n\n  return (\n    <div>\n      <div className='data_table_cotainer'>\n        <table {...getTableProps({ className: 'data_table' })} >\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  <th {...column.getHeaderProps()}>\n                    <div className='p_head_container'>\n                      {column.render(\"Header\")}\n                      {!!column.hasRefresh &&\n                        <Refresh onClick={onTableRefresh} />\n                      }\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          {\n            (!page || page.length === 0 || isLoading) ?\n              <DisplayNoData loading={isLoading} /> :\n              page.map((row, i) => {\n                prepareRow(row);\n                return (\n                  <tbody {...getTableBodyProps()}>\n                    <tr {...row.getRowProps()}>\n                      {row.cells.map(cell => {\n                        return (\n                          <td {...cell.getCellProps()}>\n                            <div className='patient_order_d'>\n                              {cell.render(\"Cell\")}\n                            </div>\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  </tbody>\n                );\n              })}\n        </table>\n      </div>\n      {\n        !isLoading && !!rows && !!rows.length &&\n        <div style={{ display: 'inline' }}>\n          <Pagination\n            total={rows.length}\n            itemsCountPerPage={pageSize}\n            activePage={pageIndex + 1}\n            pagination={{\n              showSizeChanger: true,\n              pageSize: pageSize\n            }}\n            pageRangeDisplayed={5}\n            onPageChange={val => gotoPage(Number(val - 1))}\n            onSizeChange={val => setPageSize(Number(val))}\n          />\n        </div>\n      }\n    </div>\n  );\n\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}