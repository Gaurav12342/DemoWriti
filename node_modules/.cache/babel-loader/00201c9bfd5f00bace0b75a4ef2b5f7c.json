{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/common/Upload/FileList.js\";\nimport React, { forwardRef, useImperativeHandle, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport FilePreview from './FilePreview';\nimport { Cancel, Download } from './../../../assets/images/resident-detail/index';\nimport { Line } from 'rc-progress';\nimport axios from '../../../services/api/config';\nimport { generatePath } from 'react-router-dom';\nconst FileList = forwardRef(({\n  files = [],\n  onRemoveFile,\n  uploading = false,\n  extraData = {},\n  extraHeaders = {},\n  uploadUrl,\n  error = []\n}, ref) => {\n  const [progress, setProgress] = useState({});\n\n  const uploadFiles = async () => {\n    const promises = []; // for (let i = 0; i < files?.length; i++) {\n    //   let file = files[i];\n    //   //generate file data\n    //   if (file.uploaded || !file.isValid) continue //return if file is uploaded or not valid\n    //   const formData = new FormData()\n    //   formData.append('file', file)\n    //   for (let [key, value] of Object.entries(extraData)) {\n    //     formData.append(key, value)\n    //   }\n    //   //create promise\n    //   promises.push(\n    //     axios.post(\n    //       uploadUrl,\n    //       formData,\n    //       {\n    //         headers: {\n    //           'Content-Type': 'multipart/form-data',\n    //           ...extraHeaders\n    //         },\n    //         onUploadProgress: (e) => {\n    //           if (e.total > 0) {\n    //             let percent = e.loaded / e.total * 100;\n    //             setProgress(p => ({ ...p, [file.key]: percent }))\n    //           }\n    //         }\n    //       }\n    //     )\n    //   )\n    // }\n\n    const formData = new FormData();\n\n    for (let i = 0; i < (files === null || files === void 0 ? void 0 : files.length); i++) {\n      let file = files[i]; //generate file data\n\n      if (file.uploaded || !file.isValid) continue; //return if file is uploaded or not valid\n\n      formData.append('file[]', file);\n    }\n\n    if (extraData) {\n      for (let [key, value] of Object.entries(extraData)) {\n        formData.append(key, value);\n      }\n    }\n\n    promises.push(axios({ ...uploadUrl,\n      data: formData,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        ...extraHeaders\n      }\n    }));\n\n    try {\n      return await Promise.all(promises);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n\n  const showError = file => {\n    // to show error after API call\n    let isErr = error.find(x => file.name === x.name);\n\n    if (isErr) {\n      return isErr.err;\n    } else return '';\n  };\n\n  useImperativeHandle(ref, () => ({\n    uploadFiles\n  }));\n\n  const getPath = file => {\n    return URL.createObjectURL(file);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fileWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, files.map(file => {\n    file.isUploadErr = showError(file);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flexBasis: '50%',\n        marginBottom: 15\n      },\n      key: file.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadFileList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filePreview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FilePreview, {\n      file: file,\n      key: file.key + '_preview',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }), (!uploading && !file.uploaded || file.isUploadErr) && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"removeFile\",\n      onClick: () => onRemoveFile(file.key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Cancel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fileInformation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `fileName ${!file.isValid && 'fileError'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, file.name, \" \\xA0\", /*#__PURE__*/React.createElement(\"a\", {\n      href: getPath(file),\n      target: \"_blank\",\n      download: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(Download, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(Line, {\n      percent: progress[file.key] || file.isValid ? 100 : 0,\n      strokeWidth: \"4\",\n      strokeColor: \"#609FAE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }))), !file.isValid && !!file.errorMsg && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, file.errorMsg), error && error.length ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, file.isUploadErr) : null);\n  }));\n});\nexport default FileList;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/common/Upload/FileList.js"],"names":["React","forwardRef","useImperativeHandle","useState","useSelector","FilePreview","Cancel","Download","Line","axios","generatePath","FileList","files","onRemoveFile","uploading","extraData","extraHeaders","uploadUrl","error","ref","progress","setProgress","uploadFiles","promises","formData","FormData","i","length","file","uploaded","isValid","append","key","value","Object","entries","push","data","headers","Promise","all","err","reject","showError","isErr","find","x","name","getPath","URL","createObjectURL","map","isUploadErr","flexBasis","marginBottom","errorMsg"],"mappings":"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","sourcesContent":["import React, { forwardRef, useImperativeHandle, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport FilePreview from './FilePreview';\nimport {\n  Cancel,\n  Download,\n} from './../../../assets/images/resident-detail/index';\n\nimport { Line } from 'rc-progress';\nimport axios from '../../../services/api/config';\nimport { generatePath } from 'react-router-dom';\n\n\nconst FileList = forwardRef(\n  (\n    {\n      files = [],\n      onRemoveFile,\n      uploading = false,\n      extraData = {},\n      extraHeaders = {},\n      uploadUrl,\n      error = [],\n    },\n    ref\n  ) => {\n    const [progress, setProgress] = useState({});\n\n    const uploadFiles = async () => {\n      const promises = [];\n      // for (let i = 0; i < files?.length; i++) {\n      //   let file = files[i];\n\n      //   //generate file data\n      //   if (file.uploaded || !file.isValid) continue //return if file is uploaded or not valid\n      //   const formData = new FormData()\n      //   formData.append('file', file)\n      //   for (let [key, value] of Object.entries(extraData)) {\n      //     formData.append(key, value)\n      //   }\n\n      //   //create promise\n      //   promises.push(\n      //     axios.post(\n      //       uploadUrl,\n      //       formData,\n      //       {\n      //         headers: {\n      //           'Content-Type': 'multipart/form-data',\n      //           ...extraHeaders\n      //         },\n      //         onUploadProgress: (e) => {\n      //           if (e.total > 0) {\n      //             let percent = e.loaded / e.total * 100;\n      //             setProgress(p => ({ ...p, [file.key]: percent }))\n      //           }\n      //         }\n      //       }\n      //     )\n      //   )\n      // }\n\n      const formData = new FormData();\n      for (let i = 0; i < files?.length; i++) {\n        let file = files[i];\n        //generate file data\n        if (file.uploaded || !file.isValid) continue; //return if file is uploaded or not valid\n        formData.append('file[]', file);\n      }\n      if (extraData) {\n        for (let [key, value] of Object.entries(extraData)) {\n          formData.append(key, value);\n        }\n      }\n      promises.push(\n        axios({\n          ...uploadUrl,\n          data: formData,\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            ...extraHeaders,\n          },\n        })\n      );\n\n      try {\n        return await Promise.all(promises);\n      } catch (err) {\n        return Promise.reject(err);\n      }\n    };\n\n\n    const showError = (file) => {\n      // to show error after API call\n      let isErr = error.find((x) => file.name === x.name);\n      if (isErr) {\n        return isErr.err;\n      } else return '';\n    };\n\n    useImperativeHandle(ref, () => ({ uploadFiles }));\n\n    const getPath = (file) => {\n      return URL.createObjectURL(file)\n    }\n\n    return (\n      <div className='fileWrapper'>\n        {files.map((file) => {\n          file.isUploadErr = showError(file);\n          return (\n            <div style={{ flexBasis: '50%', marginBottom: 15 }} key={file.key}>\n              <div className='uploadFileList'>\n                <div className='filePreview'>\n                  <FilePreview file={file} key={file.key + '_preview'} />\n                  {((!uploading && !file.uploaded) || file.isUploadErr) && (\n                    <span\n                      className='removeFile'\n                      onClick={() => onRemoveFile(file.key)}\n                    >\n                      <Cancel />\n                    </span>\n                  )}\n                </div>\n                <div className='fileInformation'>\n                  <span className={`fileName ${!file.isValid && 'fileError'}`}>\n                    {file.name} &nbsp;\n                                       <a href={getPath(file)} target=\"_blank\" download>\n                      <Download />\n                    </a>\n                  </span>\n                  <Line\n                    percent={progress[file.key] || file.isValid ? 100 : 0}\n                    strokeWidth='4'\n                    strokeColor='#609FAE'\n                  />\n                </div>\n              </div>\n              {!file.isValid && !!file.errorMsg && (\n                <span className='errorText'>{file.errorMsg}</span>\n              )}\n              {error && error.length ? (\n                <span className='errorText'>{file.isUploadErr}</span>\n              ) : null}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nexport default FileList;\n"]},"metadata":{},"sourceType":"module"}