{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/common/ConfirmPopup.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport Dialog from 'rc-dialog';\nimport PropTypes from 'prop-types';\nimport Button from '../common/Button';\n\nconst ConfirmPopup = props => {\n  const {\n    visible,\n    onClose,\n    closeIcon,\n    description,\n    title,\n    footerDescription,\n    okText,\n    cancelText,\n    onOk,\n    onCancel,\n    children,\n    style\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog // {...props}\n  , {\n    visible: visible,\n    onClose: onClose,\n    closable: true,\n    closeIcon: closeIcon,\n    onCancel: onCancel,\n    className: \"lock_popup del-notes-wrap\",\n    style: style,\n    maskClosable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"name_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, description), children, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"screen-btn gray-btn\",\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, cancelText), /*#__PURE__*/React.createElement(Button, {\n    className: \"screen-btn\",\n    onClick: onOk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, okText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottom-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, footerDescription))));\n};\n\nfunction Popup(props) {\n  const div = document.createElement('div');\n  document.body.appendChild(div);\n\n  function handleCancel() {\n    let currentConfig = { ...props,\n      visible: false,\n      afterClose: destroy()\n    };\n    render(currentConfig);\n\n    if (props.onCancel) {\n      props.onCancel();\n    }\n  }\n\n  function handleOk() {\n    handleCancel();\n\n    if (props.onOk) {\n      props.onOk();\n    }\n  }\n\n  function destroy() {\n    const unmountResult = ReactDOM.unmountComponentAtNode(div);\n\n    if (unmountResult && div.parentNode) {\n      div.parentNode.removeChild(div);\n    }\n\n    return;\n  }\n\n  function render(props) {\n    setTimeout(() => {\n      ReactDOM.render( /*#__PURE__*/React.createElement(ConfirmPopup, Object.assign({}, props, {\n        onCancel: handleCancel,\n        onOk: handleOk,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      })), div);\n    });\n  }\n\n  if (props.func) render(props);else return /*#__PURE__*/React.createElement(ConfirmPopup, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }));\n}\n\n;\nConfirmPopup.defaultProps = {\n  // closable: true,\n  // className: 'lock_popup del-notes-wrap',\n  // maskClosable: true,\n  okText: 'Yes',\n  cancelText: 'No',\n  destroyOnClose: true\n};\nConfirmPopup.propTypes = {\n  visible: PropTypes.bool,\n  onClose: PropTypes.func,\n  children: PropTypes.string,\n  closable: PropTypes.bool,\n  closeIcon: PropTypes.node,\n  title: PropTypes.string,\n  className: PropTypes.string,\n  description: PropTypes.string,\n  footerDescription: PropTypes.string,\n  okText: PropTypes.string,\n  cancelText: PropTypes.string,\n  onOk: PropTypes.func,\n  onCancel: PropTypes.func,\n  style: PropTypes.string,\n  maskClosable: PropTypes.bool\n};\nexport default Popup;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/common/ConfirmPopup.js"],"names":["React","useState","useEffect","ReactDOM","Dialog","PropTypes","Button","ConfirmPopup","props","visible","onClose","closeIcon","description","title","footerDescription","okText","cancelText","onOk","onCancel","children","style","Popup","div","document","createElement","body","appendChild","handleCancel","currentConfig","afterClose","destroy","render","handleOk","unmountResult","unmountComponentAtNode","parentNode","removeChild","setTimeout","func","defaultProps","destroyOnClose","propTypes","bool","string","closable","node","className","maskClosable"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport Dialog from 'rc-dialog';\nimport PropTypes from 'prop-types';\nimport Button from '../common/Button';\n\nconst ConfirmPopup = (props) => {\n  const {\n    visible,\n    onClose,\n    closeIcon,\n    description,\n    title,\n    footerDescription,\n    okText,\n    cancelText,\n    onOk,\n    onCancel,\n    children,\n    style,\n  } = props;\n  return <>\n\n    <Dialog\n      // {...props}\n      visible={visible}\n      onClose={onClose}\n      closable={true}\n      closeIcon={closeIcon}\n      onCancel={onCancel}\n      className='lock_popup del-notes-wrap'\n      style={style}\n      maskClosable={true}\n    >\n      <div className='popup-content'>\n        <h3 className='name_head'>{title}</h3>\n        <div className='bb'></div>\n        <p>{description}</p>\n        {children}\n        <div>\n          <Button className='screen-btn gray-btn' onClick={onCancel}>\n            {cancelText}\n          </Button>\n          <Button className='screen-btn' onClick={onOk}>\n            {okText}\n          </Button>\n        </div>\n\n        <div className='bottom-line'>{footerDescription}</div>\n      </div>\n    </Dialog>\n  </>\n}\nfunction Popup(props) {\n  const div = document.createElement('div');\n  document.body.appendChild(div);\n\n  function handleCancel() {\n    let currentConfig = {\n      ...props,\n      visible: false,\n      afterClose: destroy()\n    };\n    render(currentConfig);\n    if (props.onCancel) {\n      props.onCancel()\n    }\n\n  }\n\n  function handleOk() {\n    handleCancel()\n    if (props.onOk) {\n      props.onOk()\n    }\n  }\n\n  function destroy() {\n    const unmountResult = ReactDOM.unmountComponentAtNode(div);\n    if (unmountResult && div.parentNode) {\n      div.parentNode.removeChild(div);\n    }\n    return\n  }\n\n  function render(props) {\n    setTimeout(() => {\n      ReactDOM.render(\n        <ConfirmPopup {...props}\n          onCancel={handleCancel}\n          onOk={handleOk}\n        />,\n        div,\n      );\n    });\n  }\n\n  if (props.func)\n    render(props)\n  else return <ConfirmPopup {...props} />\n\n};\n\nConfirmPopup.defaultProps = {\n  // closable: true,\n  // className: 'lock_popup del-notes-wrap',\n  // maskClosable: true,\n  okText: 'Yes',\n  cancelText: 'No',\n  destroyOnClose: true,\n};\n\nConfirmPopup.propTypes = {\n  visible: PropTypes.bool,\n  onClose: PropTypes.func,\n  children: PropTypes.string,\n  closable: PropTypes.bool,\n  closeIcon: PropTypes.node,\n  title: PropTypes.string,\n  className: PropTypes.string,\n  description: PropTypes.string,\n  footerDescription: PropTypes.string,\n  okText: PropTypes.string,\n  cancelText: PropTypes.string,\n  onOk: PropTypes.func,\n  onCancel: PropTypes.func,\n  style: PropTypes.string,\n  maskClosable: PropTypes.bool,\n};\n\nexport default Popup;\n"]},"metadata":{},"sourceType":"module"}