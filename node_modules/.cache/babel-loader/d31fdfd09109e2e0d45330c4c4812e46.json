{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Permission/components/ViewRolePermission.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Modal from '../../../components/common/Popup';\nimport { get } from '../../../services/api/routes/permission';\nimport PermissionList from './PermissionList';\nimport axios from '../../../services/api/services/common';\nimport { Spin } from '../../../components/common';\n\nconst _ = require('lodash');\n\nconst View = props => {\n  const {\n    id,\n    onCancel\n  } = props;\n  const [loader, setLoader] = useState(false);\n  const [name, setName] = useState('');\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch();\n  }, [id]);\n\n  const fetch = async () => {\n    setLoader(true);\n    const {\n      method,\n      url,\n      baseURL\n    } = get;\n    let res = await axios({\n      baseURL,\n      method,\n      url: url + id,\n      params: {\n        populate: true\n      }\n    });\n\n    if (res) {\n      if (res.code === 'OK') {\n        setName(res.data.name);\n        setData(_.cloneDeep(res.data.roleAccessPermissions));\n      }\n    }\n\n    setLoader(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    style: {\n      width: '800px'\n    },\n    visible: true,\n    title: `Role - ${name}`,\n    footer: null,\n    onCancel: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, loader ? /*#__PURE__*/React.createElement(Spin, {\n    spinning: loader,\n    str: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(PermissionList, {\n    listData: data,\n    isView: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  })));\n};\n\nexport default View;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Permission/components/ViewRolePermission.js"],"names":["React","useEffect","useState","Modal","get","PermissionList","axios","Spin","_","require","View","props","id","onCancel","loader","setLoader","name","setName","data","setData","fetch","method","url","baseURL","res","params","populate","code","cloneDeep","roleAccessPermissions","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,SAASC,GAAT,QAAoB,yCAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,uCAAlB;AACA,SAASC,IAAT,QAAqB,4BAArB;;AAEA,MAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAmBF,KAAzB;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,KAAK;AACR,GAFQ,EAEN,CAACR,EAAD,CAFM,CAAT;;AAIA,QAAMQ,KAAK,GAAG,YAAY;AACtBL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACA,UAAM;AAAEM,MAAAA,MAAF;AAAUC,MAAAA,GAAV;AAAeC,MAAAA;AAAf,QAA2BnB,GAAjC;AACA,QAAIoB,GAAG,GAAG,MAAMlB,KAAK,CAAC;AAAEiB,MAAAA,OAAF;AAAWF,MAAAA,MAAX;AAAmBC,MAAAA,GAAG,EAAEA,GAAG,GAAGV,EAA9B;AAAkCa,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AAA1C,KAAD,CAArB;;AACA,QAAIF,GAAJ,EAAS;AACL,UAAIA,GAAG,CAACG,IAAJ,KAAa,IAAjB,EAAuB;AACnBV,QAAAA,OAAO,CAACO,GAAG,CAACN,IAAJ,CAASF,IAAV,CAAP;AACAG,QAAAA,OAAO,CAACX,CAAC,CAACoB,SAAF,CAAYJ,GAAG,CAACN,IAAJ,CAASW,qBAArB,CAAD,CAAP;AACH;AACJ;;AACDd,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAXD;;AAaA,sBAAO,uDACH,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEe,MAAAA,KAAK,EAAE;AAAT,KAAd;AACI,IAAA,OAAO,EAAE,IADb;AACmB,IAAA,KAAK,EAAG,UAASd,IAAK,EADzC;AAEI,IAAA,MAAM,EAAE,IAFZ;AAGI,IAAA,QAAQ,EAAEH,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMQC,MAAM,gBACF,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,MAAhB;AAAwB,IAAA,GAAG,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,gBAEA,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEI,IAA1B;AAAgC,IAAA,MAAM,EAAE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARd,CADG,CAAP;AAaH,CApCD;;AAqCA,eAAeR,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Modal from '../../../components/common/Popup'\nimport { get } from '../../../services/api/routes/permission'\nimport PermissionList from './PermissionList'\nimport axios from '../../../services/api/services/common'\nimport { Spin } from '../../../components/common'\n\nconst _ = require('lodash')\nconst View = (props) => {\n    const { id, onCancel } = props\n    const [loader, setLoader] = useState(false)\n    const [name, setName] = useState('')\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        fetch()\n    }, [id])\n\n    const fetch = async () => {\n        setLoader(true)\n        const { method, url, baseURL } = get\n        let res = await axios({ baseURL, method, url: url + id, params: { populate: true } })\n        if (res) {\n            if (res.code === 'OK') {\n                setName(res.data.name)\n                setData(_.cloneDeep(res.data.roleAccessPermissions))\n            }\n        }\n        setLoader(false)\n    }\n\n    return <>\n        <Modal style={{ width: '800px' }}\n            visible={true} title={`Role - ${name}`}\n            footer={null}\n            onCancel={onCancel}\n        >\n            {\n                loader ?\n                    <Spin spinning={loader} str='center'></Spin>\n                    : <PermissionList listData={data} isView={true} />\n            }\n        </Modal>\n    </>\n}\nexport default View"]},"metadata":{},"sourceType":"module"}