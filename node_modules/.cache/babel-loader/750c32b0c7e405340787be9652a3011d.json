{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/MedReviewTodo/index.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport TodoListContainer from './components/TodoListContainer';\nimport PrescriptionContainer from './components/PrescriptionContainer';\n\nfunction Todo({\n  location\n}) {\n  var _location$state;\n\n  const {\n    category,\n    subCategory,\n    viewType: paramViewType\n  } = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.propsFil) || {};\n  const [todo, setTodo] = useState(false);\n  const [activeTodo, setActiveTodo] = useState(null);\n  const [viewType, setViewType] = useState(paramViewType);\n  const [activeSubCategory, setActiveSubCategory] = useState();\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const handleResize = e => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n  }, []);\n\n  const handleToDo = () => {\n    setTodo(!todo);\n  };\n\n  const todoListContainerProps = {\n    activeSubCategory: activeSubCategory,\n    onChangeListview: val => setViewType(val),\n    onsetActiveTodo: val => setActiveTodo(val),\n    onSetActiveSubCategory: val => setActiveSubCategory(val)\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, windowWidth < 1024 ? todo ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"responsive_ipad_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TodoListContainer, Object.assign({\n    todoListContainerProps: todoListContainerProps\n  }, {\n    category,\n    subCategory,\n    viewType\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }))) : '' : /*#__PURE__*/React.createElement(TodoListContainer, Object.assign({\n    todoListContainerProps: todoListContainerProps\n  }, {\n    category,\n    subCategory,\n    viewType\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(PrescriptionContainer, Object.assign({\n    activeTodo: activeTodo,\n    viewType: viewType\n  }, {\n    category,\n    subCategory,\n    viewType\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `chat_toggle todo ` + (todo ? 'open' : ''),\n    onClick: handleToDo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"To Dos \\xA0 & \\xA0 Residents\"))));\n}\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  const {\n    authUser\n  } = auth;\n  return {\n    authUser\n  };\n};\n\nexport default connect(mapStateToProps)(Todo);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/MedReviewTodo/index.js"],"names":["React","Component","useEffect","useState","connect","TodoListContainer","PrescriptionContainer","Todo","location","category","subCategory","viewType","paramViewType","state","propsFil","todo","setTodo","activeTodo","setActiveTodo","setViewType","activeSubCategory","setActiveSubCategory","windowWidth","setWindowWidth","window","innerWidth","handleResize","e","addEventListener","handleToDo","todoListContainerProps","onChangeListview","val","onsetActiveTodo","onSetActiveSubCategory","mapStateToProps","auth","authUser"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\nimport TodoListContainer from './components/TodoListContainer'\nimport PrescriptionContainer from './components/PrescriptionContainer'\n\nfunction Todo({ location }) {\n  const { category, subCategory, viewType: paramViewType } = location.state?.propsFil || {};\n\n  const [todo, setTodo] = useState(false);\n  const [activeTodo, setActiveTodo] = useState(null);\n  const [viewType, setViewType] = useState(paramViewType);\n  const [activeSubCategory, setActiveSubCategory] = useState();\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const handleResize = (e) => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize)\n  }, [])\n\n  const handleToDo = () => {\n    setTodo(!todo);\n  }\n\n  const todoListContainerProps = {\n    activeSubCategory: activeSubCategory,\n    onChangeListview: (val) => setViewType(val),\n    onsetActiveTodo: (val) => setActiveTodo(val),\n    onSetActiveSubCategory: (val) => setActiveSubCategory(val)\n  }\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"todo_wrap\">\n          {(windowWidth < 1024) ? (todo ?\n            <div className=\"responsive_ipad_wrap\">\n              <TodoListContainer todoListContainerProps={todoListContainerProps} {...{ category, subCategory, viewType }} />\n            </div>\n            : '') :\n            <TodoListContainer todoListContainerProps={todoListContainerProps} {...{ category, subCategory, viewType }} />\n          }\n          <PrescriptionContainer activeTodo={activeTodo} viewType={viewType} {...{ category, subCategory, viewType }} />\n        </div>\n        <div className={`chat_toggle todo ` + (todo ? 'open' : '')}\n          onClick={handleToDo}>\n          <p>\n            To Dos &nbsp; & &nbsp; Residents\n        </p>\n        </div>\n      </div>\n    </>\n  );\n}\nconst mapStateToProps = ({ auth }) => {\n  const { authUser } = auth\n  return {\n    authUser\n  }\n}\nexport default connect(mapStateToProps)(Todo);"]},"metadata":{},"sourceType":"module"}