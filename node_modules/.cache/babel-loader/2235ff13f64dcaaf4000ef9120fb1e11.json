{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/SubscriptionUpsert/components/PermissionList.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { PERMISSION_ACCESS_TYPE, TODOS } from '../../../constants/subscription';\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport { Move } from '../../../assets/images';\nconst DragHandle = SortableHandle(() => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"drag_icon\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 41\n  }\n}, /*#__PURE__*/React.createElement(Move, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 68\n  }\n})));\nconst SortableItem = SortableElement(({\n  visibleAdd,\n  x,\n  mod,\n  submod,\n  handleChange\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"row_group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  className: \"filter_check\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"input\", {\n  type: \"checkbox\",\n  name: \"type\",\n  disabled: !visibleAdd,\n  value: x.code,\n  checked: x.isSelect,\n  onChange: e => handleChange(x, e, mod.module, submod.subModule),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"checkbox\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"lbl\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 17\n  }\n}, x.label || x.name))), visibleAdd ? /*#__PURE__*/React.createElement(DragHandle, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 23\n  }\n}) : null));\nconst SortableList = SortableContainer(({\n  items,\n  handleChange,\n  mod,\n  submod,\n  visibleAdd\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, items.map((x, i) => /*#__PURE__*/React.createElement(SortableItem, {\n    key: x.code,\n    index: i,\n    useDragHandle: true,\n    visibleAdd: visibleAdd,\n    mod: mod,\n    submod: submod,\n    x: x,\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })));\n});\n\nconst PermissionsList = props => {\n  const {\n    listData,\n    saveLoader,\n    onSetPermission,\n    visibleAdd,\n    onSelection,\n    isView,\n    onSortEnd\n  } = props;\n  const [expandRow, setExpandRow] = useState(true);\n\n  const selection = (data, mod) => {\n    let obj = {\n      data: data,\n      module: mod\n    };\n    onSelection(obj);\n  };\n\n  const handleExpandMain = () => {\n    setExpandRow(!expandRow);\n  };\n\n  const handleChange = (data, type, mod, submod) => {\n    //mod is to identify submodule data\n    // let obj = { ...permission }\n    // if (str)\n    //     obj[data.submodule] = type\n    // else\n    //     obj[data.module] = type\n    let obj = {\n      data: data,\n      type: type,\n      module: mod,\n      subModule: submod\n    };\n    onSetPermission(obj);\n  };\n\n  const sortEnd = (e, submod, mod) => {\n    const {\n      oldIndex,\n      newIndex\n    } = e;\n    let items = arrayMove(submod.actions, oldIndex, newIndex);\n    items.map((x, i) => {\n      x.sequence = i + 1;\n      return x;\n    });\n    let index = mod.subModules.findIndex(x => x.subModule === submod.subModule);\n    if (index > -1) mod.subModules[index].actions = items;\n    onSortEnd(mod);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"permissions_list_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, listData === null || listData === void 0 ? void 0 : listData.map(mod => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: mod.module,\n      className: `permission_group ` + (expandRow ? 'collapsed' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"permission_group_head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, !isView && /*#__PURE__*/React.createElement(\"label\", {\n      className: \"filter_check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      disabled: !visibleAdd,\n      checked: mod.isSelect,\n      onChange: e => selection(mod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, mod.moduleName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"apply_permission_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, Object.keys(PERMISSION_ACCESS_TYPE).map((x, i) => {\n      return /*#__PURE__*/React.createElement(\"label\", {\n        className: \"filter_check radio\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 48\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"type\",\n        disabled: !visibleAdd,\n        value: PERMISSION_ACCESS_TYPE[x],\n        checked: PERMISSION_ACCESS_TYPE[x] === mod.permissionAccesstype,\n        onChange: () => handleChange(mod, PERMISSION_ACCESS_TYPE[x]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"checkbox radio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"lbl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 45\n        }\n      }, x.replace(/_/g, ' ')));\n    }))), mod.subModules && mod.subModules.length ? mod.subModules.map(submod => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"permission_group_row\",\n      key: submod.subModule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 58\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row_group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `title`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    }, !isView && /*#__PURE__*/React.createElement(\"label\", {\n      className: \"filter_check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: submod.isSelect,\n      disabled: !visibleAdd,\n      onChange: e => selection(submod, mod.module),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 41\n      }\n    }, submod.subModuleName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"apply_permission_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }, Object.keys(PERMISSION_ACCESS_TYPE).map((x, i) => {\n      return /*#__PURE__*/React.createElement(\"label\", {\n        className: \"filter_check\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 56\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"type\",\n        disabled: !visibleAdd,\n        value: PERMISSION_ACCESS_TYPE[x],\n        checked: PERMISSION_ACCESS_TYPE[x] === submod.permissionAccesstype,\n        onChange: () => handleChange(submod, PERMISSION_ACCESS_TYPE[x], mod.module),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"checkbox radio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"lbl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 53\n        }\n      }, x.replace(/_/g, ' ')));\n    }))), submod.permissionAccesstype === PERMISSION_ACCESS_TYPE.DATA && TODOS.includes(submod.subModule) ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row_group_content expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(SortableList, {\n      items: submod.actions,\n      useDragHandle: true,\n      shouldCancelStart: () => {\n        if (!visibleAdd) return true;else return false;\n      },\n      onSortEnd: e => sortEnd(e, submod, mod),\n      visibleAdd: visibleAdd,\n      mod: mod,\n      submod: submod,\n      handleChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 41\n      }\n    })) : null)) : null);\n  })));\n};\n\nexport default PermissionsList;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/SubscriptionUpsert/components/PermissionList.js"],"names":["React","Component","useState","useEffect","PERMISSION_ACCESS_TYPE","TODOS","SortableContainer","SortableElement","SortableHandle","arrayMove","Move","DragHandle","SortableItem","visibleAdd","x","mod","submod","handleChange","code","isSelect","e","module","subModule","label","name","SortableList","items","map","i","PermissionsList","props","listData","saveLoader","onSetPermission","onSelection","isView","onSortEnd","expandRow","setExpandRow","selection","data","obj","handleExpandMain","type","sortEnd","oldIndex","newIndex","actions","sequence","index","subModules","findIndex","moduleName","Object","keys","permissionAccesstype","replace","length","subModuleName","DATA","includes"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { PERMISSION_ACCESS_TYPE, TODOS } from '../../../constants/subscription'\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport { Move } from '../../../assets/images'\n\nconst DragHandle = SortableHandle(() => <div className=\"drag_icon\"><Move /></div>)\nconst SortableItem = SortableElement(({ visibleAdd, x, mod, submod, handleChange }) => (\n    <div className=\"row_group\">\n        <div className=\"title\">\n            <label className=\"filter_check\">\n                <input type=\"checkbox\" name=\"type\" disabled={!visibleAdd}\n                    value={x.code}\n                    checked={x.isSelect}\n                    onChange={(e) => handleChange(x, e, mod.module, submod.subModule)}\n                />\n                <span className=\"checkbox\"></span>\n                <span className=\"lbl\">{x.label || x.name}</span>\n            </label>\n        </div>\n        {visibleAdd ? <DragHandle /> : null}\n    </div>\n));\n\nconst SortableList = SortableContainer(({ items, handleChange, mod, submod, visibleAdd }) => {\n    return (\n        <div>\n            {items.map((x, i) => (\n                <SortableItem key={x.code} index={i} useDragHandle={true}\n                    visibleAdd={visibleAdd} mod={mod} submod={submod} x={x}\n                    handleChange={handleChange} />\n            ))}\n        </div>\n    );\n});\n\nconst PermissionsList = props => {\n    const { listData, saveLoader, onSetPermission, visibleAdd, onSelection, isView, onSortEnd } = props\n    const [expandRow, setExpandRow] = useState(true)\n\n    const selection = (data, mod) => {\n        let obj = {\n            data: data, module: mod\n        }\n        onSelection(obj)\n    }\n\n    const handleExpandMain = () => {\n        setExpandRow(!expandRow)\n    };\n\n    const handleChange = (data, type, mod, submod) => {\n        //mod is to identify submodule data\n        // let obj = { ...permission }\n        // if (str)\n        //     obj[data.submodule] = type\n        // else\n        //     obj[data.module] = type\n        let obj = {\n            data: data, type: type, module: mod, subModule: submod\n        }\n        onSetPermission(obj)\n    };\n\n    const sortEnd = (e, submod, mod) => {\n        const { oldIndex, newIndex } = e\n        let items = arrayMove(submod.actions, oldIndex, newIndex)\n        items.map((x, i) => {\n            x.sequence = i + 1\n            return x\n        })\n        let index = mod.subModules.findIndex(x => x.subModule === submod.subModule)\n        if (index > -1)\n            mod.subModules[index].actions = items\n        onSortEnd(mod)\n    }\n\n    return <>\n        <div className=\"permissions_list_wrap\">\n            {\n                listData?.map(mod => {\n                    return <div key={mod.module}\n                        className={`permission_group ` + (expandRow ? 'collapsed' : '')} >\n                        <div className=\"permission_group_head\">\n                            <div className='title'>\n                                {\n                                    !isView &&\n                                    <label className=\"filter_check\">\n                                        <input type=\"checkbox\" disabled={!visibleAdd} checked={mod.isSelect}\n                                            onChange={(e) => selection(mod)} />\n                                        <span className=\"checkbox\"></span>\n                                    </label>\n                                }\n                                <h4>{mod.moduleName}</h4>\n                            </div>\n                            <div className=\"apply_permission_container\">\n                                {\n                                    Object.keys(PERMISSION_ACCESS_TYPE).map((x, i) => {\n                                        return <label className=\"filter_check radio\" key={i}>\n                                            <input type=\"checkbox\" name=\"type\" disabled={!visibleAdd}\n                                                value={PERMISSION_ACCESS_TYPE[x]}\n                                                checked={PERMISSION_ACCESS_TYPE[x] === mod.permissionAccesstype}\n                                                onChange={() => handleChange(mod, PERMISSION_ACCESS_TYPE[x])} />\n                                            <span className=\"checkbox radio\"></span>\n                                            <span className=\"lbl\">{x.replace(/_/g, ' ')}</span>\n                                        </label>\n                                    })\n                                }\n                            </div>\n                        </div>\n                        {mod.subModules && mod.subModules.length ?\n                            mod.subModules.map(submod => <div className=\"permission_group_row\" key={submod.subModule}>\n                                <div className=\"row_group\">\n                                    <div className={`title`}>\n                                        {\n                                            !isView &&\n                                            <label className=\"filter_check\">\n                                                <input type=\"checkbox\" checked={submod.isSelect} disabled={!visibleAdd}\n                                                    onChange={(e) => selection(submod, mod.module)} />\n                                                <span className=\"checkbox\"></span>\n                                            </label>\n                                        }\n                                        <h4>{submod.subModuleName}</h4>\n                                    </div>\n                                    <div className=\"apply_permission_container\">\n                                        {\n                                            Object.keys(PERMISSION_ACCESS_TYPE).map((x, i) => {\n                                                return <label className=\"filter_check\" key={i}>\n                                                    <input type=\"checkbox\" name=\"type\" disabled={!visibleAdd}\n                                                        value={PERMISSION_ACCESS_TYPE[x]}\n                                                        checked={PERMISSION_ACCESS_TYPE[x] === submod.permissionAccesstype}\n                                                        onChange={() => handleChange(submod, PERMISSION_ACCESS_TYPE[x], mod.module)} />\n                                                    <span className=\"checkbox radio\"></span>\n                                                    <span className=\"lbl\">{x.replace(/_/g, ' ')}</span>\n                                                </label>\n                                            })\n                                        }\n                                    </div>\n                                </div>\n                                {submod.permissionAccesstype === PERMISSION_ACCESS_TYPE.DATA &&\n                                    TODOS.includes(submod.subModule) ?\n                                    <div className='row_group_content expand'>\n                                        <SortableList items={submod.actions}\n                                            useDragHandle={true}\n                                            shouldCancelStart={() => {\n                                                if (!visibleAdd)\n                                                    return true\n                                                else return false\n                                            }}\n                                            onSortEnd={(e) => sortEnd(e, submod, mod)}\n                                            visibleAdd={visibleAdd} mod={mod} submod={submod}\n                                            handleChange={handleChange} />\n                                    </div>\n                                    : null\n                                }\n                            </div>\n                            ) : null\n                        }\n                    </div>\n                })\n            }\n        </div>\n    </>\n}\nexport default PermissionsList;"]},"metadata":{},"sourceType":"module"}