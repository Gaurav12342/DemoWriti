{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/User/Components/AddUser/SettingModal.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { createForm } from \"rc-form\";\nimport Modal from '../../../../components/common/Popup';\nimport { Toast } from '../../../../components/common';\nimport { USER_TYPE } from '../../../../constants/User';\nimport Setting from './SettingForm';\nimport axios from \"../../../../services/api/services/common\";\nimport { editUser } from \"../../../../services/api/routes/user\";\n\nconst SettingModal = props => {\n  const [loader, setLoader] = useState(false);\n  const {\n    form,\n    detail,\n    visible,\n    homeId,\n    authUser,\n    onCancel\n  } = props;\n  console.log(\"ðŸš€ ~ file: SettingModal.js ~ line 13 ~ detail\", detail);\n  const pharmacyId = authUser.type === USER_TYPE.PHARMACY.ADMIN ? authUser.pharmacyId._id : undefined;\n  useEffect(() => {\n    if (visible && detail && detail.homeId && detail.homeId.subscriptionRoleGroup && form) {\n      if (!form.getFieldValue('subscriptionRoleGroup')) form.setFieldsValue({\n        subscriptionRoleGroup: detail.homeId.subscriptionRoleGroup._id\n      });\n    }\n  }, [detail, visible, form]);\n\n  const handleSave = async () => {\n    form.validateFields(async (err, values) => {\n      if (err) return;\n      setLoader(true);\n      let req = { ...values,\n        homeId: homeId || undefined,\n        pharmacyId: pharmacyId\n      };\n      let {\n        url\n      } = editUser;\n      url = url + detail._id;\n      let res = await axios({ ...editUser,\n        url,\n        data: req\n      });\n\n      if (res) {\n        if (res && res.code === 'OK') {\n          Toast.success(res.message);\n          onCancel(res.data);\n        } else Toast.error(res.message);\n      }\n\n      setLoader(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    title: `Assign Role Permission  For ${detail.mergeLFName}`,\n    onOk: handleSave,\n    onCancel: onCancel,\n    okText: \"Save\",\n    okButtonProps: {\n      loading: loader\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Setting, {\n    form: form,\n    col: \"col-12\",\n    authUser: authUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default createForm()(SettingModal);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/User/Components/AddUser/SettingModal.js"],"names":["React","useEffect","useState","createForm","Modal","Toast","USER_TYPE","Setting","axios","editUser","SettingModal","props","loader","setLoader","form","detail","visible","homeId","authUser","onCancel","console","log","pharmacyId","type","PHARMACY","ADMIN","_id","undefined","subscriptionRoleGroup","getFieldValue","setFieldsValue","handleSave","validateFields","err","values","req","url","res","data","code","success","message","error","mergeLFName","loading"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { createForm } from \"rc-form\";\nimport Modal from '../../../../components/common/Popup'\nimport { Toast } from '../../../../components/common'\nimport { USER_TYPE } from '../../../../constants/User'\nimport Setting from './SettingForm'\nimport axios from \"../../../../services/api/services/common\";\nimport { editUser } from \"../../../../services/api/routes/user\";\n\nconst SettingModal = props => {\n    const [loader, setLoader] = useState(false)\n    const { form, detail, visible, homeId, authUser, onCancel } = props\n    console.log(\"ðŸš€ ~ file: SettingModal.js ~ line 13 ~ detail\", detail)\n    const pharmacyId = authUser.type === USER_TYPE.PHARMACY.ADMIN ? authUser.pharmacyId._id : undefined\n\n    useEffect(() => {\n        if (visible && detail && detail.homeId && detail.homeId.subscriptionRoleGroup && form) {\n            if (!form.getFieldValue('subscriptionRoleGroup'))\n                form.setFieldsValue({\n                    subscriptionRoleGroup: detail.homeId.subscriptionRoleGroup._id\n                })\n        }\n    }, [detail, visible, form])\n\n    const handleSave = async () => {\n        form.validateFields(async (err, values) => {\n            if (err)\n                return\n            setLoader(true)\n            let req = {\n                ...values,\n                homeId: homeId || undefined,\n                pharmacyId: pharmacyId,\n            }\n            let { url } = editUser\n            url = url + detail._id;\n            let res = await axios({ ...editUser, url, data: req })\n            if (res) {\n                if (res && res.code === 'OK') {\n                    Toast.success(res.message)\n                    onCancel(res.data)\n                } else\n                    Toast.error(res.message)\n            }\n            setLoader(false)\n        })\n    }\n\n    return <>\n        <Modal\n            visible={visible} title={`Assign Role Permission  For ${detail.mergeLFName}`}\n            onOk={handleSave}\n            onCancel={onCancel}\n            okText='Save'\n            okButtonProps={{ loading: loader }}\n        >\n            <div className=\"form_row\">\n                <Setting form={form} col='col-12' authUser={authUser} />\n            </div>\n        </Modal>\n    </>\n}\n\nexport default createForm()(SettingModal)"]},"metadata":{},"sourceType":"module"}