{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Master/components/MasterUpsertForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"../../../components/common/Popup/index\";\nimport { Input, TextArea, ErrorMsg, Select, Option } from \"../../../../src/components/common/index\";\nimport { codeConvert } from \"../../../../src/util/common\";\nimport { createForm } from \"rc-form\";\nimport { Toast } from \"../../../../src/components/common/Toast\";\nimport { MASTER_MEDIUM } from \"../../../constants/MasterMedium\";\nimport { map } from \"lodash\";\nimport { USER_TYPE } from \"../../../constants/User\";\nimport axios from \"../../../services/api/services/common\";\nimport { getAll as getAllRoles } from \"../../../services/api/routes/permission\";\nimport _ from \"lodash\";\n\nconst MasterUpsortForm = props => {\n  const {\n    visible,\n    onCancel,\n    onClose,\n    maskClosable,\n    title,\n    okText,\n    cancelText,\n    form,\n    pharmacy,\n    home,\n    value,\n    authUser,\n    loading,\n    phamracyLoader,\n    onHomePharmacy,\n    radioValue,\n    masterDetail,\n    isAdmin\n  } = props;\n  let errors;\n  const [loader, setLoader] = useState(false);\n  const [roles, setRoles] = useState([]);\n\n  const fetchRoles = async () => {\n    setLoader(true);\n    const data = {\n      sortBy: {\n        createdAt: -1\n      },\n      find: {\n        isActive: true,\n        homeId: form.getFieldValue(\"homeId\") // pharmacyId:\n        //   props.authUser.type === USER_TYPE.PHARMACY.ADMIN\n        //     ? props.authUser.pharmacyId?._id\n        //     : undefined,\n\n      }\n    };\n    let res = await axios({ ...getAllRoles,\n      data: {\n        query: data\n      }\n    });\n\n    if (res) {\n      if (res.code === \"OK\") {\n        setRoles(res.data.data);\n      }\n    }\n\n    setLoader(false);\n  };\n\n  useEffect(() => {\n    if ((masterDetail === null || masterDetail === void 0 ? void 0 : masterDetail.code) === \"DESIGNATION_TYPE\") {\n      fetchRoles();\n    }\n  }, [masterDetail, form.getFieldValue(\"homeId\")]);\n  const {\n    getFieldError,\n    getFieldDecorator,\n    setFieldsValue,\n    validateFields\n  } = form;\n  const [checkValues, setCheckValues] = useState(value === null || value === void 0 ? void 0 : value.isActive);\n  useEffect(() => {\n    if (value && visible) {\n      let obj = {};\n\n      if (value.masterForMedium === MASTER_MEDIUM[\"HOME\"]) {\n        obj = {\n          homeId: value.homeId ? value.homeId._id : null\n        };\n      }\n\n      if (value.masterForMedium === MASTER_MEDIUM[\"PHARMACY\"]) {\n        obj = {\n          pharmacyId: value.pharmacyId ? value.pharmacyId._id : null\n        };\n      }\n\n      obj = { ...value,\n        ...obj\n      };\n      setFieldsValue(obj);\n    } else if (visible && (value === null || value === void 0 ? void 0 : value.isActive)) {\n      setCheckValues(value === null || value === void 0 ? void 0 : value.isActive);\n    } else {\n      setCheckValues(true);\n    }\n  }, [value, visible]);\n\n  const handleOnChange = e => {\n    const code = codeConvert(e.target.value);\n    setFieldsValue({\n      code: code\n    });\n  };\n\n  const handleChangeCheckBoxValue = e => {\n    setCheckValues(e.target.checked);\n  };\n\n  const handleSubmit = () => {\n    validateFields((error, value) => {\n      if (error) return;\n      let tempData = {\n        name: value.name,\n        code: value.code,\n        description: value.description,\n        isActive: !!checkValues,\n        pharmacyId: value.pharmacyId,\n        homeId: value.homeId,\n        masterForMedium: radioValue,\n        defaultRoleAccessPermission: value.defaultRoleAccessPermission ? value.defaultRoleAccessPermission : null\n      };\n\n      if (authUser.type === USER_TYPE.HOME.ADMIN) {\n        tempData = { ...tempData,\n          homeId: authUser.homeId._id,\n          pharmacyId: undefined,\n          masterForMedium: MASTER_MEDIUM[\"HOME\"]\n        };\n      } else if (authUser.type === USER_TYPE.PHARMACY.ADMIN) {\n        tempData = { ...tempData,\n          homeId: undefined,\n          pharmacyId: authUser.homeId._id,\n          masterForMedium: MASTER_MEDIUM[\"PHARMACY\"]\n        };\n      }\n\n      props.onOk(tempData);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    form: form,\n    visible: visible,\n    title: title,\n    onCancel: onCancel,\n    onClose: onClose,\n    maskClosable: maskClosable,\n    onOk: handleSubmit,\n    style: {\n      width: \"50%\"\n    },\n    okText: okText,\n    okButtonProps: {\n      loading: loading\n    },\n    cancelText: cancelText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, !masterDetail && (authUser.type === USER_TYPE.ADMIN.SUPER || authUser.type === USER_TYPE.ADMIN.GENERAL) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12\",\n    style: {\n      marginBottom: \"1px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, \"Source Medium\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 34\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, Object.keys(MASTER_MEDIUM).map(x => {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"filter_check radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"medium\",\n      value: MASTER_MEDIUM[x],\n      checked: radioValue === MASTER_MEDIUM[x],\n      onChange: onHomePharmacy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkbox radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 27\n      }\n    }, x));\n  })))) : null, masterDetail && isAdmin ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, radioValue === MASTER_MEDIUM.GENERAL ? null : radioValue === MASTER_MEDIUM.HOME ? /*#__PURE__*/React.createElement(React.Fragment, null, getFieldDecorator(\"homeId\", {\n    rules: [{\n      required: radioValue === MASTER_MEDIUM.HOME,\n      message: \"Please Select Home\"\n    }]\n  })( /*#__PURE__*/React.createElement(Select, {\n    name: \"homeId\",\n    showSearch: true,\n    filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    placeholder: \"Select Home\",\n    loading: loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 23\n    }\n  }, home && home.map(data => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: data._id,\n      value: data._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 31\n      }\n    }, data.name);\n  }))), (errors = getFieldError(\"homeId\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 23\n    }\n  }) : null) : radioValue === MASTER_MEDIUM.PHARMACY ? /*#__PURE__*/React.createElement(React.Fragment, null, getFieldDecorator(\"pharmacyId\", {\n    rules: [{\n      required: radioValue === MASTER_MEDIUM.PHARMACY,\n      message: \"Please Select Pharmacy\"\n    }]\n  })( /*#__PURE__*/React.createElement(Select, {\n    name: \"pharmacyId\",\n    showSearch: true,\n    filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    placeholder: \"Select Parmacy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 23\n    }\n  }, pharmacy && pharmacy.map(data => {\n    return /*#__PURE__*/React.createElement(Option, {\n      value: data._id,\n      key: data._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 31\n      }\n    }, data.name);\n  }))), (errors = getFieldError(\"pharmacyId\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 23\n    }\n  }) : null) : null) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, \"Name\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  }, \"*\")), getFieldDecorator(\"name\", {\n    rules: [{\n      required: true,\n      message: `Please enter name`,\n      whitespace: true\n    }, {\n      pattern: /^[a-z\\d\\s]+$/i,\n      message: \"Code cannot have special characters!\"\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 16\n    }\n  })), (errors = getFieldError(\"name\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, \"Code\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 19\n    }\n  }, \"*\")), getFieldDecorator(\"code\", {\n    rules: [{\n      required: true,\n      message: `Please enter code`\n    }, {\n      pattern: /^[\\w-+.\\\\/]+$/,\n      message: \"Code cannot have special characters or spaces!\"\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 16\n    }\n  })), (errors = getFieldError(\"code\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 15\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, \"Description\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 26\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"additional-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap mb-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, getFieldDecorator(\"description\", {\n    rules: [{\n      required: false,\n      message: \"Please enter the description.!\"\n    }]\n  })( /*#__PURE__*/React.createElement(TextArea, {\n    name: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 20\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 inline_check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"filter_check checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"isActive\",\n    id: \"isActive\",\n    onChange: handleChangeCheckBoxValue,\n    checked: checkValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }, \"IsActive\"))), (masterDetail === null || masterDetail === void 0 ? void 0 : masterDetail.code) === \"DESIGNATION_TYPE\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, getFieldDecorator(\"defaultRoleAccessPermission\", {// rules: [\n    //   {\n    //     required: radioValue === MASTER_MEDIUM.HOME,\n    //     message: \"Please Select Home\",\n    //   },\n    // ],\n  })( /*#__PURE__*/React.createElement(Select, {\n    name: \"defaultRoleAccessPermission\",\n    showSearch: true,\n    filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    placeholder: \"Select Role Base Access Permission\",\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 17\n    }\n  }, _.size(roles) > 0 && roles.map(data => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: data._id,\n      value: data._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 25\n      }\n    }, data.name);\n  })))))));\n};\n\nexport default createForm()(MasterUpsortForm);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Master/components/MasterUpsertForm.js"],"names":["React","useState","useEffect","Modal","Input","TextArea","ErrorMsg","Select","Option","codeConvert","createForm","Toast","MASTER_MEDIUM","map","USER_TYPE","axios","getAll","getAllRoles","_","MasterUpsortForm","props","visible","onCancel","onClose","maskClosable","title","okText","cancelText","form","pharmacy","home","value","authUser","loading","phamracyLoader","onHomePharmacy","radioValue","masterDetail","isAdmin","errors","loader","setLoader","roles","setRoles","fetchRoles","data","sortBy","createdAt","find","isActive","homeId","getFieldValue","res","query","code","getFieldError","getFieldDecorator","setFieldsValue","validateFields","checkValues","setCheckValues","obj","masterForMedium","_id","pharmacyId","handleOnChange","e","target","handleChangeCheckBoxValue","checked","handleSubmit","error","tempData","name","description","defaultRoleAccessPermission","type","HOME","ADMIN","undefined","PHARMACY","onOk","width","SUPER","GENERAL","marginBottom","display","Object","keys","x","rules","required","message","input","option","children","toLowerCase","indexOf","whitespace","pattern","size"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Modal from \"../../../components/common/Popup/index\";\nimport {\n  Input,\n  TextArea,\n  ErrorMsg,\n  Select,\n  Option,\n} from \"../../../../src/components/common/index\";\nimport { codeConvert } from \"../../../../src/util/common\";\nimport { createForm } from \"rc-form\";\nimport { Toast } from \"../../../../src/components/common/Toast\";\nimport { MASTER_MEDIUM } from \"../../../constants/MasterMedium\";\nimport { map } from \"lodash\";\nimport { USER_TYPE } from \"../../../constants/User\";\nimport axios from \"../../../services/api/services/common\";\nimport { getAll as getAllRoles } from \"../../../services/api/routes/permission\";\nimport _ from \"lodash\";\nconst MasterUpsortForm = (props) => {\n  const {\n    visible,\n    onCancel,\n    onClose,\n    maskClosable,\n    title,\n    okText,\n    cancelText,\n    form,\n    pharmacy,\n    home,\n    value,\n    authUser,\n    loading,\n    phamracyLoader,\n    onHomePharmacy,\n    radioValue,\n    masterDetail,\n    isAdmin,\n  } = props;\n\n  let errors;\n  const [loader, setLoader] = useState(false);\n  const [roles, setRoles] = useState([]);\n  const fetchRoles = async () => {\n    setLoader(true);\n    const data = {\n      sortBy: { createdAt: -1 },\n      find: {\n        isActive: true,\n        homeId:\n          form.getFieldValue(\"homeId\")\n        // pharmacyId:\n        //   props.authUser.type === USER_TYPE.PHARMACY.ADMIN\n        //     ? props.authUser.pharmacyId?._id\n        //     : undefined,\n      },\n    };\n    let res = await axios({ ...getAllRoles, data: { query: data } });\n    if (res) {\n      if (res.code === \"OK\") {\n        setRoles(res.data.data);\n      }\n    }\n    setLoader(false);\n  };\n\n  useEffect(() => {\n    if (masterDetail?.code === \"DESIGNATION_TYPE\") {\n      fetchRoles();\n    }\n  }, [masterDetail, form.getFieldValue(\"homeId\")]);\n\n  const {\n    getFieldError,\n    getFieldDecorator,\n    setFieldsValue,\n    validateFields,\n  } = form;\n\n  const [checkValues, setCheckValues] = useState(value?.isActive);\n\n  useEffect(() => {\n    if (value && visible) {\n      let obj = {};\n      if (value.masterForMedium === MASTER_MEDIUM[\"HOME\"]) {\n        obj = {\n          homeId: value.homeId ? value.homeId._id : null,\n        };\n      }\n      if (value.masterForMedium === MASTER_MEDIUM[\"PHARMACY\"]) {\n        obj = {\n          pharmacyId: value.pharmacyId ? value.pharmacyId._id : null,\n        };\n      }\n      obj = {\n        ...value,\n        ...obj,\n      };\n      setFieldsValue(obj);\n    }\n    else if (visible && value?.isActive) {\n      setCheckValues(value?.isActive)\n    } else {\n      setCheckValues(true)\n      \n    }\n  }, [value, visible]);\n\n  const handleOnChange = (e) => {\n    const code = codeConvert(e.target.value);\n    setFieldsValue({ code: code });\n  };\n\n  const handleChangeCheckBoxValue = (e) => {\n    setCheckValues(e.target.checked);\n  };\n\n  const handleSubmit = () => {\n    validateFields((error, value) => {\n      if (error) return;\n      let tempData = {\n        name: value.name,\n        code: value.code,\n        description: value.description,\n        isActive: !!checkValues,\n        pharmacyId: value.pharmacyId,\n        homeId: value.homeId,\n        masterForMedium: radioValue,\n        defaultRoleAccessPermission: value.defaultRoleAccessPermission\n          ? value.defaultRoleAccessPermission\n          : null,\n      };\n\n      if (authUser.type === USER_TYPE.HOME.ADMIN) {\n        tempData = {\n          ...tempData,\n          homeId: authUser.homeId._id,\n          pharmacyId: undefined,\n          masterForMedium: MASTER_MEDIUM[\"HOME\"],\n        };\n      } else if (authUser.type === USER_TYPE.PHARMACY.ADMIN) {\n        tempData = {\n          ...tempData,\n          homeId: undefined,\n          pharmacyId: authUser.homeId._id,\n          masterForMedium: MASTER_MEDIUM[\"PHARMACY\"],\n        };\n      }\n      props.onOk(tempData);\n    });\n  };\n\n  return (\n    <>\n      <Modal\n        form={form}\n        visible={visible}\n        title={title}\n        onCancel={onCancel}\n        onClose={onClose}\n        maskClosable={maskClosable}\n        onOk={handleSubmit}\n        style={{ width: \"50%\" }}\n        okText={okText}\n        okButtonProps={{ loading: loading }}\n        cancelText={cancelText}\n      >\n        <div className=\"form_row\">\n          {!masterDetail &&\n            (authUser.type === USER_TYPE.ADMIN.SUPER ||\n              authUser.type === USER_TYPE.ADMIN.GENERAL) ? (\n              <>\n                <div\n                  className=\"form_group col-12\"\n                  style={{ marginBottom: \"1px\" }}\n                >\n                  <label>\n                    Source Medium<span>*</span>\n                  </label>\n                </div>\n                <div className=\"col-12\">\n                  <div style={{ display: \"flex\" }}>\n                    {Object.keys(MASTER_MEDIUM).map((x) => {\n                      return (\n                        <label className=\"filter_check radio\">\n                          <input\n                            type=\"checkbox\"\n                            name=\"medium\"\n                            value={MASTER_MEDIUM[x]}\n                            checked={radioValue === MASTER_MEDIUM[x]}\n                            onChange={onHomePharmacy}\n                          />\n                          <span className=\"checkbox radio\"></span>\n                          <span className=\"lbl\">{x}</span>\n                        </label>\n                      );\n                    })}\n                  </div>\n                </div>\n              </>\n            ) : null}\n          {masterDetail && isAdmin ? (\n            <div className=\"form_group col-12\">\n              {radioValue === MASTER_MEDIUM.GENERAL ? null : radioValue ===\n                MASTER_MEDIUM.HOME ? (\n                  <>\n                    {getFieldDecorator(\"homeId\", {\n                      rules: [\n                        {\n                          required: radioValue === MASTER_MEDIUM.HOME,\n                          message: \"Please Select Home\",\n                        },\n                      ],\n                    })(\n                      <Select\n                        name=\"homeId\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          option.props.children\n                            .toLowerCase()\n                            .indexOf(input.toLowerCase()) >= 0\n                        }\n                        placeholder={\"Select Home\"}\n                        loading={loader}\n                      >\n                        {home &&\n                          home.map((data) => {\n                            return (\n                              <Option key={data._id} value={data._id}>\n                                {data.name}\n                              </Option>\n                            );\n                          })}\n                      </Select>\n                    )}\n                    {(errors = getFieldError(\"homeId\")) ? (\n                      <ErrorMsg errors={errors} />\n                    ) : null}\n                  </>\n                ) : radioValue === MASTER_MEDIUM.PHARMACY ? (\n                  <>\n                    {getFieldDecorator(\"pharmacyId\", {\n                      rules: [\n                        {\n                          required: radioValue === MASTER_MEDIUM.PHARMACY,\n                          message: \"Please Select Pharmacy\",\n                        },\n                      ],\n                    })(\n                      <Select\n                        name=\"pharmacyId\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          option.props.children\n                            .toLowerCase()\n                            .indexOf(input.toLowerCase()) >= 0\n                        }\n                        placeholder={\"Select Parmacy\"}\n                      >\n                        {pharmacy &&\n                          pharmacy.map((data) => {\n                            return (\n                              <Option value={data._id} key={data._id}>\n                                {data.name}\n                              </Option>\n                            );\n                          })}\n                      </Select>\n                    )}\n                    {(errors = getFieldError(\"pharmacyId\")) ? (\n                      <ErrorMsg errors={errors} />\n                    ) : null}\n                  </>\n                ) : null}\n            </div>\n          ) : null}\n          <div className=\"form_group col-12 required\">\n            <label>\n              Name<span>*</span>\n            </label>\n            {getFieldDecorator(\"name\", {\n              rules: [\n                {\n                  required: true,\n                  message: `Please enter name`,\n                  whitespace: true,\n                },\n                {\n                  pattern: /^[a-z\\d\\s]+$/i,\n                  message: \"Code cannot have special characters!\",\n                },\n              ],\n            })(<Input name=\"name\" onChange={handleOnChange} />)}\n            {(errors = getFieldError(\"name\")) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n\n          <div className=\"form_group col-12 required\">\n            <label>\n              Code<span>*</span>\n            </label>\n            {getFieldDecorator(\"code\", {\n              rules: [\n                {\n                  required: true,\n                  message: `Please enter code`,\n                },\n                {\n                  pattern: /^[\\w-+.\\\\/]+$/,\n                  message: \"Code cannot have special characters or spaces!\",\n                },\n              ],\n            })(<Input name=\"code\" />)}\n            {(errors = getFieldError(\"code\")) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n\n          <div className=\"form_group col-12\">\n            <label>\n              Description<span>*</span>\n            </label>\n            <div className=\"additional-textarea\">\n              <div className=\"form_wrap mb-10\">\n                {getFieldDecorator(\"description\", {\n                  rules: [\n                    {\n                      required: false,\n                      message: \"Please enter the description.!\",\n                    },\n                  ],\n                })(<TextArea name=\"description\" />)}\n              </div>\n            </div>\n          </div>\n          <div className=\"form_group col-3 inline_check\">\n            <label className=\"filter_check checkbox\">\n              <input\n                type=\"checkbox\"\n                name=\"isActive\"\n                id=\"isActive\"\n                onChange={handleChangeCheckBoxValue}\n                checked={checkValues}\n              />\n              <span className=\"checkbox\"></span>\n              <span className=\"lbl\">IsActive</span>\n            </label>\n          </div>\n          {masterDetail?.code === \"DESIGNATION_TYPE\" && (\n            <div className=\"form_group col-12\">\n              {getFieldDecorator(\"defaultRoleAccessPermission\", {\n                // rules: [\n                //   {\n                //     required: radioValue === MASTER_MEDIUM.HOME,\n                //     message: \"Please Select Home\",\n                //   },\n                // ],\n              })(\n                <Select\n                  name=\"defaultRoleAccessPermission\"\n                  showSearch\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                  placeholder={\"Select Role Base Access Permission\"}\n                  allowClear={true}\n                >\n                  {_.size(roles) > 0 &&\n                    roles.map((data) => {\n                      return (\n                        <Option key={data._id} value={data._id}>\n                          {data.name}\n                        </Option>\n                      );\n                    })}\n                </Select>\n              )}\n            </div>\n          )}\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default createForm()(MasterUpsortForm);\n"]},"metadata":{},"sourceType":"module"}