{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/common/Search.js\";\nimport React, { useState, useEffect } from 'react';\nimport Input from './Input';\nimport PropTypes from 'prop-types';\nimport { ChevronDown, Clear } from \"../../assets/images/index\";\n\nconst Search = ({\n  className,\n  onClear,\n  ...props\n}) => {\n  const [clear, setClear] = useState(props.allowClear && props.value);\n  const [value, setValue] = useState(props.value || undefined);\n\n  const handleClear = e => {\n    setClear(false);\n    handleChange(e);\n    if (props.onClear) props.onClear(e);\n  };\n\n  const handleChange = e => {\n    let val = e.target.value;\n    setValue(val || '');\n    if (props.onChange) props.onChange(e);\n  };\n\n  useEffect(() => {\n    if (value && props.allowClear && !clear) {\n      setClear(true);\n    } else if (!value && props.allowClear && clear) setClear(false);\n  }, [value]); //  useEffect(() => {\n  //     if (props.value && props.allowClear && !clear) {\n  //         setClear(true)\n  //     } else if (!props.value && props.allowClear && clear)\n  //         setClear(false)\n  // }, [props.value])\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `components search ${clear ? 'allow_clear' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Input, Object.assign({}, props, {\n    isSearch: true,\n    onClear: handleClear,\n    onChange: handleChange,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), props.allowClear && value && !props.disabled ? /*#__PURE__*/React.createElement(Clear, {\n    onClick: handleClear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }) : null);\n};\n\nexport default Search;\nSearch.defaultProps = {// className: 'search-box'\n};\nSearch.propTypes = {\n  className: PropTypes.string\n};","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/common/Search.js"],"names":["React","useState","useEffect","Input","PropTypes","ChevronDown","Clear","Search","className","onClear","props","clear","setClear","allowClear","value","setValue","undefined","handleClear","e","handleChange","val","target","onChange","disabled","defaultProps","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,2BAAnC;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsB,KAAGC;AAAzB,CAAD,KAAsC;AACjD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACS,KAAK,CAACG,UAAN,IAAoBH,KAAK,CAACI,KAA3B,CAAlC;AACA,QAAM,CAACA,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACS,KAAK,CAACI,KAAN,IAAeE,SAAhB,CAAlC;;AAEA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACvBN,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAO,IAAAA,YAAY,CAACD,CAAD,CAAZ;AACA,QAAIR,KAAK,CAACD,OAAV,EACIC,KAAK,CAACD,OAAN,CAAcS,CAAd;AACP,GALD;;AAOA,QAAMC,YAAY,GAAID,CAAD,IAAO;AACxB,QAAIE,GAAG,GAAGF,CAAC,CAACG,MAAF,CAASP,KAAnB;AACAC,IAAAA,QAAQ,CAACK,GAAG,IAAI,EAAR,CAAR;AACA,QAAIV,KAAK,CAACY,QAAV,EACIZ,KAAK,CAACY,QAAN,CAAeJ,CAAf;AACP,GALD;;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,KAAK,IAAIJ,KAAK,CAACG,UAAf,IAA6B,CAACF,KAAlC,EAAyC;AACrCC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAFD,MAEO,IAAI,CAACE,KAAD,IAAUJ,KAAK,CAACG,UAAhB,IAA8BF,KAAlC,EACHC,QAAQ,CAAC,KAAD,CAAR;AACP,GALQ,EAKN,CAACE,KAAD,CALM,CAAT,CAlBiD,CAwBjD;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAG,qBAAoBH,KAAK,GAAG,aAAH,GAAmB,EAAG,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,KAAD,oBACQD,KADR;AAEI,IAAA,QAAQ,EAAE,IAFd;AAGI,IAAA,OAAO,EAAEO,WAHb;AAII,IAAA,QAAQ,EAAEE,YAJd;AAKI,IAAA,KAAK,EAAEL,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADG,EAQFJ,KAAK,CAACG,UAAN,IAAoBC,KAApB,IAA6B,CAACJ,KAAK,CAACa,QAApC,gBACG,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEN,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAEG,IAVD,CAAP;AAaH,CA5CD;;AA8CA,eAAeV,MAAf;AAEAA,MAAM,CAACiB,YAAP,GAAsB,CAClB;AADkB,CAAtB;AAGAjB,MAAM,CAACkB,SAAP,GAAmB;AACfjB,EAAAA,SAAS,EAAEJ,SAAS,CAACsB;AADN,CAAnB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Input from './Input'\nimport PropTypes from 'prop-types';\nimport { ChevronDown, Clear } from \"../../assets/images/index\";\nconst Search = ({ className, onClear, ...props }) => {\n    const [clear, setClear] = useState(props.allowClear && props.value)\n    const [value, setValue] = useState(props.value || undefined)\n\n    const handleClear = (e) => {\n        setClear(false)\n        handleChange(e)\n        if (props.onClear)\n            props.onClear(e)\n    }\n\n    const handleChange = (e) => {\n        let val = e.target.value\n        setValue(val || '')\n        if (props.onChange)\n            props.onChange(e)\n    }\n\n    useEffect(() => {\n        if (value && props.allowClear && !clear) {\n            setClear(true)\n        } else if (!value && props.allowClear && clear)\n            setClear(false)\n    }, [value])\n    //  useEffect(() => {\n    //     if (props.value && props.allowClear && !clear) {\n    //         setClear(true)\n    //     } else if (!props.value && props.allowClear && clear)\n    //         setClear(false)\n    // }, [props.value])\n\n    return <div className={`components search ${clear ? 'allow_clear' : ''}`}>\n        <Input\n            {...props}\n            isSearch={true}\n            onClear={handleClear}\n            onChange={handleChange}\n            value={value}\n        />\n        {props.allowClear && value && !props.disabled ? (\n            <Clear onClick={handleClear} />\n        ) : null}\n    </div>\n\n};\n\nexport default Search;\n\nSearch.defaultProps = {\n    // className: 'search-box'\n}\nSearch.propTypes = {\n    className: PropTypes.string,\n}"]},"metadata":{},"sourceType":"module"}