{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/TodoDashboard/Dashboard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { TODO_ICONS, TODO_CATEGORY, SUB_CATEGORY } from '../../constants/todo';\nimport { getIcons } from '../../util/todo';\nimport { isDrOrNp } from '../../util/common';\nimport routes from '../../routes/constant';\nimport HomeAreaFilter from '../../components/HomeAreaFilter';\nimport { Spin, NoData } from '../../components/common';\n\nconst getRedirectUrl = (row, block, doctorId) => {\n  let pathname;\n  let searchUrl, propsFil;\n\n  if (row.todoCategory === TODO_CATEGORY.PRESCRIPTION) {\n    pathname = routes.todo.path;\n    searchUrl = `?category=${row.todoCategory}&subCategory=${block.type}&viewType=1`;\n\n    if (block.type === SUB_CATEGORY.PRESCRIPTION.VERBAL_ORDER && doctorId) {\n      searchUrl = `${searchUrl}&doctorId=${doctorId}`;\n    }\n  } else if (row.todoCategory === TODO_CATEGORY.MED_REVIEW) {\n    if (block.type === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1 || block.type === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2 || block.type === SUB_CATEGORY.MED_REVIEW.PMR) {\n      pathname = routes.pmrTodo.path; // }\n      // else\n      //     pathname = routes.medReviewTodo.path;\n\n      searchUrl = `?category=${TODO_CATEGORY.MED_REVIEW}&subCategory=${block.type}&viewType=1`;\n\n      if (block.type === SUB_CATEGORY.PRESCRIPTION.VERBAL_ORDER && doctorId) {\n        searchUrl = `${searchUrl}&doctorId=${doctorId}`;\n      }\n    } else {\n      pathname = routes.medReviewTodo.path;\n      propsFil = {\n        category: TODO_CATEGORY.MED_REVIEW,\n        subCategory: block.type,\n        viewType: 1\n      };\n    }\n  }\n\n  return {\n    pathname: pathname,\n    search: searchUrl,\n    propsFil: propsFil\n  };\n};\n\nconst Dashboard = props => {\n  const {\n    dashboardData,\n    authUser,\n    filter,\n    loading,\n    onHomeAreaChange\n  } = props;\n  let doctorId = isDrOrNp(authUser) ? authUser._id : null;\n\n  const redirectTo = (row, block) => {\n    const redirectUrl = getRedirectUrl(row, block, doctorId);\n    props.history.push({\n      pathname: redirectUrl.pathname,\n      search: redirectUrl.search,\n      state: {\n        propsFil: { ...filter,\n          ...redirectUrl.propsFil\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(HomeAreaFilter, {\n    onChange: onHomeAreaChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }))), loading ? /*#__PURE__*/React.createElement(Spin, {\n    spinning: loading,\n    str: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }) : dashboardData.length === 0 ? /*#__PURE__*/React.createElement(NoData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }) : dashboardData.map(row => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard_block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 41\n      }\n    }, row.label, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 56\n      }\n    }, row.count)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 41\n      }\n    }, row.data.map(block => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"block_content\",\n        onClick: () => redirectTo(row, block),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 60\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"b_t\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 57\n        }\n      }, block.label), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 57\n        }\n      }, block.value), /*#__PURE__*/React.createElement(\"img\", {\n        src: getIcons(block.type),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 57\n        }\n      }));\n    }))));\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/TodoDashboard/Dashboard.js"],"names":["React","useEffect","useState","Link","connect","TODO_ICONS","TODO_CATEGORY","SUB_CATEGORY","getIcons","isDrOrNp","routes","HomeAreaFilter","Spin","NoData","getRedirectUrl","row","block","doctorId","pathname","searchUrl","propsFil","todoCategory","PRESCRIPTION","todo","path","type","VERBAL_ORDER","MED_REVIEW","NURSE_REVIEW_1","NURSE_REVIEW_2","PMR","pmrTodo","medReviewTodo","category","subCategory","viewType","search","Dashboard","props","dashboardData","authUser","filter","loading","onHomeAreaChange","_id","redirectTo","redirectUrl","history","push","state","length","map","label","count","data","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,YAApC,QAAwD,sBAAxD;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,yBAA7B;;AAEA,MAAMC,cAAc,GAAG,CAACC,GAAD,EAAMC,KAAN,EAAaC,QAAb,KAA0B;AAE7C,MAAIC,QAAJ;AACA,MAAIC,SAAJ,EAAeC,QAAf;;AACA,MAAIL,GAAG,CAACM,YAAJ,KAAqBf,aAAa,CAACgB,YAAvC,EAAqD;AACjDJ,IAAAA,QAAQ,GAAGR,MAAM,CAACa,IAAP,CAAYC,IAAvB;AACAL,IAAAA,SAAS,GAAI,aAAYJ,GAAG,CAACM,YAAa,gBAAeL,KAAK,CAACS,IAAK,aAApE;;AACA,QAAIT,KAAK,CAACS,IAAN,KAAelB,YAAY,CAACe,YAAb,CAA0BI,YAAzC,IAAyDT,QAA7D,EAAuE;AACnEE,MAAAA,SAAS,GAAI,GAAEA,SAAU,aAAYF,QAAS,EAA9C;AACH;AACJ,GAND,MAMO,IAAIF,GAAG,CAACM,YAAJ,KAAqBf,aAAa,CAACqB,UAAvC,EAAmD;AACtD,QAAIX,KAAK,CAACS,IAAN,KAAelB,YAAY,CAACoB,UAAb,CAAwBC,cAAvC,IACAZ,KAAK,CAACS,IAAN,KAAelB,YAAY,CAACoB,UAAb,CAAwBE,cADvC,IAEAb,KAAK,CAACS,IAAN,KAAelB,YAAY,CAACoB,UAAb,CAAwBG,GAF3C,EAEgD;AAC5CZ,MAAAA,QAAQ,GAAGR,MAAM,CAACqB,OAAP,CAAeP,IAA1B,CAD4C,CAE5C;AACA;AACA;;AACAL,MAAAA,SAAS,GAAI,aAAYb,aAAa,CAACqB,UAAW,gBAAeX,KAAK,CAACS,IAAK,aAA5E;;AACA,UAAIT,KAAK,CAACS,IAAN,KAAelB,YAAY,CAACe,YAAb,CAA0BI,YAAzC,IAAyDT,QAA7D,EAAuE;AACnEE,QAAAA,SAAS,GAAI,GAAEA,SAAU,aAAYF,QAAS,EAA9C;AACH;AACJ,KAXD,MAYK;AACDC,MAAAA,QAAQ,GAAGR,MAAM,CAACsB,aAAP,CAAqBR,IAAhC;AACAJ,MAAAA,QAAQ,GAAG;AACPa,QAAAA,QAAQ,EAAE3B,aAAa,CAACqB,UADjB;AAEPO,QAAAA,WAAW,EAAElB,KAAK,CAACS,IAFZ;AAGPU,QAAAA,QAAQ,EAAE;AAHH,OAAX;AAKH;AACJ;;AACD,SAAO;AAAEjB,IAAAA,QAAQ,EAAEA,QAAZ;AAAsBkB,IAAAA,MAAM,EAAEjB,SAA9B;AAAyCC,IAAAA,QAAQ,EAAEA;AAAnD,GAAP;AACH,CAjCD;;AAmCA,MAAMiB,SAAS,GAAIC,KAAD,IAAW;AAEzB,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA,MAA3B;AAAmCC,IAAAA,OAAnC;AAA4CC,IAAAA;AAA5C,MAAiEL,KAAvE;AACA,MAAIrB,QAAQ,GAAGR,QAAQ,CAAC+B,QAAD,CAAR,GAAqBA,QAAQ,CAACI,GAA9B,GAAoC,IAAnD;;AAEA,QAAMC,UAAU,GAAG,CAAC9B,GAAD,EAAMC,KAAN,KAAgB;AAC/B,UAAM8B,WAAW,GAAGhC,cAAc,CAACC,GAAD,EAAMC,KAAN,EAAaC,QAAb,CAAlC;AACAqB,IAAAA,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmB;AACf9B,MAAAA,QAAQ,EAAE4B,WAAW,CAAC5B,QADP;AACiBkB,MAAAA,MAAM,EAAEU,WAAW,CAACV,MADrC;AAEfa,MAAAA,KAAK,EAAE;AAAE7B,QAAAA,QAAQ,EAAE,EAAE,GAAGqB,MAAL;AAAa,aAAGK,WAAW,CAAC1B;AAA5B;AAAZ;AAFQ,KAAnB;AAIH,GAND;;AAQA,sBAAO,uDACH;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEuB,gBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ,EAQQD,OAAO,gBACH,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,OAAhB;AAAyB,IAAA,GAAG,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,GAEDH,aAAa,CAACW,MAAd,KAAyB,CAAzB,gBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAEIX,aAAa,CAACY,GAAd,CAAkBpC,GAAG,IAAI;AACvB,wBAAO,uDACH;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,GAAG,CAACqC,KAAT,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOrC,GAAG,CAACsC,KAAX,CAAf,CADJ,eAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQtC,GAAG,CAACuC,IAAJ,CAASH,GAAT,CAAanC,KAAK,IAAI;AAClB,0BAAO;AAAK,QAAA,SAAS,EAAC,eAAf;AACH,QAAA,OAAO,EAAE,MAAM6B,UAAU,CAAC9B,GAAD,EAAMC,KAAN,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEH;AAAG,QAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,KAAK,CAACoC,KADX,CAFG,eAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKpC,KAAK,CAACuC,KAAX,CALG,eAMH;AAAK,QAAA,GAAG,EAAE/C,QAAQ,CAACQ,KAAK,CAACS,IAAP,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANG,CAAP;AAQH,KATD,CAFR,CAFJ,CADG,CAAP;AAmBH,GApBC,CAZlB,CADJ,CADG,CAAP;AAuCH,CApDD;;AAsDA,eAAeY,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { TODO_ICONS, TODO_CATEGORY, SUB_CATEGORY } from '../../constants/todo'\nimport { getIcons } from '../../util/todo'\nimport { isDrOrNp } from '../../util/common'\nimport routes from '../../routes/constant'\nimport HomeAreaFilter from '../../components/HomeAreaFilter'\nimport { Spin, NoData } from '../../components/common'\n\nconst getRedirectUrl = (row, block, doctorId) => {\n\n    let pathname;\n    let searchUrl, propsFil;\n    if (row.todoCategory === TODO_CATEGORY.PRESCRIPTION) {\n        pathname = routes.todo.path;\n        searchUrl = `?category=${row.todoCategory}&subCategory=${block.type}&viewType=1`;\n        if (block.type === SUB_CATEGORY.PRESCRIPTION.VERBAL_ORDER && doctorId) {\n            searchUrl = `${searchUrl}&doctorId=${doctorId}`\n        }\n    } else if (row.todoCategory === TODO_CATEGORY.MED_REVIEW) {\n        if (block.type === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1 ||\n            block.type === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2 ||\n            block.type === SUB_CATEGORY.MED_REVIEW.PMR) {\n            pathname = routes.pmrTodo.path;\n            // }\n            // else\n            //     pathname = routes.medReviewTodo.path;\n            searchUrl = `?category=${TODO_CATEGORY.MED_REVIEW}&subCategory=${block.type}&viewType=1`;\n            if (block.type === SUB_CATEGORY.PRESCRIPTION.VERBAL_ORDER && doctorId) {\n                searchUrl = `${searchUrl}&doctorId=${doctorId}`\n            }\n        }\n        else {\n            pathname = routes.medReviewTodo.path;\n            propsFil = {\n                category: TODO_CATEGORY.MED_REVIEW,\n                subCategory: block.type,\n                viewType: 1,\n            }\n        }\n    }\n    return { pathname: pathname, search: searchUrl, propsFil: propsFil }\n}\n\nconst Dashboard = (props) => {\n\n    const { dashboardData, authUser, filter, loading, onHomeAreaChange } = props\n    let doctorId = isDrOrNp(authUser) ? authUser._id : null\n\n    const redirectTo = (row, block) => {\n        const redirectUrl = getRedirectUrl(row, block, doctorId)\n        props.history.push({\n            pathname: redirectUrl.pathname, search: redirectUrl.search,\n            state: { propsFil: { ...filter, ...redirectUrl.propsFil } }\n        })\n    }\n\n    return <>\n        <div className=\"dashboard_wrapper\">\n            <div className=\"container\">\n                <div className=\"page_head\">\n                    <h3>Dashboard</h3>\n                    <div className=\"form_group\">\n                        <HomeAreaFilter onChange={onHomeAreaChange} />\n                    </div>\n                </div>\n                {\n                    loading ?\n                        <Spin spinning={loading} str='center' />\n                        : dashboardData.length === 0 ?\n                            <NoData />\n                            : dashboardData.map(row => {\n                                return <>\n                                    <div className=\"dashboard_block\">\n                                        <h4>{row.label}<span>{row.count}</span></h4>\n                                        <div className=\"block_container\">\n                                            {\n                                                row.data.map(block => {\n                                                    return <div className=\"block_content\"\n                                                        onClick={() => redirectTo(row, block)}>\n                                                        <p className=\"b_t\">\n                                                            {block.label}\n                                                        </p>\n                                                        <h1>{block.value}</h1>\n                                                        <img src={getIcons(block.type)} />\n                                                    </div>\n                                                })\n                                            }\n                                        </div>\n                                    </div>\n                                </>\n                            })\n                }\n            </div>\n        </div>\n    </>\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}