{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/EProcessing/AddEProcessing/UpsertForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { createForm } from 'rc-form';\nimport { Input, ErrorMsg, Select, Option, Button, DateTimePicker, Toast, Spin } from '../../../../../components/common';\nimport { ORDER_TYPE, RX_TYPE, STATUS, TYPE } from '../../../../../constants/prescription';\nimport { isDrOrNp } from '../../../../../util/common';\nimport { addFavouriteMeds, upsert } from '../../../../../services/api/routes/prescription';\nimport axios from '../../../../../services/api/services/common';\nimport { fileUpload } from '../../../../../services/api/routes/common';\nimport { PlusBtn } from '../../../../../assets/images/resident-detail/index';\nimport Uploader, { FILE_CATEGORY, FILE_TYPES } from '../../../../../components/common/Upload/Uploader';\nimport DoctorFilter from '../../../../../components/DoctorFilter';\nimport { Close, Next, Prev } from '../../../../../assets/images/index';\nimport Image from '../../../../../components/common/Image';\nimport _ from 'lodash';\nimport { dateTimeFormat, disabledHours, disabledMinutes, currentDate } from '../../../../../util/moment';\nimport moment from 'moment';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport Thumbnail from \"../../../../../components/common/Upload/Thumbnail\";\nlet selectedDate = currentDate;\n\nconst AddEprocessing = props => {\n  const {\n    form,\n    residentDetail,\n    authUser,\n    onOk,\n    onCancel,\n    okLoader,\n    documentTypes,\n    subMasterLoader\n  } = props;\n  let errors;\n  const {\n    getFieldValue,\n    getFieldError,\n    getFieldDecorator,\n    validateFields\n  } = form;\n  const [docType, SetDocType] = useState();\n  const [uploadVisible, setUploadVisible] = useState(false);\n  const [uploadData, setUploadData] = useState([]);\n  const [value, setValue] = useState();\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n  const [currImg, setCurrImg] = useState(0);\n  const showTime = {\n    format: 'HH:mm',\n    minuteStep: 5,\n    showSecond: false,\n    use12Hours: false,\n    disabledHours: () => disabledHours(selectedDate),\n    disabledMinutes: () => disabledMinutes(selectedDate)\n  };\n\n  const onChange = date => {\n    if (date) selectedDate = date;\n  };\n\n  const handleSave = () => {\n    validateFields((err, values) => {\n      if (err) return;\n      let preparedAttach = prepareAttachments(_.cloneDeep(uploadData));\n      if (!docType) return Toast.error('Please select document type');\n      if (preparedAttach && preparedAttach.length <= 0) return Toast.error('Please upload document');\n      let request = { ...values,\n        attachments: preparedAttach || [],\n        thirdPartyPrescriptionType: docType\n      };\n      if (onOk) onOk(request);\n    });\n  };\n\n  const prepareAttachments = attachments => {\n    return attachments.filter((x, i) => {\n      if (x.status) {\n        x.sequence = i;\n        x.type = 0;\n        delete x.status;\n        delete x.showPath;\n        delete x.isDownload;\n      }\n\n      return x;\n    });\n  };\n\n  const handleChangeType = e => {\n    SetDocType(e.target.value);\n  };\n\n  const handleVisibleUpload = visible => {\n    setUploadVisible(visible);\n  };\n\n  const openViewer = visiblity => {\n    setViewerIsOpen(visiblity);\n  };\n\n  const uploadedDocPath = uploadData.length > 0 ? uploadData[0] : null;\n\n  const disableFutureDt = current => {\n    const today = moment();\n    return current.isAfter(today);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"on_going_call_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"call_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"Add E-Processing for \", residentDetail.mergeLFName, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"call_detail_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"call_detail_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"doc_type filter_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter_section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"filter_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, \"Document Type\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter_value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, subMasterLoader && !documentTypes ? /*#__PURE__*/React.createElement(Spin, {\n    spinning: subMasterLoader,\n    str: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }) : documentTypes === null || documentTypes === void 0 ? void 0 : documentTypes.map(x => {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"filter_switch\",\n      style: {\n        margin: '3px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"doc\",\n      id: x._id,\n      value: x._id,\n      checked: docType === x._id,\n      onChange: handleChangeType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, x.name));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12 required\",\n    style: {\n      padding: '0px',\n      margin: '10px 0 0 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, \"E-Processing Date\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 38\n    }\n  }, \"*\")), getFieldDecorator('orderGeneratedAt', {\n    rules: [{\n      required: true,\n      message: 'Please select Date and Time'\n    }]\n  })( /*#__PURE__*/React.createElement(DateTimePicker, {\n    placeholder: \"Select Date & Time*\",\n    value: value,\n    onChange: onChange,\n    timePicker: true,\n    disabled: false,\n    showOk: true,\n    timePickerProps: showTime,\n    format: dateTimeFormat //   disabledDate={disabledDate}\n    ,\n    disabledDate: disableFutureDt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  })), (errors = getFieldError('orderGeneratedAt')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"group_action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex authorized\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"components pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }, !isDrOrNp(authUser) ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-b-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 23\n    }\n  }, getFieldDecorator('physicianId', {\n    rules: [{\n      required: true,\n      message: 'Please Select Physician'\n    }]\n  })( /*#__PURE__*/React.createElement(DoctorFilter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 28\n    }\n  })), (errors = getFieldError('physicianId')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 27\n    }\n  }) : null) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"components filter_value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, getFieldDecorator('isMedicalDirectiveAuthorized', {\n    rules: [{\n      required: false\n    }]\n  })( /*#__PURE__*/React.createElement(\"label\", {\n    for: \"vvs\",\n    className: \"filter_check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"vvs\",\n    id: \"vvs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  }, \"Authorized by medical directive\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upd_sec_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upd_sec \",\n    onClick: () => handleVisibleUpload(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(PlusBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, \"Upload Images\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upd_sec \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(PlusBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }, \"Add Notes\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upd_sec \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(PlusBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 21\n    }\n  }, \"Set Reminder\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer_btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"prev-screen-btn gray-btn\",\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 19\n    }\n  }, \"CANCEL\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    loading: okLoader,\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 19\n    }\n  }, \"SAVE\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"uploaded_image_viewer_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, uploadedDocPath ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"uploaded_image_viewer_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      float: 'left',\n      marginRight: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }\n  }, \"E-Processing\"), uploadData.length > 1 ? /*#__PURE__*/React.createElement(Tooltip, {\n    overlay: \"Click Here to view more documents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => openViewer(true),\n    className: \"badge simple\",\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 27\n    }\n  }, uploadData.length))) : null), /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => openViewer(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 19\n    }\n  }, \"ZOOM IN\")), /*#__PURE__*/React.createElement(\"figure\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }, uploadedDocPath.isDownload ? /*#__PURE__*/React.createElement(\"a\", {\n    download: true,\n    href: uploadData[currImg].path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    image: uploadedDocPath.showPath,\n    alt: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 23\n    }\n  })) : /*#__PURE__*/React.createElement(Image, {\n    image: uploadedDocPath.showPath,\n    alt: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  })) : null))), /*#__PURE__*/React.createElement(Uploader, {\n    visible: uploadVisible,\n    onRequestClose: () => setUploadVisible(false),\n    multiple: true,\n    allowedTypes: [FILE_TYPES.IMAGE] // allowedTypes={[FILE_TYPES.IMAGE, FILE_TYPES.PDF, FILE_TYPES.DOC]}\n    ,\n    uploadUrl: { ...fileUpload\n    },\n    fileLength: 10,\n    extraData: {\n      isUploadToS3: true,\n      isPrivateBucket: true,\n      returnSignedURL: true,\n      fileName: 'abc.png',\n      category: [FILE_CATEGORY.IMAGE // FILE_CATEGORY.PDF,\n      // FILE_CATEGORY.DOC,\n      ].join(',')\n    },\n    onError: err => {\n      console.log('on error => ', err);\n    },\n    onSuccess: res => {\n      if (res) {\n        if (res.code === 'OK') {\n          res.data = res.data.filter(x => {\n            if (x.status) {\n              let extension = x.path.substr(x.path.lastIndexOf('.') + 1);\n              x.showPath = x.path;\n\n              if (extension === 'pdf') {\n                x.showPath = require('../../../../../assets/images/pdf.png');\n                x.isDownload = true;\n              } else if (extension === 'doc' || extension === 'docx') {\n                x.showPath = require('../../../../../assets/images/doc.png');\n                x.isDownload = true;\n              }\n\n              return x;\n            }\n          });\n          let newData = [...uploadData];\n          newData = newData.concat(res.data);\n          setUploadData(newData);\n          handleVisibleUpload(false);\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }\n  }), viewerIsOpen ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Lightbox, {\n    mainSrc: uploadData[currImg].showPath,\n    imageTitle: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 17\n      }\n    }, uploadData[currImg].isDownload ? /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      download: true,\n      href: uploadData[currImg].path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 21\n      }\n    }, \"download\") : null)),\n    nextSrc: uploadData[(currImg + 1) % uploadData.length].showPath,\n    prevSrc: uploadData[(currImg + uploadData.length - 1) % uploadData.length].showPath,\n    onCloseRequest: () => setViewerIsOpen(false),\n    onMovePrevRequest: () => setCurrImg(currImg => (currImg + uploadData.length - 1) % uploadData.length),\n    onMoveNextRequest: () => setCurrImg(currImg => (currImg + 1) % uploadData.length),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 11\n    }\n  })) : null);\n};\n\nexport default createForm()(AddEprocessing);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/EProcessing/AddEProcessing/UpsertForm.js"],"names":["React","useEffect","useState","createForm","Input","ErrorMsg","Select","Option","Button","DateTimePicker","Toast","Spin","ORDER_TYPE","RX_TYPE","STATUS","TYPE","isDrOrNp","addFavouriteMeds","upsert","axios","fileUpload","PlusBtn","Uploader","FILE_CATEGORY","FILE_TYPES","DoctorFilter","Close","Next","Prev","Image","_","dateTimeFormat","disabledHours","disabledMinutes","currentDate","moment","Lightbox","Tooltip","Thumbnail","selectedDate","AddEprocessing","props","form","residentDetail","authUser","onOk","onCancel","okLoader","documentTypes","subMasterLoader","errors","getFieldValue","getFieldError","getFieldDecorator","validateFields","docType","SetDocType","uploadVisible","setUploadVisible","uploadData","setUploadData","value","setValue","viewerIsOpen","setViewerIsOpen","currImg","setCurrImg","showTime","format","minuteStep","showSecond","use12Hours","onChange","date","handleSave","err","values","preparedAttach","prepareAttachments","cloneDeep","error","length","request","attachments","thirdPartyPrescriptionType","filter","x","i","status","sequence","type","showPath","isDownload","handleChangeType","e","target","handleVisibleUpload","visible","openViewer","visiblity","uploadedDocPath","disableFutureDt","current","today","isAfter","mergeLFName","map","margin","_id","name","padding","rules","required","message","float","marginRight","path","IMAGE","isUploadToS3","isPrivateBucket","returnSignedURL","fileName","category","join","console","log","res","code","data","extension","substr","lastIndexOf","require","newData","concat"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createForm } from 'rc-form';\nimport {\n  Input,\n  ErrorMsg,\n  Select,\n  Option,\n  Button,\n  DateTimePicker,\n  Toast,\n  Spin,\n} from '../../../../../components/common';\nimport {\n  ORDER_TYPE,\n  RX_TYPE,\n  STATUS,\n  TYPE,\n} from '../../../../../constants/prescription';\nimport { isDrOrNp } from '../../../../../util/common';\nimport {\n  addFavouriteMeds,\n  upsert,\n} from '../../../../../services/api/routes/prescription';\nimport axios from '../../../../../services/api/services/common';\nimport { fileUpload } from '../../../../../services/api/routes/common';\nimport { PlusBtn } from '../../../../../assets/images/resident-detail/index';\nimport Uploader, {\n  FILE_CATEGORY,\n  FILE_TYPES,\n} from '../../../../../components/common/Upload/Uploader';\nimport DoctorFilter from '../../../../../components/DoctorFilter';\nimport { Close, Next, Prev } from '../../../../../assets/images/index';\nimport Image from '../../../../../components/common/Image';\nimport _ from 'lodash';\nimport {\n  dateTimeFormat,\n  disabledHours,\n  disabledMinutes,\n  currentDate,\n} from '../../../../../util/moment';\nimport moment from 'moment';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport Thumbnail from \"../../../../../components/common/Upload/Thumbnail\";\n\nlet selectedDate = currentDate;\nconst AddEprocessing = (props) => {\n  const {\n    form,\n    residentDetail,\n    authUser,\n    onOk,\n    onCancel,\n    okLoader,\n    documentTypes,\n    subMasterLoader,\n  } = props;\n  let errors;\n  const {\n    getFieldValue,\n    getFieldError,\n    getFieldDecorator,\n    validateFields,\n  } = form;\n  const [docType, SetDocType] = useState();\n  const [uploadVisible, setUploadVisible] = useState(false);\n  const [uploadData, setUploadData] = useState([]);\n  const [value, setValue] = useState();\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n  const [currImg, setCurrImg] = useState(0);\n\n  const showTime = {\n    format: 'HH:mm',\n    minuteStep: 5,\n    showSecond: false,\n    use12Hours: false,\n    disabledHours: () => disabledHours(selectedDate),\n    disabledMinutes: () => disabledMinutes(selectedDate),\n  };\n\n  const onChange = (date) => {\n    if (date) selectedDate = date;\n  };\n\n  const handleSave = () => {\n    validateFields((err, values) => {\n      if (err) return;\n      let preparedAttach = prepareAttachments(_.cloneDeep(uploadData));\n      if (!docType) return Toast.error('Please select document type');\n      if (preparedAttach && preparedAttach.length <= 0)\n        return Toast.error('Please upload document');\n\n      let request = {\n        ...values,\n        attachments: preparedAttach || [],\n        thirdPartyPrescriptionType: docType,\n      };\n      if (onOk) onOk(request);\n    });\n  };\n\n  const prepareAttachments = (attachments) => {\n    return attachments.filter((x, i) => {\n      if (x.status) {\n        x.sequence = i;\n        x.type = 0;\n        delete x.status;\n        delete x.showPath;\n        delete x.isDownload;\n      }\n      return x;\n    });\n  };\n\n  const handleChangeType = (e) => {\n    SetDocType(e.target.value);\n  };\n\n  const handleVisibleUpload = (visible) => {\n    setUploadVisible(visible);\n  };\n\n  const openViewer = (visiblity) => {\n    setViewerIsOpen(visiblity);\n  };\n  const uploadedDocPath = uploadData.length > 0 ? uploadData[0] : null;\n\n  const disableFutureDt = (current) => {\n    const today = moment();\n    return current.isAfter(today);\n  };\n\n  return (\n    <>\n      <div className='on_going_call_container'>\n        <div className='call_header'>\n          <h4>Add E-Processing for {residentDetail.mergeLFName} </h4>\n          {/* <p>Created By : Nurse Patrick Jane, Created At : 26th May, 2020 | 04:00 pm</p> */}\n        </div>\n        <div className='call_detail_wrap'>\n          <div className='call_detail_content'>\n            <form>\n              <div className='form_wrap flex-wrap'>\n                <div className='doc_type filter_wrap'>\n                  <div className='filter_section'>\n                    <h4 className='filter_head'>Document Type</h4>\n                    <div className='filter_value'>\n                      {subMasterLoader && !documentTypes ? (\n                        <Spin spinning={subMasterLoader} str='center'></Spin>\n                      ) : (\n                          documentTypes?.map((x) => {\n                            return (\n                              <label\n                                className='filter_switch'\n                                style={{ margin: '3px' }}\n                              >\n                                <input\n                                  type='radio'\n                                  name='doc'\n                                  id={x._id}\n                                  value={x._id}\n                                  checked={docType === x._id}\n                                  onChange={handleChangeType}\n                                />\n                                <span>{x.name}</span>\n                              </label>\n                            );\n                          })\n                        )}\n                    </div>\n                  </div>\n                </div>\n                <div\n                  className='form_group col-12 required'\n                  style={{\n                    padding: '0px',\n                    margin: '10px 0 0 0',\n                  }}\n                >\n                  <label>\n                    E-Processing Date<span>*</span>\n                  </label>\n                  {getFieldDecorator('orderGeneratedAt', {\n                    rules: [\n                      {\n                        required: true,\n                        message: 'Please select Date and Time',\n                      },\n                    ],\n                  })(\n                    <DateTimePicker\n                      placeholder='Select Date & Time*'\n                      value={value}\n                      onChange={onChange}\n                      timePicker={true}\n                      disabled={false}\n                      showOk={true}\n                      timePickerProps={showTime}\n                      format={dateTimeFormat}\n                      //   disabledDate={disabledDate}\n                      disabledDate={disableFutureDt}\n                    />\n                  )}\n                  {(errors = getFieldError('orderGeneratedAt')) ? (\n                    <ErrorMsg errors={errors} />\n                  ) : null}\n                </div>\n                <div className=\"group_action\">\n                <div className='d-flex authorized'>\n                  <div className='components pl-0'>\n                    {!isDrOrNp(authUser) ? (\n                      <div className='m-b-10'>\n                        {getFieldDecorator('physicianId', {\n                          rules: [\n                            {\n                              required: true,\n                              message: 'Please Select Physician',\n                            },\n                          ],\n                        })(<DoctorFilter />)}\n                        {(errors = getFieldError('physicianId')) ? (\n                          <ErrorMsg errors={errors} />\n                        ) : null}\n                      </div>\n                    ) : null}\n                  </div>\n                  <div className='components filter_value'>\n                    {getFieldDecorator('isMedicalDirectiveAuthorized', {\n                      rules: [\n                        {\n                          required: false,\n                        },\n                      ],\n                    })(\n                      <label for='vvs' className='filter_check'>\n                        <input type='checkbox' name='vvs' id='vvs' />\n                        <span className='checkbox'></span>\n                        <span className='lbl'>\n                          Authorized by medical directive\n                        </span>\n                      </label>\n                    )}\n                  </div>\n                </div>\n                <div className='upd_sec_wrap'>\n                  <div\n                    className='upd_sec '\n                    onClick={() => handleVisibleUpload(true)}\n                  >\n                    <PlusBtn />\n                    <span>Upload Images</span>\n\n                    {/* {uploadData.length > 0 && (\n                      <div className=\"upd_img_wrap\">\n                        <Thumbnail path={uploadData[0].path} />\n                      </div>\n                    )} */}\n                  </div>\n                  <div className='upd_sec '>\n                    <PlusBtn />\n                    <span>Add Notes</span>\n                  </div>\n                  <div className='upd_sec '>\n                    <PlusBtn />\n                    <span>Set Reminder</span>\n                  </div>\n                </div>\n                      </div>\n                <div className='footer_btn'>\n                  <Button\n                    className='prev-screen-btn gray-btn'\n                    onClick={onCancel}\n                  >\n                    CANCEL\n                  </Button>\n                  <Button\n                    type='primary'\n                    loading={okLoader}\n                    onClick={handleSave}\n                  >\n                    SAVE\n                  </Button>\n                </div>\n              </div>\n            </form>\n          </div>\n          <div className='uploaded_image_viewer_wrap'>\n            {uploadedDocPath ? (\n              <div className='uploaded_image_viewer_container'>\n                <div className='head'>\n                  <div>\n                    <h5 style={{ float: 'left', marginRight: '5px' }}>\n                      E-Processing\n                    </h5>\n                    {uploadData.length > 1 ? (\n                      <Tooltip overlay='Click Here to view more documents'>\n                        <div\n                          onClick={() => openViewer(true)}\n                          className='badge simple'\n                          style={{ float: 'right' }}\n                        >\n                          <h5>{uploadData.length}</h5>\n                        </div>\n                      </Tooltip>\n                    ) : null}\n                  </div>\n\n                  <a onClick={() => openViewer(true)}>ZOOM IN</a>\n                </div>\n                <figure>\n                  {uploadedDocPath.isDownload ? (\n                    <a download href={uploadData[currImg].path}>\n                      <Image image={uploadedDocPath.showPath} alt='image' />\n                    </a>\n                  ) : (\n                      <Image image={uploadedDocPath.showPath} alt='image' />\n                    )}\n                </figure>\n                <div className='pagination_wrap'>\n                  {/* <div className=\"pagination\">\n                                <a><Prev /></a>\n                                <a className=\"active_page\">01</a>\n                                <a>02</a>\n                                <a>03</a>\n                                <a>04</a>\n                                <a>05</a>\n                                <a><Next /></a>\n                            </div> */}\n                </div>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n      <Uploader\n        visible={uploadVisible}\n        onRequestClose={() => setUploadVisible(false)}\n        multiple\n        allowedTypes={[FILE_TYPES.IMAGE]}\n        // allowedTypes={[FILE_TYPES.IMAGE, FILE_TYPES.PDF, FILE_TYPES.DOC]}\n        uploadUrl={{ ...fileUpload }}\n        fileLength={10}\n        extraData={{\n          isUploadToS3: true,\n          isPrivateBucket: true,\n          returnSignedURL: true,\n          fileName: 'abc.png',\n          category: [\n            FILE_CATEGORY.IMAGE,\n            // FILE_CATEGORY.PDF,\n            // FILE_CATEGORY.DOC,\n          ].join(','),\n        }}\n        onError={(err) => {\n          console.log('on error => ', err);\n        }}\n        onSuccess={(res) => {\n          if (res) {\n            if (res.code === 'OK') {\n              res.data = res.data.filter((x) => {\n                if (x.status) {\n                  let extension = x.path.substr(x.path.lastIndexOf('.') + 1);\n                  x.showPath = x.path;\n                  if (extension === 'pdf') {\n                    x.showPath = require('../../../../../assets/images/pdf.png');\n                    x.isDownload = true;\n                  } else if (extension === 'doc' || extension === 'docx') {\n                    x.showPath = require('../../../../../assets/images/doc.png');\n                    x.isDownload = true;\n                  }\n                  return x;\n                }\n              });\n              let newData = [...uploadData];\n              newData = newData.concat(res.data);\n              setUploadData(newData);\n              handleVisibleUpload(false);\n            }\n          }\n        }}\n      />\n      {viewerIsOpen ? (\n        <>\n          <Lightbox\n            mainSrc={uploadData[currImg].showPath}\n            imageTitle={\n              <div>\n                <div style={{ float: 'left' }}>\n                  {uploadData[currImg].isDownload ? (\n                    <a target='_blank' download href={uploadData[currImg].path}>\n                      download\n                    </a>\n                  ) : null}\n                </div>\n              </div>\n            }\n            nextSrc={uploadData[(currImg + 1) % uploadData.length].showPath}\n            prevSrc={\n              uploadData[(currImg + uploadData.length - 1) % uploadData.length]\n                .showPath\n            }\n            onCloseRequest={() => setViewerIsOpen(false)}\n            onMovePrevRequest={() =>\n              setCurrImg(\n                (currImg) =>\n                  (currImg + uploadData.length - 1) % uploadData.length\n              )\n            }\n            onMoveNextRequest={() =>\n              setCurrImg((currImg) => (currImg + 1) % uploadData.length)\n            }\n          />\n        </>\n      ) : null}\n    </>\n  );\n};\nexport default createForm()(AddEprocessing);\n"]},"metadata":{},"sourceType":"module"}