{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/UserAuth/Logout/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport LogoutUI from './LogoutUI';\nimport { connect, useSelector } from 'react-redux';\nimport { useIdleTimer } from 'react-idle-timer';\nimport { ReactComponent as LogOut } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/images/lock.svg\";\nimport { userSignOut } from '../../../appRedux/actions/Auth';\nimport { getUserName } from '../../../util/common';\nimport { checkPassTokenRefresh } from '../../../services/api/routes/auth';\nimport { SIGNOUT_USER_SUCCESS } from '../../../appRedux/ActionTypes';\nimport { SUB_NURSE_TYPE, USER_TYPE } from '../../../constants/User';\nimport axios from '../../../services/api/config';\nimport { Toast } from '../../../components/common/Toast';\nimport Dialog from 'rc-dialog';\n\nconst _ = require('lodash');\n\nfunction Logout(props) {\n  var _authUser$timeout, _authUser$timeout2;\n\n  const {\n    userSignOut\n  } = props;\n  const [lockModal, setLockModal] = useState(false);\n  const authUser = useSelector(state => state.auth.authUser) || {};\n  const inActiveTimeRef = React.useRef((authUser === null || authUser === void 0 ? void 0 : (_authUser$timeout = authUser.timeout) === null || _authUser$timeout === void 0 ? void 0 : _authUser$timeout.inActiveTime) || 10);\n  const lockScreenTimeRef = React.useRef((authUser === null || authUser === void 0 ? void 0 : (_authUser$timeout2 = authUser.timeout) === null || _authUser$timeout2 === void 0 ? void 0 : _authUser$timeout2.lockScreenTime) || 30);\n  const timeoutRef = React.useRef();\n  const timeoutPopupRef = React.useRef(true);\n  const getIdleTimeout = React.useMemo(() => {\n    var _authUser$timeout3, _authUser$timeout4;\n\n    inActiveTimeRef.current = (authUser === null || authUser === void 0 ? void 0 : (_authUser$timeout3 = authUser.timeout) === null || _authUser$timeout3 === void 0 ? void 0 : _authUser$timeout3.inActiveTime) || 10;\n    lockScreenTimeRef.current = (authUser === null || authUser === void 0 ? void 0 : (_authUser$timeout4 = authUser.timeout) === null || _authUser$timeout4 === void 0 ? void 0 : _authUser$timeout4.lockScreenTime) || 30;\n    return inActiveTimeRef.current;\n  }, [authUser.timeout]);\n  const [showModal, setShowModal] = useState(false);\n  const [idleTimeout, setIdleTimeout] = useState(getIdleTimeout);\n\n  const handleLogout = str => {\n    // if (timeoutPopupRef?.current)\n    if (str === 'idle') setLockModal(true);\n    setShowModal(false);\n    setTimeout(() => {\n      userSignOut(SIGNOUT_USER_SUCCESS);\n      setLockModal(false);\n    }, 1000);\n  };\n\n  const handleIdle = () => {// if (!showModal) {\n    //   return handleLogout()\n    // }\n    // handleVisible()\n  };\n\n  useEffect(() => {\n    //reset();\n    if (showModal) {\n      // reset();\n      timeoutPopupRef.current = false;\n      setIdleTimeout(1000 * 60 * lockScreenTimeRef.current);\n    } else {\n      setIdleTimeout(1000 * 60 * inActiveTimeRef.current);\n    }\n  }, [showModal]);\n\n  const handleVisible = () => {\n    setShowModal(true); // reset();\n\n    setIdleTimeout(1000 * 60 * lockScreenTimeRef.current);\n  };\n\n  const handleOnAction = e => {// console.log('user did something', e)\n  };\n\n  useIdleTimer({\n    stopOnIdle: true,\n    onActive: handleOnAction,\n    onAction: handleOnAction,\n    onIdle: () => handleLogout('idle'),\n    timeout: 1000 * 60 * +idleTimeout\n  });\n\n  const handleContinue = password => {\n    if (!password || !password.trim()) return Toast.error('enter the password...!');\n    let {\n      method,\n      url,\n      baseURL\n    } = checkPassTokenRefresh;\n    axios({\n      method,\n      url,\n      data: {\n        password\n      },\n      baseURL\n    }).then(response => {\n      if (response.data.code == 'OK') {\n        clearTimeout(timeoutRef.current);\n        Toast.success(response.data.message);\n        setShowModal(false); // reset();\n      } else {\n        setShowModal(true);\n        Toast.error(response.data.message);\n      }\n    }).catch(Toast.error);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: handleVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LogOut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), showModal && /*#__PURE__*/React.createElement(LogoutUI, {\n    userName: getUserName(authUser),\n    showModal: showModal,\n    onContinue: handleContinue,\n    onLogout: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), lockModal && /*#__PURE__*/React.createElement(Dialog, {\n    visible: lockModal,\n    className: \"logout_popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content-log\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"name_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Locked\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, `Due to inactivity of ${showModal ? (lockScreenTimeRef === null || lockScreenTimeRef === void 0 ? void 0 : lockScreenTimeRef.current) || 30 : (inActiveTimeRef === null || inActiveTimeRef === void 0 ? void 0 : inActiveTimeRef.current) || 10} minutes your session has expired, Please login again.`))));\n}\n\nexport default connect(null, {\n  userSignOut\n})(withRouter(Logout));","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/UserAuth/Logout/index.js"],"names":["React","useState","useEffect","withRouter","LogoutUI","connect","useSelector","useIdleTimer","userSignOut","getUserName","checkPassTokenRefresh","SIGNOUT_USER_SUCCESS","SUB_NURSE_TYPE","USER_TYPE","axios","Toast","Dialog","_","require","Logout","props","lockModal","setLockModal","authUser","state","auth","inActiveTimeRef","useRef","timeout","inActiveTime","lockScreenTimeRef","lockScreenTime","timeoutRef","timeoutPopupRef","getIdleTimeout","useMemo","current","showModal","setShowModal","idleTimeout","setIdleTimeout","handleLogout","str","setTimeout","handleIdle","handleVisible","handleOnAction","e","stopOnIdle","onActive","onAction","onIdle","handleContinue","password","trim","error","method","url","baseURL","data","then","response","code","clearTimeout","success","message","catch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport LogoutUI from './LogoutUI';\nimport { connect, useSelector } from 'react-redux';\nimport { useIdleTimer } from 'react-idle-timer';\nimport { ReactComponent as LogOut } from '../../../assets/images/lock.svg';\nimport { userSignOut } from '../../../appRedux/actions/Auth';\nimport { getUserName } from '../../../util/common';\nimport { checkPassTokenRefresh } from '../../../services/api/routes/auth';\nimport { SIGNOUT_USER_SUCCESS } from '../../../appRedux/ActionTypes';\nimport { SUB_NURSE_TYPE, USER_TYPE } from '../../../constants/User';\nimport axios from '../../../services/api/config';\nimport { Toast } from '../../../components/common/Toast';\nimport Dialog from 'rc-dialog';\nconst _ = require('lodash');\n\nfunction Logout(props) {\n  const { userSignOut } = props;\n  const [lockModal, setLockModal] = useState(false);\n  const authUser = useSelector((state) => state.auth.authUser) || {};\n  const inActiveTimeRef = React.useRef(authUser?.timeout?.inActiveTime || 10);\n  const lockScreenTimeRef = React.useRef(\n    authUser?.timeout?.lockScreenTime || 30\n  );\n  const timeoutRef = React.useRef();\n  const timeoutPopupRef = React.useRef(true);\n\n  const getIdleTimeout = React.useMemo(() => {\n    inActiveTimeRef.current = authUser?.timeout?.inActiveTime || 10;\n    lockScreenTimeRef.current = authUser?.timeout?.lockScreenTime || 30;\n    return inActiveTimeRef.current;\n  }, [authUser.timeout]);\n\n  const [showModal, setShowModal] = useState(false);\n  const [idleTimeout, setIdleTimeout] = useState(getIdleTimeout);\n\n  const handleLogout = (str) => {\n    // if (timeoutPopupRef?.current)\n    if (str === 'idle')\n      setLockModal(true);\n    setShowModal(false);\n    setTimeout(() => {\n      userSignOut(SIGNOUT_USER_SUCCESS);\n      setLockModal(false);\n    }, 1000);\n  };\n\n  const handleIdle = () => {\n    // if (!showModal) {\n    //   return handleLogout()\n    // }\n    // handleVisible()\n  };\n\n  useEffect(() => {\n    //reset();\n    if (showModal) {\n      // reset();\n      timeoutPopupRef.current = false\n      setIdleTimeout(1000 * 60 * lockScreenTimeRef.current);\n    } else {\n      setIdleTimeout(1000 * 60 * inActiveTimeRef.current);\n    }\n  }, [showModal]);\n\n  const handleVisible = () => {\n    setShowModal(true);\n    // reset();\n    setIdleTimeout(1000 * 60 * lockScreenTimeRef.current);\n  };\n\n\n  const handleOnAction = (e) => {\n    // console.log('user did something', e)\n  }\n\n  useIdleTimer({\n    stopOnIdle: true,\n    onActive: handleOnAction,\n    onAction: handleOnAction,\n    onIdle: () => handleLogout('idle'),\n    timeout: 1000 * 60 * +idleTimeout,\n  });\n\n  const handleContinue = (password) => {\n    if (!password || !password.trim())\n      return Toast.error('enter the password...!');\n\n    let { method, url, baseURL } = checkPassTokenRefresh;\n    axios({ method, url, data: { password }, baseURL })\n      .then((response) => {\n        if (response.data.code == 'OK') {\n          clearTimeout(timeoutRef.current);\n          Toast.success(response.data.message);\n          setShowModal(false);\n          // reset();\n        } else {\n          setShowModal(true);\n          Toast.error(response.data.message);\n        }\n      })\n      .catch(Toast.error);\n  };\n\n  return (\n    <>\n      <a onClick={handleVisible}>\n        <LogOut />\n      </a>\n      {showModal && (\n        <LogoutUI\n          userName={getUserName(authUser)}\n          showModal={showModal}\n          onContinue={handleContinue}\n          onLogout={handleLogout}\n        />\n      )}\n\n      {lockModal && (\n        <Dialog visible={lockModal} className='logout_popup'>\n          <div className='popup-content-log'>\n            <h3 className='name_head'>Locked</h3>\n            <div className='bb'></div>\n            <h2>\n              {`Due to inactivity of ${\n                showModal ? lockScreenTimeRef?.current || 30 : inActiveTimeRef?.current || 10\n                } minutes your session has expired, Please login again.`}\n            </h2>\n          </div>\n        </Dialog>\n      )}\n    </>\n  );\n}\n\nexport default connect(null, { userSignOut })(withRouter(Logout));\n"]},"metadata":{},"sourceType":"module"}