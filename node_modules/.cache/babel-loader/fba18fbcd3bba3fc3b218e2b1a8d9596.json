{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/util/common.js\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { Toast } from \"../components/common/Toast\";\nimport { MED_REVIEW_TODO_TYPES, PMR_PROCESS_TYPE, MED_REVIEW_NAME } from \"../constants/pmr.js\";\nimport { USER_TYPE, SUB_NURSE_TYPE, DESIGNATION_TYPE, USER_DESIGNATION_TYPE, isPharmacyUser } from \"../constants/User\";\nimport { USER_BASED_REDIRECT, EXCLUDE_TENANT } from \"../constants/common\";\nimport { AR_PROCESS_TYPE, ADMISSION_READMISSION_TODO_TYPES } from \"../constants/Admission\";\nimport routes from \"../routes/constant\";\nimport { PERMISSION_ACCESS_TYPE, MODULE } from \"../constants/subscription\";\nimport { history } from \"../appRedux/store/index\";\nimport { decryptData, encryptData } from \"../util/Crypto\";\nimport queryString from \"query-string\";\nimport AdminAccessPermisison from \"../constants/adminRolePermission\";\nimport { TODO_CATEGORY } from \"../constants/todo\";\n\nconst _ = require(\"lodash\");\n\nexport function sortArrayDesc(arr, key) {\n  //sort array in descending order\n  return arr.sort(function (a, b) {\n    return b[key] < a[key] ? -1 : 1;\n  });\n}\nexport function isRouteAccessible(props) {\n  const {\n    token,\n    authUser,\n    location\n  } = props;\n  const otpVerified = JSON.parse(localStorage.getItem(\"otpVerified\"));\n  let isAccessible = false;\n\n  if (authUser) {\n    const {\n      excludeOTPVerification,\n      type\n    } = authUser;\n\n    if (token && (excludeOTPVerification || !excludeOTPVerification && otpVerified) && authUser) {\n      if (type) {\n        if (location && location.pathname) {\n          let moduleId;\n          Object.keys(routes).some(k => {\n            if (routes[k].path === location.pathname) {\n              moduleId = routes[k].module;\n              return true;\n            }\n          });\n\n          if (moduleId && isModuleAccessible(moduleId)) {\n            isAccessible = true;\n          } else if (!moduleId) {\n            isAccessible = true;\n          }\n        }\n      }\n    }\n  }\n\n  return isAccessible;\n}\nexport function displayCatchErrorMsg(error) {\n  console.log(\"displayCatchErrorMsg -> error\", error);\n\n  if (error && error.response && error.response && error.response.data) {// if (error.response.data.code !== 'E_INVALID_TOKEN')\n    //   Toast.error(error.response.data.message);\n  } else if (error.message) {\n    Toast.error(error.message);\n  } else {\n    console.log(typeof error);\n    Toast.error(error);\n  }\n}\nexport function isInvalidTokenError(error) {\n  // console.log(\"TCL: isInvalidTokenError -> error.response\", error.response)\n  if (error && error.response && error.response && error.response.data && error.response.data.code === \"E_INVALID_TOKEN\") {\n    return true;\n  }\n\n  return false;\n}\nexport function checkModuleAccessible(modulePermissions, mappedModulePerm, moduleId, authUser) {\n  let isAccessible = false;\n\n  if (modulePermissions && modulePermissions.length > 0) {\n    modulePermissions.some(curPer => {\n      if (curPer.module === moduleId) {\n        let shallCheck = true;\n\n        if (authUser && [USER_TYPE.HOME.NURSE, USER_TYPE.HOME.PHYSICIAN].indexOf(authUser.type) >= 0 && !curPer.isSelect) {\n          shallCheck = false;\n        }\n\n        if (shallCheck) {\n          if (mappedModulePerm.hasOwnProperty(curPer.module)) {\n            if (mappedModulePerm[moduleId] === PERMISSION_ACCESS_TYPE.DATA) {\n              isAccessible = true;\n            } else if (mappedModulePerm[moduleId] === PERMISSION_ACCESS_TYPE.DO_NOT_HAVE_PERMISSION_TO_VIEW_THIS_PAGE) {\n              isAccessible = false;\n            }\n\n            return true;\n          }\n        }\n      }\n    });\n  }\n\n  return isAccessible;\n}\nexport function checkArrayOfModuleAccessible(modulePermissions, mappedModulePerm, moduleIds) {\n  let isAccessible = false,\n      count = 0;\n\n  if (moduleIds && moduleIds.length) {\n    if (modulePermissions && modulePermissions.length > 0) {\n      modulePermissions.some(curPer => {\n        if (moduleIds.indexOf(curPer.module) >= 0) {\n          count += 1;\n\n          if (mappedModulePerm.hasOwnProperty(curPer.module)) {\n            if (mappedModulePerm[curPer.module] === PERMISSION_ACCESS_TYPE.DATA) {\n              isAccessible = true;\n            } else if (mappedModulePerm[curPer.module] === PERMISSION_ACCESS_TYPE.DO_NOT_HAVE_PERMISSION_TO_VIEW_THIS_PAGE) {\n              isAccessible = false;\n              return true;\n            }\n          }\n        }\n\n        if (count == moduleIds.length) {\n          return true;\n        }\n      });\n    }\n  }\n\n  return isAccessible;\n}\nexport function getMappedPermission(authUser) {\n  let tempMappedModulePerm = {},\n      tempMappedSubModulePerm = {},\n      isMapped = false;\n\n  if (localStorage.getItem(\"mappedModulePermissions\")) {\n    isMapped = true;\n    tempMappedModulePerm = decryptData(localStorage.getItem(\"mappedModulePermissions\"));\n    tempMappedSubModulePerm = decryptData(localStorage.getItem(\"mappedSubModulePermissions\"));\n  } else if (authUser && !isMapped) {\n    const isAdmin = authUser && authUser.type && [USER_TYPE.ADMIN.SUPER, USER_TYPE.ADMIN.GENERAL].indexOf(authUser.type) >= 0 || false;\n\n    if (isAdmin) {\n      let tempGroupPermissions = [...AdminAccessPermisison];\n      tempGroupPermissions.map(cur => {\n        tempMappedModulePerm[cur.module] = PERMISSION_ACCESS_TYPE.DATA;\n\n        if (cur.subModules && cur.subModules.length > 0) {\n          cur.subModules.map(sub => {\n            tempMappedSubModulePerm[sub.subModule] = PERMISSION_ACCESS_TYPE.DATA;\n          });\n        }\n      });\n    } else if (authUser.homeId || authUser.pharmacyId) {\n      var _homeData;\n\n      let homeData = {};\n\n      if (isPharmacyUser(authUser.type)) {\n        homeData = _.cloneDeep(authUser.pharmacyId);\n      } else {\n        homeData = _.cloneDeep(authUser.homeId);\n      }\n\n      if (((_homeData = homeData) === null || _homeData === void 0 ? void 0 : _homeData.assignedSubscriptionGroupId) && !isMapped) {\n        let tempGroupPermissions = homeData.assignedSubscriptionGroupId.groupPermissions;\n\n        if (tempGroupPermissions && tempGroupPermissions.length) {\n          tempGroupPermissions.map(cur => {\n            tempMappedModulePerm[cur.module] = cur.permissionAccesstype;\n\n            if (cur.subModules && cur.subModules.length > 0) {\n              cur.subModules.map(sub => {\n                tempMappedSubModulePerm[sub.subModule] = sub.permissionAccesstype;\n              });\n            }\n          });\n        }\n      }\n    }\n\n    localStorage.setItem(\"mappedModulePermissions\", encryptData(tempMappedModulePerm));\n    localStorage.setItem(\"mappedSubModulePermissions\", encryptData(tempMappedSubModulePerm));\n  }\n\n  return {\n    tempMappedModulePerm,\n    tempMappedSubModulePerm\n  };\n}\nexport function getRolePermissionGroup(authUser) {\n  let rolePemissionModules = localStorage.getItem(\"rolePemissionModules\");\n  let modulePermissions;\n\n  if (rolePemissionModules) {\n    modulePermissions = decryptData(rolePemissionModules);\n  } else {\n    if (authUser && authUser.homeId && authUser.homeId._id && authUser.homeId.roleBasePermission) {\n      let homeData = _.cloneDeep(authUser.homeId.roleBasePermission);\n\n      if (homeData.roleAccessPermissions && homeData.roleAccessPermissions.length) {\n        modulePermissions = homeData.roleAccessPermissions;\n      }\n    } else if (authUser && authUser.type && [USER_TYPE.ADMIN.SUPER, USER_TYPE.ADMIN.GENERAL].indexOf(authUser.type) >= 0) {\n      // action acess permisison for SUPER/GENERAL ADMIN\n      modulePermissions = [...AdminAccessPermisison];\n    } else if (authUser && (authUser.type === USER_TYPE.HOME.ADMIN || authUser.type === USER_TYPE.PHARMACY.ADMIN)) {\n      var _authUser$homeId, _authUser$homeId2, _authUser$pharmacyId, _authUser$pharmacyId2, _authUser$pharmacyId3;\n\n      // action acess permisison for HOME/PHARMACY ADMIN\n      let tempSubcriptionGroup = authUser.type === USER_TYPE.HOME.ADMIN && ((_authUser$homeId = authUser.homeId) === null || _authUser$homeId === void 0 ? void 0 : _authUser$homeId.assignedSubscriptionGroupId) ? [...((_authUser$homeId2 = authUser.homeId) === null || _authUser$homeId2 === void 0 ? void 0 : _authUser$homeId2.assignedSubscriptionGroupId.groupPermissions)] : authUser.type === USER_TYPE.PHARMACY.ADMIN && ((_authUser$pharmacyId = authUser.pharmacyId) === null || _authUser$pharmacyId === void 0 ? void 0 : _authUser$pharmacyId.assignedSubscriptionGroupId) ? [...((_authUser$pharmacyId2 = authUser.pharmacyId) === null || _authUser$pharmacyId2 === void 0 ? void 0 : (_authUser$pharmacyId3 = _authUser$pharmacyId2.assignedSubscriptionGroupId) === null || _authUser$pharmacyId3 === void 0 ? void 0 : _authUser$pharmacyId3.groupPermissions)] : undefined;\n      modulePermissions = tempSubcriptionGroup === null || tempSubcriptionGroup === void 0 ? void 0 : tempSubcriptionGroup.map(mod => {\n        var _mod$actions, _mod$subModule;\n\n        mod.isSelect = true;\n        mod.actions = (_mod$actions = mod.actions) === null || _mod$actions === void 0 ? void 0 : _mod$actions.map(act => {\n          act.isSelect = true;\n          return act;\n        });\n        mod.subModule = (_mod$subModule = mod.subModule) === null || _mod$subModule === void 0 ? void 0 : _mod$subModule.map(sub => {\n          var _sub$actions;\n\n          sub.isSelect = true;\n          sub.actions = (_sub$actions = sub.actions) === null || _sub$actions === void 0 ? void 0 : _sub$actions.map(act => {\n            act.isSelect = true;\n            return act;\n          });\n          return sub;\n        });\n        return mod;\n      });\n    }\n\n    if (modulePermissions) localStorage.setItem(\"rolePemissionModules\", encryptData(modulePermissions));\n  }\n\n  return modulePermissions;\n}\nexport function isModuleAccessiblePharmacyHome(moduleId, tempMappedModulePerm, subModuleId, tempMappedSubModulePerm) {\n  // console.log(\"isModuleAccessiblePharmacyHome -> moduleId, tempMappedModulePerm\", moduleId, tempMappedModulePerm)\n  let isAccessible = false;\n\n  if (tempMappedModulePerm.hasOwnProperty(moduleId)) {\n    if (tempMappedModulePerm[moduleId] === PERMISSION_ACCESS_TYPE.DATA) {\n      isAccessible = true;\n    } else if (tempMappedModulePerm[moduleId] === PERMISSION_ACCESS_TYPE.DO_NOT_HAVE_PERMISSION_TO_VIEW_THIS_PAGE) {\n      isAccessible = false;\n    }\n  }\n\n  return isAccessible;\n}\nexport function isSubModuleAccessible(subModuleId, tempMappedSubModulePerm) {\n  //to check subscription of submodule\n  return tempMappedSubModulePerm[subModuleId] === PERMISSION_ACCESS_TYPE.DATA;\n}\nexport function isArrayModuleAccessiblePharmacyHome(moduleIds, tempMappedModulePerm) {\n  let isAccessible = false,\n      count = 0;\n\n  if (moduleIds && moduleIds.length) {\n    moduleIds.some(moduleId => {\n      if (tempMappedModulePerm.hasOwnProperty(moduleId)) {\n        count += 1;\n\n        if (tempMappedModulePerm[moduleId] === PERMISSION_ACCESS_TYPE.DATA) {\n          isAccessible = true;\n        } else if (tempMappedModulePerm[moduleId] === PERMISSION_ACCESS_TYPE.DO_NOT_HAVE_PERMISSION_TO_VIEW_THIS_PAGE) {\n          isAccessible = false;\n          return true;\n        }\n      }\n\n      if (count == moduleIds.length) {\n        return true;\n      }\n    });\n  }\n\n  return isAccessible;\n}\nexport function isModuleAccessible(moduleId, isMultiple, subModuleId) {\n  let isAccessible = false;\n  let authUser = localStorage.getItem(\"user\") ? decryptData(localStorage.getItem(\"user\")) : null;\n\n  if (authUser) {\n    if (authUser.type && [USER_TYPE.ADMIN.SUPER, USER_TYPE.ADMIN.GENERAL].indexOf(authUser.type) >= 0) {\n      return true;\n    }\n\n    let {\n      tempMappedModulePerm,\n      tempMappedSubModulePerm\n    } = getMappedPermission(authUser);\n\n    if (authUser.type && [USER_TYPE.PHARMACY.ADMIN, USER_TYPE.HOME.ADMIN].indexOf(authUser.type) >= 0) {\n      if (isMultiple) {\n        isAccessible = isArrayModuleAccessiblePharmacyHome(moduleId, tempMappedModulePerm);\n      } else {\n        isAccessible = isModuleAccessiblePharmacyHome(moduleId, tempMappedModulePerm);\n        if (isAccessible && subModuleId) isAccessible = isSubModuleAccessible(subModuleId, tempMappedSubModulePerm);\n      }\n    } else {\n      let tempPermissionGroup = getRolePermissionGroup(authUser);\n\n      if (isMultiple) {\n        isAccessible = checkArrayOfModuleAccessible(tempPermissionGroup, tempMappedModulePerm, moduleId);\n      } else {\n        isAccessible = checkModuleAccessible(tempPermissionGroup, tempMappedModulePerm, moduleId, authUser);\n      }\n    }\n  }\n\n  return isAccessible;\n}\nexport function canPerformAction(params, doNotIncludeAction) {\n  let shouldPerform = false;\n  let authUser = localStorage.getItem(\"user\") ? decryptData(localStorage.getItem(\"user\")) : null;\n\n  if (authUser) {\n    // if (authUser.type && [USER_TYPE.ADMIN.SUPER, USER_TYPE.ADMIN.GENERAL].indexOf(authUser.type) >= 0) {\n    //     // action acess permisison for SUPER/GENERAL ADMIN\n    //     return true\n    // }\n    let tPermGroup = getRolePermissionGroup(authUser);\n    let {\n      tempMappedModulePerm\n    } = getMappedPermission(authUser);\n    shouldPerform = checkActionCanBePerformed(tPermGroup, tempMappedModulePerm, params, doNotIncludeAction);\n  }\n\n  return shouldPerform;\n}\nexport function checkActionCanBePerformed(tempPermissionGroup, tMappedModulePerm, params, doNotIncludeAction) {\n  let checkCanPerformAction = false,\n      isFound = false;\n\n  if (params.moduleId) {\n    if (tempPermissionGroup && tempPermissionGroup.length) {\n      tempPermissionGroup.some(curModule => {\n        if (curModule.module === params.moduleId) {\n          if (tMappedModulePerm[params.moduleId] === PERMISSION_ACCESS_TYPE.DATA) {\n            if (params.hasOwnProperty(\"actiontoCheck\")) {\n              if (curModule.actions && curModule.actions.length) {\n                curModule.actions.some(action => {\n                  const actionKey = params.actionKey || 'code';\n\n                  if (action.isSelect && action[actionKey] === params.actiontoCheck) {\n                    checkCanPerformAction = true;\n                    isFound = true;\n                    return true;\n                  }\n                });\n              }\n            }\n\n            if (!params.hasOwnProperty(\"actiontoCheck\")) {\n              if (params.subModuleId && curModule.subModules && curModule.subModules.length) {\n                curModule.subModules.some(curSubModule => {\n                  if (params.subModuleId === curSubModule.subModule && curSubModule.isSelect) {\n                    if (doNotIncludeAction) {\n                      checkCanPerformAction = true;\n                      isFound = true;\n                      return true;\n                    }\n\n                    if (params.checkSubAction && curSubModule.actions && curSubModule.actions.length) {\n                      curSubModule.actions.some(subAction => {\n                        const actionKey = params.actionKey || 'code';\n\n                        if (subAction.isSelect && subAction[actionKey] === params.checkSubAction) {\n                          checkCanPerformAction = true;\n                          isFound = true;\n                          return true;\n                        }\n                      });\n                    }\n\n                    if (isFound) {\n                      return true;\n                    }\n                  }\n                });\n              }\n            }\n\n            if (isFound) {\n              return true;\n            }\n          }\n        }\n\n        if (isFound) {\n          return true;\n        }\n      });\n    } else {// if (authUser.type && [USER_TYPE.PHARMACY.ADMIN, USER_TYPE.HOME.ADMIN].indexOf(authUser.type) >= 0)\n    }\n  }\n\n  return checkCanPerformAction;\n}\nexport function getUserBaseRedirect(user) {\n  let foundRoute = routes.viewResident.path; // if (user && user.type) {\n  //     Object.keys(USER_BASED_REDIRECT).some(route => {\n  //         if (USER_BASED_REDIRECT[route].indexOf(user.type) >= 0) {\n  //             foundRoute = route\n  //             return route\n  //         }\n  //     })\n  // }\n  // console.log(\"TCL: getUserBaseRedirect -> foundRoute\", foundRoute)\n\n  return foundRoute;\n}\nexport function isKeyExist(obj, keys) {\n  let newObj = obj,\n      isExist = false;\n\n  if (obj && newObj && typeof newObj === \"object\" && Object.keys(obj).length) {\n    keys.forEach((k, i) => {\n      if (newObj.hasOwnProperty(k)) {\n        if (i === keys.length - 1) {\n          isExist = true;\n        }\n\n        newObj = newObj[k];\n      }\n    });\n  }\n\n  return isExist;\n}\nexport function isDrOrNp(user) {\n  if (!user) return; // return true if user is Doctor or Nurse Practioner\n\n  return user.type === USER_TYPE.HOME.PHYSICIAN || user.subNurseType === SUB_NURSE_TYPE[\"NURSE_PRACTITIONER\"];\n}\nvar timerid;\nconst fileTypesExtensions = {\n  image: [\"tif\", \"raw\", \"tiff\", \"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\"],\n  pdf: [\"pdf\"]\n};\nconst UtilService = {\n  getPrimaryValue: (array, key) => {\n    let email = \"\";\n\n    if (array && array.length) {\n      array.some(obj => {\n        if (Object.keys(obj).length && obj.isPrimary && obj[key]) {\n          email = obj[key];\n          return true;\n        }\n      });\n    }\n\n    return email;\n  },\n  getPrimaryObj: array => {\n    return array && array.length ? _.find(array, {\n      isPrimary: true\n    }) : \"\";\n  },\n  getLoginUserWiseHomesObj: (obj, loginUser) => {\n    if (obj && obj.homes && obj.homes.length && loginUser.type === USER_TYPE.HOME.ADMIN) {\n      obj.homeAreaId = obj.homes[0] ? obj.homes[0] : null;\n      delete obj.homes;\n    } else if (obj && obj.homes && obj.homes.length) {\n      obj.pharmacyId = obj.homes[0] ? obj.homes[0] : null;\n      obj.homeId = obj.homes[1] ? obj.homes[1] : null;\n      obj.homeAreaId = obj.homes[2] ? obj.homes[2] : null;\n      delete obj.homes;\n    } else if (loginUser.type === USER_TYPE.HOME.ADMIN) {\n      obj.homeAreaId = loginUser.parentClientele && loginUser.parentClientele.length ? loginUser.parentClientele[0].id : null;\n    }\n\n    return obj;\n  },\n  getLoginUserWiseHomesEditObj: (obj, loginUser) => {\n    if (loginUser.type === USER_TYPE.HOME.ADMIN) {\n      obj.homes = [obj.homeAreaId];\n    } else {\n      obj.homes = [obj.pharmacyId, obj.homeId, obj.homeAreaId];\n    }\n\n    return obj;\n  },\n  getSubCategory: obj => {\n    if (obj === 1) {\n      return \"Consent obtained\";\n    } else {\n      return \"General\";\n    }\n  },\n  // setReadMore: (text, strLength, width) => {\n  //     let string = text.substr(0, strLength || 20);\n  //     if (text.length > 20) {\n  //         let content = <div style={{ wordWrap: \"break-word\", width: width || 700 }}>{text}</div>;\n  //         return (\n  //             <Popover content={content} trigger=\"click\">\n  //                 {string}\n  //                 <a style={{ color: \"#0645AD\" }}>...Read more</a>\n  //             </Popover>\n  //         );\n  //     } else {\n  //         return string;\n  //     }\n  // },\n  displayType: obj => {\n    if (obj === 1) {\n      return \"Draft\";\n    } else if (obj === 2) {\n      return \"Order\";\n    } else {\n      return \"\";\n    }\n  },\n\n  attachExtensionImageMulti(path) {\n    var fileExtension = path ? path.substr(path.lastIndexOf(\".\") + 1) : \"\";\n    let fileType = \"\";\n\n    _.each(fileTypesExtensions, function (extensions, key) {\n      if (extensions.indexOf(fileExtension) !== -1) {\n        fileType = key;\n      }\n    });\n\n    if (fileType != \"image\") {\n      path = \"/img/common/\" + fileType + \".png\";\n    }\n\n    return path;\n  },\n\n  //   displayPmrProcess(val, view) {\n  //     if (typeof val !== 'object') return;\n  //     let todoType, subNurseType;\n  //     Object.keys(TODO_CATEGORY.MED_REVIEW).map((todo) => {\n  //       if (TODO_CATEGORY.MED_REVIEW[todo] === val.type) {\n  //         todoType = todo.replace(/_/g, ' ');\n  //         todoType = MED_REVIEW_NAME[todo].replace(/_/g, ' ');\n  //         return <span style={{ textTransform: 'capitalize' }}>{todoType} </span>;\n  //       }\n  //     });\n  //     if (val.completedBy && val.completedBy.subNurseType) {\n  //       Object.keys(SUB_NURSE_TYPE).map((subNurse) => {\n  //         if (SUB_NURSE_TYPE[subNurse] === val.completedBy.subNurseType) {\n  //           subNurseType = subNurse.replace(/_/g, ' ');\n  //           return (\n  //             <span style={{ textTransform: 'capitalize' }}>\n  //               ({subNurseType})\n  //             </span>\n  //           );\n  //         }\n  //       });\n  //     }\n  //     return (\n  //       <div>\n  //         {view === 'list'\n  //           ? val.processType === PMR_PROCESS_TYPE.INITIATED\n  //             ? `Initiated by ${val.completedBy?.mergeLFName} ${\n  //                 val.completedBy && val.completedBy.subNurseType\n  //                   ? val.completedBy && isDrOrNp(val.completedBy)\n  //                   : ''\n  //               } `\n  //             : `Completed by ${val.completedBy?.mergeLFName} ${\n  //                 val.completedBy && val.completedBy.subNurseType\n  //                   ? val.completedBy && isDrOrNp(val.completedBy)\n  //                   : ''\n  //               } at\n  //                                                  ${displayDateTime(\n  //                                                    val.completedAt\n  //                                                  )}`\n  //           : val.processType === PMR_PROCESS_TYPE.INITIATED\n  //           ? `${todoType} is Initiated by ${val.completedBy?.mergeLFName} ${\n  //               val.completedBy && val.completedBy.subNurseType\n  //                 ? val.completedBy && isDrOrNp(val.completedBy)\n  //                 : ''\n  //             } `\n  //           : `${todoType} is Completed by ${val.completedBy?.mergeLFName} ${\n  //               val.completedBy && val.completedBy.subNurseType\n  //                 ? val.completedBy && isDrOrNp(val.completedBy)\n  //                 : ''\n  //             } at\n  //                                                      ${displayDateTime(\n  //                                                        val.completedAt\n  //                                                      )}`}\n  //       </div>\n  //     );\n  //   },\n  displayArProcess(val, view) {\n    if (typeof val !== \"object\") return;\n    let todoType, subNurseType;\n    Object.keys(ADMISSION_READMISSION_TODO_TYPES).map(todo => {\n      if (ADMISSION_READMISSION_TODO_TYPES[todo] === val.type) {\n        todoType = todo.replace(/_/g, \" \");\n        return /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            textTransform: \"capitalize\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 16\n          }\n        }, todoType, \" \");\n      }\n    });\n\n    if (val.completedBy && val.completedBy.subNurseType) {\n      Object.keys(SUB_NURSE_TYPE).map(subNurse => {\n        if (SUB_NURSE_TYPE[subNurse] === val.completedBy.subNurseType) {\n          subNurseType = subNurse.replace(/_/g, \" \");\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              textTransform: \"capitalize\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 13\n            }\n          }, \"(\", subNurseType, \")\");\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 7\n      }\n    }, view === \"list\" ? val.processType === AR_PROCESS_TYPE.INITIATED ? `Initiated by ${val.completedBy ? getUserNameWithDesignation(val.completedBy) : \"\"} ${val.completedBy && val.completedBy.subNurseType ? `(${subNurseType})` : val.completedBy && isDrOrNp(val.completedBy) ? ` (Physician)` : \"\"} ` : `Completed by ${val.completedBy ? getUserNameWithDesignation(val.completedBy) : \"\"} ${val.completedBy && val.completedBy.subNurseType ? `(${subNurseType})` : val.completedBy && isDrOrNp(val.completedBy) ? ` (Physician)` : \"\"} at\n                                                 ${moment(val.completedAt).format(\"MM/DD/YYYY, HH:mm\")}` : val.processType === AR_PROCESS_TYPE.INITIATED ? `${todoType} is Initiated by ${val.completedBy ? getUserNameWithDesignation(val.completedBy) : \"\"} ${val.completedBy && val.completedBy.subNurseType ? `(${subNurseType})` : val.completedBy && isDrOrNp(val.completedBy) ? ` (Physician)` : \"\"} ` : `${todoType} is Completed by ${val.completedBy ? getUserNameWithDesignation(val.completedBy) : \"\"} ${val.completedBy && val.completedBy.subNurseType ? `(${subNurseType})` : val.completedBy && isDrOrNp(val.completedBy) ? ` (Physician)` : \"\"} at\n                                                     ${moment(val.completedAt).format(\"MM/DD/YYYY, HH:mm\")}`);\n  },\n\n  displayPhone(phone) {\n    // (705) 326-835\n    phone = phone.replace(/[^\\d]/g, \"\");\n    phone = phone.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"($1) $2-$3\");\n    return phone;\n  }\n\n};\nexport function trimStr(str, type) {\n  if (!type) return str.trim();\n  if (type === \"left\") return str.trimStart();else if (type === \"right\") return str.trimEnd();\n}\nexport function redirectToActiveAR(options, pageName) {\n  if (pageName === \"todo\") return `/wa/admission-readmission-todo?todoCategory=${options.todoCategory}&todoSubCategory=${options.todoSubCategory}&viewType=${options.viewType}&arId=${options.arId}`;else return `/wa/admission-readmission-order?todoSubCategory=${options.todoSubCategory}&viewType=${options.viewType}&arId=${options.arId}`;\n}\nexport function capitalizeStr(value) {\n  if (value.length > 0) {\n    return value.replace(/\\w\\S*/g, function (txt) {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  }\n}\nexport function getDesignation({\n  subNurseType,\n  type\n}) {\n  //return user's designation\n  let designation;\n  Object.keys(DESIGNATION_TYPE).map(x => {\n    if (subNurseType && DESIGNATION_TYPE[x].id === subNurseType || DESIGNATION_TYPE[x].id === type) designation = DESIGNATION_TYPE[x].name;\n  });\n  return designation;\n}\nexport function getUserNameWithDesignation({\n  type,\n  mergeLFName,\n  homeId,\n  assignedCustomer\n}) {\n  if (!mergeLFName) return '-';\n\n  if (type === USER_TYPE.HOME.NURSE || type === USER_TYPE.HOME.PHYSICIAN) {\n    var _homeId$designationId;\n\n    let designationId = '',\n        userType = '';\n    if (homeId) designationId = (homeId === null || homeId === void 0 ? void 0 : (_homeId$designationId = homeId.designationId) === null || _homeId$designationId === void 0 ? void 0 : _homeId$designationId.name) || '';else if ((assignedCustomer === null || assignedCustomer === void 0 ? void 0 : assignedCustomer.length) > 0) {\n      var _assignedCustomer$, _assignedCustomer$$de;\n\n      designationId = (_assignedCustomer$ = assignedCustomer[0]) === null || _assignedCustomer$ === void 0 ? void 0 : (_assignedCustomer$$de = _assignedCustomer$.designationId) === null || _assignedCustomer$$de === void 0 ? void 0 : _assignedCustomer$$de.name;\n    }\n\n    if (!designationId) {\n      Object.keys(USER_TYPE.HOME).map(x => {\n        if (USER_TYPE.HOME[x] === type) userType = x.replace(/_/g, ' ');\n        return x;\n      });\n    }\n\n    const desig = designationId || userType;\n    const name = `${capitalizeStr(mergeLFName)}${desig ? ` (${desig.toUpperCase()})` : ''}`;\n    return name;\n  }\n\n  return mergeLFName;\n}\nexport function getUserName(userData) {\n  if (userData && typeof userData === \"object\" && Object.keys(userData).length > 0 && userData.firstName && userData.lastName) {\n    let userName = `${userData.lastName}  ${userData.firstName}`;\n\n    if (userData.type && USER_DESIGNATION_TYPE.hasOwnProperty(userData.type)) {\n      return `${userName} (${USER_DESIGNATION_TYPE[userData.type]})`;\n    } else if (userData.subNurseType && USER_DESIGNATION_TYPE.hasOwnProperty(userData.subNurseType)) {\n      return `${userName} (${USER_DESIGNATION_TYPE[userData.subNurseType]})`;\n    } else {\n      return userName;\n    }\n  }\n\n  return \"\";\n}\nexport function isCautionAlertNotes(pmrDetail, defaultToDoCategory) {\n  if (!pmrDetail) return;\n  if ((pmrDetail.checkType === MED_REVIEW_TODO_TYPES.NURSE_REVIEW_1 || pmrDetail.checkType === MED_REVIEW_TODO_TYPES.NURSE_REVIEW_2) && pmrDetail.checkType !== MED_REVIEW_TODO_TYPES.PMR && defaultToDoCategory !== pmrDetail.subCategory && //orderlist\n  pmrDetail.pmrStatusUpdate && pmrDetail.pmrStatusUpdate.latest && pmrDetail.pmrStatusUpdate.latest.type && pmrDetail.pmrStatusUpdate.latest.type !== MED_REVIEW_TODO_TYPES.PMR) return true;else return false;\n}\nexport function isDrOrNurse(user) {\n  // return true if user is Doctor or Nurse\n  let type;\n  if (typeof user === \"object\") type = user.type;else type = user;\n  return type === USER_TYPE.HOME.DOCTOR || type === USER_TYPE.HOME.NURSE;\n}\nexport function getVirtualVisitDueDays(schedule) {\n  if (!schedule || !schedule.from || !schedule.to) return \"-\";\n  let days = moment().diff(schedule.to, \"days\");\n  if (days > 0) return `Overdue ${Math.abs(days)} ${Math.abs(days) === 1 ? \"day\" : \"days\"}`;else if (days === 0) return `Due Today`;else return `Due in ${Math.abs(days)} ${Math.abs(days) === 1 ? \"day\" : \"days\"}`;\n}\nexport function getResidentHeightWeight(data) {\n  if (data.patientInfoId.writiChart && data.patientInfoId.writiChart.length > 0) {\n    data.patientInfoId.writiChart.forEach(obj => {\n      if (obj.type === \"PatChartDetailReadingType_Weight\") {\n        data.patientInfoId.weight = obj.unit;\n      }\n\n      if (obj.type === \"PatChartDetailReadingType_Height\") {\n        data.patientInfoId.height = obj.unit;\n      }\n\n      if (obj.type === \"PatChartDetailReadingType_Creatinine\") {\n        let creatinineUnit = \"\";\n\n        if (obj.uom === \"MicromolesPerLitre\") {\n          creatinineUnit = \"umol/l\";\n        }\n\n        if (obj.uom === \"MilligramsPerDecilitre\") {\n          creatinineUnit = \"mg/dL\";\n        }\n\n        if (data.chartInfo) {\n          data.chartInfo[\"creatinineUnit\"] = creatinineUnit;\n        }\n      }\n    });\n  }\n\n  return data;\n} //function for checking feature is accessible for user like digital binder or E-processing\n\nexport function isFeatureAccessible(authUser, pModule) {\n  let canAccess = false;\n\n  let tempAuth = _.cloneDeep(authUser);\n\n  if (tempAuth && tempAuth.permissionGroup && tempAuth.permissionGroup.permissions) {\n    let tempPermission = _.cloneDeep(tempAuth.permissionGroup.permissions);\n\n    tempPermission.some(obj => {\n      if (obj.module == pModule + \"\" && obj.isAllowedFromPanel) {\n        canAccess = true;\n        return true;\n      }\n    });\n  } else if (tempAuth && !tempAuth.hasOwnProperty(\"permissionGroup\")) {\n    canAccess = true;\n  }\n\n  return canAccess;\n}\nexport function isViewPermissionAllowed(authUser, pModule) {\n  let isAllowed = false;\n\n  let tempAuth = _.cloneDeep(authUser);\n\n  if (tempAuth && tempAuth.permissionGroup && tempAuth.permissionGroup.permissions) {\n    let tempPermission = _.cloneDeep(tempAuth.permissionGroup.permissions);\n\n    tempPermission.some(obj => {\n      if (obj.module == pModule + \"\") {\n        if (obj.viewPermissionType === PERMISSION_ACCESS_TYPE.DATA) {\n          isAllowed = true;\n          return true;\n        }\n      }\n    });\n  } else if (tempAuth && !tempAuth.hasOwnProperty(\"permissionGroup\")) {\n    isAllowed = true;\n  }\n\n  return isAllowed;\n}\nexport function setCallDuration(setCall, show) {\n  if (!show) {\n    clearInterval(timerid);\n    return;\n  }\n\n  var self = this;\n  setCall({\n    showTimer: true\n  });\n  var seconds = 0,\n      minutes = 0,\n      hours = 0;\n  timerid = setInterval(countdown, 1000);\n\n  function countdown() {\n    setCall({\n      seconds: checkTime(seconds),\n      minutes: checkTime(minutes),\n      hours: checkTime(hours)\n    });\n    seconds++;\n\n    if (seconds === 60) {\n      seconds = 0;\n      minutes++;\n    }\n\n    if (minutes === 60) {\n      minutes = 0;\n      hours++;\n    }\n  }\n\n  function checkTime(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    } // add zero in front of numbers < 10\n\n\n    return i;\n  }\n}\nexport function socketValidity(homeAreaId, authUser, str) {\n  // to listen socket for only Assigned Home and Home Area\n  if (!homeAreaId || !authUser) return true;\n  if (homeAreaId && typeof homeAreaId === \"object\") homeAreaId = homeAreaId.id; // let parentClientele = _.map(authUser.parentClientele, 'id')\n  // if (parentClientele.includes(homeAreaId)) {\n\n  let assignedHome;\n  if (!str) assignedHome = authUser.assignedHomeId.find(x => x.homeAreaId === homeAreaId);\n\n  if (assignedHome && assignedHome.homeId === authUser.homeId || str === \"home\" && homeAreaId === authUser.homeId) {\n    console.log(\"Valid socket!\");\n    return true;\n  } else {\n    console.log(\"Invalid socket!\");\n    return false;\n  } // }\n\n}\nexport function selectedBodyParts(current) {\n  let parentObj = {};\n\n  if (current.selectedBodyParts && current.selectedBodyParts.length) {\n    current.selectedBodyParts.forEach(obj => {\n      if (!obj.isDeleted) {\n        if (obj.isClickable) {\n          let optionList = [];\n          obj.optionItems.forEach(option => {\n            optionList.push(option.name);\n          });\n          parentObj = { ...parentObj,\n            [obj.label]: {\n              items: optionList.join(\",\"),\n              isClickable: true\n            }\n          };\n        } else {\n          if (obj.optionItems.length) {\n            obj.optionItems.forEach(option => {\n              if (option.radioButtons && option.radioButtons.length) {\n                option.radioButtons.forEach(radioOption => {\n                  if (radioOption.optionItems.length) {\n                    let optionList = [];\n                    radioOption.optionItems.forEach(obj => {\n                      optionList.push(obj.name);\n                    });\n                    let tempObj = {\n                      [radioOption.label]: {\n                        optionItems: optionList.join(\",\"),\n                        isClickable: false\n                      }\n                    };\n                    parentObj[obj.label] = parentObj[obj.label] ? { ...parentObj[obj.label],\n                      ...tempObj\n                    } : { ...tempObj\n                    };\n                  }\n                });\n              }\n            });\n          }\n        }\n      }\n    });\n  }\n\n  current.selectedOptions = parentObj;\n  return current;\n}\nexport default UtilService;\nexport function getNewTabIndex(data, index) {\n  //return new tab index on tabclose\n  let newIndex = index;\n  if (index === 0) newIndex = 1;else if (index === data.length) newIndex = data.length - 2;else newIndex++;\n  return newIndex;\n}\nexport const UpperCaseStr = str => {\n  return str.toUpperCase();\n};\nexport const isExcludeTenant = params => {\n  // show switch home in header\n  // @isHome is to check module is Org or Home as both have same module constant\n  const {\n    authUser\n  } = params;\n  let path = window.location.pathname,\n      id,\n      isHome = false,\n      defaultExclude = false,\n      excludeTenant;\n  Object.keys(routes).map(x => {\n    if (routes[x].path === path) {\n      id = routes[x].module;\n      isHome = routes[x].isHome;\n\n      if (routes[x].isCustomer) {\n        const query = queryString.parse(window.location.search);\n\n        if ((query === null || query === void 0 ? void 0 : query.type) === \"home\") {\n          // customer home\n          defaultExclude = false;\n        } else if ((query === null || query === void 0 ? void 0 : query.type) === \"homeArea\") {\n          // customer home area\n          defaultExclude = true;\n        }\n      }\n    } else if (routes[x].mainPath) {\n      // user module\n      let lastIndex = path.lastIndexOf(\"/\");\n      let s1 = path.substring(0, lastIndex);\n\n      if (s1 === routes[x].mainPath) {\n        id = routes[x].module;\n        isHome = routes[x].isHome;\n      }\n\n      const query = queryString.parse(window.location.search);\n\n      if (query && query.type === \"home\") {\n        id = routes[x].module;\n        isHome = true;\n        defaultExclude = true;\n      }\n    }\n  });\n  if (!id) return setExcludeTenant(true);\n  if (defaultExclude) return setExcludeTenant(false);\n\n  if (id && EXCLUDE_TENANT.includes(id) && !isHome) {\n    if (authUser.type === USER_TYPE.HOME.ADMIN && id === MODULE.MASTER) {\n      return setExcludeTenant(false);\n    }\n\n    return setExcludeTenant(true);\n  } else return setExcludeTenant(false);\n\n  function setExcludeTenant(value) {\n    localStorage.setItem(\"excludeTenant\", !value);\n    return value;\n  }\n};\nexport const userLogout = () => {\n  clearLocalStorage();\n  history.push({\n    pathname: routes.login.path\n  });\n};\nexport const clearLocalStorage = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(\"homeId\");\n  localStorage.removeItem(\"homeAreaId\");\n  localStorage.removeItem(\"cascader-filter\");\n  localStorage.removeItem(\"physician-filter\");\n  localStorage.removeItem(\"mappedModulePermissions\");\n  localStorage.removeItem(\"rolePemissionModules\");\n  localStorage.removeItem(\"tenantId\");\n  localStorage.removeItem(\"otpVerified\");\n  localStorage.removeItem(\"prescriptions\");\n  localStorage.removeItem(\"excludeTenant\");\n  localStorage.removeItem(\"mappedSubModulePermissions\");\n  localStorage.removeItem(\"refreshToken\");\n  localStorage.removeItem(\"excludeOTPVerification\");\n};\nexport const codeConvert = string => {\n  let removedCharString = string.replace(/[^\\w-+.\\\\/\\s]/g, \"\");\n  removedCharString = removedCharString.trim();\n  return removedCharString.replace(/\\s+/g, \"_\").toUpperCase();\n};\nexport const getLFName = (user, marginFlag) => {\n  if (!user) return;\n\n  if (!user.firstName && user.mergeLFName) {\n    let str = user.mergeLFName.split(\",\");\n    user.lastName = str[0].trim();\n    user.firstName = str[1].trim();\n    if (!user.lastName || !user.firstName) return;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"block\",\n      height: \"35px\",\n      width: \"35px\",\n      lineHeight: \"35px\",\n      borderRadius: \"30px\",\n      backgroundColor: \"#E5E4E2\",\n      color: \"Black\",\n      textAlign: \"center\",\n      fontSize: \"1em\",\n      marginRight: \"8%\"\n    },\n    className: marginFlag ? \"mr-0 user_initial\" : \"user_initial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1213,\n      columnNumber: 5\n    }\n  }, user.lastName.charAt(0).toUpperCase() + user.firstName.charAt(0).toUpperCase());\n};","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/util/common.js"],"names":["moment","React","Toast","MED_REVIEW_TODO_TYPES","PMR_PROCESS_TYPE","MED_REVIEW_NAME","USER_TYPE","SUB_NURSE_TYPE","DESIGNATION_TYPE","USER_DESIGNATION_TYPE","isPharmacyUser","USER_BASED_REDIRECT","EXCLUDE_TENANT","AR_PROCESS_TYPE","ADMISSION_READMISSION_TODO_TYPES","routes","PERMISSION_ACCESS_TYPE","MODULE","history","decryptData","encryptData","queryString","AdminAccessPermisison","TODO_CATEGORY","_","require","sortArrayDesc","arr","key","sort","a","b","isRouteAccessible","props","token","authUser","location","otpVerified","JSON","parse","localStorage","getItem","isAccessible","excludeOTPVerification","type","pathname","moduleId","Object","keys","some","k","path","module","isModuleAccessible","displayCatchErrorMsg","error","console","log","response","data","message","isInvalidTokenError","code","checkModuleAccessible","modulePermissions","mappedModulePerm","length","curPer","shallCheck","HOME","NURSE","PHYSICIAN","indexOf","isSelect","hasOwnProperty","DATA","DO_NOT_HAVE_PERMISSION_TO_VIEW_THIS_PAGE","checkArrayOfModuleAccessible","moduleIds","count","getMappedPermission","tempMappedModulePerm","tempMappedSubModulePerm","isMapped","isAdmin","ADMIN","SUPER","GENERAL","tempGroupPermissions","map","cur","subModules","sub","subModule","homeId","pharmacyId","homeData","cloneDeep","assignedSubscriptionGroupId","groupPermissions","permissionAccesstype","setItem","getRolePermissionGroup","rolePemissionModules","_id","roleBasePermission","roleAccessPermissions","PHARMACY","tempSubcriptionGroup","undefined","mod","actions","act","isModuleAccessiblePharmacyHome","subModuleId","isSubModuleAccessible","isArrayModuleAccessiblePharmacyHome","isMultiple","tempPermissionGroup","canPerformAction","params","doNotIncludeAction","shouldPerform","tPermGroup","checkActionCanBePerformed","tMappedModulePerm","checkCanPerformAction","isFound","curModule","action","actionKey","actiontoCheck","curSubModule","checkSubAction","subAction","getUserBaseRedirect","user","foundRoute","viewResident","isKeyExist","obj","newObj","isExist","forEach","i","isDrOrNp","subNurseType","timerid","fileTypesExtensions","image","pdf","UtilService","getPrimaryValue","array","email","isPrimary","getPrimaryObj","find","getLoginUserWiseHomesObj","loginUser","homes","homeAreaId","parentClientele","id","getLoginUserWiseHomesEditObj","getSubCategory","displayType","attachExtensionImageMulti","fileExtension","substr","lastIndexOf","fileType","each","extensions","displayArProcess","val","view","todoType","todo","replace","textTransform","completedBy","subNurse","processType","INITIATED","getUserNameWithDesignation","completedAt","format","displayPhone","phone","trimStr","str","trim","trimStart","trimEnd","redirectToActiveAR","options","pageName","todoCategory","todoSubCategory","viewType","arId","capitalizeStr","value","txt","charAt","toUpperCase","toLowerCase","getDesignation","designation","x","name","mergeLFName","assignedCustomer","designationId","userType","desig","getUserName","userData","firstName","lastName","userName","isCautionAlertNotes","pmrDetail","defaultToDoCategory","checkType","NURSE_REVIEW_1","NURSE_REVIEW_2","PMR","subCategory","pmrStatusUpdate","latest","isDrOrNurse","DOCTOR","getVirtualVisitDueDays","schedule","from","to","days","diff","Math","abs","getResidentHeightWeight","patientInfoId","writiChart","weight","unit","height","creatinineUnit","uom","chartInfo","isFeatureAccessible","pModule","canAccess","tempAuth","permissionGroup","permissions","tempPermission","isAllowedFromPanel","isViewPermissionAllowed","isAllowed","viewPermissionType","setCallDuration","setCall","show","clearInterval","self","showTimer","seconds","minutes","hours","setInterval","countdown","checkTime","socketValidity","assignedHome","assignedHomeId","selectedBodyParts","current","parentObj","isDeleted","isClickable","optionList","optionItems","option","push","label","items","join","radioButtons","radioOption","tempObj","selectedOptions","getNewTabIndex","index","newIndex","UpperCaseStr","isExcludeTenant","window","isHome","defaultExclude","excludeTenant","isCustomer","query","search","mainPath","lastIndex","s1","substring","setExcludeTenant","includes","MASTER","userLogout","clearLocalStorage","login","removeItem","codeConvert","string","removedCharString","getLFName","marginFlag","split","display","width","lineHeight","borderRadius","backgroundColor","color","textAlign","fontSize","marginRight"],"mappings":"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","sourcesContent":["import moment from \"moment\";\nimport React from \"react\";\nimport { Toast } from \"../components/common/Toast\";\nimport {\n  MED_REVIEW_TODO_TYPES,\n  PMR_PROCESS_TYPE,\n  MED_REVIEW_NAME,\n} from \"../constants/pmr.js\";\nimport {\n  USER_TYPE,\n  SUB_NURSE_TYPE,\n  DESIGNATION_TYPE,\n  USER_DESIGNATION_TYPE,\n  isPharmacyUser\n} from \"../constants/User\";\nimport { USER_BASED_REDIRECT, EXCLUDE_TENANT } from \"../constants/common\";\nimport {\n  AR_PROCESS_TYPE,\n  ADMISSION_READMISSION_TODO_TYPES,\n} from \"../constants/Admission\";\nimport routes from \"../routes/constant\";\nimport { PERMISSION_ACCESS_TYPE, MODULE } from \"../constants/subscription\";\nimport { history } from \"../appRedux/store/index\";\nimport { decryptData, encryptData } from \"../util/Crypto\";\nimport queryString from \"query-string\";\nimport AdminAccessPermisison from \"../constants/adminRolePermission\";\nimport { TODO_CATEGORY } from \"../constants/todo\";\nconst _ = require(\"lodash\");\n\nexport function sortArrayDesc(arr, key) {\n  //sort array in descending order\n  return arr.sort(function (a, b) {\n    return b[key] < a[key] ? -1 : 1;\n  });\n}\n\nexport function isRouteAccessible(props) {\n  const { token, authUser, location } = props;\n  const otpVerified = JSON.parse(localStorage.getItem(\"otpVerified\"));\n  let isAccessible = false;\n  if (authUser) {\n    const { excludeOTPVerification, type } = authUser;\n    if (\n      token &&\n      (excludeOTPVerification || (!excludeOTPVerification && otpVerified)) &&\n      authUser\n    ) {\n      if (type) {\n        if (location && location.pathname) {\n          let moduleId;\n          Object.keys(routes).some((k) => {\n            if (routes[k].path === location.pathname) {\n              moduleId = routes[k].module;\n              return true;\n            }\n          });\n          if (moduleId && isModuleAccessible(moduleId)) {\n            isAccessible = true;\n          } else if (!moduleId) {\n            isAccessible = true;\n          }\n        }\n      }\n    }\n  }\n  return isAccessible;\n}\n\nexport function displayCatchErrorMsg(error) {\n  console.log(\"displayCatchErrorMsg -> error\", error);\n  if (error && error.response && error.response && error.response.data) {\n    // if (error.response.data.code !== 'E_INVALID_TOKEN')\n    //   Toast.error(error.response.data.message);\n  } else if (error.message) {\n    Toast.error(error.message);\n  } else {\n    console.log(typeof error);\n    Toast.error(error);\n  }\n}\nexport function isInvalidTokenError(error) {\n  // console.log(\"TCL: isInvalidTokenError -> error.response\", error.response)\n  if (\n    error &&\n    error.response &&\n    error.response &&\n    error.response.data &&\n    error.response.data.code === \"E_INVALID_TOKEN\"\n  ) {\n    return true;\n  }\n  return false;\n}\n\nexport function checkModuleAccessible(\n  modulePermissions,\n  mappedModulePerm,\n  moduleId,\n  authUser\n) {\n  let isAccessible = false;\n  if (modulePermissions && modulePermissions.length > 0) {\n    modulePermissions.some((curPer) => {\n      if (curPer.module === moduleId) {\n        let shallCheck = true;\n        if (\n          authUser &&\n          [USER_TYPE.HOME.NURSE, USER_TYPE.HOME.PHYSICIAN].indexOf(\n            authUser.type\n          ) >= 0 &&\n          !curPer.isSelect\n        ) {\n          shallCheck = false;\n        }\n        if (shallCheck) {\n          if (mappedModulePerm.hasOwnProperty(curPer.module)) {\n            if (mappedModulePerm[moduleId] === PERMISSION_ACCESS_TYPE.DATA) {\n              isAccessible = true;\n            } else if (\n              mappedModulePerm[moduleId] ===\n              PERMISSION_ACCESS_TYPE.DO_NOT_HAVE_PERMISSION_TO_VIEW_THIS_PAGE\n            ) {\n              isAccessible = false;\n            }\n            return true;\n          }\n        }\n      }\n    });\n  }\n  return isAccessible;\n}\nexport function checkArrayOfModuleAccessible(\n  modulePermissions,\n  mappedModulePerm,\n  moduleIds\n) {\n  let isAccessible = false,\n    count = 0;\n  if (moduleIds && moduleIds.length) {\n    if (modulePermissions && modulePermissions.length > 0) {\n      modulePermissions.some((curPer) => {\n        if (moduleIds.indexOf(curPer.module) >= 0) {\n          count += 1;\n          if (mappedModulePerm.hasOwnProperty(curPer.module)) {\n            if (\n              mappedModulePerm[curPer.module] === PERMISSION_ACCESS_TYPE.DATA\n            ) {\n              isAccessible = true;\n            } else if (\n              mappedModulePerm[curPer.module] ===\n              PERMISSION_ACCESS_TYPE.DO_NOT_HAVE_PERMISSION_TO_VIEW_THIS_PAGE\n            ) {\n              isAccessible = false;\n\n              return true;\n            }\n          }\n        }\n        if (count == moduleIds.length) {\n          return true;\n        }\n      });\n    }\n  }\n  return isAccessible;\n}\n\nexport function getMappedPermission(authUser) {\n  let tempMappedModulePerm = {},\n    tempMappedSubModulePerm = {},\n    isMapped = false;\n  if (localStorage.getItem(\"mappedModulePermissions\")) {\n    isMapped = true;\n    tempMappedModulePerm = decryptData(\n      localStorage.getItem(\"mappedModulePermissions\")\n    );\n    tempMappedSubModulePerm = decryptData(\n      localStorage.getItem(\"mappedSubModulePermissions\")\n    );\n  } else if (authUser && !isMapped) {\n    const isAdmin =\n      (authUser &&\n        authUser.type &&\n        [USER_TYPE.ADMIN.SUPER, USER_TYPE.ADMIN.GENERAL].indexOf(\n          authUser.type\n        ) >= 0) ||\n      false;\n    if (isAdmin) {\n      let tempGroupPermissions = [...AdminAccessPermisison];\n      tempGroupPermissions.map((cur) => {\n        tempMappedModulePerm[cur.module] = PERMISSION_ACCESS_TYPE.DATA;\n        if (cur.subModules && cur.subModules.length > 0) {\n          cur.subModules.map((sub) => {\n            tempMappedSubModulePerm[sub.subModule] =\n              PERMISSION_ACCESS_TYPE.DATA;\n          });\n        }\n      });\n    } else if (authUser.homeId || authUser.pharmacyId) {\n      let homeData = {}\n      if (isPharmacyUser(authUser.type)) {\n        homeData = _.cloneDeep(authUser.pharmacyId);\n      } else {\n        homeData = _.cloneDeep(authUser.homeId);\n      }\n      if (homeData?.assignedSubscriptionGroupId && !isMapped) {\n        let tempGroupPermissions = homeData.assignedSubscriptionGroupId.groupPermissions;\n        if (tempGroupPermissions && tempGroupPermissions.length) {\n          tempGroupPermissions.map((cur) => {\n            tempMappedModulePerm[cur.module] = cur.permissionAccesstype;\n            if (cur.subModules && cur.subModules.length > 0) {\n              cur.subModules.map((sub) => {\n                tempMappedSubModulePerm[sub.subModule] =\n                  sub.permissionAccesstype;\n              });\n            }\n          });\n        }\n      }\n    }\n    localStorage.setItem(\n      \"mappedModulePermissions\",\n      encryptData(tempMappedModulePerm)\n    );\n    localStorage.setItem(\n      \"mappedSubModulePermissions\",\n      encryptData(tempMappedSubModulePerm)\n    );\n  }\n  return { tempMappedModulePerm, tempMappedSubModulePerm };\n}\nexport function getRolePermissionGroup(authUser) {\n  let rolePemissionModules = localStorage.getItem(\"rolePemissionModules\");\n  let modulePermissions;\n  if (rolePemissionModules) {\n    modulePermissions = decryptData(rolePemissionModules);\n  } else {\n    if (\n      authUser &&\n      authUser.homeId &&\n      authUser.homeId._id &&\n      authUser.homeId.roleBasePermission\n    ) {\n      let homeData = _.cloneDeep(authUser.homeId.roleBasePermission);\n      if (\n        homeData.roleAccessPermissions &&\n        homeData.roleAccessPermissions.length\n      ) {\n        modulePermissions = homeData.roleAccessPermissions;\n      }\n    } else if (\n      authUser &&\n      authUser.type &&\n      [USER_TYPE.ADMIN.SUPER, USER_TYPE.ADMIN.GENERAL].indexOf(authUser.type) >=\n      0\n    ) {\n      // action acess permisison for SUPER/GENERAL ADMIN\n      modulePermissions = [...AdminAccessPermisison];\n    } else if (\n      authUser &&\n      (authUser.type === USER_TYPE.HOME.ADMIN ||\n        authUser.type === USER_TYPE.PHARMACY.ADMIN)\n    ) {\n      // action acess permisison for HOME/PHARMACY ADMIN\n      let tempSubcriptionGroup =\n        authUser.type === USER_TYPE.HOME.ADMIN &&\n          authUser.homeId?.assignedSubscriptionGroupId\n          ? [...authUser.homeId?.assignedSubscriptionGroupId.groupPermissions]\n          : authUser.type === USER_TYPE.PHARMACY.ADMIN &&\n            authUser.pharmacyId?.assignedSubscriptionGroupId\n            ? [\n              ...authUser.pharmacyId?.assignedSubscriptionGroupId\n                ?.groupPermissions,\n            ]\n            : undefined;\n\n      modulePermissions = tempSubcriptionGroup?.map((mod) => {\n        mod.isSelect = true;\n        mod.actions = mod.actions?.map((act) => {\n          act.isSelect = true;\n          return act;\n        });\n        mod.subModule = mod.subModule?.map((sub) => {\n          sub.isSelect = true;\n          sub.actions = sub.actions?.map((act) => {\n            act.isSelect = true;\n            return act;\n          });\n          return sub;\n        });\n        return mod;\n      });\n    }\n    if (modulePermissions)\n      localStorage.setItem(\n        \"rolePemissionModules\",\n        encryptData(modulePermissions)\n      );\n  }\n  return modulePermissions;\n}\n\nexport function isModuleAccessiblePharmacyHome(moduleId, tempMappedModulePerm, subModuleId, tempMappedSubModulePerm) {\n  // console.log(\"isModuleAccessiblePharmacyHome -> moduleId, tempMappedModulePerm\", moduleId, tempMappedModulePerm)\n  let isAccessible = false;\n\n  if (tempMappedModulePerm.hasOwnProperty(moduleId)) {\n    if (tempMappedModulePerm[moduleId] === PERMISSION_ACCESS_TYPE.DATA) {\n      isAccessible = true;\n    } else if (\n      tempMappedModulePerm[moduleId] ===\n      PERMISSION_ACCESS_TYPE.DO_NOT_HAVE_PERMISSION_TO_VIEW_THIS_PAGE\n    ) {\n      isAccessible = false;\n    }\n  }\n  return isAccessible;\n}\nexport function isSubModuleAccessible(subModuleId, tempMappedSubModulePerm) {\n  //to check subscription of submodule\n  return (tempMappedSubModulePerm[subModuleId] === PERMISSION_ACCESS_TYPE.DATA)\n}\nexport function isArrayModuleAccessiblePharmacyHome(\n  moduleIds,\n  tempMappedModulePerm\n) {\n  let isAccessible = false,\n    count = 0;\n  if (moduleIds && moduleIds.length) {\n    moduleIds.some((moduleId) => {\n      if (tempMappedModulePerm.hasOwnProperty(moduleId)) {\n        count += 1;\n        if (tempMappedModulePerm[moduleId] === PERMISSION_ACCESS_TYPE.DATA) {\n          isAccessible = true;\n        } else if (\n          tempMappedModulePerm[moduleId] ===\n          PERMISSION_ACCESS_TYPE.DO_NOT_HAVE_PERMISSION_TO_VIEW_THIS_PAGE\n        ) {\n          isAccessible = false;\n          return true;\n        }\n      }\n      if (count == moduleIds.length) {\n        return true;\n      }\n    });\n  }\n  return isAccessible;\n}\nexport function isModuleAccessible(moduleId, isMultiple, subModuleId) {\n  let isAccessible = false;\n  let authUser = localStorage.getItem(\"user\")\n    ? decryptData(localStorage.getItem(\"user\"))\n    : null;\n\n  if (authUser) {\n    if (\n      authUser.type &&\n      [USER_TYPE.ADMIN.SUPER, USER_TYPE.ADMIN.GENERAL].indexOf(authUser.type) >=\n      0\n    ) {\n      return true;\n    }\n    let { tempMappedModulePerm, tempMappedSubModulePerm } = getMappedPermission(authUser);\n\n    if (\n      authUser.type &&\n      [USER_TYPE.PHARMACY.ADMIN, USER_TYPE.HOME.ADMIN].indexOf(authUser.type) >=\n      0\n    ) {\n      if (isMultiple) {\n        isAccessible = isArrayModuleAccessiblePharmacyHome(\n          moduleId,\n          tempMappedModulePerm\n        );\n      } else {\n        isAccessible = isModuleAccessiblePharmacyHome(\n          moduleId,\n          tempMappedModulePerm\n\n        );\n        if (isAccessible && subModuleId)\n          isAccessible = isSubModuleAccessible(subModuleId,\n            tempMappedSubModulePerm)\n      }\n    } else {\n      let tempPermissionGroup = getRolePermissionGroup(authUser);\n      if (isMultiple) {\n        isAccessible = checkArrayOfModuleAccessible(\n          tempPermissionGroup,\n          tempMappedModulePerm,\n          moduleId\n        );\n      } else {\n        isAccessible = checkModuleAccessible(\n          tempPermissionGroup,\n          tempMappedModulePerm,\n          moduleId,\n          authUser\n        );\n      }\n    }\n  }\n\n  return isAccessible;\n}\n\nexport function canPerformAction(params, doNotIncludeAction) {\n  let shouldPerform = false;\n  let authUser = localStorage.getItem(\"user\")\n    ? decryptData(localStorage.getItem(\"user\"))\n    : null;\n  if (authUser) {\n    // if (authUser.type && [USER_TYPE.ADMIN.SUPER, USER_TYPE.ADMIN.GENERAL].indexOf(authUser.type) >= 0) {\n    //     // action acess permisison for SUPER/GENERAL ADMIN\n\n    //     return true\n    // }\n    let tPermGroup = getRolePermissionGroup(authUser);\n    let { tempMappedModulePerm } = getMappedPermission(authUser);\n    shouldPerform = checkActionCanBePerformed(\n      tPermGroup,\n      tempMappedModulePerm,\n      params,\n      doNotIncludeAction\n    );\n  }\n  return shouldPerform;\n}\nexport function checkActionCanBePerformed(\n  tempPermissionGroup,\n  tMappedModulePerm,\n  params,\n  doNotIncludeAction\n) {\n  let checkCanPerformAction = false,\n    isFound = false;\n  if (params.moduleId) {\n    if (tempPermissionGroup && tempPermissionGroup.length) {\n      tempPermissionGroup.some((curModule) => {\n        if (curModule.module === params.moduleId) {\n          if (\n            tMappedModulePerm[params.moduleId] === PERMISSION_ACCESS_TYPE.DATA\n          ) {\n            if (params.hasOwnProperty(\"actiontoCheck\")) {\n              if (curModule.actions && curModule.actions.length) {\n                curModule.actions.some((action) => {\n                  const actionKey = params.actionKey || 'code'\n                  if (action.isSelect && action[actionKey] === params.actiontoCheck) {\n                    checkCanPerformAction = true;\n                    isFound = true;\n                    return true;\n                  }\n                });\n              }\n            }\n            if (!params.hasOwnProperty(\"actiontoCheck\")) {\n              if (\n                params.subModuleId &&\n                curModule.subModules &&\n                curModule.subModules.length\n              ) {\n                curModule.subModules.some((curSubModule) => {\n                  if (\n                    params.subModuleId === curSubModule.subModule &&\n                    curSubModule.isSelect\n                  ) {\n                    if (doNotIncludeAction) {\n                      checkCanPerformAction = true;\n                      isFound = true;\n                      return true;\n                    }\n                    if (\n                      params.checkSubAction &&\n                      curSubModule.actions &&\n                      curSubModule.actions.length\n                    ) {\n                      curSubModule.actions.some((subAction) => {\n                        const actionKey = params.actionKey || 'code'\n                        if (subAction.isSelect && subAction[actionKey] === params.checkSubAction) {\n                          checkCanPerformAction = true;\n                          isFound = true;\n                          return true;\n                        }\n                      });\n                    }\n                    if (isFound) {\n                      return true;\n                    }\n                  }\n                });\n              }\n            }\n            if (isFound) {\n              return true;\n            }\n          }\n        }\n        if (isFound) {\n          return true;\n        }\n      });\n    } else {\n      // if (authUser.type && [USER_TYPE.PHARMACY.ADMIN, USER_TYPE.HOME.ADMIN].indexOf(authUser.type) >= 0)\n    }\n  }\n  return checkCanPerformAction;\n}\nexport function getUserBaseRedirect(user) {\n  let foundRoute = routes.viewResident.path;\n  // if (user && user.type) {\n  //     Object.keys(USER_BASED_REDIRECT).some(route => {\n  //         if (USER_BASED_REDIRECT[route].indexOf(user.type) >= 0) {\n  //             foundRoute = route\n  //             return route\n  //         }\n  //     })\n  // }\n  // console.log(\"TCL: getUserBaseRedirect -> foundRoute\", foundRoute)\n  return foundRoute;\n}\nexport function isKeyExist(obj, keys) {\n  let newObj = obj,\n    isExist = false;\n  if (obj && newObj && typeof newObj === \"object\" && Object.keys(obj).length) {\n    keys.forEach((k, i) => {\n      if (newObj.hasOwnProperty(k)) {\n        if (i === keys.length - 1) {\n          isExist = true;\n        }\n        newObj = newObj[k];\n      }\n    });\n  }\n  return isExist;\n}\n\nexport function isDrOrNp(user) {\n  if (!user) return;\n  // return true if user is Doctor or Nurse Practioner\n  return (\n    user.type === USER_TYPE.HOME.PHYSICIAN ||\n    user.subNurseType === SUB_NURSE_TYPE[\"NURSE_PRACTITIONER\"]\n  );\n}\n\nvar timerid;\n\nconst fileTypesExtensions = {\n  image: [\"tif\", \"raw\", \"tiff\", \"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\"],\n  pdf: [\"pdf\"],\n};\n\nconst UtilService = {\n  getPrimaryValue: (array, key) => {\n    let email = \"\";\n    if (array && array.length) {\n      array.some((obj) => {\n        if (Object.keys(obj).length && obj.isPrimary && obj[key]) {\n          email = obj[key];\n          return true;\n        }\n      });\n    }\n    return email;\n  },\n  getPrimaryObj: (array) => {\n    return array && array.length ? _.find(array, { isPrimary: true }) : \"\";\n  },\n  getLoginUserWiseHomesObj: (obj, loginUser) => {\n    if (\n      obj &&\n      obj.homes &&\n      obj.homes.length &&\n      loginUser.type === USER_TYPE.HOME.ADMIN\n    ) {\n      obj.homeAreaId = obj.homes[0] ? obj.homes[0] : null;\n      delete obj.homes;\n    } else if (obj && obj.homes && obj.homes.length) {\n      obj.pharmacyId = obj.homes[0] ? obj.homes[0] : null;\n      obj.homeId = obj.homes[1] ? obj.homes[1] : null;\n      obj.homeAreaId = obj.homes[2] ? obj.homes[2] : null;\n      delete obj.homes;\n    } else if (loginUser.type === USER_TYPE.HOME.ADMIN) {\n      obj.homeAreaId =\n        loginUser.parentClientele && loginUser.parentClientele.length\n          ? loginUser.parentClientele[0].id\n          : null;\n    }\n    return obj;\n  },\n  getLoginUserWiseHomesEditObj: (obj, loginUser) => {\n    if (loginUser.type === USER_TYPE.HOME.ADMIN) {\n      obj.homes = [obj.homeAreaId];\n    } else {\n      obj.homes = [obj.pharmacyId, obj.homeId, obj.homeAreaId];\n    }\n\n    return obj;\n  },\n  getSubCategory: (obj) => {\n    if (obj === 1) {\n      return \"Consent obtained\";\n    } else {\n      return \"General\";\n    }\n  },\n  // setReadMore: (text, strLength, width) => {\n  //     let string = text.substr(0, strLength || 20);\n  //     if (text.length > 20) {\n  //         let content = <div style={{ wordWrap: \"break-word\", width: width || 700 }}>{text}</div>;\n  //         return (\n  //             <Popover content={content} trigger=\"click\">\n  //                 {string}\n  //                 <a style={{ color: \"#0645AD\" }}>...Read more</a>\n  //             </Popover>\n  //         );\n  //     } else {\n  //         return string;\n  //     }\n  // },\n  displayType: (obj) => {\n    if (obj === 1) {\n      return \"Draft\";\n    } else if (obj === 2) {\n      return \"Order\";\n    } else {\n      return \"\";\n    }\n  },\n\n  attachExtensionImageMulti(path) {\n    var fileExtension = path ? path.substr(path.lastIndexOf(\".\") + 1) : \"\";\n    let fileType = \"\";\n    _.each(fileTypesExtensions, function (extensions, key) {\n      if (extensions.indexOf(fileExtension) !== -1) {\n        fileType = key;\n      }\n    });\n\n    if (fileType != \"image\") {\n      path = \"/img/common/\" + fileType + \".png\";\n    }\n    return path;\n  },\n\n  //   displayPmrProcess(val, view) {\n  //     if (typeof val !== 'object') return;\n  //     let todoType, subNurseType;\n  //     Object.keys(TODO_CATEGORY.MED_REVIEW).map((todo) => {\n  //       if (TODO_CATEGORY.MED_REVIEW[todo] === val.type) {\n  //         todoType = todo.replace(/_/g, ' ');\n  //         todoType = MED_REVIEW_NAME[todo].replace(/_/g, ' ');\n\n  //         return <span style={{ textTransform: 'capitalize' }}>{todoType} </span>;\n  //       }\n  //     });\n  //     if (val.completedBy && val.completedBy.subNurseType) {\n  //       Object.keys(SUB_NURSE_TYPE).map((subNurse) => {\n  //         if (SUB_NURSE_TYPE[subNurse] === val.completedBy.subNurseType) {\n  //           subNurseType = subNurse.replace(/_/g, ' ');\n  //           return (\n  //             <span style={{ textTransform: 'capitalize' }}>\n  //               ({subNurseType})\n  //             </span>\n  //           );\n  //         }\n  //       });\n  //     }\n\n  //     return (\n  //       <div>\n  //         {view === 'list'\n  //           ? val.processType === PMR_PROCESS_TYPE.INITIATED\n  //             ? `Initiated by ${val.completedBy?.mergeLFName} ${\n  //                 val.completedBy && val.completedBy.subNurseType\n  //                   ? val.completedBy && isDrOrNp(val.completedBy)\n  //                   : ''\n  //               } `\n  //             : `Completed by ${val.completedBy?.mergeLFName} ${\n  //                 val.completedBy && val.completedBy.subNurseType\n  //                   ? val.completedBy && isDrOrNp(val.completedBy)\n  //                   : ''\n  //               } at\n  //                                                  ${displayDateTime(\n  //                                                    val.completedAt\n  //                                                  )}`\n  //           : val.processType === PMR_PROCESS_TYPE.INITIATED\n  //           ? `${todoType} is Initiated by ${val.completedBy?.mergeLFName} ${\n  //               val.completedBy && val.completedBy.subNurseType\n  //                 ? val.completedBy && isDrOrNp(val.completedBy)\n  //                 : ''\n  //             } `\n  //           : `${todoType} is Completed by ${val.completedBy?.mergeLFName} ${\n  //               val.completedBy && val.completedBy.subNurseType\n  //                 ? val.completedBy && isDrOrNp(val.completedBy)\n  //                 : ''\n  //             } at\n  //                                                      ${displayDateTime(\n  //                                                        val.completedAt\n  //                                                      )}`}\n  //       </div>\n  //     );\n  //   },\n\n  displayArProcess(val, view) {\n    if (typeof val !== \"object\") return;\n    let todoType, subNurseType;\n    Object.keys(ADMISSION_READMISSION_TODO_TYPES).map((todo) => {\n      if (ADMISSION_READMISSION_TODO_TYPES[todo] === val.type) {\n        todoType = todo.replace(/_/g, \" \");\n        return <span style={{ textTransform: \"capitalize\" }}>{todoType} </span>;\n      }\n    });\n    if (val.completedBy && val.completedBy.subNurseType) {\n      Object.keys(SUB_NURSE_TYPE).map((subNurse) => {\n        if (SUB_NURSE_TYPE[subNurse] === val.completedBy.subNurseType) {\n          subNurseType = subNurse.replace(/_/g, \" \");\n          return (\n            <span style={{ textTransform: \"capitalize\" }}>\n              ({subNurseType})\n            </span>\n          );\n        }\n      });\n    }\n\n    return (\n      <div>\n        {view === \"list\"\n          ? val.processType === AR_PROCESS_TYPE.INITIATED\n            ? `Initiated by ${\n            val.completedBy\n              ? getUserNameWithDesignation(val.completedBy)\n              : \"\"\n            } ${\n            val.completedBy && val.completedBy.subNurseType\n              ? `(${subNurseType})`\n              : val.completedBy && isDrOrNp(val.completedBy)\n                ? ` (Physician)`\n                : \"\"\n            } `\n            : `Completed by ${\n            val.completedBy\n              ? getUserNameWithDesignation(val.completedBy)\n              : \"\"\n            } ${\n            val.completedBy && val.completedBy.subNurseType\n              ? `(${subNurseType})`\n              : val.completedBy && isDrOrNp(val.completedBy)\n                ? ` (Physician)`\n                : \"\"\n            } at\n                                                 ${moment(\n              val.completedAt\n            ).format(\"MM/DD/YYYY, HH:mm\")}`\n          : val.processType === AR_PROCESS_TYPE.INITIATED\n            ? `${todoType} is Initiated by ${\n            val.completedBy ? getUserNameWithDesignation(val.completedBy) : \"\"\n            } ${\n            val.completedBy && val.completedBy.subNurseType\n              ? `(${subNurseType})`\n              : val.completedBy && isDrOrNp(val.completedBy)\n                ? ` (Physician)`\n                : \"\"\n            } `\n            : `${todoType} is Completed by ${\n            val.completedBy ? getUserNameWithDesignation(val.completedBy) : \"\"\n            } ${\n            val.completedBy && val.completedBy.subNurseType\n              ? `(${subNurseType})`\n              : val.completedBy && isDrOrNp(val.completedBy)\n                ? ` (Physician)`\n                : \"\"\n            } at\n                                                     ${moment(\n              val.completedAt\n            ).format(\n              \"MM/DD/YYYY, HH:mm\"\n            )}`}\n      </div>\n    );\n  },\n\n  displayPhone(phone) {\n    // (705) 326-835\n    phone = phone.replace(/[^\\d]/g, \"\");\n    phone = phone.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"($1) $2-$3\");\n    return phone;\n  },\n};\n\nexport function trimStr(str, type) {\n  if (!type) return str.trim();\n  if (type === \"left\") return str.trimStart();\n  else if (type === \"right\") return str.trimEnd();\n}\n\nexport function redirectToActiveAR(options, pageName) {\n  if (pageName === \"todo\")\n    return `/wa/admission-readmission-todo?todoCategory=${options.todoCategory}&todoSubCategory=${options.todoSubCategory}&viewType=${options.viewType}&arId=${options.arId}`;\n  else\n    return `/wa/admission-readmission-order?todoSubCategory=${options.todoSubCategory}&viewType=${options.viewType}&arId=${options.arId}`;\n}\n\nexport function capitalizeStr(value) {\n  if (value.length > 0) {\n    return value.replace(/\\w\\S*/g, function (txt) {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  }\n}\n\nexport function getDesignation({ subNurseType, type }) {\n  //return user's designation\n  let designation;\n  Object.keys(DESIGNATION_TYPE).map((x) => {\n    if (\n      (subNurseType && DESIGNATION_TYPE[x].id === subNurseType) ||\n      DESIGNATION_TYPE[x].id === type\n    )\n      designation = DESIGNATION_TYPE[x].name;\n  });\n  return designation;\n}\n\nexport function getUserNameWithDesignation(\n  { type, mergeLFName, homeId, assignedCustomer }\n) {\n  if (!mergeLFName)\n    return '-'\n  if (type === USER_TYPE.HOME.NURSE || type === USER_TYPE.HOME.PHYSICIAN) {\n    let designationId = '', userType = ''\n    if (homeId)\n      designationId = homeId?.designationId?.name || ''\n    else if (assignedCustomer?.length > 0) {\n      designationId = assignedCustomer[0]?.designationId?.name\n    }\n    if (!designationId) {\n      Object.keys(USER_TYPE.HOME).map(x => {\n        if (USER_TYPE.HOME[x] === type)\n          userType = x.replace(/_/g, ' ')\n        return x\n      })\n    }\n    const desig = designationId || userType\n    const name = `${capitalizeStr(mergeLFName)}${desig ? ` (${desig.toUpperCase()})` : ''}`\n    return name\n  }\n  return mergeLFName\n}\n\nexport function getUserName(userData) {\n  if (\n    userData &&\n    typeof userData === \"object\" &&\n    Object.keys(userData).length > 0 &&\n    userData.firstName &&\n    userData.lastName\n  ) {\n    let userName = `${userData.lastName}  ${userData.firstName}`;\n    if (userData.type && USER_DESIGNATION_TYPE.hasOwnProperty(userData.type)) {\n      return `${userName} (${USER_DESIGNATION_TYPE[userData.type]})`;\n    } else if (\n      userData.subNurseType &&\n      USER_DESIGNATION_TYPE.hasOwnProperty(userData.subNurseType)\n    ) {\n      return `${userName} (${USER_DESIGNATION_TYPE[userData.subNurseType]})`;\n    } else {\n      return userName;\n    }\n  }\n  return \"\";\n}\n\nexport function isCautionAlertNotes(pmrDetail, defaultToDoCategory) {\n  if (!pmrDetail) return;\n  if (\n    (pmrDetail.checkType === MED_REVIEW_TODO_TYPES.NURSE_REVIEW_1 ||\n      pmrDetail.checkType === MED_REVIEW_TODO_TYPES.NURSE_REVIEW_2) &&\n    pmrDetail.checkType !== MED_REVIEW_TODO_TYPES.PMR &&\n    defaultToDoCategory !== pmrDetail.subCategory && //orderlist\n    pmrDetail.pmrStatusUpdate &&\n    pmrDetail.pmrStatusUpdate.latest &&\n    pmrDetail.pmrStatusUpdate.latest.type &&\n    pmrDetail.pmrStatusUpdate.latest.type !== MED_REVIEW_TODO_TYPES.PMR\n  )\n    return true;\n  else return false;\n}\n\nexport function isDrOrNurse(user) {\n  // return true if user is Doctor or Nurse\n  let type;\n  if (typeof user === \"object\") type = user.type;\n  else type = user;\n  return type === USER_TYPE.HOME.DOCTOR || type === USER_TYPE.HOME.NURSE;\n}\n\nexport function getVirtualVisitDueDays(schedule) {\n  if (!schedule || !schedule.from || !schedule.to) return \"-\";\n  let days = moment().diff(schedule.to, \"days\");\n  if (days > 0)\n    return `Overdue ${Math.abs(days)} ${Math.abs(days) === 1 ? \"day\" : \"days\"}`;\n  else if (days === 0) return `Due Today`;\n  else\n    return `Due in ${Math.abs(days)} ${Math.abs(days) === 1 ? \"day\" : \"days\"}`;\n}\n\nexport function getResidentHeightWeight(data) {\n  if (\n    data.patientInfoId.writiChart &&\n    data.patientInfoId.writiChart.length > 0\n  ) {\n    data.patientInfoId.writiChart.forEach((obj) => {\n      if (obj.type === \"PatChartDetailReadingType_Weight\") {\n        data.patientInfoId.weight = obj.unit;\n      }\n      if (obj.type === \"PatChartDetailReadingType_Height\") {\n        data.patientInfoId.height = obj.unit;\n      }\n      if (obj.type === \"PatChartDetailReadingType_Creatinine\") {\n        let creatinineUnit = \"\";\n        if (obj.uom === \"MicromolesPerLitre\") {\n          creatinineUnit = \"umol/l\";\n        }\n        if (obj.uom === \"MilligramsPerDecilitre\") {\n          creatinineUnit = \"mg/dL\";\n        }\n        if (data.chartInfo) {\n          data.chartInfo[\"creatinineUnit\"] = creatinineUnit;\n        }\n      }\n    });\n  }\n  return data;\n}\n\n//function for checking feature is accessible for user like digital binder or E-processing\nexport function isFeatureAccessible(authUser, pModule) {\n  let canAccess = false;\n  let tempAuth = _.cloneDeep(authUser);\n  if (\n    tempAuth &&\n    tempAuth.permissionGroup &&\n    tempAuth.permissionGroup.permissions\n  ) {\n    let tempPermission = _.cloneDeep(tempAuth.permissionGroup.permissions);\n    tempPermission.some((obj) => {\n      if (obj.module == pModule + \"\" && obj.isAllowedFromPanel) {\n        canAccess = true;\n        return true;\n      }\n    });\n  } else if (tempAuth && !tempAuth.hasOwnProperty(\"permissionGroup\")) {\n    canAccess = true;\n  }\n  return canAccess;\n}\n\nexport function isViewPermissionAllowed(authUser, pModule) {\n  let isAllowed = false;\n  let tempAuth = _.cloneDeep(authUser);\n  if (\n    tempAuth &&\n    tempAuth.permissionGroup &&\n    tempAuth.permissionGroup.permissions\n  ) {\n    let tempPermission = _.cloneDeep(tempAuth.permissionGroup.permissions);\n    tempPermission.some((obj) => {\n      if (obj.module == pModule + \"\") {\n        if (obj.viewPermissionType === PERMISSION_ACCESS_TYPE.DATA) {\n          isAllowed = true;\n          return true;\n        }\n      }\n    });\n  } else if (tempAuth && !tempAuth.hasOwnProperty(\"permissionGroup\")) {\n    isAllowed = true;\n  }\n  return isAllowed;\n}\n\nexport function setCallDuration(setCall, show) {\n  if (!show) {\n    clearInterval(timerid);\n    return;\n  }\n  var self = this;\n  setCall({ showTimer: true });\n  var seconds = 0,\n    minutes = 0,\n    hours = 0;\n  timerid = setInterval(countdown, 1000);\n\n  function countdown() {\n    setCall({\n      seconds: checkTime(seconds),\n      minutes: checkTime(minutes),\n      hours: checkTime(hours),\n    });\n    seconds++;\n\n    if (seconds === 60) {\n      seconds = 0;\n      minutes++;\n    }\n    if (minutes === 60) {\n      minutes = 0;\n      hours++;\n    }\n  }\n  function checkTime(i) {\n    if (i < 10) {\n      i = \"0\" + i;\n    } // add zero in front of numbers < 10\n    return i;\n  }\n}\n\nexport function socketValidity(homeAreaId, authUser, str) {\n  // to listen socket for only Assigned Home and Home Area\n  if (!homeAreaId || !authUser) return true;\n  if (homeAreaId && typeof homeAreaId === \"object\") homeAreaId = homeAreaId.id;\n  // let parentClientele = _.map(authUser.parentClientele, 'id')\n  // if (parentClientele.includes(homeAreaId)) {\n  let assignedHome;\n  if (!str)\n    assignedHome = authUser.assignedHomeId.find(\n      (x) => x.homeAreaId === homeAreaId\n    );\n  if (\n    (assignedHome && assignedHome.homeId === authUser.homeId) ||\n    (str === \"home\" && homeAreaId === authUser.homeId)\n  ) {\n    console.log(\"Valid socket!\");\n    return true;\n  } else {\n    console.log(\"Invalid socket!\");\n    return false;\n  }\n  // }\n}\n\nexport function selectedBodyParts(current) {\n  let parentObj = {};\n  if (current.selectedBodyParts && current.selectedBodyParts.length) {\n    current.selectedBodyParts.forEach((obj) => {\n      if (!obj.isDeleted) {\n        if (obj.isClickable) {\n          let optionList = [];\n          obj.optionItems.forEach((option) => {\n            optionList.push(option.name);\n          });\n          parentObj = {\n            ...parentObj,\n            [obj.label]: {\n              items: optionList.join(\",\"),\n              isClickable: true,\n            },\n          };\n        } else {\n          if (obj.optionItems.length) {\n            obj.optionItems.forEach((option) => {\n              if (option.radioButtons && option.radioButtons.length) {\n                option.radioButtons.forEach((radioOption) => {\n                  if (radioOption.optionItems.length) {\n                    let optionList = [];\n                    radioOption.optionItems.forEach((obj) => {\n                      optionList.push(obj.name);\n                    });\n                    let tempObj = {\n                      [radioOption.label]: {\n                        optionItems: optionList.join(\",\"),\n                        isClickable: false,\n                      },\n                    };\n                    parentObj[obj.label] = parentObj[obj.label]\n                      ? {\n                        ...parentObj[obj.label],\n                        ...tempObj,\n                      }\n                      : {\n                        ...tempObj,\n                      };\n                  }\n                });\n              }\n            });\n          }\n        }\n      }\n    });\n  }\n  current.selectedOptions = parentObj;\n  return current;\n}\n\nexport default UtilService;\n\nexport function getNewTabIndex(data, index) {\n  //return new tab index on tabclose\n  let newIndex = index;\n  if (index === 0) newIndex = 1;\n  else if (index === data.length) newIndex = data.length - 2;\n  else newIndex++;\n  return newIndex;\n}\n\nexport const UpperCaseStr = (str) => {\n  return str.toUpperCase();\n};\n\nexport const isExcludeTenant = (params) => {\n  // show switch home in header\n  // @isHome is to check module is Org or Home as both have same module constant\n  const { authUser } = params;\n  let path = window.location.pathname,\n    id,\n    isHome = false,\n    defaultExclude = false,\n    excludeTenant;\n  Object.keys(routes).map((x) => {\n    if (routes[x].path === path) {\n      id = routes[x].module;\n      isHome = routes[x].isHome;\n      if (routes[x].isCustomer) {\n        const query = queryString.parse(window.location.search);\n        if (query?.type === \"home\") {\n          // customer home\n          defaultExclude = false;\n        } else if (query?.type === \"homeArea\") {\n          // customer home area\n          defaultExclude = true;\n        }\n      }\n    } else if (routes[x].mainPath) {\n      // user module\n      let lastIndex = path.lastIndexOf(\"/\");\n      let s1 = path.substring(0, lastIndex);\n      if (s1 === routes[x].mainPath) {\n        id = routes[x].module;\n        isHome = routes[x].isHome;\n      }\n      const query = queryString.parse(window.location.search);\n      if (query && query.type === \"home\") {\n        id = routes[x].module;\n        isHome = true;\n        defaultExclude = true;\n      }\n    }\n  });\n  if (!id) return setExcludeTenant(true);\n\n  if (defaultExclude) return setExcludeTenant(false);\n\n  if (id && EXCLUDE_TENANT.includes(id) && !isHome) {\n    if (authUser.type === USER_TYPE.HOME.ADMIN && id === MODULE.MASTER) {\n      return setExcludeTenant(false);\n    }\n    return setExcludeTenant(true);\n  } else return setExcludeTenant(false);\n\n  function setExcludeTenant(value) {\n    localStorage.setItem(\"excludeTenant\", !value);\n    return value;\n  }\n};\n\nexport const userLogout = () => {\n  clearLocalStorage();\n  history.push({\n    pathname: routes.login.path,\n  });\n};\n\nexport const clearLocalStorage = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(\"homeId\");\n  localStorage.removeItem(\"homeAreaId\");\n  localStorage.removeItem(\"cascader-filter\");\n  localStorage.removeItem(\"physician-filter\");\n  localStorage.removeItem(\"mappedModulePermissions\");\n  localStorage.removeItem(\"rolePemissionModules\");\n  localStorage.removeItem(\"tenantId\");\n  localStorage.removeItem(\"otpVerified\");\n  localStorage.removeItem(\"prescriptions\");\n  localStorage.removeItem(\"excludeTenant\");\n  localStorage.removeItem(\"mappedSubModulePermissions\");\n  localStorage.removeItem(\"refreshToken\");\n  localStorage.removeItem(\"excludeOTPVerification\");\n};\n\nexport const codeConvert = (string) => {\n  let removedCharString = string.replace(/[^\\w-+.\\\\/\\s]/g, \"\");\n  removedCharString = removedCharString.trim();\n  return removedCharString.replace(/\\s+/g, \"_\").toUpperCase();\n};\n\nexport const getLFName = (user, marginFlag) => {\n  if (!user) return;\n  if (!user.firstName && user.mergeLFName) {\n    let str = user.mergeLFName.split(\",\");\n    user.lastName = str[0].trim();\n    user.firstName = str[1].trim();\n    if (!user.lastName || !user.firstName)\n      return\n  }\n\n  return (\n    <div\n      style={{\n        display: \"block\",\n        height: \"35px\",\n        width: \"35px\",\n        lineHeight: \"35px\",\n        borderRadius: \"30px\",\n        backgroundColor: \"#E5E4E2\",\n        color: \"Black\",\n        textAlign: \"center\",\n        fontSize: \"1em\",\n        marginRight: \"8%\",\n      }}\n      className={marginFlag ? \"mr-0 user_initial\" : \"user_initial\"}\n    >\n      {user.lastName.charAt(0).toUpperCase() +\n        user.firstName.charAt(0).toUpperCase()}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}