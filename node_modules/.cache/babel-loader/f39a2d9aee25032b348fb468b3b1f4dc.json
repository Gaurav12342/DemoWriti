{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/OrdersTab/CancelRxModal.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Toast } from '../../..//../components/common';\nimport AuthenticationModal from '../../../../components/AuthenticateModal';\nimport { upsert, upsertEProcessing } from '../../../../services/api/routes/prescription';\nimport axios from '../../../../services/api/services/common';\nimport { MODIFY_ACTION, TYPE, STATUS } from '../../../../constants/prescription';\nimport { MODULE, ACTIONS } from '../../../../constants/subscription';\n\nconst RxModal = props => {\n  const {\n    visible,\n    detail,\n    onCancel,\n    onOk,\n    rxType\n  } = props;\n  const [loader, setLoader] = useState(false);\n\n  const handleOk = async params => {\n    let req = {\n      _id: detail._id,\n      isCancel: true,\n      type: detail.type,\n      uniqueId: params.uniqueId,\n      status: STATUS.CANCELLED\n    };\n    setLoader(true);\n\n    try {\n      let {\n        method,\n        url,\n        baseURL\n      } = rxType == MODULE.E_PROCESSING ? upsertEProcessing : upsert;\n      let res = await axios({\n        method,\n        url,\n        baseURL,\n        data: req\n      });\n\n      if (res) {\n        if (res.code === 'OK') {\n          Toast.success(res.message);\n          if (onOk) onOk(params);\n        } else Toast.error(res.message);\n      }\n\n      setLoader(false);\n    } catch {\n      setLoader(false);\n    }\n  };\n\n  return visible ? /*#__PURE__*/React.createElement(AuthenticationModal, {\n    visible: visible,\n    loading: loader,\n    title: `Authetication For Cancel - ${detail.orderNumber}`,\n    maskClosable: false,\n    onCancel: onCancel,\n    onOk: handleOk,\n    request: {\n      prescriptionId: detail._id,\n      action: MODIFY_ACTION.CANCEL\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }) : null;\n};\n\nexport default RxModal;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/OrdersTab/CancelRxModal.js"],"names":["React","useState","useEffect","useContext","Toast","AuthenticationModal","upsert","upsertEProcessing","axios","MODIFY_ACTION","TYPE","STATUS","MODULE","ACTIONS","RxModal","props","visible","detail","onCancel","onOk","rxType","loader","setLoader","handleOk","params","req","_id","isCancel","type","uniqueId","status","CANCELLED","method","url","baseURL","E_PROCESSING","res","data","code","success","message","error","orderNumber","prescriptionId","action","CANCEL"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,KAAT,QAAsB,gCAAtB;AACA,OAAOC,mBAAP,MAAgC,0CAAhC;AACA,SACEC,MADF,EAEEC,iBAFF,QAGO,8CAHP;AAIA,OAAOC,KAAP,MAAkB,0CAAlB;AACA,SACEC,aADF,EAEEC,IAFF,EAGEC,MAHF,QAIO,oCAJP;AAKA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,oCAAhC;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA,IAA7B;AAAmCC,IAAAA;AAAnC,MAA8CL,KAApD;AAEA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMsB,QAAQ,GAAG,MAAOC,MAAP,IAAkB;AACjC,QAAIC,GAAG,GAAG;AACRC,MAAAA,GAAG,EAAET,MAAM,CAACS,GADJ;AAERC,MAAAA,QAAQ,EAAE,IAFF;AAGRC,MAAAA,IAAI,EAAEX,MAAM,CAACW,IAHL;AAIRC,MAAAA,QAAQ,EAAEL,MAAM,CAACK,QAJT;AAKRC,MAAAA,MAAM,EAAEnB,MAAM,CAACoB;AALP,KAAV;AAQAT,IAAAA,SAAS,CAAC,IAAD,CAAT;;AAEA,QAAI;AACF,UAAI;AAAEU,QAAAA,MAAF;AAAUC,QAAAA,GAAV;AAAeC,QAAAA;AAAf,UACFd,MAAM,IAAIR,MAAM,CAACuB,YAAjB,GAAgC5B,iBAAhC,GAAoDD,MADtD;AAEA,UAAI8B,GAAG,GAAG,MAAM5B,KAAK,CAAC;AAAEwB,QAAAA,MAAF;AAAUC,QAAAA,GAAV;AAAeC,QAAAA,OAAf;AAAwBG,QAAAA,IAAI,EAAEZ;AAA9B,OAAD,CAArB;;AACA,UAAIW,GAAJ,EAAS;AACP,YAAIA,GAAG,CAACE,IAAJ,KAAa,IAAjB,EAAuB;AACrBlC,UAAAA,KAAK,CAACmC,OAAN,CAAcH,GAAG,CAACI,OAAlB;AACA,cAAIrB,IAAJ,EAAUA,IAAI,CAACK,MAAD,CAAJ;AACX,SAHD,MAGOpB,KAAK,CAACqC,KAAN,CAAYL,GAAG,CAACI,OAAhB;AACR;;AACDlB,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAXD,CAWE,MAAM;AACNA,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GAzBD;;AA2BA,SAAON,OAAO,gBACZ,oBAAC,mBAAD;AACE,IAAA,OAAO,EAAEA,OADX;AAEE,IAAA,OAAO,EAAEK,MAFX;AAGE,IAAA,KAAK,EAAG,8BAA6BJ,MAAM,CAACyB,WAAY,EAH1D;AAIE,IAAA,YAAY,EAAE,KAJhB;AAKE,IAAA,QAAQ,EAAExB,QALZ;AAME,IAAA,IAAI,EAAEK,QANR;AAOE,IAAA,OAAO,EAAE;AACPoB,MAAAA,cAAc,EAAE1B,MAAM,CAACS,GADhB;AAEPkB,MAAAA,MAAM,EAAEnC,aAAa,CAACoC;AAFf,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,GAaV,IAbJ;AAcD,CA9CD;;AAgDA,eAAe/B,OAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Toast } from '../../..//../components/common';\nimport AuthenticationModal from '../../../../components/AuthenticateModal';\nimport {\n  upsert,\n  upsertEProcessing,\n} from '../../../../services/api/routes/prescription';\nimport axios from '../../../../services/api/services/common';\nimport {\n  MODIFY_ACTION,\n  TYPE,\n  STATUS,\n} from '../../../../constants/prescription';\nimport { MODULE, ACTIONS } from '../../../../constants/subscription';\n\nconst RxModal = (props) => {\n  const { visible, detail, onCancel, onOk, rxType } = props;\n\n  const [loader, setLoader] = useState(false);\n\n  const handleOk = async (params) => {\n    let req = {\n      _id: detail._id,\n      isCancel: true,\n      type: detail.type,\n      uniqueId: params.uniqueId,\n      status: STATUS.CANCELLED,\n    };\n\n    setLoader(true);\n\n    try {\n      let { method, url, baseURL } =\n        rxType == MODULE.E_PROCESSING ? upsertEProcessing : upsert;\n      let res = await axios({ method, url, baseURL, data: req });\n      if (res) {\n        if (res.code === 'OK') {\n          Toast.success(res.message);\n          if (onOk) onOk(params);\n        } else Toast.error(res.message);\n      }\n      setLoader(false);\n    } catch {\n      setLoader(false);\n    }\n  };\n\n  return visible ? (\n    <AuthenticationModal\n      visible={visible}\n      loading={loader}\n      title={`Authetication For Cancel - ${detail.orderNumber}`}\n      maskClosable={false}\n      onCancel={onCancel}\n      onOk={handleOk}\n      request={{\n        prescriptionId: detail._id,\n        action: MODIFY_ACTION.CANCEL,\n      }}\n    ></AuthenticationModal>\n  ) : null;\n};\n\nexport default RxModal;\n"]},"metadata":{},"sourceType":"module"}