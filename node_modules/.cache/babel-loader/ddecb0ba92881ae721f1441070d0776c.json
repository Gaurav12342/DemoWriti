{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/CascaderFilter.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport Cascader from './common/Cascader';\nimport { USER_TYPE } from \"../constants/User\";\nimport CommonService from '../services/api/services/common';\nimport { getCascader } from '../services/api/routes/common';\n\nconst _ = require(\"lodash\");\n\nconst CascaderFilter = ({\n  placeholder,\n  allowClear,\n  activeTab,\n  isUserMgmt,\n  isHomeFilter,\n  loginUser,\n  ...props\n}) => {\n  const [value, setValue] = useState(props.value);\n  const [data, setData] = useState();\n\n  const pharmacyUsers = _.map(USER_TYPE.PHARMACY, function (x) {\n    return USER_TYPE.PHARMACY[x];\n  });\n\n  useEffect(() => {\n    fetch();\n  }, []);\n  useEffect(() => {\n    fetch();\n  }, [activeTab, isUserMgmt, isHomeFilter, props.value]);\n\n  const fetch = async () => {\n    if (!loginUser) return;\n    const {\n      method,\n      url\n    } = getCascader;\n    let obj = {};\n    let ids = [loginUser.parentClientele[0].id];\n\n    if (loginUser.prAccessPermission && loginUser.prAccessPermission.length) {\n      ids = _.uniq(ids.concat(loginUser.prAccessPermission));\n    }\n\n    if (pharmacyUsers.indexOf(loginUser.type) > -1 && loginUser.parentClientele) {\n      // if other branch permission exists get it's dependent sub data list\n      obj.pharmacyId = ids;\n    } else if (loginUser.type === USER_TYPE.HOME.ADMIN) {\n      obj.homeId = ids;\n    } else if (loginUser.type === USER_TYPE.HOME.NURSE.NURSE || loginUser.type === USER_TYPE.HOME.PHYSICIAN) {\n      obj.homeAreaId = ids;\n    }\n\n    if (activeTab === USER_TYPE.HOME.ADMIN && !isHomeFilter) {\n      obj.isHome = false;\n    } else if (activeTab === USER_TYPE.HOME.ADMIN && isHomeFilter) {\n      obj.isHomeArea = false;\n    } // else if (activeTab === USER_TYPE.HOME.ADMIN && !isHomeFilter) {\n    //     obj.isHomeArea = false;\n    // }\n\n\n    let getAPIObj = getAPI(obj);\n\n    if (getAPIObj.isCallAPI) {\n      //make API call if request is not same\n      let res = await CommonService({\n        method,\n        url,\n        data: obj\n      }); // console.log(\"TCL: fetch -> res\", res)\n      // console.log(\"TCL: fetch -> loginUser\", loginUser)\n\n      if (res && res.code === 'OK') {\n        const {\n          data\n        } = res;\n        let cascader = {\n          userId: loginUser.id,\n          request: obj,\n          response: data\n        };\n        localStorage.setItem('cascader-filter', JSON.stringify(cascader));\n        let cascaderData = pushAllKeyToCascader(data, obj);\n        prepareList(cascaderData);\n      }\n    } else {\n      let cascaderData = pushAllKeyToCascader(getAPIObj.response, data);\n      prepareList(cascaderData);\n    }\n  };\n\n  const getAPI = request => {\n    //to check whether request is same as localstorage or not \n    let obj = {\n      isCallAPI: true,\n      response: null\n    };\n    let cascader = JSON.parse(localStorage.getItem('cascader-filter'));\n\n    if (cascader && loginUser.id === cascader.userId) {\n      if (_.isEqual(request, cascader.request)) {\n        obj = {\n          isCallAPI: false,\n          response: cascader.response\n        };\n      }\n    }\n\n    return obj;\n  };\n\n  const prepareList = cascaderData => {\n    // console.log(\"TCL: prepareList -> cascaderData\", cascaderData)\n    if (props.selectFirstOption && cascaderData && cascaderData[0]) {\n      let dv = [];\n\n      if (cascaderData[0].children) {\n        dv = [cascaderData[0].id, cascaderData[0].children[0].id];\n        props.onSetHome({\n          id: cascaderData[0].children[0].id,\n          name: cascaderData[0].children[0].name\n        });\n      } else {\n        dv = [cascaderData[0].id];\n        props.onSetHome({\n          id: cascaderData[0].id,\n          name: cascaderData[0].name\n        });\n      }\n\n      setValue(dv);\n    } //set default Selection if setDefaultValue props is passed you can pass Phramacy id,homeID\n    // if (props.setDefaultValue && cascaderData) {\n    //     setDefaultSelection(cascaderData)\n    // }\n\n\n    setData(cascaderData);\n  };\n\n  const pushAllKeyToCascader = data => {\n    if (props.isNotPushAllKey) {\n      //do not push All Key \n      //remove home or pharmacy from cascader list if hometoexclude props is passed\n      let hometoexclude = props.hometoexclude;\n\n      if (hometoexclude) {\n        let result = [];\n        data.forEach((pharmacy, index) => {\n          if (pharmacy.children) {\n            let tempPharmacy = { ...pharmacy\n            };\n            tempPharmacy.children = pharmacy.children.filter(home => {\n              return home.id != hometoexclude;\n            });\n            result[index] = tempPharmacy;\n          } else if (pharmacy.id != hometoexclude) {\n            result.push(pharmacy);\n          }\n        });\n        return result;\n      }\n    } else {\n      if (loginUser.type === USER_TYPE.HOME.ADMIN) {\n        //If Home Admin is login\n        _.each(data, function (home, i) {\n          if (home.children) home.children = _.compact(home.children);\n\n          if (home.children && _.size(home.children)) {\n            data[i].children = [{\n              id: \"all\",\n              name: \"All\"\n            }].concat(data[i].children);\n          }\n        });\n      } else if (Math.floor(loginUser.type / Math.pow(10, 1) % 10) === USER_TYPE.HOME.ADMIN) {\n        //If Home Area user is login \n        data = [{\n          id: \"all\",\n          name: \"All\"\n        }].concat(data);\n      } else {\n        _.each(data, function (pharmacy, i) {\n          if (pharmacy.children) pharmacy.children = _.compact(pharmacy.children);\n\n          if (pharmacy.children && _.size(pharmacy.children)) {\n            _.each(pharmacy.children, function (home, j) {\n              if (home.children) home.children = _.compact(home.children);\n\n              if (home.children && _.size(home.children)) {\n                data[i].children[j].children = [{\n                  id: \"all\",\n                  name: \"All\"\n                }].concat(data[i].children[j].children);\n              }\n            });\n          }\n        });\n      }\n    }\n\n    return data;\n  };\n\n  const displayEndSelection = (labels, selectedoptions) => {\n    // return last selected option if showEndSelection is set to true\n    if (props.showEndSelection && selectedoptions.length > 0 && labels.length > 0) {\n      let index = labels.length - 1;\n      return labels[index];\n    } else {\n      return labels;\n    }\n  };\n\n  const handleChange = (val, selectedOption) => {\n    setValue(val);\n    if (!val) return; //return selected home or pharmacy name if isHomeName set to true\n\n    if (props.isHomeName) {\n      selectedOption.some(option => {\n        if (option.id == val[val.length - 1]) {\n          props.getHomeName(option.name);\n        }\n      });\n    }\n\n    let self = this;\n    let n = val.length - 1;\n\n    let tempVal = _.cloneDeep(val);\n\n    if (val[n] === 'all') {\n      if (Math.floor(loginUser.type / Math.pow(10, 1) % 10) === USER_TYPE.HOME.ADMIN && tempVal.length === 1) {\n        //Push All key for HA User\n        tempVal = _.map(data, \"id\");\n      } else {\n        tempVal = tempVal.splice(n, 1);\n\n        tempVal = function () {\n          let result = [];\n\n          _.each(data, function (pharmacy, i) {\n            if (pharmacy.id === val[0]) {\n              if (loginUser.type === USER_TYPE.HOME.ADMIN) {\n                // if Home admin is loggedin\n                result = _.map(pharmacy.children, \"id\");\n              } else {\n                _.each(pharmacy.children, function (home, j) {\n                  if (home.id === val[1]) {\n                    home.children.forEach(homeObj => {\n                      if (homeObj.isActive) {\n                        result.push(homeObj.id);\n                      }\n                    }); // result = _.map(home.children, \"id\");\n                  }\n                });\n              }\n            }\n          });\n\n          return result;\n        }();\n      }\n\n      tempVal = tempVal.filter(x => x !== 'all'); //remove \"all\" from request\n    } else {\n      tempVal = val[val.length - 1];\n    }\n\n    if (props.setSelectedVal) {\n      props.setSelectedValue(val);\n    }\n\n    props.onChange(tempVal);\n  }; // console.log('cascader data', data)\n  //mujhe yahape options rakhane he\n\n\n  return /*#__PURE__*/React.createElement(Cascader, Object.assign({}, props, {\n    placeholder: placeholder || 'Select Filter',\n    fieldNames: {\n      label: 'name',\n      value: 'id'\n    },\n    allowClear: allowClear,\n    options: data,\n    value: value || [],\n    displayRender: displayEndSelection,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport default CascaderFilter;\nCascaderFilter.defaultProps = {\n  allowClear: true,\n  isHomeName: false,\n  selectFirstOption: false,\n  hometoexclude: ''\n};\nCascaderFilter.propTypes = {\n  allowClear: PropTypes.bool,\n  isHomeName: PropTypes.bool,\n  // to show home/pharmacy name (requireHomeName)\n  selectFirstOption: PropTypes.bool,\n  // to show default selected first option (showdefault)\n  onSetHome: PropTypes.func,\n  //return home obj\n  hometoexclude: PropTypes.string // home id to be excluded from data\n\n};","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/CascaderFilter.js"],"names":["React","useState","useEffect","PropTypes","Cascader","USER_TYPE","CommonService","getCascader","_","require","CascaderFilter","placeholder","allowClear","activeTab","isUserMgmt","isHomeFilter","loginUser","props","value","setValue","data","setData","pharmacyUsers","map","PHARMACY","x","fetch","method","url","obj","ids","parentClientele","id","prAccessPermission","length","uniq","concat","indexOf","type","pharmacyId","HOME","ADMIN","homeId","NURSE","PHYSICIAN","homeAreaId","isHome","isHomeArea","getAPIObj","getAPI","isCallAPI","res","code","cascader","userId","request","response","localStorage","setItem","JSON","stringify","cascaderData","pushAllKeyToCascader","prepareList","parse","getItem","isEqual","selectFirstOption","dv","children","onSetHome","name","isNotPushAllKey","hometoexclude","result","forEach","pharmacy","index","tempPharmacy","filter","home","push","each","i","compact","size","Math","floor","pow","j","displayEndSelection","labels","selectedoptions","showEndSelection","handleChange","val","selectedOption","isHomeName","some","option","getHomeName","self","n","tempVal","cloneDeep","splice","homeObj","isActive","setSelectedVal","setSelectedValue","onChange","label","defaultProps","propTypes","bool","func","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AACA,MAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,UAAf;AAA2BC,EAAAA,SAA3B;AAAsCC,EAAAA,UAAtC;AACpBC,EAAAA,YADoB;AACNC,EAAAA,SADM;AACK,KAAGC;AADR,CAAD,KACqB;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAACgB,KAAK,CAACC,KAAP,CAAlC;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,EAAhC;;AACA,QAAMqB,aAAa,GAAGd,CAAC,CAACe,GAAF,CAAMlB,SAAS,CAACmB,QAAhB,EAA0B,UAAUC,CAAV,EAAa;AACzD,WAAOpB,SAAS,CAACmB,QAAV,CAAmBC,CAAnB,CAAP;AACH,GAFqB,CAAtB;;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACZwB,IAAAA,KAAK;AACR,GAFQ,EAEN,EAFM,CAAT;AAIAxB,EAAAA,SAAS,CAAC,MAAM;AACZwB,IAAAA,KAAK;AACR,GAFQ,EAEN,CAACb,SAAD,EAAYC,UAAZ,EAAwBC,YAAxB,EAAsCE,KAAK,CAACC,KAA5C,CAFM,CAAT;;AAIA,QAAMQ,KAAK,GAAG,YAAY;AACtB,QAAI,CAACV,SAAL,EACI;AACJ,UAAM;AAAEW,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAkBrB,WAAxB;AACA,QAAIsB,GAAG,GAAG,EAAV;AAEA,QAAIC,GAAG,GAAG,CAACd,SAAS,CAACe,eAAV,CAA0B,CAA1B,EAA6BC,EAA9B,CAAV;;AACA,QAAIhB,SAAS,CAACiB,kBAAV,IAAgCjB,SAAS,CAACiB,kBAAV,CAA6BC,MAAjE,EAAyE;AACrEJ,MAAAA,GAAG,GAAGtB,CAAC,CAAC2B,IAAF,CAAOL,GAAG,CAACM,MAAJ,CAAWpB,SAAS,CAACiB,kBAArB,CAAP,CAAN;AACH;;AAED,QAAIX,aAAa,CAACe,OAAd,CAAsBrB,SAAS,CAACsB,IAAhC,IAAwC,CAAC,CAAzC,IAA8CtB,SAAS,CAACe,eAA5D,EAA6E;AACzE;AACAF,MAAAA,GAAG,CAACU,UAAJ,GAAiBT,GAAjB;AACH,KAHD,MAGO,IAAId,SAAS,CAACsB,IAAV,KAAmBjC,SAAS,CAACmC,IAAV,CAAeC,KAAtC,EAA6C;AAChDZ,MAAAA,GAAG,CAACa,MAAJ,GAAaZ,GAAb;AACH,KAFM,MAGF,IAAId,SAAS,CAACsB,IAAV,KAAmBjC,SAAS,CAACmC,IAAV,CAAeG,KAAf,CAAqBA,KAAxC,IACF3B,SAAS,CAACsB,IAAV,KAAmBjC,SAAS,CAACmC,IAAV,CAAeI,SADpC,EAC+C;AAChDf,MAAAA,GAAG,CAACgB,UAAJ,GAAiBf,GAAjB;AACH;;AACD,QAAIjB,SAAS,KAAKR,SAAS,CAACmC,IAAV,CAAeC,KAA7B,IAAsC,CAAC1B,YAA3C,EAAyD;AACrDc,MAAAA,GAAG,CAACiB,MAAJ,GAAa,KAAb;AACH,KAFD,MAEO,IAAIjC,SAAS,KAAKR,SAAS,CAACmC,IAAV,CAAeC,KAA7B,IAAsC1B,YAA1C,EAAwD;AAC3Dc,MAAAA,GAAG,CAACkB,UAAJ,GAAiB,KAAjB;AACH,KAzBqB,CA0BtB;AACA;AACA;;;AACA,QAAIC,SAAS,GAAGC,MAAM,CAACpB,GAAD,CAAtB;;AACA,QAAImB,SAAS,CAACE,SAAd,EAAyB;AACrB;AACA,UAAIC,GAAG,GAAG,MAAM7C,aAAa,CAAC;AAAEqB,QAAAA,MAAF;AAAUC,QAAAA,GAAV;AAAeR,QAAAA,IAAI,EAAES;AAArB,OAAD,CAA7B,CAFqB,CAGrB;AACA;;AACA,UAAIsB,GAAG,IAAIA,GAAG,CAACC,IAAJ,KAAa,IAAxB,EAA8B;AAC1B,cAAM;AAAEhC,UAAAA;AAAF,YAAW+B,GAAjB;AACA,YAAIE,QAAQ,GAAG;AACXC,UAAAA,MAAM,EAAEtC,SAAS,CAACgB,EADP;AAEXuB,UAAAA,OAAO,EAAE1B,GAFE;AAEG2B,UAAAA,QAAQ,EAAEpC;AAFb,SAAf;AAIAqC,QAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeP,QAAf,CAAxC;AACA,YAAIQ,YAAY,GAAGC,oBAAoB,CAAC1C,IAAD,EAAOS,GAAP,CAAvC;AACAkC,QAAAA,WAAW,CAACF,YAAD,CAAX;AACH;AACJ,KAfD,MAeO;AACH,UAAIA,YAAY,GAAGC,oBAAoB,CAACd,SAAS,CAACQ,QAAX,EAAqBpC,IAArB,CAAvC;AACA2C,MAAAA,WAAW,CAACF,YAAD,CAAX;AACH;AACJ,GAjDD;;AAmDA,QAAMZ,MAAM,GAAIM,OAAD,IAAa;AACxB;AACA,QAAI1B,GAAG,GAAG;AACNqB,MAAAA,SAAS,EAAE,IADL;AAENM,MAAAA,QAAQ,EAAE;AAFJ,KAAV;AAIA,QAAIH,QAAQ,GAAGM,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqB,iBAArB,CAAX,CAAf;;AACA,QAAIZ,QAAQ,IAAIrC,SAAS,CAACgB,EAAV,KAAiBqB,QAAQ,CAACC,MAA1C,EAAkD;AAC9C,UAAI9C,CAAC,CAAC0D,OAAF,CAAUX,OAAV,EAAmBF,QAAQ,CAACE,OAA5B,CAAJ,EAA0C;AACtC1B,QAAAA,GAAG,GAAG;AACFqB,UAAAA,SAAS,EAAE,KADT;AAEFM,UAAAA,QAAQ,EAAEH,QAAQ,CAACG;AAFjB,SAAN;AAIH;AACJ;;AACD,WAAO3B,GAAP;AACH,GAhBD;;AAkBA,QAAMkC,WAAW,GAAIF,YAAD,IAAkB;AAClC;AACA,QAAI5C,KAAK,CAACkD,iBAAN,IAA2BN,YAA3B,IAA2CA,YAAY,CAAC,CAAD,CAA3D,EAAgE;AAC5D,UAAIO,EAAE,GAAG,EAAT;;AACA,UAAIP,YAAY,CAAC,CAAD,CAAZ,CAAgBQ,QAApB,EAA8B;AAC1BD,QAAAA,EAAE,GAAG,CAACP,YAAY,CAAC,CAAD,CAAZ,CAAgB7B,EAAjB,EAAqB6B,YAAY,CAAC,CAAD,CAAZ,CAAgBQ,QAAhB,CAAyB,CAAzB,EAA4BrC,EAAjD,CAAL;AACAf,QAAAA,KAAK,CAACqD,SAAN,CAAgB;AACZtC,UAAAA,EAAE,EAAE6B,YAAY,CAAC,CAAD,CAAZ,CAAgBQ,QAAhB,CAAyB,CAAzB,EAA4BrC,EADpB;AAEZuC,UAAAA,IAAI,EAAEV,YAAY,CAAC,CAAD,CAAZ,CAAgBQ,QAAhB,CAAyB,CAAzB,EAA4BE;AAFtB,SAAhB;AAIH,OAND,MAOK;AACDH,QAAAA,EAAE,GAAG,CAACP,YAAY,CAAC,CAAD,CAAZ,CAAgB7B,EAAjB,CAAL;AACAf,QAAAA,KAAK,CAACqD,SAAN,CAAgB;AACZtC,UAAAA,EAAE,EAAE6B,YAAY,CAAC,CAAD,CAAZ,CAAgB7B,EADR;AAEZuC,UAAAA,IAAI,EAAEV,YAAY,CAAC,CAAD,CAAZ,CAAgBU;AAFV,SAAhB;AAIH;;AACDpD,MAAAA,QAAQ,CAACiD,EAAD,CAAR;AACH,KAnBiC,CAoBlC;AACA;AACA;AACA;;;AACA/C,IAAAA,OAAO,CAACwC,YAAD,CAAP;AACH,GAzBD;;AA2BA,QAAMC,oBAAoB,GAAI1C,IAAD,IAAU;AACnC,QAAIH,KAAK,CAACuD,eAAV,EAA2B;AACvB;AAEA;AACA,UAAIC,aAAa,GAAGxD,KAAK,CAACwD,aAA1B;;AACA,UAAIA,aAAJ,EAAmB;AACf,YAAIC,MAAM,GAAG,EAAb;AACAtD,QAAAA,IAAI,CAACuD,OAAL,CAAa,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC9B,cAAID,QAAQ,CAACP,QAAb,EAAuB;AACnB,gBAAIS,YAAY,GAAG,EAAE,GAAGF;AAAL,aAAnB;AACAE,YAAAA,YAAY,CAACT,QAAb,GAAwBO,QAAQ,CAACP,QAAT,CAAkBU,MAAlB,CAAyBC,IAAI,IAAI;AACrD,qBAAOA,IAAI,CAAChD,EAAL,IAAWyC,aAAlB;AACH,aAFuB,CAAxB;AAGAC,YAAAA,MAAM,CAACG,KAAD,CAAN,GAAgBC,YAAhB;AACH,WAND,MAOK,IAAIF,QAAQ,CAAC5C,EAAT,IAAeyC,aAAnB,EAAkC;AACnCC,YAAAA,MAAM,CAACO,IAAP,CAAYL,QAAZ;AACH;AACJ,SAXD;AAYA,eAAOF,MAAP;AACH;AACJ,KArBD,MAsBK;AACD,UAAI1D,SAAS,CAACsB,IAAV,KAAmBjC,SAAS,CAACmC,IAAV,CAAeC,KAAtC,EAA6C;AACzC;AACAjC,QAAAA,CAAC,CAAC0E,IAAF,CAAO9D,IAAP,EAAa,UAAU4D,IAAV,EAAgBG,CAAhB,EAAmB;AAC5B,cAAIH,IAAI,CAACX,QAAT,EACIW,IAAI,CAACX,QAAL,GAAgB7D,CAAC,CAAC4E,OAAF,CAAUJ,IAAI,CAACX,QAAf,CAAhB;;AACJ,cAAIW,IAAI,CAACX,QAAL,IAAiB7D,CAAC,CAAC6E,IAAF,CAAOL,IAAI,CAACX,QAAZ,CAArB,EAA4C;AACxCjD,YAAAA,IAAI,CAAC+D,CAAD,CAAJ,CAAQd,QAAR,GAAmB,CAAC;AAChBrC,cAAAA,EAAE,EAAE,KADY;AAEhBuC,cAAAA,IAAI,EAAE;AAFU,aAAD,EAGhBnC,MAHgB,CAGThB,IAAI,CAAC+D,CAAD,CAAJ,CAAQd,QAHC,CAAnB;AAIH;AACJ,SATD;AAUH,OAZD,MAYO,IAAIiB,IAAI,CAACC,KAAL,CAAYvE,SAAS,CAACsB,IAAV,GAAiBgD,IAAI,CAACE,GAAL,CAAS,EAAT,EAAa,CAAb,CAAlB,GAAqC,EAAhD,MACPnF,SAAS,CAACmC,IAAV,CAAeC,KADZ,EACmB;AACtB;AACArB,QAAAA,IAAI,GAAG,CAAC;AACJY,UAAAA,EAAE,EAAE,KADA;AAEJuC,UAAAA,IAAI,EAAE;AAFF,SAAD,EAGJnC,MAHI,CAGGhB,IAHH,CAAP;AAIH,OAPM,MAQF;AACDZ,QAAAA,CAAC,CAAC0E,IAAF,CAAO9D,IAAP,EAAa,UAAUwD,QAAV,EAAoBO,CAApB,EAAuB;AAChC,cAAIP,QAAQ,CAACP,QAAb,EACIO,QAAQ,CAACP,QAAT,GAAoB7D,CAAC,CAAC4E,OAAF,CAAUR,QAAQ,CAACP,QAAnB,CAApB;;AACJ,cAAIO,QAAQ,CAACP,QAAT,IAAqB7D,CAAC,CAAC6E,IAAF,CAAOT,QAAQ,CAACP,QAAhB,CAAzB,EAAoD;AAChD7D,YAAAA,CAAC,CAAC0E,IAAF,CAAON,QAAQ,CAACP,QAAhB,EAA0B,UAAUW,IAAV,EAAgBS,CAAhB,EAAmB;AACzC,kBAAIT,IAAI,CAACX,QAAT,EACIW,IAAI,CAACX,QAAL,GAAgB7D,CAAC,CAAC4E,OAAF,CAAUJ,IAAI,CAACX,QAAf,CAAhB;;AACJ,kBAAIW,IAAI,CAACX,QAAL,IAAiB7D,CAAC,CAAC6E,IAAF,CAAOL,IAAI,CAACX,QAAZ,CAArB,EAA4C;AACxCjD,gBAAAA,IAAI,CAAC+D,CAAD,CAAJ,CAAQd,QAAR,CAAiBoB,CAAjB,EAAoBpB,QAApB,GAA+B,CAAC;AAC5BrC,kBAAAA,EAAE,EAAE,KADwB;AAE5BuC,kBAAAA,IAAI,EAAE;AAFsB,iBAAD,EAG5BnC,MAH4B,CAGrBhB,IAAI,CAAC+D,CAAD,CAAJ,CAAQd,QAAR,CAAiBoB,CAAjB,EAAoBpB,QAHC,CAA/B;AAIH;AACJ,aATD;AAUH;AACJ,SAfD;AAgBH;AACJ;;AACD,WAAOjD,IAAP;AACH,GAhED;;AAkEA,QAAMsE,mBAAmB,GAAG,CAACC,MAAD,EAASC,eAAT,KAA6B;AACrD;AACA,QAAI3E,KAAK,CAAC4E,gBAAN,IAA0BD,eAAe,CAAC1D,MAAhB,GAAyB,CAAnD,IAAwDyD,MAAM,CAACzD,MAAP,GAAgB,CAA5E,EAA+E;AAC3E,UAAI2C,KAAK,GAAGc,MAAM,CAACzD,MAAP,GAAgB,CAA5B;AACA,aAAOyD,MAAM,CAACd,KAAD,CAAb;AACH,KAHD,MAIK;AACD,aAAOc,MAAP;AACH;AACJ,GATD;;AAWA,QAAMG,YAAY,GAAG,CAACC,GAAD,EAAMC,cAAN,KAAyB;AAC1C7E,IAAAA,QAAQ,CAAC4E,GAAD,CAAR;AACA,QAAI,CAACA,GAAL,EACI,OAHsC,CAI1C;;AACA,QAAI9E,KAAK,CAACgF,UAAV,EAAsB;AAClBD,MAAAA,cAAc,CAACE,IAAf,CAAoBC,MAAM,IAAI;AAC1B,YAAIA,MAAM,CAACnE,EAAP,IAAa+D,GAAG,CAACA,GAAG,CAAC7D,MAAJ,GAAa,CAAd,CAApB,EAAsC;AAClCjB,UAAAA,KAAK,CAACmF,WAAN,CAAkBD,MAAM,CAAC5B,IAAzB;AACH;AACJ,OAJD;AAKH;;AACD,QAAI8B,IAAI,GAAG,IAAX;AACA,QAAIC,CAAC,GAAGP,GAAG,CAAC7D,MAAJ,GAAa,CAArB;;AACA,QAAIqE,OAAO,GAAG/F,CAAC,CAACgG,SAAF,CAAYT,GAAZ,CAAd;;AACA,QAAIA,GAAG,CAACO,CAAD,CAAH,KAAW,KAAf,EAAsB;AAClB,UAAKhB,IAAI,CAACC,KAAL,CAAYvE,SAAS,CAACsB,IAAV,GAAiBgD,IAAI,CAACE,GAAL,CAAS,EAAT,EAAa,CAAb,CAAlB,GAAqC,EAAhD,MAAwDnF,SAAS,CAACmC,IAAV,CAAeC,KAAxE,IAAkF8D,OAAO,CAACrE,MAAR,KAAmB,CAAzG,EAA4G;AACxG;AACAqE,QAAAA,OAAO,GAAG/F,CAAC,CAACe,GAAF,CAAMH,IAAN,EAAY,IAAZ,CAAV;AACH,OAHD,MAIK;AACDmF,QAAAA,OAAO,GAAGA,OAAO,CAACE,MAAR,CAAeH,CAAf,EAAkB,CAAlB,CAAV;;AACAC,QAAAA,OAAO,GAAI,YAAY;AACnB,cAAI7B,MAAM,GAAG,EAAb;;AACAlE,UAAAA,CAAC,CAAC0E,IAAF,CAAO9D,IAAP,EAAa,UAAUwD,QAAV,EAAoBO,CAApB,EAAuB;AAChC,gBAAIP,QAAQ,CAAC5C,EAAT,KAAgB+D,GAAG,CAAC,CAAD,CAAvB,EAA4B;AACxB,kBAAI/E,SAAS,CAACsB,IAAV,KAAmBjC,SAAS,CAACmC,IAAV,CAAeC,KAAtC,EAA6C;AACzC;AACAiC,gBAAAA,MAAM,GAAGlE,CAAC,CAACe,GAAF,CAAMqD,QAAQ,CAACP,QAAf,EAAyB,IAAzB,CAAT;AACH,eAHD,MAGO;AACH7D,gBAAAA,CAAC,CAAC0E,IAAF,CAAON,QAAQ,CAACP,QAAhB,EAA0B,UAAUW,IAAV,EAAgBS,CAAhB,EAAmB;AACzC,sBAAIT,IAAI,CAAChD,EAAL,KAAY+D,GAAG,CAAC,CAAD,CAAnB,EAAwB;AACpBf,oBAAAA,IAAI,CAACX,QAAL,CAAcM,OAAd,CAAsB+B,OAAO,IAAI;AAC7B,0BAAIA,OAAO,CAACC,QAAZ,EAAsB;AAClBjC,wBAAAA,MAAM,CAACO,IAAP,CAAYyB,OAAO,CAAC1E,EAApB;AACH;AACJ,qBAJD,EADoB,CAMpB;AACH;AACJ,iBATD;AAUH;AACJ;AACJ,WAlBD;;AAmBA,iBAAO0C,MAAP;AACH,SAtBS,EAAV;AAuBH;;AACD6B,MAAAA,OAAO,GAAGA,OAAO,CAACxB,MAAR,CAAetD,CAAC,IAAIA,CAAC,KAAK,KAA1B,CAAV,CA/BkB,CA+ByB;AAC9C,KAhCD,MAgCO;AACH8E,MAAAA,OAAO,GAAGR,GAAG,CAACA,GAAG,CAAC7D,MAAJ,GAAa,CAAd,CAAb;AACH;;AACD,QAAIjB,KAAK,CAAC2F,cAAV,EAA0B;AACtB3F,MAAAA,KAAK,CAAC4F,gBAAN,CAAuBd,GAAvB;AACH;;AACD9E,IAAAA,KAAK,CAAC6F,QAAN,CAAeP,OAAf;AACH,GAtDD,CA5LwC,CAmPxC;AACA;;;AACA,sBAAO,oBAAC,QAAD,oBAActF,KAAd;AACH,IAAA,WAAW,EAAEN,WAAW,IAAI,eADzB;AAEH,IAAA,UAAU,EAAE;AAAEoG,MAAAA,KAAK,EAAE,MAAT;AAAiB7F,MAAAA,KAAK,EAAE;AAAxB,KAFT;AAGH,IAAA,UAAU,EAAEN,UAHT;AAIH,IAAA,OAAO,EAAEQ,IAJN;AAKH,IAAA,KAAK,EAAEF,KAAK,IAAI,EALb;AAMH,IAAA,aAAa,EAAEwE,mBANZ;AAOH,IAAA,QAAQ,EAAEI,YAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AAQH,CA9PD;;AA+PA,eAAepF,cAAf;AACAA,cAAc,CAACsG,YAAf,GAA8B;AAC1BpG,EAAAA,UAAU,EAAE,IADc;AAE1BqF,EAAAA,UAAU,EAAE,KAFc;AAG1B9B,EAAAA,iBAAiB,EAAE,KAHO;AAI1BM,EAAAA,aAAa,EAAE;AAJW,CAA9B;AAMA/D,cAAc,CAACuG,SAAf,GAA2B;AACvBrG,EAAAA,UAAU,EAAET,SAAS,CAAC+G,IADC;AAEvBjB,EAAAA,UAAU,EAAE9F,SAAS,CAAC+G,IAFC;AAEK;AAC5B/C,EAAAA,iBAAiB,EAAEhE,SAAS,CAAC+G,IAHN;AAGY;AACnC5C,EAAAA,SAAS,EAAEnE,SAAS,CAACgH,IAJE;AAII;AAC3B1C,EAAAA,aAAa,EAAEtE,SAAS,CAACiH,MALF,CAKS;;AALT,CAA3B","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport Cascader from './common/Cascader'\nimport { USER_TYPE } from \"../constants/User\";\nimport CommonService from '../services/api/services/common'\nimport { getCascader } from '../services/api/routes/common'\nconst _ = require(\"lodash\");\n\nconst CascaderFilter = ({ placeholder, allowClear, activeTab, isUserMgmt,\n    isHomeFilter, loginUser, ...props }) => {\n    const [value, setValue] = useState(props.value)\n    const [data, setData] = useState()\n    const pharmacyUsers = _.map(USER_TYPE.PHARMACY, function (x) {\n        return USER_TYPE.PHARMACY[x]\n    })\n\n    useEffect(() => {\n        fetch()\n    }, [])\n\n    useEffect(() => {\n        fetch();\n    }, [activeTab, isUserMgmt, isHomeFilter, props.value])\n\n    const fetch = async () => {\n        if (!loginUser)\n            return\n        const { method, url } = getCascader\n        let obj = {};\n\n        let ids = [loginUser.parentClientele[0].id];\n        if (loginUser.prAccessPermission && loginUser.prAccessPermission.length) {\n            ids = _.uniq(ids.concat(loginUser.prAccessPermission));\n        }\n\n        if (pharmacyUsers.indexOf(loginUser.type) > -1 && loginUser.parentClientele) {\n            // if other branch permission exists get it's dependent sub data list\n            obj.pharmacyId = ids;\n        } else if (loginUser.type === USER_TYPE.HOME.ADMIN) {\n            obj.homeId = ids;\n        }\n        else if (loginUser.type === USER_TYPE.HOME.NURSE.NURSE\n            || loginUser.type === USER_TYPE.HOME.PHYSICIAN) {\n            obj.homeAreaId = ids\n        }\n        if (activeTab === USER_TYPE.HOME.ADMIN && !isHomeFilter) {\n            obj.isHome = false;\n        } else if (activeTab === USER_TYPE.HOME.ADMIN && isHomeFilter) {\n            obj.isHomeArea = false;\n        } \n        // else if (activeTab === USER_TYPE.HOME.ADMIN && !isHomeFilter) {\n        //     obj.isHomeArea = false;\n        // }\n        let getAPIObj = getAPI(obj)\n        if (getAPIObj.isCallAPI) {\n            //make API call if request is not same\n            let res = await CommonService({ method, url, data: obj })\n            // console.log(\"TCL: fetch -> res\", res)\n            // console.log(\"TCL: fetch -> loginUser\", loginUser)\n            if (res && res.code === 'OK') {\n                const { data } = res\n                let cascader = {\n                    userId: loginUser.id,\n                    request: obj, response: data\n                }\n                localStorage.setItem('cascader-filter', JSON.stringify(cascader))\n                let cascaderData = pushAllKeyToCascader(data, obj)\n                prepareList(cascaderData)\n            }\n        } else {\n            let cascaderData = pushAllKeyToCascader(getAPIObj.response, data)\n            prepareList(cascaderData)\n        }\n    }\n\n    const getAPI = (request) => {\n        //to check whether request is same as localstorage or not \n        let obj = {\n            isCallAPI: true,\n            response: null\n        }\n        let cascader = JSON.parse(localStorage.getItem('cascader-filter'))\n        if (cascader && loginUser.id === cascader.userId) {\n            if (_.isEqual(request, cascader.request)) {\n                obj = {\n                    isCallAPI: false,\n                    response: cascader.response\n                }\n            }\n        }\n        return obj\n    }\n\n    const prepareList = (cascaderData) => {\n        // console.log(\"TCL: prepareList -> cascaderData\", cascaderData)\n        if (props.selectFirstOption && cascaderData && cascaderData[0]) {\n            let dv = []\n            if (cascaderData[0].children) {\n                dv = [cascaderData[0].id, cascaderData[0].children[0].id]\n                props.onSetHome({\n                    id: cascaderData[0].children[0].id,\n                    name: cascaderData[0].children[0].name\n                })\n            }\n            else {\n                dv = [cascaderData[0].id]\n                props.onSetHome({\n                    id: cascaderData[0].id,\n                    name: cascaderData[0].name\n                })\n            }\n            setValue(dv)\n        }\n        //set default Selection if setDefaultValue props is passed you can pass Phramacy id,homeID\n        // if (props.setDefaultValue && cascaderData) {\n        //     setDefaultSelection(cascaderData)\n        // }\n        setData(cascaderData)\n    }\n\n    const pushAllKeyToCascader = (data) => {\n        if (props.isNotPushAllKey) {\n            //do not push All Key \n\n            //remove home or pharmacy from cascader list if hometoexclude props is passed\n            let hometoexclude = props.hometoexclude\n            if (hometoexclude) {\n                let result = []\n                data.forEach((pharmacy, index) => {\n                    if (pharmacy.children) {\n                        let tempPharmacy = { ...pharmacy }\n                        tempPharmacy.children = pharmacy.children.filter(home => {\n                            return home.id != hometoexclude\n                        })\n                        result[index] = tempPharmacy\n                    }\n                    else if (pharmacy.id != hometoexclude) {\n                        result.push(pharmacy)\n                    }\n                })\n                return result\n            }\n        }\n        else {\n            if (loginUser.type === USER_TYPE.HOME.ADMIN) {\n                //If Home Admin is login\n                _.each(data, function (home, i) {\n                    if (home.children)\n                        home.children = _.compact(home.children);\n                    if (home.children && _.size(home.children)) {\n                        data[i].children = [{\n                            id: \"all\",\n                            name: \"All\",\n                        }].concat(data[i].children);\n                    }\n                });\n            } else if (Math.floor((loginUser.type / Math.pow(10, 1)) % 10) ===\n                USER_TYPE.HOME.ADMIN) {\n                //If Home Area user is login \n                data = [{\n                    id: \"all\",\n                    name: \"All\",\n                }].concat(data)\n            }\n            else {\n                _.each(data, function (pharmacy, i) {\n                    if (pharmacy.children)\n                        pharmacy.children = _.compact(pharmacy.children);\n                    if (pharmacy.children && _.size(pharmacy.children)) {\n                        _.each(pharmacy.children, function (home, j) {\n                            if (home.children)\n                                home.children = _.compact(home.children);\n                            if (home.children && _.size(home.children)) {\n                                data[i].children[j].children = [{\n                                    id: \"all\",\n                                    name: \"All\",\n                                }].concat(data[i].children[j].children);\n                            }\n                        });\n                    }\n                });\n            }\n        }\n        return data;\n    }\n\n    const displayEndSelection = (labels, selectedoptions) => {\n        // return last selected option if showEndSelection is set to true\n        if (props.showEndSelection && selectedoptions.length > 0 && labels.length > 0) {\n            let index = labels.length - 1\n            return labels[index]\n        }\n        else {\n            return labels\n        }\n    }\n\n    const handleChange = (val, selectedOption) => {\n        setValue(val)\n        if (!val)\n            return\n        //return selected home or pharmacy name if isHomeName set to true\n        if (props.isHomeName) {\n            selectedOption.some(option => {\n                if (option.id == val[val.length - 1]) {\n                    props.getHomeName(option.name)\n                }\n            })\n        }\n        let self = this;\n        let n = val.length - 1\n        let tempVal = _.cloneDeep(val)\n        if (val[n] === 'all') {\n            if ((Math.floor((loginUser.type / Math.pow(10, 1)) % 10) === USER_TYPE.HOME.ADMIN) && tempVal.length === 1) {\n                //Push All key for HA User\n                tempVal = _.map(data, \"id\");\n            }\n            else {\n                tempVal = tempVal.splice(n, 1)\n                tempVal = (function () {\n                    let result = [];\n                    _.each(data, function (pharmacy, i) {\n                        if (pharmacy.id === val[0]) {\n                            if (loginUser.type === USER_TYPE.HOME.ADMIN) {\n                                // if Home admin is loggedin\n                                result = _.map(pharmacy.children, \"id\");\n                            } else {\n                                _.each(pharmacy.children, function (home, j) {\n                                    if (home.id === val[1]) {\n                                        home.children.forEach(homeObj => {\n                                            if (homeObj.isActive) {\n                                                result.push(homeObj.id)\n                                            }\n                                        })\n                                        // result = _.map(home.children, \"id\");\n                                    }\n                                });\n                            }\n                        }\n                    });\n                    return result;\n                })();\n            }\n            tempVal = tempVal.filter(x => x !== 'all') //remove \"all\" from request\n        } else {\n            tempVal = val[val.length - 1]\n        }\n        if (props.setSelectedVal) {\n            props.setSelectedValue(val)\n        }\n        props.onChange(tempVal);\n    }\n    // console.log('cascader data', data)\n    //mujhe yahape options rakhane he\n    return <Cascader {...props}\n        placeholder={placeholder || 'Select Filter'}\n        fieldNames={{ label: 'name', value: 'id' }}\n        allowClear={allowClear}\n        options={data}\n        value={value || []}\n        displayRender={displayEndSelection}\n        onChange={handleChange} />\n}\nexport default CascaderFilter\nCascaderFilter.defaultProps = {\n    allowClear: true,\n    isHomeName: false,\n    selectFirstOption: false,\n    hometoexclude: ''\n}\nCascaderFilter.propTypes = {\n    allowClear: PropTypes.bool,\n    isHomeName: PropTypes.bool, // to show home/pharmacy name (requireHomeName)\n    selectFirstOption: PropTypes.bool, // to show default selected first option (showdefault)\n    onSetHome: PropTypes.func, //return home obj\n    hometoexclude: PropTypes.string,// home id to be excluded from data\n}"]},"metadata":{},"sourceType":"module"}