{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Customers/Clientele/components/ClienteleTabs.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Tabs, { TabPane } from \"rc-tabs\";\nimport { Button } from \"../../../../components/common/index\";\nimport { CLIENTELE_TYPE, EHR_Integration } from \"../../../../constants/Customer\";\nimport queryString from \"query-string\";\nimport UpsertForm from \"./UpsertForm\";\nimport SettingForm from \"./SettingForm\";\nimport axios from \"../../../../services/api/config\";\nimport { Toast } from \"../../../../components/common/Toast\";\nimport { homeOrgUpsert, getSpecificHomeOrg, pharmacyPaginate, homeOrgPagination, homeOrgUpdate, imagingDiagnosticsPaginate, homeAreaUpsert, getSpecificHomeArea, homeAreaUpdate } from \"../../../../services/api/routes/customer\";\nimport { getAll } from \"../../../../services/api/routes/subscription\";\nimport routes from \"../../../../routes/constant\";\nimport { createForm } from \"rc-form\";\nimport \"rc-tabs/assets/index.css\";\nimport { isModuleAccessible, canPerformAction } from \"../../../../util/common\";\nimport { MODULE, SUB_MODULE } from \"../../../../constants/subscription\";\nimport { da } from \"date-fns/locale\";\n\nconst _ = require(\"lodash\");\n\nfunction ClienteleTabs(props) {\n  const {\n    authUser,\n    form,\n    location,\n    history\n  } = props;\n  const [queryData, setQueryData] = useState(\"\");\n  const [selectedTab, setSelectedTab] = useState(\"1\");\n  const [pharamcy, setPharmacy] = useState([]);\n  const [organization, setOrganization] = useState();\n  const [imgDia, setImgDia] = useState();\n  const [data, setData] = useState({});\n  const [editId, setEditId] = useState(undefined);\n  const [subscripData, setSubscripData] = useState([]);\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [eHR, setEHR] = useState();\n  console.log(data.eHR);\n  useEffect(() => {\n    if (data) setEHR(data.eHR);\n  }, [data]);\n  useEffect(() => {\n    fetchSubscriptions();\n  }, [queryData]);\n  useEffect(() => {\n    if (editId) getSpecificCustomerData();\n    getPharmacy();\n    getOrganization();\n    getImagingDiagnostics();\n  }, [editId]);\n  useEffect(() => {\n    const query = queryString.parse(location.search);\n\n    if (query.type == \"organization\") {\n      setQueryData(CLIENTELE_TYPE.ORGANIZATION);\n    } else if (query.type == \"home\") {\n      setQueryData(CLIENTELE_TYPE.HOME);\n    } else if (query.type == \"homeArea\") {\n      setQueryData(CLIENTELE_TYPE.HOME_AREA);\n    } else {\n      setQueryData(query.type);\n    }\n\n    if (query.id) {\n      setEditId(query.id);\n    }\n  }, [location]);\n\n  const fetchSubscriptions = async () => {\n    if (queryData == CLIENTELE_TYPE.HOME) {\n      const {\n        method,\n        url,\n        baseURL\n      } = getAll;\n      const data = {\n        sortBy: {\n          createdAt: \"DESC\"\n        },\n        where: {\n          isActive: true\n        }\n      };\n      let res = await axios({\n        method,\n        url,\n        data,\n        baseURL\n      });\n\n      if (res) {\n        if (res.data.code === \"OK\") {\n          setSubscripData(res.data.data.data);\n        } else {\n          Toast.error(res.data.message);\n        }\n      }\n    }\n  };\n\n  const getPharmacy = () => {\n    let {\n      method,\n      url,\n      baseURL\n    } = pharmacyPaginate;\n    axios({\n      method,\n      url,\n      baseURL,\n      data: {\n        query: {\n          fields: [],\n          sortBy: {\n            createdAt: \"DESC\"\n          },\n          find: editId ? {} : {\n            isActive: true\n          }\n        }\n      }\n    }).then(response => {\n      if (response.data.code === \"OK\") {\n        setPharmacy(response.data.data.data);\n      }\n    }).catch(error => {\n      Toast.error(error);\n    });\n  };\n\n  const getOrganization = () => {\n    let {\n      method,\n      url,\n      baseURL\n    } = homeOrgPagination;\n    axios({\n      method,\n      url,\n      baseURL,\n      data: {\n        query: {\n          find: {\n            type: CLIENTELE_TYPE.ORGANIZATION,\n            isActive: true\n          }\n        }\n      }\n    }).then(response => {\n      if (response.data.code === \"OK\") {\n        setOrganization(response.data.data.data);\n      }\n    }).catch(error => {\n      Toast.error(error);\n    });\n  };\n\n  const getImagingDiagnostics = () => {\n    let {\n      method,\n      url,\n      baseURL\n    } = imagingDiagnosticsPaginate;\n    axios({\n      method,\n      url,\n      baseURL,\n      data: {\n        query: {\n          find: {\n            isActive: true\n          }\n        }\n      }\n    }).then(response => {\n      if (response.data.code === \"OK\") {\n        setImgDia(response.data.data.data);\n      }\n    }).catch(error => {\n      Toast.error(error);\n    });\n  };\n\n  const getSpecificCustomerData = () => {\n    var _authUser$homeId, _authUser$homeId2;\n\n    const query = queryString.parse(location.search);\n    let {\n      method,\n      url,\n      baseURL\n    } = queryData == CLIENTELE_TYPE.HOME_AREA ? getSpecificHomeArea : getSpecificHomeOrg;\n    url = `${url}/${query.id}`;\n    axios({\n      method,\n      url,\n      baseURL,\n      headers: {\n        homeId: (_authUser$homeId = authUser.homeId) === null || _authUser$homeId === void 0 ? void 0 : _authUser$homeId._id,\n        homeIdentifier: (_authUser$homeId2 = authUser.homeId) === null || _authUser$homeId2 === void 0 ? void 0 : _authUser$homeId2.homeIdentifier,\n        isCustom: true\n      }\n    }).then(response => {\n      if (response.data.code == \"OK\") {\n        setData(response.data.data);\n      } else {\n        Toast.error(response.data.message);\n      }\n    }).catch(error => {\n      Toast.error(error);\n    });\n  };\n\n  const handleClienteleUpsert = e => {\n    setBtnLoading(true);\n    form.validateFields((error, value) => {\n      if (!error) {\n        let obj = _.clone(value);\n\n        if (eHR) {\n          obj.eHR = eHR;\n        }\n\n        obj.code = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15); // obj.image = \"xyz.png\";\n\n        obj.type = queryData;\n        obj.isActive = true;\n        obj.careClause = obj.careClause; // obj.krollId = Math.floor(Math.random() * (+10000 + 1 - +1)) + +1;\n\n        obj.pharmacyId = obj.pharmacyId;\n        obj.orgId = obj.orgId;\n        obj.imagingAndDiagnosticId = obj.imagingAndDiagnosticId;\n\n        if (obj.fax && _.size(obj.fax) > 0) {\n          obj.faxes = [{\n            fax: obj.fax,\n            isPrimary: true\n          }];\n          delete obj.fax;\n        }\n\n        if (obj) {\n          obj.printer = {\n            name: obj.printerName,\n            machineId: obj.machineId\n          };\n        }\n\n        if (obj) {\n          obj.mobiles = [{\n            mobile: obj.phone,\n            countryCode: \"91\",\n            isPrimary: true\n          }];\n        }\n\n        if (obj) {\n          obj.printer = {\n            name: obj.printerName,\n            machineId: obj.machineId\n          };\n        }\n\n        if (obj.email && _.size(obj.email) > 0) {\n          obj.emails = [{\n            email: obj.email,\n            isPrimary: true\n          }];\n        }\n\n        if (obj) {\n          obj.addresses = [{\n            isPrimary: true,\n            line1: obj.line1,\n            line2: obj.line1,\n            city: obj.city,\n            province: obj.province,\n            country: obj.country,\n            postalCode: obj.postalCode\n          }];\n          delete obj.line1;\n          delete obj.line2;\n          delete obj.city;\n          delete obj.province;\n          delete obj.country;\n          delete obj.postalCode;\n        }\n\n        delete obj.printerName;\n        delete obj.machineId;\n        delete obj.email;\n        let {\n          method,\n          url,\n          baseURL\n        } = editId ? queryData == CLIENTELE_TYPE.HOME_AREA ? homeAreaUpdate : homeOrgUpdate : queryData == CLIENTELE_TYPE.HOME_AREA ? homeAreaUpsert : homeOrgUpsert;\n        url = editId ? `${url}/${editId}` : url;\n        axios({\n          method,\n          url,\n          baseURL,\n          headers: {\n            homeId: authUser && authUser.homeId._id,\n            homeIdentifier: authUser && authUser.homeId.homeIdentifier,\n            isCustom: true\n          },\n          data: { ...obj\n          }\n        }).then(response => {\n          if (response.data.code === \"OK\") {\n            setBtnLoading(false);\n            Toast.success(response.data.message);\n            handleBackRedirect();\n          } else {\n            setBtnLoading(false);\n            Toast.error(response.data.message);\n          }\n        }).catch(error => {\n          setBtnLoading(false);\n          Toast.error(error);\n        });\n      } else {\n        setBtnLoading(false);\n        Toast.error(\"Please fill required fields...!\");\n      }\n    });\n  };\n\n  const handleTabChange = key => {\n    setSelectedTab(key);\n  };\n\n  const handleBackRedirect = e => {\n    if (queryData == CLIENTELE_TYPE.ORGANIZATION) {\n      return history.push(`${routes.clientele.path}?type=organization`);\n    } else if (queryData == CLIENTELE_TYPE.HOME) {\n      return history.push(`${routes.clientele.path}?type=home`);\n    } else if (queryData == CLIENTELE_TYPE.HOME_AREA) {\n      return history.push(`${routes.clientele.path}?type=homeArea`);\n    } else {\n      return null;\n    }\n\n    return;\n  };\n\n  let settingParams = {\n    moduleId: MODULE.ORG_HOME,\n    subModuleId: SUB_MODULE.ORG_HOME_SETTING\n  };\n\n  if (queryData === CLIENTELE_TYPE.HOME_AREA) {\n    settingParams = {\n      moduleId: MODULE.HOMEAREA,\n      subModuleId: SUB_MODULE.HOMEAREA_SETTING\n    };\n  }\n\n  const onSourceMediumChange = e => {\n    setEHR(parseInt(e.target.value));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginBottom: \"-1%\",\n      fontSize: \"20px\",\n      marginLeft: \"2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }, queryData == CLIENTELE_TYPE.ORGANIZATION && editId ? \"Edit Organization\" : queryData == CLIENTELE_TYPE.ORGANIZATION ? \"Add Organization\" : null || queryData == CLIENTELE_TYPE.HOME && editId ? \"Edit Home\" : queryData == CLIENTELE_TYPE.HOME ? \"Add Home\" : null || queryData == CLIENTELE_TYPE.HOME_AREA && editId ? \"Edit Home Area\" : queryData == CLIENTELE_TYPE.HOME_AREA ? \"Add Home Area\" : null)), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"5px\"\n    },\n    size: \"lg\",\n    onClick: () => {\n      handleBackRedirect();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_list_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patient_order_wrap\",\n    style: {\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: selectedTab,\n    activeKey: selectedTab,\n    className: \"permission_tab_wrap\",\n    onChange: handleTabChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Basic\",\n    key: \"1\",\n    className: \"resi_treat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(UpsertForm, {\n    authUser: authUser,\n    onTabChange: handleTabChange,\n    handleUpsert: handleClienteleUpsert,\n    form: form,\n    getPharmacy: pharamcy,\n    organization: organization,\n    editCustomerData: data,\n    imgDia: imgDia,\n    editId: editId,\n    queryData: queryData,\n    handleClienteleRedirect: handleBackRedirect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 19\n    }\n  })), canPerformAction(settingParams, true) ? /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Setting\",\n    key: \"2\",\n    className: \"resi_treat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(SettingForm, {\n    authUser: authUser,\n    onSave: handleClienteleUpsert,\n    queryData: queryData,\n    form: form,\n    editId: editId,\n    loading: btnLoading,\n    subscripData: subscripData,\n    onCancel: handleBackRedirect,\n    editPhamacy: data,\n    eHR: eHR,\n    onSourceMediumChange: onSourceMediumChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 21\n    }\n  })) : null))))));\n}\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  const {\n    authUser\n  } = auth;\n  return {\n    authUser\n  };\n};\n\nexport default connect(mapStateToProps)(createForm()(ClienteleTabs));","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Customers/Clientele/components/ClienteleTabs.js"],"names":["React","useState","useEffect","connect","withRouter","Tabs","TabPane","Button","CLIENTELE_TYPE","EHR_Integration","queryString","UpsertForm","SettingForm","axios","Toast","homeOrgUpsert","getSpecificHomeOrg","pharmacyPaginate","homeOrgPagination","homeOrgUpdate","imagingDiagnosticsPaginate","homeAreaUpsert","getSpecificHomeArea","homeAreaUpdate","getAll","routes","createForm","isModuleAccessible","canPerformAction","MODULE","SUB_MODULE","da","_","require","ClienteleTabs","props","authUser","form","location","history","queryData","setQueryData","selectedTab","setSelectedTab","pharamcy","setPharmacy","organization","setOrganization","imgDia","setImgDia","data","setData","editId","setEditId","undefined","subscripData","setSubscripData","btnLoading","setBtnLoading","eHR","setEHR","console","log","fetchSubscriptions","getSpecificCustomerData","getPharmacy","getOrganization","getImagingDiagnostics","query","parse","search","type","ORGANIZATION","HOME","HOME_AREA","id","method","url","baseURL","sortBy","createdAt","where","isActive","res","code","error","message","fields","find","then","response","catch","headers","homeId","_id","homeIdentifier","isCustom","handleClienteleUpsert","e","validateFields","value","obj","clone","Math","random","toString","substring","careClause","pharmacyId","orgId","imagingAndDiagnosticId","fax","size","faxes","isPrimary","printer","name","printerName","machineId","mobiles","mobile","phone","countryCode","email","emails","addresses","line1","line2","city","province","country","postalCode","success","handleBackRedirect","handleTabChange","key","push","clientele","path","settingParams","moduleId","ORG_HOME","subModuleId","ORG_HOME_SETTING","HOMEAREA","HOMEAREA_SETTING","onSourceMediumChange","parseInt","target","marginBottom","fontSize","marginLeft","marginTop","border","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Tabs, { TabPane } from \"rc-tabs\";\nimport { Button } from \"../../../../components/common/index\";\nimport {\n  CLIENTELE_TYPE,\n  EHR_Integration,\n} from \"../../../../constants/Customer\";\nimport queryString from \"query-string\";\nimport UpsertForm from \"./UpsertForm\";\nimport SettingForm from \"./SettingForm\";\nimport axios from \"../../../../services/api/config\";\nimport { Toast } from \"../../../../components/common/Toast\";\nimport {\n  homeOrgUpsert,\n  getSpecificHomeOrg,\n  pharmacyPaginate,\n  homeOrgPagination,\n  homeOrgUpdate,\n  imagingDiagnosticsPaginate,\n  homeAreaUpsert,\n  getSpecificHomeArea,\n  homeAreaUpdate,\n} from \"../../../../services/api/routes/customer\";\nimport { getAll } from \"../../../../services/api/routes/subscription\";\nimport routes from \"../../../../routes/constant\";\nimport { createForm } from \"rc-form\";\nimport \"rc-tabs/assets/index.css\";\nimport { isModuleAccessible, canPerformAction } from \"../../../../util/common\";\nimport { MODULE, SUB_MODULE } from \"../../../../constants/subscription\";\nimport { da } from \"date-fns/locale\";\nconst _ = require(\"lodash\");\n\nfunction ClienteleTabs(props) {\n  const { authUser, form, location, history } = props;\n  const [queryData, setQueryData] = useState(\"\");\n  const [selectedTab, setSelectedTab] = useState(\"1\");\n  const [pharamcy, setPharmacy] = useState([]);\n  const [organization, setOrganization] = useState();\n  const [imgDia, setImgDia] = useState();\n  const [data, setData] = useState({});\n  const [editId, setEditId] = useState(undefined);\n  const [subscripData, setSubscripData] = useState([]);\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [eHR, setEHR] = useState();\n  console.log(data.eHR)\n  useEffect(() => { if (data) setEHR(data.eHR) }, [data])\n\n  useEffect(() => {\n    fetchSubscriptions();\n  }, [queryData]);\n\n  useEffect(() => {\n    if (editId) getSpecificCustomerData();\n    getPharmacy();\n    getOrganization();\n    getImagingDiagnostics();\n  }, [editId]);\n\n  useEffect(() => {\n    const query = queryString.parse(location.search);\n    if (query.type == \"organization\") {\n      setQueryData(CLIENTELE_TYPE.ORGANIZATION);\n    } else if (query.type == \"home\") {\n      setQueryData(CLIENTELE_TYPE.HOME);\n    } else if (query.type == \"homeArea\") {\n      setQueryData(CLIENTELE_TYPE.HOME_AREA);\n    } else {\n      setQueryData(query.type);\n    }\n\n    if (query.id) {\n      setEditId(query.id);\n    }\n  }, [location]);\n\n  const fetchSubscriptions = async () => {\n    if (queryData == CLIENTELE_TYPE.HOME) {\n      const { method, url, baseURL } = getAll;\n      const data = { sortBy: { createdAt: \"DESC\" }, where: { isActive: true } };\n      let res = await axios({ method, url, data, baseURL });\n      if (res) {\n        if (res.data.code === \"OK\") {\n          setSubscripData(res.data.data.data);\n        } else {\n          Toast.error(res.data.message);\n        }\n      }\n    }\n  };\n\n  const getPharmacy = () => {\n    let { method, url, baseURL } = pharmacyPaginate;\n    axios({\n      method,\n      url,\n      baseURL,\n      data: {\n        query: {\n          fields: [],\n          sortBy: { createdAt: \"DESC\" },\n          find: editId ? {} : { isActive: true },\n        },\n      },\n    })\n      .then((response) => {\n        if (response.data.code === \"OK\") {\n          setPharmacy(response.data.data.data);\n        }\n      })\n      .catch((error) => {\n        Toast.error(error);\n      });\n  };\n\n  const getOrganization = () => {\n    let { method, url, baseURL } = homeOrgPagination;\n    axios({\n      method,\n      url,\n      baseURL,\n      data: {\n        query: {\n          find: {\n            type: CLIENTELE_TYPE.ORGANIZATION,\n            isActive: true,\n          },\n        },\n      },\n    })\n      .then((response) => {\n        if (response.data.code === \"OK\") {\n          setOrganization(response.data.data.data);\n        }\n      })\n      .catch((error) => {\n        Toast.error(error);\n      });\n  };\n\n  const getImagingDiagnostics = () => {\n    let { method, url, baseURL } = imagingDiagnosticsPaginate;\n    axios({\n      method,\n      url,\n      baseURL,\n      data: { query: { find: { isActive: true } } },\n    })\n      .then((response) => {\n        if (response.data.code === \"OK\") {\n          setImgDia(response.data.data.data);\n        }\n      })\n      .catch((error) => {\n        Toast.error(error);\n      });\n  };\n\n  const getSpecificCustomerData = () => {\n    const query = queryString.parse(location.search);\n    let { method, url, baseURL } =\n      queryData == CLIENTELE_TYPE.HOME_AREA\n        ? getSpecificHomeArea\n        : getSpecificHomeOrg;\n    url = `${url}/${query.id}`;\n    axios({\n      method,\n      url,\n      baseURL,\n      headers: {\n        homeId: authUser.homeId?._id,\n        homeIdentifier: authUser.homeId?.homeIdentifier,\n        isCustom: true,\n      },\n    })\n      .then((response) => {\n        if (response.data.code == \"OK\") {\n          setData(response.data.data);\n        } else {\n          Toast.error(response.data.message);\n        }\n      })\n      .catch((error) => {\n        Toast.error(error);\n      });\n  };\n\n  const handleClienteleUpsert = (e) => {\n    setBtnLoading(true);\n    form.validateFields((error, value) => {\n      if (!error) {\n        let obj = _.clone(value);\n        if (eHR) {\n          obj.eHR = eHR;\n        }\n        obj.code =\n          Math.random().toString(36).substring(2, 15) +\n          Math.random().toString(36).substring(2, 15);\n        // obj.image = \"xyz.png\";\n        obj.type = queryData;\n        obj.isActive = true;\n        obj.careClause = obj.careClause;\n        // obj.krollId = Math.floor(Math.random() * (+10000 + 1 - +1)) + +1;\n        obj.pharmacyId = obj.pharmacyId;\n        obj.orgId = obj.orgId;\n        obj.imagingAndDiagnosticId = obj.imagingAndDiagnosticId;\n        if (obj.fax && _.size(obj.fax) > 0) {\n          obj.faxes = [{ fax: obj.fax, isPrimary: true }];\n          delete obj.fax;\n        }\n\n        if (obj) {\n          obj.printer = {\n            name: obj.printerName,\n            machineId: obj.machineId,\n          };\n        }\n\n        if (obj) {\n          obj.mobiles = [\n            { mobile: obj.phone, countryCode: \"91\", isPrimary: true },\n          ];\n        }\n        if (obj) {\n          obj.printer = {\n            name: obj.printerName,\n            machineId: obj.machineId,\n          };\n        }\n        if (obj.email && _.size(obj.email) > 0) {\n          obj.emails = [{ email: obj.email, isPrimary: true }];\n        }\n        if (obj) {\n          obj.addresses = [\n            {\n              isPrimary: true,\n              line1: obj.line1,\n              line2: obj.line1,\n              city: obj.city,\n              province: obj.province,\n              country: obj.country,\n              postalCode: obj.postalCode,\n            },\n          ];\n          delete obj.line1;\n          delete obj.line2;\n          delete obj.city;\n          delete obj.province;\n          delete obj.country;\n          delete obj.postalCode;\n        }\n        delete obj.printerName;\n        delete obj.machineId;\n        delete obj.email;\n\n        let { method, url, baseURL } = editId\n          ? queryData == CLIENTELE_TYPE.HOME_AREA\n            ? homeAreaUpdate\n            : homeOrgUpdate\n          : queryData == CLIENTELE_TYPE.HOME_AREA\n            ? homeAreaUpsert\n            : homeOrgUpsert;\n        url = editId ? `${url}/${editId}` : url;\n        axios({\n          method,\n          url,\n          baseURL,\n          headers: {\n            homeId: authUser && authUser.homeId._id,\n            homeIdentifier: authUser && authUser.homeId.homeIdentifier,\n            isCustom: true,\n          },\n          data: { ...obj },\n        })\n          .then((response) => {\n            if (response.data.code === \"OK\") {\n              setBtnLoading(false);\n              Toast.success(response.data.message);\n              handleBackRedirect();\n            } else {\n              setBtnLoading(false);\n              Toast.error(response.data.message);\n            }\n          })\n          .catch((error) => {\n            setBtnLoading(false);\n            Toast.error(error);\n          });\n      } else {\n        setBtnLoading(false);\n        Toast.error(\"Please fill required fields...!\");\n      }\n    });\n  };\n\n  const handleTabChange = (key) => {\n    setSelectedTab(key);\n  };\n\n  const handleBackRedirect = (e) => {\n    if (queryData == CLIENTELE_TYPE.ORGANIZATION) {\n      return history.push(`${routes.clientele.path}?type=organization`);\n    } else if (queryData == CLIENTELE_TYPE.HOME) {\n      return history.push(`${routes.clientele.path}?type=home`);\n    } else if (queryData == CLIENTELE_TYPE.HOME_AREA) {\n      return history.push(`${routes.clientele.path}?type=homeArea`);\n    } else {\n      return null;\n    }\n    return;\n  };\n\n  let settingParams = {\n    moduleId: MODULE.ORG_HOME,\n    subModuleId: SUB_MODULE.ORG_HOME_SETTING,\n  };\n  if (queryData === CLIENTELE_TYPE.HOME_AREA) {\n    settingParams = {\n      moduleId: MODULE.HOMEAREA,\n      subModuleId: SUB_MODULE.HOMEAREA_SETTING,\n    };\n  }\n\n  const onSourceMediumChange = (e) => {\n    setEHR(parseInt(e.target.value));\n  };\n\n  return (\n    <>\n      <div className=\"pmr_wrap\">\n        <div className=\"container\">\n          <div className=\"page_head\">\n            <span\n              style={{\n                marginBottom: \"-1%\",\n                fontSize: \"20px\",\n                marginLeft: \"2px\",\n              }}\n            >\n              <b>\n                {queryData == CLIENTELE_TYPE.ORGANIZATION && editId\n                  ? \"Edit Organization\"\n                  : queryData == CLIENTELE_TYPE.ORGANIZATION\n                    ? \"Add Organization\"\n                    : null || (queryData == CLIENTELE_TYPE.HOME && editId)\n                      ? \"Edit Home\"\n                      : queryData == CLIENTELE_TYPE.HOME\n                        ? \"Add Home\"\n                        : null || (queryData == CLIENTELE_TYPE.HOME_AREA && editId)\n                          ? \"Edit Home Area\"\n                          : queryData == CLIENTELE_TYPE.HOME_AREA\n                            ? \"Add Home Area\"\n                            : null}\n              </b>\n            </span>\n\n            <Button\n              style={{ marginTop: \"5px\" }}\n              size=\"lg\"\n              onClick={() => {\n                handleBackRedirect();\n              }}\n            >\n              Back\n            </Button>\n          </div>\n          <div className=\"pmr_list_wrap\">\n            <div className=\"patient_order_wrap\" style={{ border: \"none\" }}>\n              <Tabs\n                defaultActiveKey={selectedTab}\n                activeKey={selectedTab}\n                className=\"permission_tab_wrap\"\n                onChange={handleTabChange}\n              >\n                <TabPane tab=\"Basic\" key=\"1\" className=\"resi_treat\">\n                  <UpsertForm\n                    authUser={authUser}\n                    onTabChange={handleTabChange}\n                    handleUpsert={handleClienteleUpsert}\n                    form={form}\n                    getPharmacy={pharamcy}\n                    organization={organization}\n                    editCustomerData={data}\n                    imgDia={imgDia}\n                    editId={editId}\n                    queryData={queryData}\n                    handleClienteleRedirect={handleBackRedirect}\n                  />\n                </TabPane>\n                {canPerformAction(settingParams, true) ? (\n                  <TabPane tab=\"Setting\" key=\"2\" className=\"resi_treat\">\n                    <SettingForm\n                      authUser={authUser}\n                      onSave={handleClienteleUpsert}\n                      queryData={queryData}\n                      form={form}\n                      editId={editId}\n                      loading={btnLoading}\n                      subscripData={subscripData}\n                      onCancel={handleBackRedirect}\n                      editPhamacy={data}\n                      eHR={eHR}\n                      onSourceMediumChange={onSourceMediumChange}\n                    />\n                  </TabPane>\n                ) : null}\n              </Tabs>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\nconst mapStateToProps = ({ auth }) => {\n  const { authUser } = auth;\n  return { authUser };\n};\n\nexport default connect(mapStateToProps)(createForm()(ClienteleTabs));\n"]},"metadata":{},"sourceType":"module"}