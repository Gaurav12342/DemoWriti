{"ast":null,"code":"import axios from '../config';\nimport routes from '../../../routes/constant';\nimport { displayCatchErrorMsg } from '../../../util/common';\nimport { masterPaginate } from '../routes/master';\nimport { rxImage } from '../routes/prescription';\nimport { privateBucketUrl } from '../routes/user';\n\nconst CommonService = request => {\n  const {\n    method,\n    url,\n    data,\n    headers,\n    params,\n    baseURL\n  } = request;\n  return axios({\n    method,\n    url,\n    data,\n    params,\n    baseURL,\n    headers\n  }).then(({\n    data\n  }) => Promise.resolve(data)).catch(error => {\n    displayCatchErrorMsg(error);\n    console.log(error);\n    return Promise.reject(error);\n  });\n};\n\nexport default CommonService; // export const getApiUrl = (url) => {\n//     // get API base url according to module\n//     let baseurl = base_url\n//     Object.keys(routes).map(route => {\n//         if (routes[route].path === window.location.pathname && routes[route].module) {\n//             console.log(baseurl[routes[route].module])\n//             url = baseurl[routes[route].module]\n//         }\n//     })\n//     return url\n// }\n\nexport const getSubMasters = code => {\n  //get submasters from master code\n  let data = {\n    \"query\": {\n      \"fields\": [\"isActive\", \"name\", \"code\", \"masterForMedium\"],\n      \"find\": {\n        \"isActive\": true,\n        \"code\": code\n      },\n      \"populate\": [{\n        \"subMaster\": [\"isActive\", \"name\", \"code\", \"masterForMedium\", \"homeId\", \"pharmacyId\"],\n        \"match\": {\n          \"isActive\": true\n        }\n      }],\n      \"sortBy\": {\n        \"createdAt\": \"DESC\"\n      }\n    }\n  };\n  return CommonService({ ...masterPaginate,\n    data\n  }).then(data => {\n    if (data.code === 'OK') {\n      if (data.data.data.length > 0 && data.data.data[0].subMaster.length > 0) {\n        return data.data.data[0].subMaster ? data.data.data[0].subMaster : [];\n      }\n    } else return [];\n  }).catch(err => err);\n};\nexport const getRxImage = orders => {\n  //view rx images\n  let data = {\n    \"prescriptionOrdersIds\": orders\n  };\n  return CommonService({ ...rxImage,\n    data\n  }).then(data => {\n    if (data.code === 'OK') {\n      return data.data;\n    } else return [];\n  }).catch(err => err);\n};\nexport const getPrivateBucketUrl = orders => {\n  //view rx images\n  let data = {\n    \"files\": orders || [{\n      \"id\": \"1\",\n      \"path\": \"https://private-writi-bucket.s3.ca-central-1.amazonaws.com/uploads/temp/THRx001170-ltc-1612440797727.png\"\n    }]\n  };\n  return CommonService({ ...privateBucketUrl,\n    data\n  }).then(data => {\n    if (data.code === 'OK') {\n      return data.data;\n    } else return [];\n  }).catch(err => err);\n};","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/services/api/services/common.js"],"names":["axios","routes","displayCatchErrorMsg","masterPaginate","rxImage","privateBucketUrl","CommonService","request","method","url","data","headers","params","baseURL","then","Promise","resolve","catch","error","console","log","reject","getSubMasters","code","length","subMaster","err","getRxImage","orders","getPrivateBucketUrl"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,WAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,oBAAT,QAAqC,sBAArC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;;AAEA,MAAMC,aAAa,GAAIC,OAAD,IAAa;AAC/B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,GAAV;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA,OAArB;AAA8BC,IAAAA,MAA9B;AAAsCC,IAAAA;AAAtC,MAAkDN,OAAxD;AACA,SAAOP,KAAK,CAAC;AAAEQ,IAAAA,MAAF;AAAUC,IAAAA,GAAV;AAAeC,IAAAA,IAAf;AAAqBE,IAAAA,MAArB;AAA6BC,IAAAA,OAA7B;AAAsCF,IAAAA;AAAtC,GAAD,CAAL,CACFG,IADE,CACG,CAAC;AAAEJ,IAAAA;AAAF,GAAD,KAAcK,OAAO,CAACC,OAAR,CAAgBN,IAAhB,CADjB,EAEFO,KAFE,CAEIC,KAAK,IAAI;AACZhB,IAAAA,oBAAoB,CAACgB,KAAD,CAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAOH,OAAO,CAACM,MAAR,CAAeH,KAAf,CAAP;AACH,GANE,CAAP;AAOH,CATD;;AAUA,eAAeZ,aAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMgB,aAAa,GAAIC,IAAD,IAAU;AACnC;AACA,MAAIb,IAAI,GAAG;AACP,aAAS;AACL,gBAAU,CAAC,UAAD,EAAa,MAAb,EAAqB,MAArB,EAA6B,iBAA7B,CADL;AAEL,cAAQ;AACJ,oBAAY,IADR;AAEJ,gBAAQa;AAFJ,OAFH;AAML,kBAAY,CACR;AACI,qBAAa,CAAC,UAAD,EAAa,MAAb,EAAqB,MAArB,EAA6B,iBAA7B,EAAgD,QAAhD,EAA0D,YAA1D,CADjB;AAEI,iBAAS;AAAE,sBAAY;AAAd;AAFb,OADQ,CANP;AAYL,gBAAU;AACN,qBAAa;AADP;AAZL;AADF,GAAX;AAmBA,SAAOjB,aAAa,CAAC,EAAE,GAAGH,cAAL;AAAqBO,IAAAA;AAArB,GAAD,CAAb,CAA2CI,IAA3C,CAAiDJ,IAAD,IAAU;AAC7D,QAAIA,IAAI,CAACa,IAAL,KAAc,IAAlB,EAAwB;AACpB,UAAIb,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAec,MAAf,GAAwB,CAAxB,IAA6Bd,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAe,CAAf,EAAkBe,SAAlB,CAA4BD,MAA5B,GAAqC,CAAtE,EAAyE;AACrE,eAAOd,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAe,CAAf,EAAkBe,SAAlB,GAA8Bf,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAe,CAAf,EAAkBe,SAAhD,GAA4D,EAAnE;AACH;AACJ,KAJD,MAKK,OAAO,EAAP;AACR,GAPM,EAOJR,KAPI,CAOES,GAAG,IAAIA,GAPT,CAAP;AAQH,CA7BM;AA+BP,OAAO,MAAMC,UAAU,GAAIC,MAAD,IAAY;AAClC;AACA,MAAIlB,IAAI,GAAG;AACP,6BAAyBkB;AADlB,GAAX;AAIA,SAAOtB,aAAa,CAAC,EAAE,GAAGF,OAAL;AAAcM,IAAAA;AAAd,GAAD,CAAb,CAAoCI,IAApC,CAA0CJ,IAAD,IAAU;AACtD,QAAIA,IAAI,CAACa,IAAL,KAAc,IAAlB,EAAwB;AACpB,aAAOb,IAAI,CAACA,IAAZ;AACH,KAFD,MAGK,OAAO,EAAP;AACR,GALM,EAKJO,KALI,CAKES,GAAG,IAAIA,GALT,CAAP;AAMH,CAZM;AAaP,OAAO,MAAMG,mBAAmB,GAAID,MAAD,IAAY;AAC3C;AACA,MAAIlB,IAAI,GAAG;AACP,aAASkB,MAAM,IAAI,CACf;AACI,YAAM,GADV;AAEI,cAAQ;AAFZ,KADe;AADZ,GAAX;AASA,SAAOtB,aAAa,CAAC,EAAE,GAAGD,gBAAL;AAAuBK,IAAAA;AAAvB,GAAD,CAAb,CAA6CI,IAA7C,CAAmDJ,IAAD,IAAU;AAC/D,QAAIA,IAAI,CAACa,IAAL,KAAc,IAAlB,EAAwB;AACpB,aAAOb,IAAI,CAACA,IAAZ;AACH,KAFD,MAGK,OAAO,EAAP;AACR,GALM,EAKJO,KALI,CAKES,GAAG,IAAIA,GALT,CAAP;AAMH,CAjBM","sourcesContent":["import axios from '../config'\nimport routes from '../../../routes/constant'\nimport { displayCatchErrorMsg } from '../../../util/common'\nimport { masterPaginate } from '../routes/master'\nimport { rxImage } from '../routes/prescription'\nimport { privateBucketUrl } from '../routes/user'\n\nconst CommonService = (request) => {\n    const { method, url, data, headers, params, baseURL } = request\n    return axios({ method, url, data, params, baseURL, headers })\n        .then(({ data }) => Promise.resolve(data))\n        .catch(error => {\n            displayCatchErrorMsg(error)\n            console.log(error)\n            return Promise.reject(error)\n        })\n}\nexport default CommonService\n\n// export const getApiUrl = (url) => {\n//     // get API base url according to module\n//     let baseurl = base_url\n//     Object.keys(routes).map(route => {\n//         if (routes[route].path === window.location.pathname && routes[route].module) {\n//             console.log(baseurl[routes[route].module])\n//             url = baseurl[routes[route].module]\n//         }\n//     })\n//     return url\n// }\n\nexport const getSubMasters = (code) => {\n    //get submasters from master code\n    let data = {\n        \"query\": {\n            \"fields\": [\"isActive\", \"name\", \"code\", \"masterForMedium\"],\n            \"find\": {\n                \"isActive\": true,\n                \"code\": code\n            },\n            \"populate\": [\n                {\n                    \"subMaster\": [\"isActive\", \"name\", \"code\", \"masterForMedium\", \"homeId\", \"pharmacyId\"],\n                    \"match\": { \"isActive\": true }\n                }\n            ],\n            \"sortBy\": {\n                \"createdAt\": \"DESC\"\n            },\n        }\n    }\n\n    return CommonService({ ...masterPaginate, data }).then((data) => {\n        if (data.code === 'OK') {\n            if (data.data.data.length > 0 && data.data.data[0].subMaster.length > 0) {\n                return data.data.data[0].subMaster ? data.data.data[0].subMaster : []\n            }\n        }\n        else return []\n    }).catch(err => err)\n}\n\nexport const getRxImage = (orders) => {\n    //view rx images\n    let data = {\n        \"prescriptionOrdersIds\": orders\n    }\n\n    return CommonService({ ...rxImage, data }).then((data) => {\n        if (data.code === 'OK') {\n            return data.data\n        }\n        else return []\n    }).catch(err => err)\n}\nexport const getPrivateBucketUrl = (orders) => {\n    //view rx images\n    let data = {\n        \"files\": orders || [\n            {\n                \"id\": \"1\",\n                \"path\": \"https://private-writi-bucket.s3.ca-central-1.amazonaws.com/uploads/temp/THRx001170-ltc-1612440797727.png\"\n            }\n        ]\n    }\n\n    return CommonService({ ...privateBucketUrl, data }).then((data) => {\n        if (data.code === 'OK') {\n            return data.data\n        }\n        else return []\n    }).catch(err => err)\n}"]},"metadata":{},"sourceType":"module"}