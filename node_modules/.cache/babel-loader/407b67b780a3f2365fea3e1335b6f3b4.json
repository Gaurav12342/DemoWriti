{"ast":null,"code":"import { applyMiddleware, compose, createStore } from \"redux\";\nimport reducers from \"../reducers/index\";\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\nexport const history = createBrowserHistory();\nconst routeMiddleware = routerMiddleware(history);\nconst middlewares = [thunk, routeMiddleware];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default function configureStore(initialState) {\n  const store = createStore(reducers(history), initialState, composeEnhancers(applyMiddleware(...middlewares))); // Hot reloading\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers/index', () => {\n      const nextRootReducer = require('../reducers/index');\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/appRedux/store/index.js"],"names":["applyMiddleware","compose","createStore","reducers","routerMiddleware","createBrowserHistory","thunk","history","routeMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","initialState","store","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,MAAMC,OAAO,GAAGF,oBAAoB,EAApC;AAEP,MAAMG,eAAe,GAAGJ,gBAAgB,CAACG,OAAD,CAAxC;AAEA,MAAME,WAAW,GAAG,CAACH,KAAD,EAAQE,eAAR,CAApB;AACA,MAAME,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CX,OAAxE;AAEA,eAAe,SAASY,cAAT,CAAwBC,YAAxB,EAAsC;AACnD,QAAMC,KAAK,GAAGb,WAAW,CAACC,QAAQ,CAACI,OAAD,CAAT,EAAoBO,YAApB,EACvBJ,gBAAgB,CAACV,eAAe,CAAC,GAAGS,WAAJ,CAAhB,CADO,CAAzB,CADmD,CAInD;;AACA,MAAIO,MAAM,CAACC,GAAX,EAAgB;AACd;AACAD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,mBAAlB,EAAuC,MAAM;AAC3C,YAAMC,eAAe,GAAGC,OAAO,CAAC,mBAAD,CAA/B;;AACAL,MAAAA,KAAK,CAACM,cAAN,CAAqBF,eAArB;AACD,KAHD;AAID;;AAED,SAAOJ,KAAP;AACD","sourcesContent":["import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport reducers from \"../reducers/index\";\r\nimport { routerMiddleware } from 'connected-react-router'\r\nimport { createBrowserHistory } from 'history';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nconst routeMiddleware = routerMiddleware(history);\r\n\r\nconst middlewares = [thunk, routeMiddleware];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function configureStore(initialState) {\r\n  const store = createStore(reducers(history), initialState,\r\n    composeEnhancers(applyMiddleware(...middlewares)));\r\n\r\n  // Hot reloading\r\n  if (module.hot) {\r\n    // Enable Webpack hot module replacement for reducers\r\n    module.hot.accept('../reducers/index', () => {\r\n      const nextRootReducer = require('../reducers/index');\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}