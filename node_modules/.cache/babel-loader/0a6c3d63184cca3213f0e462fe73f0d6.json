{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/User/Components/AddUser/AddUser.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Input, ErrorMsg, Button } from \"../../../../components/common/index\";\nimport Select, { Option, OptGroup } from \"../../../../components/common/AutoComplete\";\nimport { capitalizeStr } from \"../../../../util/common\";\nimport Uploader, { FILE_TYPES, FILE_CATEGORY } from \"../../../../components/common/Upload/Uploader\";\nimport { MAPPED_USER_TYPE, USER_TYPE } from \"../../../../constants/User\";\nimport SettingForm from \"./SettingForm\";\nimport { fileUpload } from \"../../../../services/api/routes/common\";\nimport { editUser } from \"../../../../services/api/routes/user\";\nimport { Attachments, Download } from \"../../../../assets/images/resident-detail\";\nimport { isPharmacyUser } from \"../../../../constants/User\";\nimport Thumbnail from \"../../../../components/common/Upload/Thumbnail\";\nimport _ from \"lodash\";\n\nfunction AddUser(props) {\n  // authUser = { authUser }\n  const {\n    form,\n    type,\n    userRoleOptions,\n    userSelectedType,\n    changeUserType,\n    onUserNameChange,\n    authUser,\n    onUploaderChange,\n    showUploader,\n    onAddUser,\n    onFindSerialNo,\n    btnLoading,\n    designationData,\n    isDisable,\n    pharmacyList,\n    organizationList,\n    onOrgChange,\n    onCancel,\n    isEdit,\n    onUploadAction,\n    isUploadVisible,\n    editData\n  } = props;\n  const PREVENT_SPECIAL_CHARS_ARRAY = [\"e\", \"=\", \",\", \"-\", \".\"];\n  const {\n    getFieldDecorator,\n    getFieldError,\n    getFieldValue\n  } = form;\n  let errors;\n  const [defaultAssignRolePermission, setDefaultAssignRolePermission] = useState(\"\");\n\n  const capitalize = e => {\n    if (e.target.value.length > 0) {\n      let value = e.target.value;\n      return capitalizeStr(value);\n    }\n  };\n\n  const removeWhiteSpace = e => {\n    if (e.target.value.length > 0) {\n      let value = e.target.value.replace(/ /g, \"\");\n      return value;\n    }\n  };\n\n  const isDrOrNurseSelected = [USER_TYPE.HOME.NURSE, USER_TYPE.HOME.PHYSICIAN].includes(userSelectedType);\n  let customCN = \"col-4\";\n\n  if (isDrOrNurseSelected) {\n    customCN = \"col-3\";\n  }\n\n  const showPharmacy = [USER_TYPE.PHARMACY.ADMIN].indexOf(userSelectedType) >= 0;\n  const showOrg = userSelectedType === MAPPED_USER_TYPE.organizations;\n  const [uploadedData, setUploadedData] = useState([]);\n\n  const handleDesignationChange = (v, o) => {\n    let tempRoleAccessId = _.find(designationData, {\n      _id: v\n    });\n\n    form.setFieldsValue({\n      subscriptionRoleGroup: tempRoleAccessId === null || tempRoleAccessId === void 0 ? void 0 : tempRoleAccessId.defaultRoleAccessPermission\n    }); // setDefaultAssignRolePermission(tempRoleAccessId.defaultRoleAccessPermission)\n  };\n\n  useEffect(() => {\n    if (editData && editData.image) {\n      setUploadedData([{\n        path: editData.image\n      }]);\n    }\n  }, [editData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, isEdit ? \"Edit\" : \"Add\", \" \", type ? capitalizeStr(type.replace(/-/g, \" \")) : \"\", \" User\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_list_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patient_order_wrap\",\n    style: {\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, !isEdit && [USER_TYPE.HOME.NURSE, USER_TYPE.HOME.PHYSICIAN, USER_TYPE.HOME.TECH, USER_TYPE.HOME.OTHER, USER_TYPE.HOME.ADMIN].indexOf(userSelectedType) >= 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    style: {\n      borderBottom: \"1px solid #bbb\",\n      paddingBottom: \"25px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group  col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      fontSize: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, \"Existing User ?\")), getFieldDecorator(\"findUser\")( /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Search UserName\",\n    onChange: onUserNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  })), (errors = getFieldError(\"findUser\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"20px\"\n    },\n    onClick: onFindSerialNo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 23\n    }\n  }, \"Find\"))) : null, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group required col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, \"First Name\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 31\n    }\n  }, \"*\")), getFieldDecorator(\"firstName\", {\n    rules: [{\n      required: true,\n      message: \"Please enter First Name\",\n      whitespace: true\n    }],\n    getValueFromEvent: capitalize\n  })( /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"First Name*\",\n    disabled: isDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 22\n    }\n  })), (errors = getFieldError(\"firstName\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group required col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, \"Last Name\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 30\n    }\n  }, \"*\")), getFieldDecorator(\"lastName\", {\n    rules: [{\n      required: true,\n      message: \"Please enter First Name\",\n      whitespace: true\n    }],\n    getValueFromEvent: capitalize\n  })( /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Last Name*\",\n    disabled: isDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 22\n    }\n  })), (errors = getFieldError(\"lastName\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group required col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, \"Username\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, \"*\")), getFieldDecorator(\"username\", {\n    rules: [{\n      required: true,\n      message: \"Please enter User Name\",\n      whitespace: true\n    }],\n    getValueFromEvent: removeWhiteSpace\n  })( /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Username*\",\n    disabled: isDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 22\n    }\n  })), (errors = getFieldError(\"username\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group required col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }, \"Role\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, \"*\")), getFieldDecorator(\"type\", {\n    rules: [{\n      required: true,\n      message: \"Please select Role\"\n    }]\n  })( /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Type\",\n    disabled: isDisable,\n    onChange: (value, event) => changeUserType(value, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, Object.keys(userRoleOptions).map(val => {\n    return /*#__PURE__*/React.createElement(OptGroup, {\n      label: val.replace(/_/g, \" \"),\n      key: val,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 27\n      }\n    }, Object.keys(userRoleOptions[val]).map(v => {\n      return /*#__PURE__*/React.createElement(Option, {\n        key: v,\n        value: userRoleOptions[val][v],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 33\n        }\n      }, v.replace(/_/g, \" \"));\n    }));\n  }))), (errors = getFieldError(\"type\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: `form_group col-4 ${userSelectedType !== USER_TYPE.HOME.NURSE && \"required\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  }, \"Email\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, userSelectedType !== USER_TYPE.HOME.NURSE && \"*\", \" \")), getFieldDecorator(\"emails\", {\n    validateTrigger: [\"onChange\", \"onBlur\"],\n    rules: [{\n      type: \"email\",\n      message: \"The input is not valid E-mail!\",\n      required: userSelectedType !== USER_TYPE.HOME.NURSE && true\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Email\",\n    type: \"email\",\n    disabled: isDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  })), (errors = getFieldError(\"emails\")) ? userSelectedType !== USER_TYPE.HOME.NURSE && /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 23\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 19\n    }\n  }, \"Phone\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: '50px'\n    },\n    type: \"number\",\n    placeholder: \"+1\",\n    value: \"+1\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }\n  }), getFieldDecorator('mobiles', {\n    validate: [{\n      trigger: 'onBlur',\n      rules: [{\n        required: false\n      }]\n    }, {\n      trigger: ['onBlur', 'onChange'],\n      rules: [{\n        min: 10,\n        message: 'Please enter 10 digit mobile no only.'\n      }]\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    name: \"mobiles\",\n    placeholder: \"16474*****3\",\n    disabled: isDisable,\n    onKeyDown: evt => {\n      if (PREVENT_SPECIAL_CHARS_ARRAY.includes(evt.key)) evt.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 23\n    }\n  }))), (errors = getFieldError('mobiles')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 21\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 15\n    }\n  }, showOrg ? /*#__PURE__*/React.createElement(\"div\", {\n    className: `form_group col-4 ${showOrg ? \"required\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }, \"Organization\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 35\n    }\n  }, showOrg ? \"*\" : \"\"), \" \"), getFieldDecorator(\"orgId\", {\n    rules: [{\n      required: showOrg,\n      message: \"Please select your parent!\"\n    }]\n  })( /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Organization\",\n    showSearch: true,\n    allowClear: true,\n    filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 23\n    }\n  }, organizationList && organizationList.map(data => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: data._id,\n      value: data._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 31\n      }\n    }, data.name);\n  }))), (errors = getFieldError(\"organization\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 23\n    }\n  }) : null) : null, showPharmacy ? isPharmacyUser(authUser === null || authUser === void 0 ? void 0 : authUser.type) ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: `form_group col-4 ${showPharmacy ? \"required\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 23\n    }\n  }, \"Pharmacy \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 34\n    }\n  }, showPharmacy ? \"*\" : \"\")), getFieldDecorator(\"pharmacyId\", {\n    rules: [{\n      required: showPharmacy,\n      message: \"Please select Pharmacy\"\n    }]\n  })( /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Pharmacy\",\n    showSearch: true,\n    allowClear: true,\n    filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 25\n    }\n  }, pharmacyList.map(obj => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: obj._id,\n      value: obj._id,\n      disabled: !obj.isActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 31\n      }\n    }, obj.name);\n  }))), (errors = getFieldError(\"pharamcyId\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 25\n    }\n  }) : null) : null, isDrOrNurseSelected ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 23\n    }\n  }, \"Designation\"), getFieldDecorator(\"designationId\")( /*#__PURE__*/React.createElement(Select, {\n    onChange: (v, o) => handleDesignationChange(v, o),\n    placeholder: \"Select Designation\",\n    name: \"Designation\",\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 25\n    }\n  }, designationData && designationData.length ? designationData.map(obj => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: obj._id,\n      value: obj._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 33\n      }\n    }, obj.code);\n  }) : null))), getFieldValue(\"type\") === userRoleOptions.HOME.PHYSICIAN && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group required col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 27\n    }\n  }, \"License No\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 39\n    }\n  }, \"*\")), getFieldDecorator(\"licenceNo\", {\n    validateTrigger: [\"onChange\", \"onBlur\"],\n    rules: [{\n      required: getFieldValue(\"type\") === userRoleOptions.HOME.PHYSICIAN,\n      message: \"Please input your License No!\"\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"License No\",\n    disabled: isDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 29\n    }\n  })), (errors = getFieldError(\"licenceNo\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 29\n    }\n  }) : null), getFieldValue(\"type\") === userRoleOptions.HOME.PHYSICIAN && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 27\n    }\n  }, \"OHIP No\"), getFieldDecorator(\"ohipNo\", {\n    rules: []\n  })( /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Enter OHIP No\",\n    disabled: isDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 29\n    }\n  })))) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 19\n    }\n  }, (getFieldValue(\"designationId\") || [USER_TYPE.PHARMACY.ADMIN, USER_TYPE.HOME.ADMIN, USER_TYPE.ADMIN.GENERAL, USER_TYPE.ADMIN.SUPER].indexOf(authUser === null || authUser === void 0 ? void 0 : authUser.type) >= 0) && userSelectedType !== USER_TYPE.HOME.ADMIN && userSelectedType !== USER_TYPE.PHARMACY.ADMIN ? /*#__PURE__*/React.createElement(SettingForm, {\n    form: form,\n    authUser: authUser // defaultValue = {defaultAssignRolePermission}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 27\n    }\n  }) : null)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 17\n    }\n  }, \"Profile Picture\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"lg\",\n    type: \"transparent\",\n    style: {\n      width: \"180px\",\n      float: \"left\"\n    },\n    onClick: () => {\n      onUploadAction(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 21\n    }\n  }, \"Upload Image\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 19\n    }\n  }, uploadedData.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upd_img_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Thumbnail, {\n    path: uploadedData[0].path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 25\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"22%\",\n      float: \"right\",\n      marginTop: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"lg\",\n    type: \"secondary\",\n    style: {\n      marginRight: \"8px\"\n    },\n    onClick: onCancel,\n    validationParams: {\n      moduleId: 1,\n      actiontoCheck: \"ADD\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 15\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"lg\",\n    loading: btnLoading,\n    onClick: onAddUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 15\n    }\n  }, isEdit ? \"Update\" : \"Add\")))), isUploadVisible ? /*#__PURE__*/React.createElement(Uploader, {\n    title: \"Upload Profile\",\n    visible: isUploadVisible,\n    onRequestClose: () => onUploadAction(false),\n    uploadUrl: { ...fileUpload\n    },\n    extraData: {\n      isUploadToS3: true,\n      category: [FILE_CATEGORY.IMAGE].join(\",\")\n    },\n    allowedTypes: [FILE_TYPES.IMAGE] // maxSizeInMB={1}\n    ,\n    onError: err => {\n      console.log(\"on error => \", err);\n    },\n    multiple: false,\n    onSuccess: uploaded => {\n      setUploadedData(uploaded.data);\n      onUploadAction(false, uploaded);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 11\n    }\n  }) : null));\n}\n\nexport default AddUser;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/User/Components/AddUser/AddUser.js"],"names":["React","useEffect","useState","Input","ErrorMsg","Button","Select","Option","OptGroup","capitalizeStr","Uploader","FILE_TYPES","FILE_CATEGORY","MAPPED_USER_TYPE","USER_TYPE","SettingForm","fileUpload","editUser","Attachments","Download","isPharmacyUser","Thumbnail","_","AddUser","props","form","type","userRoleOptions","userSelectedType","changeUserType","onUserNameChange","authUser","onUploaderChange","showUploader","onAddUser","onFindSerialNo","btnLoading","designationData","isDisable","pharmacyList","organizationList","onOrgChange","onCancel","isEdit","onUploadAction","isUploadVisible","editData","PREVENT_SPECIAL_CHARS_ARRAY","getFieldDecorator","getFieldError","getFieldValue","errors","defaultAssignRolePermission","setDefaultAssignRolePermission","capitalize","e","target","value","length","removeWhiteSpace","replace","isDrOrNurseSelected","HOME","NURSE","PHYSICIAN","includes","customCN","showPharmacy","PHARMACY","ADMIN","indexOf","showOrg","organizations","uploadedData","setUploadedData","handleDesignationChange","v","o","tempRoleAccessId","find","_id","setFieldsValue","subscriptionRoleGroup","defaultRoleAccessPermission","image","path","border","TECH","OTHER","borderBottom","paddingBottom","fontSize","marginTop","rules","required","message","whitespace","getValueFromEvent","event","Object","keys","map","val","validateTrigger","display","width","validate","trigger","min","evt","key","preventDefault","input","option","children","toLowerCase","data","name","obj","isActive","code","GENERAL","SUPER","float","marginRight","moduleId","actiontoCheck","isUploadToS3","category","IMAGE","join","err","console","log","uploaded"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Input, ErrorMsg, Button } from \"../../../../components/common/index\";\nimport Select, {\n  Option,\n  OptGroup,\n} from \"../../../../components/common/AutoComplete\";\nimport { capitalizeStr } from \"../../../../util/common\";\nimport Uploader, {\n  FILE_TYPES,\n  FILE_CATEGORY,\n} from \"../../../../components/common/Upload/Uploader\";\nimport { MAPPED_USER_TYPE, USER_TYPE } from \"../../../../constants/User\";\nimport SettingForm from \"./SettingForm\";\nimport { fileUpload } from \"../../../../services/api/routes/common\";\nimport { editUser } from \"../../../../services/api/routes/user\";\nimport {\n  Attachments,\n  Download,\n} from \"../../../../assets/images/resident-detail\";\nimport { isPharmacyUser } from \"../../../../constants/User\";\nimport Thumbnail from \"../../../../components/common/Upload/Thumbnail\";\nimport _ from \"lodash\";\nfunction AddUser(props) {\n  // authUser = { authUser }\n  const {\n    form,\n    type,\n    userRoleOptions,\n    userSelectedType,\n    changeUserType,\n    onUserNameChange,\n    authUser,\n    onUploaderChange,\n    showUploader,\n    onAddUser,\n    onFindSerialNo,\n    btnLoading,\n    designationData,\n    isDisable,\n    pharmacyList,\n    organizationList,\n    onOrgChange,\n    onCancel,\n    isEdit,\n    onUploadAction,\n    isUploadVisible,\n    editData,\n  } = props;\n  const PREVENT_SPECIAL_CHARS_ARRAY = [\"e\", \"=\", \",\", \"-\", \".\"];\n\n  const { getFieldDecorator, getFieldError, getFieldValue } = form;\n  let errors;\n\n  const [\n    defaultAssignRolePermission,\n    setDefaultAssignRolePermission,\n  ] = useState(\"\");\n  const capitalize = (e) => {\n    if (e.target.value.length > 0) {\n      let value = e.target.value;\n      return capitalizeStr(value);\n    }\n  };\n  const removeWhiteSpace = (e) => {\n    if (e.target.value.length > 0) {\n      let value = e.target.value.replace(/ /g, \"\");\n      return value;\n    }\n  };\n  const isDrOrNurseSelected = [\n    USER_TYPE.HOME.NURSE,\n    USER_TYPE.HOME.PHYSICIAN,\n  ].includes(userSelectedType);\n  let customCN = \"col-4\";\n  if (isDrOrNurseSelected) {\n    customCN = \"col-3\";\n  }\n  const showPharmacy =\n    [USER_TYPE.PHARMACY.ADMIN].indexOf(userSelectedType) >= 0;\n  const showOrg = userSelectedType === MAPPED_USER_TYPE.organizations;\n  const [uploadedData, setUploadedData] = useState([]);\n  const handleDesignationChange = (v, o) => {\n    let tempRoleAccessId = _.find(designationData, { _id: v });\n    form.setFieldsValue({\n      subscriptionRoleGroup: tempRoleAccessId?.defaultRoleAccessPermission,\n    });\n    // setDefaultAssignRolePermission(tempRoleAccessId.defaultRoleAccessPermission)\n  };\n\n  useEffect(() => {\n    if (editData && editData.image) {\n      setUploadedData([{ path: editData.image }]);\n    }\n  }, [editData]);\n\n\n  return (\n    <div className=\"pmr_wrap\">\n      <div className=\"container\">\n        <div className=\"page_head\">\n          <label>\n            <strong>\n              {isEdit ? \"Edit\" : \"Add\"}{\" \"}\n              {type ? capitalizeStr(type.replace(/-/g, \" \")) : \"\"} User\n            </strong>\n          </label>\n        </div>\n        <div className=\"pmr_list_wrap\">\n          <div className=\"patient_order_wrap\" style={{ border: \"none\" }}>\n            <div className=\"form_wrap flex-wrap\">\n              {!isEdit &&\n                [\n                  USER_TYPE.HOME.NURSE,\n                  USER_TYPE.HOME.PHYSICIAN,\n                  USER_TYPE.HOME.TECH,\n                  USER_TYPE.HOME.OTHER,\n                  USER_TYPE.HOME.ADMIN,\n                ].indexOf(userSelectedType) >= 0 ? (\n                  <div\n                    className=\"form_row add-user\"\n                    style={{\n                      borderBottom: \"1px solid #bbb\",\n                      paddingBottom: \"25px\",\n                    }}\n                  >\n                    <div className=\"form_group  col-4\">\n                      <label style={{ fontSize: \"15px\" }}>\n                        <strong>Existing User ?</strong>\n                      </label>\n                      {getFieldDecorator(\"findUser\")(\n                        <Input\n                          placeholder=\"Search UserName\"\n                          onChange={onUserNameChange}\n                        />\n                      )}\n                      {(errors = getFieldError(\"findUser\")) ? (\n                        <ErrorMsg errors={errors} />\n                      ) : null}\n                    </div>\n                    <div className=\"form_group col-1\">\n                      <label></label>\n                      <Button\n                        style={{ marginTop: \"20px\" }}\n                        onClick={onFindSerialNo}\n                      >\n                        Find\n                    </Button>\n                    </div>\n                  </div>\n                ) : null}\n              <hr />\n              <div className=\"form_row add-user\">\n                <div className=\"form_group required col-4\">\n                  <label>\n                    First Name<span>*</span>\n                  </label>\n                  {getFieldDecorator(\"firstName\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please enter First Name\",\n                        whitespace: true,\n                      },\n                    ],\n                    getValueFromEvent: capitalize,\n                  })(<Input placeholder=\"First Name*\" disabled={isDisable} />)}\n                  {(errors = getFieldError(\"firstName\")) ? (\n                    <ErrorMsg errors={errors} />\n                  ) : null}\n                </div>\n                <div className=\"form_group required col-4\">\n                  <label>\n                    Last Name<span>*</span>\n                  </label>\n                  {getFieldDecorator(\"lastName\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please enter First Name\",\n                        whitespace: true,\n                      },\n                    ],\n                    getValueFromEvent: capitalize,\n                  })(<Input placeholder=\"Last Name*\" disabled={isDisable} />)}\n                  {(errors = getFieldError(\"lastName\")) ? (\n                    <ErrorMsg errors={errors} />\n                  ) : null}\n                </div>\n                <div className=\"form_group required col-4\">\n                  <label>\n                    Username<span>*</span>\n                  </label>\n                  {getFieldDecorator(\"username\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please enter User Name\",\n                        whitespace: true,\n                      },\n                    ],\n                    getValueFromEvent: removeWhiteSpace,\n                  })(<Input placeholder=\"Username*\" disabled={isDisable} />)}\n                  {(errors = getFieldError(\"username\")) ? (\n                    <ErrorMsg errors={errors} />\n                  ) : null}\n                </div>\n              </div>\n              <div className=\"form_row add-user\">\n                <div className=\"form_group required col-4\">\n                  <label>\n                    Role<span>*</span>\n                  </label>\n                  {getFieldDecorator(\"type\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please select Role\",\n                      },\n                    ],\n                  })(\n                    <Select\n                      placeholder=\"Select Type\"\n                      disabled={isDisable}\n                      onChange={(value, event) => changeUserType(value, event)}\n                    >\n                      {Object.keys(userRoleOptions).map((val) => {\n                        return (\n                          <OptGroup label={val.replace(/_/g, \" \")} key={val}>\n                            {Object.keys(userRoleOptions[val]).map((v) => {\n                              return (\n                                <Option key={v} value={userRoleOptions[val][v]}>\n                                  {v.replace(/_/g, \" \")}\n                                </Option>\n                              );\n                            })}\n                          </OptGroup>\n                        );\n                      })}\n                    </Select>\n                  )}\n                  {(errors = getFieldError(\"type\")) ? (\n                    <ErrorMsg errors={errors} />\n                  ) : null}\n                </div>\n                <div\n                  className={`form_group col-4 ${\n                    userSelectedType !== USER_TYPE.HOME.NURSE && \"required\"\n                    }`}\n                >\n                  {/* <div className=\"form_group col-4 required\"> */}\n                  <label>\n                    Email\n                    <span>\n                      {userSelectedType !== USER_TYPE.HOME.NURSE && \"*\"}{\" \"}\n                    </span>\n                  </label>\n                  {getFieldDecorator(\"emails\", {\n                    validateTrigger: [\"onChange\", \"onBlur\"],\n                    rules: [\n                      {\n                        type: \"email\",\n                        message: \"The input is not valid E-mail!\",\n                        required:\n                          userSelectedType !== USER_TYPE.HOME.NURSE && true,\n                      },\n                    ],\n                  })(\n                    <Input\n                      placeholder=\"Email\"\n                      type=\"email\"\n                      disabled={isDisable}\n                    />\n                  )}\n                  {(errors = getFieldError(\"emails\"))\n                    ? userSelectedType !== USER_TYPE.HOME.NURSE && (\n                      <ErrorMsg errors={errors} />\n                    )\n                    : null}\n                </div>\n                <div className=\"form_group col-4 required\">\n                  <label>Phone</label>\n                  <div style={{ display: 'flex' }}>\n                    <Input\n                      style={{ width: '50px' }}\n                      type=\"number\"\n                      placeholder=\"+1\"\n                      value=\"+1\"\n                      disabled={true}\n                    />\n                    {getFieldDecorator('mobiles', {\n                      validate: [\n                        {\n                          trigger: 'onBlur',\n                          rules: [\n                            {\n                              required: false,\n                            }\n                          ],\n                        },\n                        {\n                          trigger: ['onBlur', 'onChange'],\n                          rules: [\n                            {\n                              min: 10,\n                              message: 'Please enter 10 digit mobile no only.'\n                            }\n                          ]\n                        }\n                      ],\n                    })(\n                      <Input\n                        type='number'\n                        name='mobiles'\n                        placeholder=\"16474*****3\"\n                        disabled={isDisable}\n                        onKeyDown={(evt) => {\n                          if (PREVENT_SPECIAL_CHARS_ARRAY.includes(evt.key))\n                            evt.preventDefault();\n                        }}\n                      />,\n                    )}\n\n                  </div>\n                  {(errors = getFieldError('mobiles')) ? (\n                    <ErrorMsg errors={errors} />\n                  ) : null}\n                </div>\n              </div>\n\n              <div className=\"form_row add-user\">\n                {showOrg ? (\n                  <div\n                    className={`form_group col-4 ${showOrg ? \"required\" : \"\"}`}\n                  >\n                    <label>\n                      Organization<span>{showOrg ? \"*\" : \"\"}</span>{\" \"}\n                    </label>\n                    {getFieldDecorator(\"orgId\", {\n                      rules: [\n                        {\n                          required: showOrg,\n                          message: \"Please select your parent!\",\n                        },\n                      ],\n                    })(\n                      <Select\n                        placeholder=\"Select Organization\"\n                        showSearch\n                        allowClear\n                        filterOption={(input, option) =>\n                          option.props.children\n                            .toLowerCase()\n                            .indexOf(input.toLowerCase()) >= 0\n                        }\n                      >\n                        {organizationList &&\n                          organizationList.map((data) => {\n                            return (\n                              <Option key={data._id} value={data._id}>\n                                {data.name}\n                              </Option>\n                            );\n                          })}\n                      </Select>\n                    )}\n                    {(errors = getFieldError(\"organization\")) ? (\n                      <ErrorMsg errors={errors} />\n                    ) : null}\n                  </div>\n                ) : null}\n                {showPharmacy ? (\n                  isPharmacyUser(authUser?.type) ? null : (\n                    <div\n                      className={`form_group col-4 ${\n                        showPharmacy ? \"required\" : \"\"\n                        }`}\n                    >\n                      <label>\n                        Pharmacy <span>{showPharmacy ? \"*\" : \"\"}</span>\n                      </label>\n                      {getFieldDecorator(\"pharmacyId\", {\n                        rules: [\n                          {\n                            required: showPharmacy,\n                            message: \"Please select Pharmacy\",\n                          },\n                        ],\n                      })(\n                        <Select\n                          placeholder=\"Select Pharmacy\"\n                          showSearch\n                          allowClear\n                          filterOption={(input, option) =>\n                            option.props.children\n                              .toLowerCase()\n                              .indexOf(input.toLowerCase()) >= 0\n                          }\n                        >\n                          {pharmacyList.map((obj) => {\n                            return (\n                              <Option key={obj._id} value={obj._id} disabled={!obj.isActive}>\n                                {obj.name}\n                              </Option>\n                            );\n                          })}\n                        </Select>\n                      )}\n                      {(errors = getFieldError(\"pharamcyId\")) ? (\n                        <ErrorMsg errors={errors} />\n                      ) : null}\n                    </div>\n                  )\n                ) : null}\n                {isDrOrNurseSelected ? (\n                  <div className=\"form_row add-user\">\n                    <div className=\"form_group col-4\">\n                      <label>Designation</label>\n                      {getFieldDecorator(\"designationId\")(\n                        <Select\n                          onChange={(v, o) => handleDesignationChange(v, o)}\n                          placeholder=\"Select Designation\"\n                          name=\"Designation\"\n                          allowClear={true}\n                        >\n                          {designationData && designationData.length\n                            ? designationData.map((obj) => {\n                              return (\n                                <Option key={obj._id} value={obj._id}>\n                                  {obj.code}\n                                </Option>\n                              );\n                            })\n                            : null}\n                        </Select>\n                      )}\n                      {/* {(errors = getFieldError('firstName')) ? <ErrorMsg errors={errors} /> : null} */}\n                    </div>\n                    {getFieldValue(\"type\") ===\n                      userRoleOptions.HOME.PHYSICIAN && (\n                        <div className=\"form_group required col-4\">\n                          <label>\n                            License No<span>*</span>\n                          </label>\n                          {getFieldDecorator(\"licenceNo\", {\n                            validateTrigger: [\"onChange\", \"onBlur\"],\n                            rules: [\n                              {\n                                required:\n                                  getFieldValue(\"type\") ===\n                                  userRoleOptions.HOME.PHYSICIAN,\n                                message: \"Please input your License No!\",\n                              },\n                            ],\n                          })(\n                            <Input\n                              placeholder=\"License No\"\n                              disabled={isDisable}\n                            />\n                          )}\n                          {(errors = getFieldError(\"licenceNo\")) ? (\n                            <ErrorMsg errors={errors} />\n                          ) : null}\n                        </div>\n                      )}\n\n                    {getFieldValue(\"type\") ===\n                      userRoleOptions.HOME.PHYSICIAN && (\n                        <div className=\"form_group col-4\">\n                          <label>OHIP No</label>\n                          {getFieldDecorator(\"ohipNo\", {\n                            rules: [],\n                          })(\n                            <Input\n                              placeholder=\"Enter OHIP No\"\n                              disabled={isDisable}\n                            />\n                          )}\n                        </div>\n                      )}\n                  </div>\n                ) : null}\n                <div className=\"form_row add-user\">\n                  <div className=\"form_group col-12\">\n                    {\n                      (getFieldValue(\"designationId\") || [USER_TYPE.PHARMACY.ADMIN, USER_TYPE.HOME.ADMIN, USER_TYPE.ADMIN.GENERAL, USER_TYPE.ADMIN.SUPER].indexOf(\n                        authUser?.type\n                      ) >= 0) &&\n                        userSelectedType !== USER_TYPE.HOME.ADMIN &&\n                        userSelectedType !== USER_TYPE.PHARMACY.ADMIN ? (\n                          <SettingForm\n                            form={form}\n                            authUser={authUser}\n                          // defaultValue = {defaultAssignRolePermission}\n                          />\n                        ) : null}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form_row add-user\">\n              <div className=\"form_group col-6\">\n                <label>Profile Picture</label>\n                <div className=\"form_row add-user align-items-center\">\n                  <div className=\"form_group mb-0\">\n                    <Button\n                      size=\"lg\"\n                      type=\"transparent\"\n                      style={{ width: \"180px\", float: \"left\" }}\n                      onClick={() => {\n                        onUploadAction(true);\n                      }}\n                    >\n                      Upload Image\n                    </Button>\n                  </div>\n                  <div className=\"form_row add-user\">\n                    {uploadedData.length > 0 && (\n                      <div className=\"upd_img_wrap\">\n                        <Thumbnail path={uploadedData[0].path} />\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div style={{ width: \"22%\", float: \"right\", marginTop: \"50px\" }}>\n              <Button\n                size=\"lg\"\n                type=\"secondary\"\n                style={{ marginRight: \"8px\" }}\n                onClick={onCancel}\n                validationParams={{\n                  moduleId: 1,\n                  actiontoCheck: \"ADD\",\n                }}\n              >\n                Cancel\n              </Button>\n              <Button size=\"lg\" loading={btnLoading} onClick={onAddUser}>\n                {isEdit ? \"Update\" : \"Add\"}\n              </Button>\n            </div>\n          </div>\n        </div>\n        {isUploadVisible ? (\n          <Uploader\n            title=\"Upload Profile\"\n            visible={isUploadVisible}\n            onRequestClose={() => onUploadAction(false)}\n            uploadUrl={{ ...fileUpload }}\n            extraData={{\n              isUploadToS3: true,\n              category: [FILE_CATEGORY.IMAGE].join(\",\"),\n            }}\n            allowedTypes={[FILE_TYPES.IMAGE]}\n            // maxSizeInMB={1}\n            onError={(err) => {\n              console.log(\"on error => \", err);\n            }}\n            multiple={false}\n            onSuccess={(uploaded) => {\n              setUploadedData(uploaded.data);\n              onUploadAction(false, uploaded);\n            }}\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n}\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}