{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Master/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { View } from '../../assets/images/pmr/index';\nimport MasterHeader from '../../containers/Master/components/MasterHeader';\nimport MasterUpsertForm from './components/MasterUpsertForm';\nimport { Toast } from '../../../src/components/common/Toast';\nimport { masterUpsert } from '../../../src/services/api/routes/master';\nimport axios from '../../../src/services/api/config';\nimport { connect } from 'react-redux';\nimport { createForm } from 'rc-form';\nimport { Edit, Cancel } from '../../../src/assets/images/resident-detail/index';\nimport { masterPaginate, masterUpdate, masterDelete } from '../../../src/services/api/routes/master';\nimport { pharmacyPaginate } from '../../../src/services/api/routes/customer';\nimport ActiveDeactive from '../../../src/components/common/ActiveDeactive';\nimport Table from '../../../src/components/common/Table/index';\nimport ConfirmPopup from '../../../src/components/common/ConfirmPopup';\nimport { MASTER_MEDIUM } from '../../constants/MasterMedium';\nimport { USER_TYPE } from '../../constants/User';\n\nconst _ = require('lodash');\n\nconst Master = props => {\n  const {\n    form,\n    auth\n  } = props;\n  const {\n    authUser\n  } = auth;\n  const {\n    resetFields\n  } = form;\n  const [loading, setLoading] = useState(false);\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [deleteLoader, setDeleteLoader] = useState(false);\n  const [headerWidth, setHeaderWidth] = useState(false);\n  const [radioValue, setRadioValue] = useState(1);\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [pharmacy, setPharmacy] = useState({});\n  const [pharmacyLoading, setPharmacyLoading] = useState(true);\n  const [upsertModal, setUpsertModal] = useState(false);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n  const [getSpecificRecord, setSpecificRecord] = useState('');\n  const isAdmin = (authUser === null || authUser === void 0 ? void 0 : authUser.type) === USER_TYPE.ADMIN.SUPER || (authUser === null || authUser === void 0 ? void 0 : authUser.type) === USER_TYPE.ADMIN.GENERAL;\n  const isHomeAdmin = authUser && authUser.type === USER_TYPE.HOME.ADMIN;\n  const isPharmacyAdmin = authUser && authUser.type === USER_TYPE.PHARMACY.ADMIN;\n  let filterBy = {\n    // homeId: authUser && isHomeAdmin ? authUser.homeId._id : undefined,\n    // pharmacyId: authUser && isPharmacyAdmin ? authUser.homeId._id : undefined,\n    masterForMedium: isHomeAdmin ? MASTER_MEDIUM.HOME : isPharmacyAdmin ? MASTER_MEDIUM.PHARMACY : undefined\n  };\n  const [filter, setFilter] = useState({\n    page: 1,\n    limit: 10,\n    fields: [],\n    populate: [{\n      homeId: null\n    }, {\n      pharmacyId: null\n    }],\n    sortBy: {\n      createdAt: 'DESC'\n    },\n    find: {\n      parentId: null,\n      ...filterBy\n    }\n  });\n  useEffect(() => {\n    if (filter.hasOwnProperty('search') && filter.search['keyword']) {\n      const delayDebounceFn = setTimeout(() => {\n        fetch();\n      }, 600);\n      return () => clearTimeout(delayDebounceFn);\n    } else fetch();\n  }, [filter]);\n\n  const handleHomePharmacy = e => {\n    setRadioValue(parseInt(e.target.value));\n  };\n\n  const modifiedList = list => {\n    let modifiedList = list.map((current, index) => {\n      return current;\n    });\n    return modifiedList;\n  };\n\n  const fetch = () => {\n    setLoading(true);\n    axios({ ...masterPaginate,\n      data: {\n        query: { ...filter\n        }\n      }\n    }).then(({\n      data\n    }) => {\n      if (data.code === 'OK') {\n        let updatedList = modifiedList(data.data.data);\n        setData(updatedList);\n        setTotal(data.data.count);\n        setLoading(false);\n      } else {\n        setLoading(false);\n      }\n    }).catch(err => {\n      setLoading(false);\n    });\n  };\n\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    if (!pagination) return;\n    let tempFilter = filter;\n    tempFilter = { ...tempFilter,\n      page: pagination.current,\n      limit: pagination.pageSize\n    };\n\n    if (tfilter && Object.keys(tfilter).length) {\n      if (tfilter.isActive && tfilter.isActive.length) {\n        tempFilter.find.isActive = tfilter.isActive;\n      } else if (tempFilter.find.isActive) {\n        delete tempFilter.find['isActive'];\n      }\n\n      tempFilter.page = pagination.current;\n    } else {// tempFilter.filter = {\n      //     type: tempFilter.filter.type\n      // }\n    }\n\n    setFilter(tempFilter);\n  };\n\n  const onShowSizeChange = size => {\n    if (size) {\n      setFilter(prevFilter => ({ ...prevFilter,\n        limit: size,\n        page: 1\n      }));\n    }\n  };\n\n  const handleSearch = event => {\n    let value = event.target.value;\n    let obj = { ...filter,\n      page: 1,\n      search: {\n        keyword: value,\n        keys: ['name', 'code']\n      }\n    };\n    setFilter(obj);\n  };\n\n  const handleActiveDeactive = record => {\n    let tempData = data.map(rec => {\n      if (rec._id === record._id) {\n        return { ...rec,\n          isActive: !rec.isActive\n        };\n      } else {\n        return rec;\n      }\n    });\n    setData(tempData);\n  };\n\n  const getColumns = () => {\n    const columns = [{\n      title: 'Sr.No',\n      keyword: 'index',\n      dataIndex: 'index',\n      render: (text, record, index) => (filter.page - 1) * filter.limit + (index + 1)\n    }, {\n      title: 'Name.',\n      dataIndex: 'name',\n      render: (text, record) => /*#__PURE__*/React.createElement(React.Fragment, null, text ? text : '')\n    }, {\n      title: 'Code',\n      dataIndex: 'code',\n      render: text => /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 27\n        }\n      }, text ? text : '')\n    }, {\n      title: 'Source Medium',\n      dataIndex: 'masterForMedium',\n      render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }, text ? Object.keys(MASTER_MEDIUM).map(x => MASTER_MEDIUM[x] === text ? `${x}` : '') : '')\n    }, {\n      title: 'Active',\n      dataIndex: 'isActive',\n      render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          textTransform: 'capitalize'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ActiveDeactive, {\n        isActive: record.isActive,\n        status: record.isActive,\n        documentId: record._id,\n        API: masterUpdate,\n        record: record,\n        model: \"master\",\n        fieldName: record.isActive,\n        onActiveDeactive: record => {\n          handleActiveDeactive(record);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      })),\n      filters: [{\n        text: 'Active',\n        value: true\n      }, {\n        text: 'De-active',\n        value: false\n      }],\n      onFilter: (value, record) => record.isActive === value\n    }, {\n      title: 'Submaster',\n      dataIndex: 'submaster',\n      width: '120px',\n      showRefresh: !isAdmin,\n      render: (text, record) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => {\n          props.history.push({\n            pathname: `/sub-master/${record._id}`\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }\n      }, \" View\")))\n    }, {\n      title: 'Action',\n      width: '120px',\n      showRefresh: true,\n      render: (text, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => {\n          handleEditModalOpen(record);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Edit, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, \"Edit\")), /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => {\n          handleDeletePopupOpen(record);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Cancel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }\n      }, \"Delete\"))))\n    }];\n\n    if (!isAdmin) {\n      columns.pop();\n    }\n\n    return columns;\n  };\n\n  const handleUpsertModalOpen = () => {\n    setUpsertModal(true);\n    resetFields();\n  };\n\n  const handleUpsertModalClose = () => {\n    setUpsertModal(false);\n  };\n\n  const handleSubmit = value => {\n    if (getSpecificRecord && getSpecificRecord._id) {\n      setBtnLoading(true);\n      let {\n        url,\n        method,\n        baseURL\n      } = masterUpdate;\n      url = `${url}/${getSpecificRecord._id}`;\n      axios({\n        url,\n        method,\n        data: value,\n        baseURL\n      }).then(data => {\n        if (data.data.code == 'OK') {\n          setEditModal(false);\n          setBtnLoading(false);\n          Toast.success(data.data.message);\n          fetch();\n        } else setBtnLoading(false);\n      }).catch(error => {\n        setBtnLoading(false);\n        Toast.error(error);\n      });\n    } else {\n      setBtnLoading(true);\n      let {\n        url,\n        method,\n        baseURL\n      } = masterUpsert;\n      axios({\n        url,\n        method,\n        data: value,\n        baseURL\n      }).then(data => {\n        if (data.data.code == 'OK') {\n          setUpsertModal(false);\n          setBtnLoading(false);\n          Toast.success(data.data.message);\n          fetch();\n        } else setBtnLoading(false);\n      }).catch(error => {\n        setBtnLoading(false);\n        Toast.error(error);\n      });\n    }\n  };\n\n  const handleEditModalOpen = data => {\n    setSpecificRecord(data);\n    setRadioValue(data.masterForMedium);\n    setEditModal(true);\n  };\n\n  const handleEditModalClose = () => {\n    setEditModal(false);\n    setSpecificRecord(null);\n  };\n\n  const handleDeletePopupOpen = data => {\n    setSpecificRecord(data);\n    setDeletePopup(true);\n  };\n\n  const handleDeletePopupClose = () => {\n    setDeletePopup(false);\n    setSpecificRecord(null);\n  };\n\n  const handleDeleteRecord = id => {\n    setDeleteLoader(true);\n    let {\n      url,\n      method,\n      baseURL\n    } = masterDelete;\n    url = `${url}/${id}`;\n    axios({\n      url,\n      method,\n      baseURL\n    }).then(data => {\n      var _data$data;\n\n      if (((_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.code) == 'OK') {\n        setDeleteLoader(false);\n        setDeletePopup(false);\n        fetch();\n        Toast.success(data.data.message);\n      }\n    }).catch(error => {\n      setDeleteLoader(false);\n      Toast.error(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MasterHeader, {\n    headerWidth: () => {\n      setHeaderWidth(true);\n    },\n    modalTitle: \"Master\",\n    data: data,\n    form: form,\n    length: total,\n    onAdd: handleUpsertModalOpen,\n    onSearch: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    columns: getColumns(),\n    datasource: data,\n    loading: loading,\n    onChange: handleTableChange,\n    pagination: {\n      current: filter.page,\n      pageSize: filter.limit,\n      total: total,\n      showSizeChanger: true,\n      onShowSizeChange: onShowSizeChange\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }))), upsertModal && /*#__PURE__*/React.createElement(MasterUpsertForm, {\n    visible: upsertModal,\n    authUser: authUser,\n    title: \"Add Master\",\n    okText: \"Add\",\n    phamracyLoader: pharmacyLoading,\n    loading: btnLoading,\n    cancelText: \"Cancel\",\n    onOk: handleSubmit,\n    onCancel: handleUpsertModalClose,\n    onClose: handleUpsertModalClose,\n    maskClosable: true,\n    pharmacy: pharmacy,\n    home: authUser && authUser.homeList,\n    onHomePharmacy: handleHomePharmacy,\n    radioValue: radioValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }\n  }), deletePopup && /*#__PURE__*/React.createElement(ConfirmPopup, {\n    value: getSpecificRecord,\n    visible: deletePopup,\n    title: `Delete Note -  ${getSpecificRecord.name}`,\n    description: \"Are you want to delete this record\",\n    onOk: () => {\n      handleDeleteRecord(getSpecificRecord._id);\n    },\n    okText: \"Yes\",\n    cancelText: \"Cancel\",\n    loading: deleteLoader,\n    onClose: handleDeletePopupClose,\n    onCancel: handleDeletePopupClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }\n  }), editModal && /*#__PURE__*/React.createElement(MasterUpsertForm, {\n    value: getSpecificRecord,\n    form: form,\n    authUser: authUser,\n    loading: btnLoading,\n    phamracyLoader: pharmacyLoading,\n    visible: editModal,\n    title: \"Edit Master\",\n    okText: \"Update\",\n    cancelText: \"Cancel\",\n    onCancel: handleEditModalClose,\n    onClose: handleEditModalClose,\n    maskClosable: true,\n    onOk: handleSubmit,\n    pharmacy: pharmacy,\n    home: authUser && authUser.homeList,\n    onHomePharmacy: handleHomePharmacy,\n    radioValue: radioValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = props => {\n  return props;\n};\n\nexport default connect(mapStateToProps)(createForm()(withRouter(Master)));","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Master/index.js"],"names":["React","useState","useEffect","withRouter","View","MasterHeader","MasterUpsertForm","Toast","masterUpsert","axios","connect","createForm","Edit","Cancel","masterPaginate","masterUpdate","masterDelete","pharmacyPaginate","ActiveDeactive","Table","ConfirmPopup","MASTER_MEDIUM","USER_TYPE","_","require","Master","props","form","auth","authUser","resetFields","loading","setLoading","btnLoading","setBtnLoading","deleteLoader","setDeleteLoader","headerWidth","setHeaderWidth","radioValue","setRadioValue","data","setData","total","setTotal","pharmacy","setPharmacy","pharmacyLoading","setPharmacyLoading","upsertModal","setUpsertModal","deletePopup","setDeletePopup","editModal","setEditModal","getSpecificRecord","setSpecificRecord","isAdmin","type","ADMIN","SUPER","GENERAL","isHomeAdmin","HOME","isPharmacyAdmin","PHARMACY","filterBy","masterForMedium","undefined","filter","setFilter","page","limit","fields","populate","homeId","pharmacyId","sortBy","createdAt","find","parentId","hasOwnProperty","search","delayDebounceFn","setTimeout","fetch","clearTimeout","handleHomePharmacy","e","parseInt","target","value","modifiedList","list","map","current","index","query","then","code","updatedList","count","catch","err","handleTableChange","pagination","tfilter","sorter","tempFilter","pageSize","Object","keys","length","isActive","onShowSizeChange","size","prevFilter","handleSearch","event","obj","keyword","handleActiveDeactive","record","tempData","rec","_id","getColumns","columns","title","dataIndex","render","text","x","textTransform","filters","onFilter","width","showRefresh","history","push","pathname","handleEditModalOpen","handleDeletePopupOpen","pop","handleUpsertModalOpen","handleUpsertModalClose","handleSubmit","url","method","baseURL","success","message","error","handleEditModalClose","handleDeletePopupClose","handleDeleteRecord","id","showSizeChanger","homeList","name","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { View } from '../../assets/images/pmr/index';\nimport MasterHeader from '../../containers/Master/components/MasterHeader';\nimport MasterUpsertForm from './components/MasterUpsertForm';\nimport { Toast } from '../../../src/components/common/Toast';\nimport { masterUpsert } from '../../../src/services/api/routes/master';\nimport axios from '../../../src/services/api/config';\nimport { connect } from 'react-redux';\nimport { createForm } from 'rc-form';\nimport { Edit, Cancel } from '../../../src/assets/images/resident-detail/index';\nimport {\n  masterPaginate,\n  masterUpdate,\n  masterDelete,\n} from '../../../src/services/api/routes/master';\nimport { pharmacyPaginate } from '../../../src/services/api/routes/customer';\nimport ActiveDeactive from '../../../src/components/common/ActiveDeactive';\nimport Table from '../../../src/components/common/Table/index';\nimport ConfirmPopup from '../../../src/components/common/ConfirmPopup';\nimport { MASTER_MEDIUM } from '../../constants/MasterMedium';\nimport { USER_TYPE } from '../../constants/User';\nconst _ = require('lodash');\n\nconst Master = (props) => {\n  const { form, auth } = props;\n  const { authUser } = auth;\n  const { resetFields } = form;\n  const [loading, setLoading] = useState(false);\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [deleteLoader, setDeleteLoader] = useState(false);\n  const [headerWidth, setHeaderWidth] = useState(false);\n  const [radioValue, setRadioValue] = useState(1);\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [pharmacy, setPharmacy] = useState({});\n  const [pharmacyLoading, setPharmacyLoading] = useState(true);\n  const [upsertModal, setUpsertModal] = useState(false);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n  const [getSpecificRecord, setSpecificRecord] = useState('');\n  const isAdmin = authUser?.type === USER_TYPE.ADMIN.SUPER || authUser?.type === USER_TYPE.ADMIN.GENERAL\n  const isHomeAdmin = authUser && authUser.type === USER_TYPE.HOME.ADMIN;\n  const isPharmacyAdmin =\n    authUser && authUser.type === USER_TYPE.PHARMACY.ADMIN;\n  let filterBy = {\n    // homeId: authUser && isHomeAdmin ? authUser.homeId._id : undefined,\n    // pharmacyId: authUser && isPharmacyAdmin ? authUser.homeId._id : undefined,\n    masterForMedium: isHomeAdmin ? MASTER_MEDIUM.HOME : isPharmacyAdmin ? MASTER_MEDIUM.PHARMACY : undefined\n  };\n  const [filter, setFilter] = useState({\n    page: 1,\n    limit: 10,\n    fields: [],\n    populate: [{ homeId: null }, { pharmacyId: null }],\n    sortBy: { createdAt: 'DESC' },\n    find: { parentId: null, ...filterBy },\n  });\n\n  useEffect(() => {\n    if (filter.hasOwnProperty('search') && filter.search['keyword']) {\n      const delayDebounceFn = setTimeout(() => {\n        fetch();\n      }, 600);\n      return () => clearTimeout(delayDebounceFn);\n    } else fetch();\n  }, [filter]);\n\n  const handleHomePharmacy = (e) => {\n    setRadioValue(parseInt(e.target.value));\n  };\n\n  const modifiedList = (list) => {\n    let modifiedList = list.map((current, index) => {\n      return current;\n    });\n    return modifiedList;\n  };\n\n  const fetch = () => {\n    setLoading(true);\n    axios({ ...masterPaginate, data: { query: { ...filter } } })\n      .then(({ data }) => {\n        if (data.code === 'OK') {\n          let updatedList = modifiedList(data.data.data);\n          setData(updatedList);\n          setTotal(data.data.count);\n          setLoading(false);\n        } else {\n          setLoading(false);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    if (!pagination) return;\n    let tempFilter = filter;\n    tempFilter = {\n      ...tempFilter,\n      page: pagination.current,\n      limit: pagination.pageSize,\n    };\n    if (tfilter && Object.keys(tfilter).length) {\n      if (tfilter.isActive && tfilter.isActive.length) {\n        tempFilter.find.isActive = tfilter.isActive;\n      } else if (tempFilter.find.isActive) {\n        delete tempFilter.find['isActive'];\n      }\n      tempFilter.page = pagination.current;\n    } else {\n      // tempFilter.filter = {\n      //     type: tempFilter.filter.type\n      // }\n    }\n    setFilter(tempFilter);\n  };\n\n  const onShowSizeChange = (size) => {\n    if (size) {\n      setFilter((prevFilter) => ({ ...prevFilter, limit: size , page: 1}));\n    }\n  };\n\n  const handleSearch = (event) => {\n    let value = event.target.value;\n    let obj = {\n      ...filter,\n      page: 1,\n      search: {\n        keyword: value,\n        keys: ['name', 'code'],\n      },\n    };\n    setFilter(obj);\n  };\n\n  const handleActiveDeactive = (record) => {\n    let tempData = data.map((rec) => {\n      if (rec._id === record._id) {\n        return { ...rec, isActive: !rec.isActive };\n      } else {\n        return rec;\n      }\n    });\n    setData(tempData);\n  };\n\n  const getColumns = () => {\n    const columns = [\n      {\n        title: 'Sr.No',\n        keyword: 'index',\n        dataIndex: 'index',\n        render: (text, record, index) =>\n          (filter.page - 1) * filter.limit + (index + 1),\n      },\n      {\n        title: 'Name.',\n        dataIndex: 'name',\n        render: (text, record) => <>{text ? text : ''}</>,\n      },\n      {\n        title: 'Code',\n        dataIndex: 'code',\n        render: (text) => <span>{text ? text : ''}</span>,\n      },\n      {\n        title: 'Source Medium',\n        dataIndex: 'masterForMedium',\n        render: (text, record) => (\n          <span>\n            {text\n              ? Object.keys(MASTER_MEDIUM).map((x) =>\n                MASTER_MEDIUM[x] === text ? `${x}` : ''\n              )\n              : ''}\n          </span>\n        ),\n      },\n      {\n        title: 'Active',\n        dataIndex: 'isActive',\n        render: (text, record) => (\n          <span style={{ textTransform: 'capitalize' }}>\n            <ActiveDeactive\n              isActive={record.isActive}\n              status={record.isActive}\n              documentId={record._id}\n              API={masterUpdate}\n              record={record}\n              model='master'\n              fieldName={record.isActive}\n              onActiveDeactive={(record) => {\n                handleActiveDeactive(record);\n              }}\n            />\n          </span>\n        ),\n        filters: [\n          { text: 'Active', value: true },\n          { text: 'De-active', value: false },\n        ],\n        onFilter: (value, record) => record.isActive === value,\n      },\n      {\n        title: 'Submaster',\n        dataIndex: 'submaster',\n        width: '120px',\n        showRefresh: !isAdmin,\n        render: (text, record) => (\n          <div className='actions'>\n            <a\n              onClick={() => {\n                props.history.push({ pathname: `/sub-master/${record._id}` });\n              }}\n            >\n              <View />\n              <p> View</p>\n            </a>\n          </div>\n        ),\n      },\n      {\n        title: 'Action',\n        width: '120px',\n        showRefresh: true,\n        render: (text, record) => (\n          <>\n            <div className='actions'>\n              <a\n                onClick={() => {\n                  handleEditModalOpen(record);\n                }}\n              >\n                <Edit />\n                <p>Edit</p>\n              </a>\n              <a\n                onClick={() => {\n                  handleDeletePopupOpen(record);\n                }}\n              >\n                <Cancel />\n                <p>Delete</p>\n              </a>\n            </div>\n          </>\n        ),\n      },\n    ]\n    if (!isAdmin) {\n      columns.pop()\n    }\n    return columns;\n  }\n\n  const handleUpsertModalOpen = () => {\n    setUpsertModal(true);\n    resetFields();\n  };\n\n  const handleUpsertModalClose = () => {\n    setUpsertModal(false);\n  };\n\n  const handleSubmit = (value) => {\n    if (getSpecificRecord && getSpecificRecord._id) {\n      setBtnLoading(true);\n      let { url, method, baseURL } = masterUpdate;\n      url = `${url}/${getSpecificRecord._id}`;\n      axios({ url, method, data: value, baseURL })\n        .then((data) => {\n          if (data.data.code == 'OK') {\n            setEditModal(false);\n            setBtnLoading(false);\n            Toast.success(data.data.message);\n            fetch();\n          } else setBtnLoading(false);\n        })\n        .catch((error) => {\n          setBtnLoading(false);\n          Toast.error(error);\n        });\n    } else {\n      setBtnLoading(true);\n      let { url, method, baseURL } = masterUpsert;\n      axios({ url, method, data: value, baseURL })\n        .then((data) => {\n          if (data.data.code == 'OK') {\n            setUpsertModal(false);\n            setBtnLoading(false);\n            Toast.success(data.data.message);\n            fetch();\n          } else setBtnLoading(false);\n        })\n        .catch((error) => {\n          setBtnLoading(false);\n          Toast.error(error);\n        });\n    }\n  };\n\n  const handleEditModalOpen = (data) => {\n    setSpecificRecord(data);\n    setRadioValue(data.masterForMedium);\n    setEditModal(true);\n  };\n\n  const handleEditModalClose = () => {\n    setEditModal(false);\n    setSpecificRecord(null);\n  };\n\n  const handleDeletePopupOpen = (data) => {\n    setSpecificRecord(data);\n    setDeletePopup(true);\n  };\n\n  const handleDeletePopupClose = () => {\n    setDeletePopup(false);\n    setSpecificRecord(null);\n  };\n\n  const handleDeleteRecord = (id) => {\n    setDeleteLoader(true);\n    let { url, method, baseURL } = masterDelete;\n    url = `${url}/${id}`;\n    axios({ url, method, baseURL })\n      .then((data) => {\n        if (data.data?.code == 'OK') {\n          setDeleteLoader(false);\n          setDeletePopup(false);\n          fetch();\n          Toast.success(data.data.message);\n        }\n      })\n      .catch((error) => {\n        setDeleteLoader(false);\n        Toast.error(error);\n      });\n  };\n\n\n\n  return (\n    <>\n      <div className='pmr_wrap'>\n        <div className='container'>\n          <MasterHeader\n            headerWidth={() => {\n              setHeaderWidth(true);\n            }}\n            modalTitle='Master'\n            data={data}\n            form={form}\n            length={total}\n            onAdd={handleUpsertModalOpen}\n            onSearch={handleSearch}\n          />\n          <Table\n            columns={getColumns()}\n            datasource={data}\n            loading={loading}\n            onChange={handleTableChange}\n            pagination={{\n              current: filter.page,\n              pageSize: filter.limit,\n              total: total,\n              showSizeChanger: true,\n              onShowSizeChange: onShowSizeChange,\n            }}\n          />\n        </div>\n      </div>\n      {upsertModal && (\n        <MasterUpsertForm\n          visible={upsertModal}\n          authUser={authUser}\n          title='Add Master'\n          okText='Add'\n          phamracyLoader={pharmacyLoading}\n          loading={btnLoading}\n          cancelText='Cancel'\n          onOk={handleSubmit}\n          onCancel={handleUpsertModalClose}\n          onClose={handleUpsertModalClose}\n          maskClosable={true}\n          pharmacy={pharmacy}\n          home={authUser && authUser.homeList}\n          onHomePharmacy={handleHomePharmacy}\n          radioValue={radioValue}\n        />\n      )}\n      {deletePopup && (\n        <ConfirmPopup\n          value={getSpecificRecord}\n          visible={deletePopup}\n          title={`Delete Note -  ${getSpecificRecord.name}`}\n          description='Are you want to delete this record'\n          onOk={() => {\n            handleDeleteRecord(getSpecificRecord._id);\n          }}\n          okText='Yes'\n          cancelText='Cancel'\n          loading={deleteLoader}\n          onClose={handleDeletePopupClose}\n          onCancel={handleDeletePopupClose}\n        />\n      )}\n      {editModal && (\n        <MasterUpsertForm\n          value={getSpecificRecord}\n          form={form}\n          authUser={authUser}\n          loading={btnLoading}\n          phamracyLoader={pharmacyLoading}\n          visible={editModal}\n          title='Edit Master'\n          okText='Update'\n          cancelText='Cancel'\n          onCancel={handleEditModalClose}\n          onClose={handleEditModalClose}\n          maskClosable={true}\n          onOk={handleSubmit}\n          pharmacy={pharmacy}\n          home={authUser && authUser.homeList}\n          onHomePharmacy={handleHomePharmacy}\n          radioValue={radioValue}\n        />\n      )}\n    </>\n  );\n};\nconst mapStateToProps = (props) => {\n  return props;\n};\nexport default connect(mapStateToProps)(createForm()(withRouter(Master)));\n"]},"metadata":{},"sourceType":"module"}