{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/EProcessing/index.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { Filters, DetailsLess, VerbalOrder, Todo, Edit, Cancel, Clarification, Archive } from '../../../../assets/images/resident-detail/index';\nimport { Refresh, View, Notes, Reminder, MoreDots, Audit } from '../../../../assets/images/pmr/index';\nimport { FirstPage, LastPage, Next, Prev } from '../../../../assets/images/index';\nimport AddNotesPopup from '../../../../components/common/Popup/addnotes-popup';\nimport AuditPopup from '../../../../components/common/Popup/audit-popup';\nimport ViewNotesPopup from '../../../../components/common/Popup/viewnotes-popup';\nimport ClarificationPopup from '../popup/Clarification';\nimport { DatePicker, DatePickerInput } from 'rc-datepicker';\nimport { TabPanel } from 'react-tabs';\nimport { TAB_KEYS } from '../../../../components/common/Tab/data';\nimport CommonTab from '../../../../components/common/Tab';\nimport TogglePane from '../togglePane';\nimport { Spin, Toast, LightBox } from '../../../../components/common';\nimport Table from '../../../../components/common/Table/index';\nimport { Column_classNames } from '../../../../constants/Columns';\nimport { X_RAY_TODO_TYPES, TODO_CATEGORY, SUB_CATEGORY } from '../../../../constants/todo';\nimport Header from './Header';\nimport { capitalizeStr, isDrOrNp, canPerformAction, getUserNameWithDesignation } from '../../../../util/common';\nimport { displayDateTime } from '../../../../util/moment';\nimport { STATUS, ORDER_TYPE, STATUS_CLASSNAME, ORDER_TYPE_CLASSNAME, RX_TYPE, MODIFY_ACTION, TYPE } from '../../../../constants/prescription';\nimport { MODULE, ACTIONS } from '../../../../constants/subscription';\nimport axios, { getRxImage } from '../../../../services/api/services/common';\nimport { getAllRxOrders } from '../../../../services/api/routes/prescription';\nimport { setUserData } from '../../../../appRedux/actions/Auth';\nimport { actionContext } from '../UserResidentDetail';\nimport { updateOpenResident } from '../../../../appRedux/actions/Resident';\nimport ArchivePopup from '../../../../components/common/Popup/archive-popup';\nimport CancelRxModal from '../../../ResidentDetail/View/OrdersTab/CancelRxModal';\nimport NotesModal from '../../../../components/NotesPopup/List';\nimport ReminderModal from '../../../../components/ReminderPopup/List';\n\nconst _ = require('lodash');\n\nconst EProcessing = props => {\n  const {\n    onFetchData,\n    residentActions,\n    isTabActive,\n    currentResidentId,\n    authUser,\n    onEditRx,\n    editDetail,\n    residentDetail\n  } = props;\n  const [loader, setLoader] = useState(false);\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState(0);\n  const [visibleCancel, setVisibleCancel] = useState(false);\n  const [visibleEdit, setVisibleEdit] = useState(false);\n  const [visibleArchive, setVisibleArchive] = useState(false);\n  const [detail, setDetail] = useState(null);\n  const currentModalData = React.useRef();\n  const [filter, setFilter] = useState({\n    page: 1,\n    limit: 10,\n    populate: [{\n      physicianId: [\"mergeLFName\", \"type\", {\n        \"assignedCustomer\": [\"isActive\", \"homeId\", {\n          \"designationId\": [\"name\", \"code\", \"parentId\"]\n        }] //match: { homeId: '5cd963ea1fd1603a09ae7f9f' }\n\n      }]\n    }, {\n      prescriptionMedication: null\n    }, {\n      thirdPartyPrescriptionType: ['name']\n    }],\n    sortBy: {\n      orderGeneratedAt: 'DESC'\n    },\n    find: {\n      residentId: currentResidentId,\n      type: TYPE.THIRD_PARTY //  rxType: RX_TYPE.THIRD_PARTY\n\n    }\n  });\n  const [notesModal, setNotesModal] = useState(false);\n  const [notesFilterOptions, setNotesFilterOptions] = useState({});\n  const [reminderFilterOptions, setReminderFilterOptions] = useState({});\n  const [reminderModal, setReminderModal] = useState(false);\n  const [visibleImage, setVisibleImage] = useState(false);\n  let statusFilters = [];\n  Object.keys(STATUS).map(k => {\n    return statusFilters.push({\n      text: k,\n      value: STATUS[k]\n    });\n  });\n  const columns = [{\n    title: 'Sr.No',\n    classname: Column_classNames.sr,\n    key: 'index',\n    width: '4%',\n    render: (text, record, index) => (filter.page - 1) * filter.limit + (index + 1)\n  }, // {\n  //   title: 'Rx. No',\n  //   dataIndex: 'orderNumber',\n  //   classname: Column_classNames.ph,\n  //   key: 'orderNumber',\n  //   render: (text, record) => <span>{text}</span>,\n  // },\n  {\n    title: 'Physician',\n    dataIndex: 'physicianId',\n    classname: Column_classNames.ph,\n    key: 'physicianId',\n    render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, text && text.mergeLFName ? getUserNameWithDesignation(text) : '-')\n  }, {\n    title: 'Date & Time',\n    dataIndex: 'orderGeneratedAt',\n    classname: Column_classNames.dt,\n    key: 'orderGeneratedAt',\n    render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 33\n      }\n    }, displayDateTime(text))\n  }, {\n    title: 'Document Type',\n    dataIndex: 'thirdPartyPrescriptionType',\n    classname: Column_classNames.ot,\n    render: (text, record) => /*#__PURE__*/React.createElement(React.Fragment, null, (text === null || text === void 0 ? void 0 : text.name) || '-'),\n    key: 'type'\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    classname: Column_classNames.st,\n    render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, Object.keys(STATUS).map(k => {\n      return STATUS[k] === text ? /*#__PURE__*/React.createElement(\"span\", {\n        className: 'o_status ' + STATUS_CLASSNAME[text],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }\n      }, k) : null;\n    })),\n    filters: statusFilters,\n    onFilter: (value, record) => record.status === value\n  }, {\n    title: 'Actions',\n    showRefresh: true,\n    className: Column_classNames.Actions,\n    render: (text, record) => {\n      var _record$attachments;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }\n      }, (record === null || record === void 0 ? void 0 : (_record$attachments = record.attachments) === null || _record$attachments === void 0 ? void 0 : _record$attachments.length) > 0 ? /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => handleViewImages(true, record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ac_count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      }, \"View\")) : null, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => createNotesModal(record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ac_count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Notes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }\n      }), record.notesCount ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"notes tot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 19\n        }\n      }, record.notesCount) : null), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }\n      }, \"Notes\")), /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => {\n          createReminderModal(record);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ac_count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Reminder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }\n      }), record.reminderCount ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"rem tot read\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 19\n        }\n      }, record.reminderCount) : null), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }\n      }, \"Reminder\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"more\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MoreDots, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"more_wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }\n      }, record.type === TYPE.THIRD_PARTY && record.status !== STATUS.DISCARDED && (isDrOrNp(authUser) || record.addedBy === authUser._id) && record.status !== STATUS.CANCELLED && canPerformAction({\n        moduleId: MODULE.E_PROCESSING,\n        actiontoCheck: ACTIONS.CANCEL.CODE\n      }) ? /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => handleCancelPresc(true, record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Cancel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 23\n        }\n      }, \"Cancel\")) : null, /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Audit, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 19\n        }\n      }, \"Audit\")), /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => handleArchive(true, record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Archive, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 19\n        }\n      }, \"Archive\")), /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Clarification, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 19\n        }\n      }, \"Clarification\")))));\n    }\n  }];\n  useEffect(() => {\n    //fetch data while tab is active,\n    if (isTabActive) {\n      if (filter.hasOwnProperty('search') && filter.search['keyword']) {\n        const delayDebounceFn = setTimeout(() => {\n          fetch();\n        }, 600);\n        return () => clearTimeout(delayDebounceFn);\n      } else fetch();\n    }\n  }, [isTabActive, filter]); // useEffect(() => {\n  //     // empty tab data on set filter\n  //     updateOpenResident({ tabkey: TAB_KEYS.E_PROCESSING, response: null })\n  // }, [filter])\n  // useEffect(() => {\n  //     // once tab data is updated in redux then call fetch as filter is set\n  //     if (isTabActive)\n  //         fetch()\n  // }, [residentDetail])\n\n  const fetch = async () => {\n    setLoader(true);\n\n    try {\n      let res; // if (residentDetail[TAB_KEYS.E_PROCESSING]) {\n      //     res = residentDetail.response\n      // }\n      // else\n\n      res = await axios({ ...getAllRxOrders,\n        data: {\n          query: { ...filter\n          }\n        }\n      });\n\n      if (res) {\n        if (res.code === 'OK') {\n          setData(res.data.list);\n          setCount(res.data.count);\n          onFetchData({\n            tabtitle: 'E-Processing',\n            records: res.data.count,\n            module: MODULE.E_PROCESSING\n          }); // updateOpenResident({ tabkey: TAB_KEYS.E_PROCESSING, response: res })\n        } else Toast.error(res.message);\n      }\n\n      setLoader(false);\n    } catch {\n      setLoader(false);\n    }\n  };\n\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    let tempFilter = { ...filter\n    };\n\n    if (pagination) {\n      tempFilter = { ...tempFilter,\n        page: pagination.current,\n        limit: pagination.pageSize\n      };\n    }\n\n    if (tfilter && Object.keys(tfilter).length) {\n      if (tfilter.status && tfilter.status.length) {\n        tempFilter.find.status = tfilter.status;\n      } else if (tempFilter.find.status) {\n        delete tempFilter.find['status'];\n      }\n\n      tempFilter.page = 1;\n    } else {}\n\n    setFilter(tempFilter);\n  };\n\n  const onShowSizeChange = size => {\n    if (size) {\n      setFilter(prevFilter => ({ ...prevFilter,\n        limit: size,\n        page: 1\n      }));\n    }\n  };\n\n  const onSearch = e => {\n    let value = e.target.value;\n    let obj = { ...filter,\n      page: 1,\n      search: {\n        keyword: value,\n        keys: ['orderNumber']\n      }\n    };\n    setFilter(obj);\n  };\n\n  const onDoctorChange = val => {\n    let newFilter = { ...filter\n    };\n    newFilter = { ...newFilter,\n      page: 1,\n      find: { ...newFilter.find,\n        physicianId: val\n      }\n    };\n    setFilter(newFilter);\n  };\n\n  const handleDateChange = val => {\n    let newFilter = { ...filter\n    };\n    newFilter = { ...newFilter,\n      page: 1,\n      gte: [{\n        orderGeneratedAt: val[0]\n      }],\n      lte: [{\n        orderGeneratedAt: val[1]\n      }]\n    };\n    setFilter(newFilter);\n  };\n\n  const handleSubmasterChange = val => {\n    let newFilter = { ...filter\n    };\n    newFilter = { ...newFilter,\n      page: 1,\n      find: { ...newFilter.find,\n        thirdPartyPrescriptionType: val\n      }\n    };\n    setFilter(newFilter);\n  };\n\n  const handleEditPresc = (visible, record, response) => {\n    if (response) {\n      let req = { ...detail,\n        uniqueId: response.uniqueId\n      };\n      onEditRx(req);\n    }\n\n    setVisibleEdit(visible);\n    setDetail(record);\n  };\n\n  const handleArchive = (visible, record, response) => {\n    if (response) {}\n\n    setVisibleArchive(visible);\n    setDetail(record);\n  };\n\n  const handleCancelPresc = (visible, record, response) => {\n    setVisibleCancel(visible);\n    setDetail(record);\n\n    if (response) {\n      fetch(); // updateOpenResident({ tabkey: TAB_KEYS.ORDERS, response: null })\n    }\n  };\n\n  const visibleNotesModal = (visible, record, str, noteCount) => {\n    setNotesModal(visible);\n    setNotesFilterOptions({});\n\n    if (noteCount != undefined) {\n      setData(oldData => {\n        return oldData.map(d => {\n          if (d._id === currentModalData.current._id) {\n            d['notesCount'] = noteCount;\n            return d;\n          }\n\n          return d;\n        });\n      });\n    }\n\n    if (!visible && str !== \"cancel\") {\n      fetch();\n    }\n  };\n\n  const visibleReminderModal = (visible, record, str, reminderCount) => {\n    setReminderModal(visible);\n    setReminderFilterOptions({});\n\n    if (reminderCount != undefined) {\n      setData(oldData => {\n        return oldData.map(d => {\n          if (d._id === currentModalData.current._id) {\n            d['reminderCount'] = reminderCount;\n            return d;\n          }\n\n          return d;\n        });\n      });\n    }\n\n    if (!visible && str !== \"cancel\") fetch();\n  };\n\n  const createNotesModal = record => {\n    let options = {\n      query: {\n        find: {\n          prescriptionOrderId: record._id,\n          subCategory: SUB_CATEGORY.NOTES.GENERAL,\n          category: TODO_CATEGORY.PRESCRIPTION\n        },\n        populate: [{\n          addedBy: []\n        }]\n      }\n    };\n    currentModalData.current = { ...record\n    };\n    setNotesFilterOptions(options);\n    setNotesModal(true);\n  };\n\n  const createReminderModal = record => {\n    let options = {\n      query: {\n        find: {\n          prescriptionOrderId: record._id,\n          subCategory: SUB_CATEGORY.NOTES.GENERAL,\n          category: TODO_CATEGORY.PRESCRIPTION\n        },\n        populate: [{\n          addedBy: []\n        }]\n      }\n    };\n    currentModalData.current = { ...record\n    };\n    setReminderFilterOptions(options);\n    setReminderModal(true);\n  };\n\n  const handleViewImages = (visible, record) => {\n    if (visible) {\n      // setImgLoader(true)\n      getRxImage([record._id]).then(resp => {\n        if (resp === null || resp === void 0 ? void 0 : resp[0]) record.attachments = resp[0].attachments;\n        record.attachments.map((x, i) => {\n          x.caption = `${record.orderNumber}-${i + 1}`;\n          return x;\n        });\n        setVisibleImage(visible);\n        setDetail(record); // setImgLoader(false)\n      }).catch(err => {// setImgLoader(false)\n      });\n    } else {\n      setVisibleImage(visible);\n      setDetail(record);\n    }\n  };\n\n  const prepareAttachments = () => {\n    var _detail$attachments;\n\n    let imageViewer = [];\n\n    if ((detail === null || detail === void 0 ? void 0 : (_detail$attachments = detail.attachments) === null || _detail$attachments === void 0 ? void 0 : _detail$attachments.length) > 0) {\n      imageViewer = _.map(detail.attachments, function (a) {\n        a.src = a.path;\n        return a;\n      });\n    }\n\n    return {\n      imageViewer\n    };\n  };\n\n  const {\n    imageViewer\n  } = prepareAttachments();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resi_treat_content_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    onDoctorChange: onDoctorChange,\n    onSearch: onSearch,\n    onDateChange: handleDateChange,\n    onSubmasterChange: handleSubmasterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"responsive_scroll_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    datasource: data,\n    pagination: false,\n    pagination: {\n      current: filter.page,\n      pageSize: filter.limit,\n      total: count,\n      showSizeChanger: true,\n      onShowSizeChange: onShowSizeChange\n    },\n    loading: loader,\n    onChange: handleTableChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 9\n    }\n  })), visibleArchive ? /*#__PURE__*/React.createElement(ArchivePopup, {\n    visible: visibleArchive,\n    detail: detail,\n    residentDetail: residentDetail,\n    onCancel: () => handleArchive(false, null),\n    onOK: data => handleArchive(false, null, data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 9\n    }\n  }) : null, visibleCancel ? /*#__PURE__*/React.createElement(CancelRxModal, {\n    visible: visibleCancel,\n    detail: detail,\n    onOk: data => handleCancelPresc(false, null, data),\n    onCancel: () => handleCancelPresc(false, null),\n    rxType: MODULE.E_PROCESSING,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 9\n    }\n  }) : null, notesModal && /*#__PURE__*/React.createElement(NotesModal, {\n    visible: notesModal,\n    filterOptions: notesFilterOptions,\n    onCancel: data => visibleNotesModal(false, null, 'cancel', data),\n    onOk: () => visibleNotesModal(false),\n    isUpsertList: true,\n    modalTitle: `View Note - ${currentModalData.current.orderNumber}`,\n    xRayNumber: currentModalData.current.orderNumber,\n    addData: {\n      residentId: currentModalData.current.residentId,\n      prescriptionOrderId: currentModalData.current._id,\n      category: TODO_CATEGORY.PRESCRIPTION,\n      subCategory: SUB_CATEGORY.NOTES.GENERAL\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 9\n    }\n  }), reminderModal && /*#__PURE__*/React.createElement(ReminderModal, {\n    visible: reminderModal,\n    filterOptions: reminderFilterOptions,\n    onCancel: data => visibleReminderModal(false, null, 'cancel', data),\n    onOk: () => visibleReminderModal(false),\n    isUpsertList: true,\n    modalTitle: `View Reminder - ${currentModalData.current.orderNumber}`,\n    xRayNumber: currentModalData.current.orderNumber,\n    addData: {\n      residentId: currentModalData.current.residentId,\n      prescriptionOrderId: currentModalData.current._id,\n      category: TODO_CATEGORY.PRESCRIPTION,\n      subCategory: SUB_CATEGORY.NOTES.GENERAL\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 9\n    }\n  }), visibleImage && imageViewer.length > 0 ? /*#__PURE__*/React.createElement(LightBox, {\n    visible: visibleImage,\n    images: imageViewer,\n    onCloseRequest: () => handleViewImages(false, null),\n    curImg: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nconst mapStateToProps = ({\n  auth,\n  resident\n}) => {\n  const {\n    authUser\n  } = auth;\n  const {\n    currentResidentId\n  } = resident;\n  return {\n    authUser,\n    currentResidentId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateOpenResident\n})(EProcessing);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/EProcessing/index.js"],"names":["React","useState","useEffect","useContext","connect","Filters","DetailsLess","VerbalOrder","Todo","Edit","Cancel","Clarification","Archive","Refresh","View","Notes","Reminder","MoreDots","Audit","FirstPage","LastPage","Next","Prev","AddNotesPopup","AuditPopup","ViewNotesPopup","ClarificationPopup","DatePicker","DatePickerInput","TabPanel","TAB_KEYS","CommonTab","TogglePane","Spin","Toast","LightBox","Table","Column_classNames","X_RAY_TODO_TYPES","TODO_CATEGORY","SUB_CATEGORY","Header","capitalizeStr","isDrOrNp","canPerformAction","getUserNameWithDesignation","displayDateTime","STATUS","ORDER_TYPE","STATUS_CLASSNAME","ORDER_TYPE_CLASSNAME","RX_TYPE","MODIFY_ACTION","TYPE","MODULE","ACTIONS","axios","getRxImage","getAllRxOrders","setUserData","actionContext","updateOpenResident","ArchivePopup","CancelRxModal","NotesModal","ReminderModal","_","require","EProcessing","props","onFetchData","residentActions","isTabActive","currentResidentId","authUser","onEditRx","editDetail","residentDetail","loader","setLoader","data","setData","count","setCount","visibleCancel","setVisibleCancel","visibleEdit","setVisibleEdit","visibleArchive","setVisibleArchive","detail","setDetail","currentModalData","useRef","filter","setFilter","page","limit","populate","physicianId","prescriptionMedication","thirdPartyPrescriptionType","sortBy","orderGeneratedAt","find","residentId","type","THIRD_PARTY","notesModal","setNotesModal","notesFilterOptions","setNotesFilterOptions","reminderFilterOptions","setReminderFilterOptions","reminderModal","setReminderModal","visibleImage","setVisibleImage","statusFilters","Object","keys","map","k","push","text","value","columns","title","classname","sr","key","width","render","record","index","dataIndex","ph","mergeLFName","dt","ot","name","st","filters","onFilter","status","showRefresh","className","Actions","attachments","length","handleViewImages","createNotesModal","notesCount","createReminderModal","reminderCount","DISCARDED","addedBy","_id","CANCELLED","moduleId","E_PROCESSING","actiontoCheck","CANCEL","CODE","handleCancelPresc","handleArchive","hasOwnProperty","search","delayDebounceFn","setTimeout","fetch","clearTimeout","res","query","code","list","tabtitle","records","module","error","message","handleTableChange","pagination","tfilter","sorter","tempFilter","current","pageSize","onShowSizeChange","size","prevFilter","onSearch","e","target","obj","keyword","onDoctorChange","val","newFilter","handleDateChange","gte","lte","handleSubmasterChange","handleEditPresc","visible","response","req","uniqueId","visibleNotesModal","str","noteCount","undefined","oldData","d","visibleReminderModal","options","prescriptionOrderId","subCategory","NOTES","GENERAL","category","PRESCRIPTION","then","resp","x","i","caption","orderNumber","catch","err","prepareAttachments","imageViewer","a","src","path","total","showSizeChanger","mapStateToProps","auth","resident"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Filters,\n  DetailsLess,\n  VerbalOrder,\n  Todo,\n  Edit,\n  Cancel,\n  Clarification,\n  Archive,\n} from '../../../../assets/images/resident-detail/index';\nimport {\n  Refresh,\n  View,\n  Notes,\n  Reminder,\n  MoreDots,\n  Audit,\n} from '../../../../assets/images/pmr/index';\nimport {\n  FirstPage,\n  LastPage,\n  Next,\n  Prev,\n} from '../../../../assets/images/index';\n\nimport AddNotesPopup from '../../../../components/common/Popup/addnotes-popup';\nimport AuditPopup from '../../../../components/common/Popup/audit-popup';\nimport ViewNotesPopup from '../../../../components/common/Popup/viewnotes-popup';\nimport ClarificationPopup from '../popup/Clarification';\nimport { DatePicker, DatePickerInput } from 'rc-datepicker';\nimport { TabPanel } from 'react-tabs';\nimport { TAB_KEYS } from '../../../../components/common/Tab/data';\nimport CommonTab from '../../../../components/common/Tab';\nimport TogglePane from '../togglePane';\nimport { Spin, Toast, LightBox } from '../../../../components/common';\nimport Table from '../../../../components/common/Table/index';\nimport { Column_classNames } from '../../../../constants/Columns';\nimport {\n  X_RAY_TODO_TYPES,\n  TODO_CATEGORY,\n  SUB_CATEGORY,\n} from '../../../../constants/todo';\nimport Header from './Header';\nimport {\n  capitalizeStr,\n  isDrOrNp,\n  canPerformAction,\n  getUserNameWithDesignation,\n} from '../../../../util/common';\nimport { displayDateTime } from '../../../../util/moment';\nimport {\n  STATUS,\n  ORDER_TYPE,\n  STATUS_CLASSNAME,\n  ORDER_TYPE_CLASSNAME,\n  RX_TYPE,\n  MODIFY_ACTION,\n  TYPE,\n} from '../../../../constants/prescription';\nimport { MODULE, ACTIONS } from '../../../../constants/subscription';\nimport axios, { getRxImage } from '../../../../services/api/services/common';\nimport { getAllRxOrders } from '../../../../services/api/routes/prescription';\nimport { setUserData } from '../../../../appRedux/actions/Auth';\nimport { actionContext } from '../UserResidentDetail';\nimport { updateOpenResident } from '../../../../appRedux/actions/Resident';\nimport ArchivePopup from '../../../../components/common/Popup/archive-popup';\nimport CancelRxModal from '../../../ResidentDetail/View/OrdersTab/CancelRxModal';\nimport NotesModal from '../../../../components/NotesPopup/List';\nimport ReminderModal from '../../../../components/ReminderPopup/List';\n\nconst _ = require('lodash');\n\nconst EProcessing = (props) => {\n  const {\n    onFetchData,\n    residentActions,\n    isTabActive,\n    currentResidentId,\n    authUser,\n    onEditRx,\n    editDetail,\n    residentDetail,\n  } = props;\n  const [loader, setLoader] = useState(false);\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState(0);\n  const [visibleCancel, setVisibleCancel] = useState(false);\n  const [visibleEdit, setVisibleEdit] = useState(false);\n  const [visibleArchive, setVisibleArchive] = useState(false);\n  const [detail, setDetail] = useState(null);\n  const currentModalData = React.useRef();\n  const [filter, setFilter] = useState({\n    page: 1,\n    limit: 10,\n    populate: [\n      {\n        physicianId: [\n          \"mergeLFName\",\n          \"type\",\n          {\n            \"assignedCustomer\": [\n              \"isActive\",\n              \"homeId\",\n              {\n                \"designationId\": [\n                  \"name\",\n                  \"code\",\n                  \"parentId\"\n                ]\n              }\n            ],\n            //match: { homeId: '5cd963ea1fd1603a09ae7f9f' }\n          }\n        ]\n      },\n      { prescriptionMedication: null },\n      { thirdPartyPrescriptionType: ['name'] },\n    ],\n    sortBy: { orderGeneratedAt: 'DESC' },\n    find: {\n      residentId: currentResidentId,\n      type: TYPE.THIRD_PARTY,\n      //  rxType: RX_TYPE.THIRD_PARTY\n    },\n  });\n\n  const [notesModal, setNotesModal] = useState(false);\n  const [notesFilterOptions, setNotesFilterOptions] = useState({});\n  const [reminderFilterOptions, setReminderFilterOptions] = useState({});\n  const [reminderModal, setReminderModal] = useState(false);\n  const [visibleImage, setVisibleImage] = useState(false);\n\n  let statusFilters = [];\n  Object.keys(STATUS).map((k) => {\n    return statusFilters.push({ text: k, value: STATUS[k] });\n  });\n\n  const columns = [\n    {\n      title: 'Sr.No',\n      classname: Column_classNames.sr,\n      key: 'index',\n      width: '4%',\n      render: (text, record, index) =>\n        (filter.page - 1) * filter.limit + (index + 1),\n    },\n    // {\n    //   title: 'Rx. No',\n    //   dataIndex: 'orderNumber',\n    //   classname: Column_classNames.ph,\n    //   key: 'orderNumber',\n    //   render: (text, record) => <span>{text}</span>,\n    // },\n    {\n      title: 'Physician',\n      dataIndex: 'physicianId',\n      classname: Column_classNames.ph,\n      key: 'physicianId',\n      render: (text, record) => (\n        <span>\n          {text && text.mergeLFName ? getUserNameWithDesignation(text) : '-'}\n        </span>\n      ),\n    },\n    {\n      title: 'Date & Time',\n      dataIndex: 'orderGeneratedAt',\n      classname: Column_classNames.dt,\n      key: 'orderGeneratedAt',\n      render: (text, record) => <span>{displayDateTime(text)}</span>,\n    },\n    {\n      title: 'Document Type',\n      dataIndex: 'thirdPartyPrescriptionType',\n      classname: Column_classNames.ot,\n      render: (text, record) => <>{text?.name || '-'}</>,\n      key: 'type',\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      classname: Column_classNames.st,\n      render: (text, record) => (\n        <span>\n          {Object.keys(STATUS).map((k) => {\n            return STATUS[k] === text ? (\n              <span className={'o_status ' + STATUS_CLASSNAME[text]}>{k}</span>\n            ) : null;\n          })}\n        </span>\n      ),\n      filters: statusFilters,\n      onFilter: (value, record) => record.status === value,\n    },\n    {\n      title: 'Actions',\n      showRefresh: true,\n      className: Column_classNames.Actions,\n      render: (text, record) => {\n        return (\n          <div className='actions'>\n            {record?.attachments?.length > 0 ? (\n              <a onClick={() => handleViewImages(true, record)}>\n                <div className='ac_count'>\n                  <View />\n                </div>\n                <p>View</p>\n              </a>\n            ) : null}\n\n            <a onClick={() => createNotesModal(record)}>\n              <div className='ac_count'>\n                <Notes />\n                {record.notesCount ? (\n                  <span className='notes tot'>{record.notesCount}</span>\n                ) : null}\n              </div>\n              <p>Notes</p>\n            </a>\n            <a\n              onClick={() => {\n                createReminderModal(record);\n              }}\n            >\n              <div className='ac_count'>\n                <Reminder />\n                {record.reminderCount ? (\n                  <span className='rem tot read'>{record.reminderCount}</span>\n                ) : null}\n              </div>\n              <p>Reminder</p>\n            </a>\n            <div className='more'>\n              <MoreDots />\n              <div className='more_wrap'>\n                {record.type === TYPE.THIRD_PARTY &&\n                  record.status !== STATUS.DISCARDED &&\n                  (isDrOrNp(authUser) || record.addedBy === authUser._id) &&\n                  record.status !== STATUS.CANCELLED &&\n                  canPerformAction({\n                    moduleId: MODULE.E_PROCESSING,\n                    actiontoCheck: ACTIONS.CANCEL.CODE,\n                  }) ? (\n                    <a onClick={() => handleCancelPresc(true, record)}>\n                      <Cancel />\n                      <span>Cancel</span>\n                    </a>\n                  ) : null}\n                <a>\n                  <Audit />\n                  <span>Audit</span>\n                </a>\n                <a onClick={() => handleArchive(true, record)}>\n                  <Archive />\n                  <span>Archive</span>\n                </a>\n                <a>\n                  <Clarification />\n                  <span>Clarification</span>\n                </a>\n              </div>\n            </div>\n          </div>\n        );\n      },\n    },\n  ];\n\n  useEffect(() => {\n    //fetch data while tab is active,\n    if (isTabActive) {\n      if (filter.hasOwnProperty('search') && filter.search['keyword']) {\n        const delayDebounceFn = setTimeout(() => {\n          fetch();\n        }, 600);\n        return () => clearTimeout(delayDebounceFn);\n      } else fetch();\n    }\n  }, [isTabActive, filter]);\n\n  // useEffect(() => {\n  //     // empty tab data on set filter\n  //     updateOpenResident({ tabkey: TAB_KEYS.E_PROCESSING, response: null })\n  // }, [filter])\n\n  // useEffect(() => {\n  //     // once tab data is updated in redux then call fetch as filter is set\n  //     if (isTabActive)\n  //         fetch()\n  // }, [residentDetail])\n\n  const fetch = async () => {\n    setLoader(true);\n    try {\n      let res;\n      // if (residentDetail[TAB_KEYS.E_PROCESSING]) {\n      //     res = residentDetail.response\n      // }\n      // else\n      res = await axios({ ...getAllRxOrders, data: { query: { ...filter } } });\n      if (res) {\n        if (res.code === 'OK') {\n          setData(res.data.list);\n          setCount(res.data.count);\n          onFetchData({\n            tabtitle: 'E-Processing',\n            records: res.data.count,\n            module: MODULE.E_PROCESSING,\n          });\n          // updateOpenResident({ tabkey: TAB_KEYS.E_PROCESSING, response: res })\n        } else Toast.error(res.message);\n      }\n      setLoader(false);\n    } catch {\n      setLoader(false);\n    }\n  };\n\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    let tempFilter = { ...filter };\n    if (pagination) {\n      tempFilter = {\n        ...tempFilter,\n        page: pagination.current,\n        limit: pagination.pageSize,\n      };\n    }\n    if (tfilter && Object.keys(tfilter).length) {\n      if (tfilter.status && tfilter.status.length) {\n        tempFilter.find.status = tfilter.status;\n      } else if (tempFilter.find.status) {\n        delete tempFilter.find['status'];\n      }\n      tempFilter.page = 1;\n    } else {\n    }\n    setFilter(tempFilter);\n  };\n\n  const onShowSizeChange = (size) => {\n    if (size) {\n      setFilter((prevFilter) => ({ ...prevFilter, limit: size, page: 1 }));\n    }\n  };\n\n  const onSearch = (e) => {\n    let value = e.target.value;\n    let obj = {\n      ...filter,\n      page: 1,\n      search: {\n        keyword: value,\n        keys: ['orderNumber'],\n      },\n    };\n    setFilter(obj);\n  };\n\n  const onDoctorChange = (val) => {\n    let newFilter = { ...filter };\n    newFilter = {\n      ...newFilter,\n      page: 1,\n      find: {\n        ...newFilter.find,\n        physicianId: val,\n      },\n    };\n    setFilter(newFilter);\n  };\n\n  const handleDateChange = (val) => {\n    let newFilter = { ...filter };\n    newFilter = {\n      ...newFilter,\n      page: 1,\n      gte: [{ orderGeneratedAt: val[0] }],\n      lte: [{ orderGeneratedAt: val[1] }],\n    };\n    setFilter(newFilter);\n  };\n\n  const handleSubmasterChange = (val) => {\n    let newFilter = { ...filter };\n    newFilter = {\n      ...newFilter,\n      page: 1,\n      find: {\n        ...newFilter.find,\n        thirdPartyPrescriptionType: val,\n      },\n    };\n    setFilter(newFilter);\n  };\n\n  const handleEditPresc = (visible, record, response) => {\n    if (response) {\n      let req = { ...detail, uniqueId: response.uniqueId };\n      onEditRx(req);\n    }\n    setVisibleEdit(visible);\n    setDetail(record);\n  };\n\n  const handleArchive = (visible, record, response) => {\n    if (response) {\n    }\n    setVisibleArchive(visible);\n    setDetail(record);\n  };\n\n  const handleCancelPresc = (visible, record, response) => {\n    setVisibleCancel(visible);\n    setDetail(record);\n    if (response) {\n      fetch();\n      // updateOpenResident({ tabkey: TAB_KEYS.ORDERS, response: null })\n    }\n  };\n\n  const visibleNotesModal = (visible, record, str, noteCount) => {\n    setNotesModal(visible);\n    setNotesFilterOptions({});\n    if (noteCount != undefined) {\n      setData(oldData => {\n        return oldData.map(d => {\n          if (d._id === currentModalData.current._id) {\n            d['notesCount'] = noteCount;\n            return d;\n          }\n          return d;\n        })\n      })\n    }\n    if (!visible && str !== \"cancel\") {\n      fetch();\n    }\n  };\n\n  const visibleReminderModal = (visible, record, str, reminderCount) => {\n    setReminderModal(visible);\n    setReminderFilterOptions({});\n    if (reminderCount != undefined) {\n      setData(oldData => {\n        return oldData.map(d => {\n          if (d._id === currentModalData.current._id) {\n            d['reminderCount'] = reminderCount;\n            return d;\n          }\n          return d;\n        })\n      })\n    }\n    if (!visible && str !== \"cancel\") fetch();\n  };\n\n  const createNotesModal = (record) => {\n    let options = {\n      query: {\n        find: {\n          prescriptionOrderId: record._id,\n          subCategory: SUB_CATEGORY.NOTES.GENERAL,\n          category: TODO_CATEGORY.PRESCRIPTION,\n        },\n        populate: [{ addedBy: [] }],\n      },\n    };\n    currentModalData.current = { ...record };\n    setNotesFilterOptions(options);\n    setNotesModal(true);\n  };\n\n  const createReminderModal = (record) => {\n    let options = {\n      query: {\n        find: {\n          prescriptionOrderId: record._id,\n          subCategory: SUB_CATEGORY.NOTES.GENERAL,\n          category: TODO_CATEGORY.PRESCRIPTION,\n        },\n        populate: [{ addedBy: [] }],\n      },\n    };\n    currentModalData.current = { ...record };\n    setReminderFilterOptions(options);\n    setReminderModal(true);\n  };\n\n  const handleViewImages = (visible, record) => {\n    if (visible) {\n      // setImgLoader(true)\n      getRxImage([record._id]).then(resp => {\n        if (resp?.[0])\n          record.attachments = resp[0].attachments\n        record.attachments.map((x, i) => {\n          x.caption = `${record.orderNumber}-${i + 1}`\n          return x\n        })\n        setVisibleImage(visible);\n        setDetail(record);\n\n        // setImgLoader(false)\n      }).catch(err => {\n        // setImgLoader(false)\n      })\n    } else {\n      setVisibleImage(visible);\n      setDetail(record);\n    }\n  };\n\n  const prepareAttachments = () => {\n    let imageViewer = [];\n    if (detail?.attachments?.length > 0) {\n      imageViewer = _.map(detail.attachments, function (a) {\n        a.src = a.path;\n        return a;\n      });\n    }\n    return { imageViewer };\n  };\n  const { imageViewer } = prepareAttachments();\n\n  return (\n    <div className='resi_treat_content_wrap'>\n      <form action=''>\n        <Header\n          onDoctorChange={onDoctorChange}\n          onSearch={onSearch}\n          onDateChange={handleDateChange}\n          onSubmasterChange={handleSubmasterChange}\n        />\n      </form>\n      <div className='responsive_scroll_wrap'>\n        <Table\n          columns={columns}\n          datasource={data}\n          pagination={false}\n          pagination={{\n            current: filter.page,\n            pageSize: filter.limit,\n            total: count,\n            showSizeChanger: true,\n            onShowSizeChange: onShowSizeChange,\n          }}\n          loading={loader}\n          onChange={handleTableChange}\n        />\n      </div>\n\n      {visibleArchive ? (\n        <ArchivePopup\n          visible={visibleArchive}\n          detail={detail}\n          residentDetail={residentDetail}\n          onCancel={() => handleArchive(false, null)}\n          onOK={(data) => handleArchive(false, null, data)}\n        />\n      ) : null}\n\n      {visibleCancel ? (\n        <CancelRxModal\n          visible={visibleCancel}\n          detail={detail}\n          onOk={(data) => handleCancelPresc(false, null, data)}\n          onCancel={() => handleCancelPresc(false, null)}\n          rxType={MODULE.E_PROCESSING}\n        />\n      ) : null}\n\n      {notesModal && (\n        <NotesModal\n          visible={notesModal}\n          filterOptions={notesFilterOptions}\n          onCancel={data => visibleNotesModal(false, null, 'cancel', data)}\n          onOk={() => visibleNotesModal(false)}\n          isUpsertList={true}\n          modalTitle={`View Note - ${currentModalData.current.orderNumber}`}\n          xRayNumber={currentModalData.current.orderNumber}\n          addData={{\n            residentId: currentModalData.current.residentId,\n            prescriptionOrderId: currentModalData.current._id,\n            category: TODO_CATEGORY.PRESCRIPTION,\n            subCategory: SUB_CATEGORY.NOTES.GENERAL,\n          }}\n        />\n      )}\n\n      {reminderModal && (\n        <ReminderModal\n          visible={reminderModal}\n          filterOptions={reminderFilterOptions}\n          onCancel={data => visibleReminderModal(false, null, 'cancel', data)}\n          onOk={() => visibleReminderModal(false)}\n          isUpsertList={true}\n          modalTitle={`View Reminder - ${currentModalData.current.orderNumber}`}\n          xRayNumber={currentModalData.current.orderNumber}\n          addData={{\n            residentId: currentModalData.current.residentId,\n            prescriptionOrderId: currentModalData.current._id,\n            category: TODO_CATEGORY.PRESCRIPTION,\n            subCategory: SUB_CATEGORY.NOTES.GENERAL,\n          }}\n        />\n      )}\n\n      {visibleImage && imageViewer.length > 0 ? (\n        <LightBox\n          visible={visibleImage}\n          images={imageViewer}\n          onCloseRequest={() => handleViewImages(false, null)}\n          curImg={0}\n        />\n      ) : null}\n    </div>\n  );\n};\nconst mapStateToProps = ({ auth, resident }) => {\n  const { authUser } = auth;\n  const { currentResidentId } = resident;\n  return {\n    authUser,\n    currentResidentId,\n  };\n};\nexport default connect(mapStateToProps, { updateOpenResident })(EProcessing);\n"]},"metadata":{},"sourceType":"module"}