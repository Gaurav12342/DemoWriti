{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/PmrTab/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport axios from '../../../../services/api/config';\nimport { pmrList } from '../../../../services/api/routes/pmr';\nimport moment from 'moment';\nimport { View, Notes, Reminder } from '../../../../assets/images/pmr/index'; // import ViewNotesModal from './components/ViewNotesModal';\n\nimport { MODULE } from '../../../../constants/subscription';\nimport { createForm } from 'rc-form';\nimport { useSelector } from 'react-redux';\nimport Table from './../DigitalBinder/Table';\nimport { displayDate } from '../../../../util/moment';\nimport { PMR_STATUS } from '../../../../constants/pmr';\nimport { STATUS as PRESCRIPTION_STATUS } from '../../../../constants/prescription';\nimport { getTodoRedirectUrl } from '../../../../util/todo';\nimport { TODO_CATEGORY, SUB_CATEGORY, DEVICE_VIEW } from '../../../../constants/todo';\nimport { Todo } from '../../../../assets/images/resident-detail/index';\nimport NotesModal from '../../../../components/NotesPopup/List';\nimport { getUserNameWithDesignation } from '../../../../util/common';\n\nconst _ = require('lodash');\n\nconst DATA_TYPE = {\n  RESIDENT_DOCUMENT: 1,\n  PRESCRIPTION: 2,\n  PMR: 3\n};\n\nconst lower = (val = '') => typeof val === 'string' && val.toLowerCase() || val;\n\nconst getOverDue = (date, subtractDays) => {\n  const dueDate = moment(date).subtract(subtractDays, 'days');\n  const dueDays = dueDate.diff(moment(), 'days');\n  const dueText = dueDays < 0 ? 'Overdue' : 'Due in';\n  return {\n    dueDays,\n    dueDate: dueDate.format('Do MMM YYYY'),\n    remainingDay: dueText + ' ' + Math.abs(dueDays) + ' days'\n  };\n};\n\nconst DigitalBinder = ({\n  form,\n  onFetchData,\n  isTabActive\n}) => {\n  var _currentModalData$cur;\n\n  const {\n    authUser,\n    currentResidentId\n  } = useSelector(state => ({\n    authUser: state.auth.authUser,\n    currentResidentId: state.resident.currentResidentId\n  }));\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [viewNotesVisible, setViewNotesVisible] = useState(false);\n  const [getSpecificDigitalBinder, setSpecificDigitalBinder] = useState('');\n  const tableRef = React.useRef();\n  const allData = React.useRef([]);\n  const [notesFilterOptions, setNotesFilterOptions] = useState({});\n  const currentModalData = React.useRef();\n  const [filter, setFilter] = useState({\n    query: {\n      populate: [{\n        acknowledgedBy: []\n      }, {\n        homeAreaId: ['name']\n      }, {\n        addedBy: []\n      }, {\n        pmrScheduleGroupId: []\n      }]\n    }\n  });\n  useEffect(() => {\n    if (isTabActive) fetch();\n  }, [filter, isTabActive]);\n  const columns = React.useMemo(() => [{\n    Header: 'Sr. No.',\n    Cell: ({\n      row\n    }) => row.index + 1\n  }, {\n    Header: 'Physician',\n    accessor: 'physicianId',\n    Cell: ({\n      cell: {\n        value\n      },\n      row: {\n        original\n      }\n    }) => {\n      return value ? getUserNameWithDesignation(original.physicianId) : '-';\n    }\n  }, {\n    Header: 'PMR No.',\n    accessor: 'pmrId',\n    Cell: ({\n      cell: {\n        value\n      }\n    }) => /*#__PURE__*/React.createElement(React.Fragment, null, value || '-')\n  }, {\n    Header: 'PMR Range',\n    accessor: 'pmrScheduleDate',\n    Cell: ({\n      cell: {\n        value\n      }\n    }) => {\n      const {\n        startDate,\n        endDate\n      } = value;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, \"From : \"), displayDate(startDate)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, \"To : \"), displayDate(endDate)));\n    }\n  }, {\n    Header: 'Due Date',\n    accessor: 'pmrScheduleGroupId',\n    Cell: ({\n      cell: {\n        value\n      }\n    }) => {\n      const {\n        dueDate,\n        remainingDay,\n        dueDays\n      } = getOverDue(value.startDate, value.dueDays); // const dueDate = moment(value.startDate).subtract(value.dueDays, 'days');\n      // const dueDays = dueDate.diff(moment(), 'days');\n      // const dueText = dueDays < 0 ? 'Overdue' : 'Due in';\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: dueDays <= 0 ? '#ff7885' : 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }, dueDate), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: dueDays <= 0 ? '#ff7885' : 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }, remainingDay));\n    }\n  }, {\n    Header: 'Phm Review',\n    accessor: 'docMedCheckApproveAck',\n    Cell: ({\n      row: {\n        original\n      }\n    }) => {\n      return '-';\n    }\n  }, {\n    Header: 'Status',\n    accessor: 'status',\n    Cell: ({\n      cell: {\n        value\n      }\n    }) => {\n      return _.invert(PMR_STATUS)[value];\n    }\n  }, {\n    Header: 'Action',\n    accessor: '_id',\n    Cell: ({\n      row: {\n        original\n      }\n    }) => {\n      const redirectUrl = handlePendingTodo(original);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => createNotesModal(original),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Notes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }), (original === null || original === void 0 ? void 0 : original.notesCount) ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"notes tot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 19\n        }\n      }, original.notesCount) : null, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, \"Notes\")), /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        href: redirectUrl,\n        style: {\n          textDecoration: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ac_count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Todo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 19\n        }\n      }), (original === null || original === void 0 ? void 0 : original.pendingTodoCount) ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"todo tot read\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }\n      }, original.pendingTodoCount) : null), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }\n      }, \"To Do\")));\n    },\n    disableGlobalFilter: true,\n    hasRefresh: true\n  }], []);\n\n  const fetch = () => {\n    setLoading(true);\n    let {\n      method,\n      url,\n      baseURL\n    } = pmrList;\n    axios({\n      method,\n      url,\n      baseURL,\n      data: { ...filter,\n        ...{\n          query: { ...filter.query,\n            find: {\n              patientId: currentResidentId\n            }\n          }\n        }\n      }\n    }).then(response => {\n      if (response && response.data.code == 'OK') {\n        let dataArray = response.data.data.list;\n        allData.current = [...dataArray];\n        onFetchData({\n          tabtitle: 'PMR',\n          records: dataArray.length,\n          module: MODULE.PMR\n        });\n        handleFilter('');\n      }\n    }).catch(error => {\n      setLoading(false);\n      console.log(error);\n    });\n  };\n\n  const handleFilter = (searchVal = '') => {\n    const preFilteredData = [...allData.current];\n\n    if (searchVal.trim() === '') {\n      setData(preFilteredData);\n      setTotal(preFilteredData.length);\n    } else {\n      searchVal = searchVal.trim();\n      const filteredData = preFilteredData.filter(row => {\n        var _row$physicianId;\n\n        let status = _.invert(PMR_STATUS)[row.status];\n\n        let {\n          startDate,\n          endDate\n        } = row.pmrScheduleDate;\n        let scheduleDate = displayDate(startDate) + displayDate(endDate);\n        const {\n          dueDate,\n          remainingDay\n        } = getOverDue(row.pmrScheduleGroupId.startDate, row.dueDays);\n        const isPhysicianMatch = lower((_row$physicianId = row.physicianId) === null || _row$physicianId === void 0 ? void 0 : _row$physicianId.mergeLFName).includes(lower(searchVal));\n        const isPmrIdMatch = lower(row.pmrId).includes(lower(searchVal));\n        const scheduleDateMatch = lower(scheduleDate).includes(lower(searchVal));\n        const overdueMatch = lower(dueDate + remainingDay).includes(lower(searchVal));\n        const statusMatch = lower(status).includes(searchVal);\n        console.log('dueDate + remainingDay => ', dueDate + remainingDay);\n        return isPhysicianMatch || isPmrIdMatch || scheduleDateMatch || overdueMatch || statusMatch;\n      });\n      setData(filteredData);\n    }\n\n    setLoading(false);\n  };\n\n  const visibleNotesModal = (visible, record, str, noteCount) => {\n    setViewNotesVisible(visible);\n    setNotesFilterOptions({});\n\n    if (noteCount != undefined) {\n      setData(oldData => {\n        return oldData.map(d => {\n          if (d._id === currentModalData.current._id) {\n            d['notesCount'] = noteCount;\n            return d;\n          }\n\n          return d;\n        });\n      });\n    }\n\n    if (!visible && str !== 'cancel') {\n      fetch();\n    }\n  };\n\n  const createNotesModal = record => {\n    let options = {\n      query: {\n        find: {\n          pmrId: record._id,\n          category: TODO_CATEGORY.MED_REVIEW,\n          subCategory: SUB_CATEGORY.NOTES.GENERAL\n        },\n        populate: [{\n          addedBy: []\n        }]\n      }\n    };\n    currentModalData.current = { ...record\n    };\n    setNotesFilterOptions(options);\n    setViewNotesVisible(true);\n  };\n\n  const handlePendingTodo = record => {\n    var _record$pendingTodo;\n\n    if (!record.pendingTodoCount) return;\n    let url = getTodoRedirectUrl({\n      todoCategory: TODO_CATEGORY.MED_REVIEW,\n      subCategory: (_record$pendingTodo = record.pendingTodo) === null || _record$pendingTodo === void 0 ? void 0 : _record$pendingTodo[record.pendingTodo.length - 1].subCategory,\n      viewType: DEVICE_VIEW.PENDING,\n      orderNumber: record.orderNumber\n    });\n    return url;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resi_treat_content_wrap virtual_visit pmr_tab xray_tab digital_tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    form: form,\n    onSearch: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    data: data,\n    isLoading: loading,\n    onTableRefresh: fetch,\n    ref: tableRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }), viewNotesVisible && /*#__PURE__*/React.createElement(NotesModal, {\n    visible: viewNotesVisible,\n    filterOptions: notesFilterOptions,\n    onCancel: data => visibleNotesModal(false, null, 'cancel', data),\n    onOk: () => visibleNotesModal(false),\n    isUpsertList: true,\n    modalTitle: `View Note - ${currentModalData.current.pmrId}`,\n    xRayNumber: currentModalData.current.pmrId,\n    addData: {\n      residentId: (_currentModalData$cur = currentModalData.current.patientId) === null || _currentModalData$cur === void 0 ? void 0 : _currentModalData$cur._id,\n      pmrId: currentModalData.current._id,\n      category: TODO_CATEGORY.MED_REVIEW,\n      subCategory: SUB_CATEGORY.NOTES.GENERAL\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default createForm()(DigitalBinder);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/PmrTab/index.js"],"names":["React","useState","useEffect","Link","Redirect","Header","axios","pmrList","moment","View","Notes","Reminder","MODULE","createForm","useSelector","Table","displayDate","PMR_STATUS","STATUS","PRESCRIPTION_STATUS","getTodoRedirectUrl","TODO_CATEGORY","SUB_CATEGORY","DEVICE_VIEW","Todo","NotesModal","getUserNameWithDesignation","_","require","DATA_TYPE","RESIDENT_DOCUMENT","PRESCRIPTION","PMR","lower","val","toLowerCase","getOverDue","date","subtractDays","dueDate","subtract","dueDays","diff","dueText","format","remainingDay","Math","abs","DigitalBinder","form","onFetchData","isTabActive","authUser","currentResidentId","state","auth","resident","data","setData","total","setTotal","loading","setLoading","viewNotesVisible","setViewNotesVisible","getSpecificDigitalBinder","setSpecificDigitalBinder","tableRef","useRef","allData","notesFilterOptions","setNotesFilterOptions","currentModalData","filter","setFilter","query","populate","acknowledgedBy","homeAreaId","addedBy","pmrScheduleGroupId","fetch","columns","useMemo","Cell","row","index","accessor","cell","value","original","physicianId","startDate","endDate","color","invert","redirectUrl","handlePendingTodo","createNotesModal","notesCount","textDecoration","pendingTodoCount","disableGlobalFilter","hasRefresh","method","url","baseURL","find","patientId","then","response","code","dataArray","list","current","tabtitle","records","length","module","handleFilter","catch","error","console","log","searchVal","preFilteredData","trim","filteredData","status","pmrScheduleDate","scheduleDate","isPhysicianMatch","mergeLFName","includes","isPmrIdMatch","pmrId","scheduleDateMatch","overdueMatch","statusMatch","visibleNotesModal","visible","record","str","noteCount","undefined","oldData","map","d","_id","options","category","MED_REVIEW","subCategory","NOTES","GENERAL","todoCategory","pendingTodo","viewType","PENDING","orderNumber","residentId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport axios from '../../../../services/api/config';\nimport { pmrList } from '../../../../services/api/routes/pmr';\nimport moment from 'moment';\nimport { View, Notes, Reminder } from '../../../../assets/images/pmr/index';\n// import ViewNotesModal from './components/ViewNotesModal';\nimport { MODULE } from '../../../../constants/subscription';\nimport { createForm } from 'rc-form';\nimport { useSelector } from 'react-redux';\nimport Table from './../DigitalBinder/Table';\nimport { displayDate } from '../../../../util/moment';\nimport { PMR_STATUS } from '../../../../constants/pmr';\nimport { STATUS as PRESCRIPTION_STATUS } from '../../../../constants/prescription';\nimport { getTodoRedirectUrl } from '../../../../util/todo';\nimport {\n  TODO_CATEGORY,\n  SUB_CATEGORY,\n  DEVICE_VIEW,\n} from '../../../../constants/todo';\nimport { Todo } from '../../../../assets/images/resident-detail/index';\nimport NotesModal from '../../../../components/NotesPopup/List';\nimport { getUserNameWithDesignation } from '../../../../util/common';\nconst _ = require('lodash');\n\nconst DATA_TYPE = {\n  RESIDENT_DOCUMENT: 1,\n  PRESCRIPTION: 2,\n  PMR: 3,\n};\n\nconst lower = (val = '') =>\n  (typeof val === 'string' && val.toLowerCase()) || val;\n\nconst getOverDue = (date, subtractDays) => {\n  const dueDate = moment(date).subtract(subtractDays, 'days');\n  const dueDays = dueDate.diff(moment(), 'days');\n  const dueText = dueDays < 0 ? 'Overdue' : 'Due in';\n  return {\n    dueDays,\n    dueDate: dueDate.format('Do MMM YYYY'),\n    remainingDay: dueText + ' ' + Math.abs(dueDays) + ' days',\n  };\n};\n\nconst DigitalBinder = ({ form, onFetchData, isTabActive }) => {\n  const { authUser, currentResidentId } = useSelector((state) => ({\n    authUser: state.auth.authUser,\n    currentResidentId: state.resident.currentResidentId,\n  }));\n\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [viewNotesVisible, setViewNotesVisible] = useState(false);\n  const [getSpecificDigitalBinder, setSpecificDigitalBinder] = useState('');\n  const tableRef = React.useRef();\n  const allData = React.useRef([]);\n  const [notesFilterOptions, setNotesFilterOptions] = useState({});\n  const currentModalData = React.useRef();\n\n  const [filter, setFilter] = useState({\n    query: {\n      populate: [\n        {\n          acknowledgedBy: [],\n        },\n        {\n          homeAreaId: ['name'],\n        },\n        {\n          addedBy: [],\n        },\n        {\n          pmrScheduleGroupId: [],\n        },\n      ],\n    },\n  });\n\n  useEffect(() => {\n    if (isTabActive) fetch();\n  }, [filter, isTabActive]);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Sr. No.',\n        Cell: ({ row }) => row.index + 1,\n      },\n      {\n        Header: 'Physician',\n        accessor: 'physicianId',\n        Cell: ({ cell: { value }, row: { original } }) => {\n          return value ? getUserNameWithDesignation(original.physicianId) : '-';\n        },\n      },\n      {\n        Header: 'PMR No.',\n        accessor: 'pmrId',\n        Cell: ({ cell: { value } }) => <>{value || '-'}</>,\n      },\n      {\n        Header: 'PMR Range',\n        accessor: 'pmrScheduleDate',\n        Cell: ({ cell: { value } }) => {\n          const { startDate, endDate } = value;\n          return (\n            <>\n              <p>\n                <b>From : </b>\n                {displayDate(startDate)}\n              </p>\n              <p>\n                <b>To : </b>\n                {displayDate(endDate)}\n              </p>\n            </>\n          );\n        },\n      },\n      {\n        Header: 'Due Date',\n        accessor: 'pmrScheduleGroupId',\n        Cell: ({ cell: { value } }) => {\n          const { dueDate, remainingDay, dueDays } = getOverDue(\n            value.startDate,\n            value.dueDays\n          );\n          // const dueDate = moment(value.startDate).subtract(value.dueDays, 'days');\n          // const dueDays = dueDate.diff(moment(), 'days');\n          // const dueText = dueDays < 0 ? 'Overdue' : 'Due in';\n          return (\n            <>\n              <p style={{ color: dueDays <= 0 ? '#ff7885' : 'auto' }}>\n                {dueDate}\n              </p>\n              <p style={{ color: dueDays <= 0 ? '#ff7885' : 'auto' }}>\n                {remainingDay}\n              </p>\n            </>\n          );\n        },\n      },\n      {\n        Header: 'Phm Review',\n        accessor: 'docMedCheckApproveAck',\n        Cell: ({ row: { original } }) => {\n          return '-';\n        },\n      },\n      {\n        Header: 'Status',\n        accessor: 'status',\n        Cell: ({ cell: { value } }) => {\n          return _.invert(PMR_STATUS)[value];\n        },\n      },\n      {\n        Header: 'Action',\n        accessor: '_id',\n        Cell: ({ row: { original } }) => {\n          const redirectUrl = handlePendingTodo(original);\n          return (\n            <div className='actions'>\n              <div\n                onClick={() => createNotesModal(original)} >\n                <Notes />\n                {original?.notesCount ? (\n                  <span className='notes tot'>{original.notesCount}</span>\n                ) : null}\n                <p>Notes</p>\n              </div>\n              <a\n                target='_blank'\n                href={redirectUrl}\n                style={{ textDecoration: 'none' }}\n              >\n                <div className='ac_count'>\n                  <Todo />\n                  {original?.pendingTodoCount ? (\n                    <span className='todo tot read'>\n                      {original.pendingTodoCount}\n                    </span>\n                  ) : null}\n                </div>\n                <p>To Do</p>\n              </a>\n            </div>\n          );\n        },\n        disableGlobalFilter: true,\n        hasRefresh: true,\n      },\n    ],\n    []\n  );\n\n  const fetch = () => {\n    setLoading(true);\n    let { method, url, baseURL } = pmrList;\n    axios({\n      method,\n      url,\n      baseURL,\n      data: {\n        ...filter,\n        ...{\n          query: { ...filter.query, find: { patientId: currentResidentId } },\n        },\n      },\n    })\n      .then((response) => {\n        if (response && response.data.code == 'OK') {\n          let dataArray = response.data.data.list;\n\n          allData.current = [...dataArray];\n          onFetchData({\n            tabtitle: 'PMR',\n            records: dataArray.length,\n            module: MODULE.PMR,\n          });\n          handleFilter('');\n        }\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.log(error);\n      });\n  };\n\n  const handleFilter = (searchVal = '') => {\n    const preFilteredData = [...allData.current];\n    if (searchVal.trim() === '') {\n      setData(preFilteredData);\n      setTotal(preFilteredData.length);\n    } else {\n      searchVal = searchVal.trim();\n      const filteredData = preFilteredData.filter((row) => {\n        let status = _.invert(PMR_STATUS)[row.status];\n        let { startDate, endDate } = row.pmrScheduleDate;\n        let scheduleDate = displayDate(startDate) + displayDate(endDate);\n        const { dueDate, remainingDay } = getOverDue(\n          row.pmrScheduleGroupId.startDate,\n          row.dueDays\n        );\n\n        const isPhysicianMatch = lower(row.physicianId?.mergeLFName).includes(\n          lower(searchVal)\n        );\n        const isPmrIdMatch = lower(row.pmrId).includes(lower(searchVal));\n        const scheduleDateMatch = lower(scheduleDate).includes(\n          lower(searchVal)\n        );\n        const overdueMatch = lower(dueDate + remainingDay).includes(\n          lower(searchVal)\n        );\n        const statusMatch = lower(status).includes(searchVal);\n        console.log('dueDate + remainingDay => ', dueDate + remainingDay);\n        return (\n          isPhysicianMatch ||\n          isPmrIdMatch ||\n          scheduleDateMatch ||\n          overdueMatch ||\n          statusMatch\n        );\n      });\n      setData(filteredData);\n    }\n    setLoading(false);\n  };\n\n  const visibleNotesModal = (visible, record, str, noteCount) => {\n    setViewNotesVisible(visible);\n    setNotesFilterOptions({});\n    if (noteCount != undefined) {\n      setData((oldData) => {\n        return oldData.map((d) => {\n          if (d._id === currentModalData.current._id) {\n            d['notesCount'] = noteCount;\n            return d;\n          }\n          return d;\n        });\n      });\n    }\n    if (!visible && str !== 'cancel') {\n      fetch();\n    }\n  };\n\n  const createNotesModal = (record) => {\n    let options = {\n      query: {\n        find: {\n          pmrId: record._id,\n          category: TODO_CATEGORY.MED_REVIEW,\n          subCategory: SUB_CATEGORY.NOTES.GENERAL,\n        },\n        populate: [{ addedBy: [] }],\n      },\n    };\n    currentModalData.current = { ...record };\n    setNotesFilterOptions(options);\n    setViewNotesVisible(true);\n  };\n\n  const handlePendingTodo = (record) => {\n    if (!record.pendingTodoCount) return;\n    let url = getTodoRedirectUrl({\n      todoCategory: TODO_CATEGORY.MED_REVIEW,\n      subCategory:\n        record.pendingTodo?.[record.pendingTodo.length - 1].subCategory,\n      viewType: DEVICE_VIEW.PENDING,\n      orderNumber: record.orderNumber,\n    });\n    return url;\n  };\n\n  return (\n    <div className='resi_treat_content_wrap virtual_visit pmr_tab xray_tab digital_tab'>\n      <Header form={form} onSearch={handleFilter} />\n      <Table\n        columns={columns}\n        data={data}\n        isLoading={loading}\n        onTableRefresh={fetch}\n        ref={tableRef}\n      />\n\n      {viewNotesVisible && (\n        <NotesModal\n          visible={viewNotesVisible}\n          filterOptions={notesFilterOptions}\n          onCancel={(data) => visibleNotesModal(false, null, 'cancel', data)}\n          onOk={() => visibleNotesModal(false)}\n          isUpsertList={true}\n          modalTitle={`View Note - ${currentModalData.current.pmrId}`}\n          xRayNumber={currentModalData.current.pmrId}\n          addData={{\n            residentId: currentModalData.current.patientId?._id,\n            pmrId: currentModalData.current._id,\n            category: TODO_CATEGORY.MED_REVIEW,\n            subCategory: SUB_CATEGORY.NOTES.GENERAL,\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default createForm()(DigitalBinder);\n"]},"metadata":{},"sourceType":"module"}