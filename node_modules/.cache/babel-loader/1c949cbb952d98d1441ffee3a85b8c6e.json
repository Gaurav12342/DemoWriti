{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/common/ActiveDeactive.js\";\n\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport CommonService from '../../services/api/services/common';\nimport { Button, Toast } from '../../components/common';\nimport Confirm from '../../components/common/Popup/ConfirmPopup'; // import { booleanStatusUpdate } from '../../services/api/routes/common';\n\nimport { masterUpdate } from '../../../src/services/api/routes/master';\nimport { editUser } from '../../services/api/routes/user';\n\nconst ActiveDeactive = props => {\n  const {\n    record,\n    documentId,\n    model,\n    onActiveDeactive,\n    API,\n    extraRequest\n  } = props;\n  const [confirm, setConfirm] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [isActive, setIsActive] = useState(props.isActive);\n  const [confirmText, setConfirmText] = useState('');\n  let checkActive = record.isActive && record.isActive === true;\n\n  const handleConfirmation = () => {\n    const status = checkActive ? 'De-Active' : 'Active';\n    const name = record ? record.name ? record.name : record.mergeLFName ? record.mergeLFName : '' : '';\n    setConfirmText(`Are you sure, you want to ${status} ${name} ?`);\n    setConfirm(true);\n  };\n\n  const handleOk = async () => {\n    setLoader(true);\n    setBtnLoading(true); //let apiDetail = masterUpdate, data;\n    //if (model === 'user') {\n    //apiDetail = editUser\n    //apiDetail.url = apiDetail.url + record._id;\n    //data = {\n    // ...record,\n    //isActive: !record.isActive\n    //}\n    // }\n    //else {\n    // apiDetail.url = apiDetail.url + documentId;\n    //data = {\n    // id: documentId,\n    //model: model,\n    //fieldName: \"isActive\",\n    // isActive: !isActive,\n    //};\n    //}\n\n    let {\n      method,\n      url,\n      baseURL\n    } = API;\n    url = `${url}/${documentId}`; // url = url + documentId;\n\n    let data = {\n      id: documentId,\n      model: model,\n      fieldName: 'isActive',\n      isActive: !isActive,\n      ...extraRequest\n    };\n    let newValue = isActive;\n    let response = await CommonService({\n      method,\n      url,\n      data,\n      baseURL\n    });\n\n    if (response) {\n      if (response.code === 'OK') {\n        // console.log(\"activeDeatcive\", response);\n        newValue = !isActive;\n        let record = { ...props.record\n        };\n        record.isActive = !record.isActive;\n        onActiveDeactive(record);\n        setConfirm(false);\n        setBtnLoading(false);\n        Toast.success(response.message);\n      } else {\n        setBtnLoading(false);\n        Toast.error(response.message);\n      }\n    }\n\n    setBtnLoading(false);\n    setLoader(false);\n    setIsActive(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    type: checkActive ? 'primary' : 'danger',\n    size: \"xs\",\n    onClick: handleConfirmation,\n    loading: loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, checkActive ? 'Active' : 'De-Active'), confirm && /*#__PURE__*/React.createElement(Confirm, {\n    style: {\n      width: '400px'\n    },\n    visible: confirm,\n    footer: [/*#__PURE__*/React.createElement(Button, {\n      style: {\n        'margin-right': '5%'\n      },\n      key: \"cancel\",\n      type: \"secondary\",\n      size: \"lg\",\n      onClick: () => setConfirm(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"CANCEL\\xA0\"), /*#__PURE__*/React.createElement(Button, {\n      key: \"ok\",\n      loading: btnLoading,\n      type: \"primary\",\n      size: \"lg\",\n      onClick: handleOk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"Ok\")] // onOk={handleOk}\n    // onCancel={() => setConfirm(false)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, confirmText)));\n};\n\nexport default ActiveDeactive;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/common/ActiveDeactive.js"],"names":["React","useState","CommonService","Button","Toast","Confirm","masterUpdate","editUser","ActiveDeactive","props","record","documentId","model","onActiveDeactive","API","extraRequest","confirm","setConfirm","loader","setLoader","btnLoading","setBtnLoading","isActive","setIsActive","confirmText","setConfirmText","checkActive","handleConfirmation","status","name","mergeLFName","handleOk","method","url","baseURL","data","id","fieldName","newValue","response","code","success","message","error","width"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport CommonService from '../../services/api/services/common';\nimport { Button, Toast } from '../../components/common';\nimport Confirm from '../../components/common/Popup/ConfirmPopup';\n// import { booleanStatusUpdate } from '../../services/api/routes/common';\nimport { masterUpdate } from '../../../src/services/api/routes/master';\nimport { editUser } from '../../services/api/routes/user';\n\nconst ActiveDeactive = (props) => {\n  const {\n    record,\n    documentId,\n    model,\n    onActiveDeactive,\n    API,\n    extraRequest,\n  } = props;\n  const [confirm, setConfirm] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [btnLoading, setBtnLoading] = useState(false);\n  const [isActive, setIsActive] = useState(props.isActive);\n  const [confirmText, setConfirmText] = useState('');\n  let checkActive = record.isActive && record.isActive === true;\n\n  const handleConfirmation = () => {\n    const status = checkActive ? 'De-Active' : 'Active';\n    const name = record\n      ? record.name\n        ? record.name\n        : record.mergeLFName\n        ? record.mergeLFName\n        : ''\n      : '';\n    setConfirmText(`Are you sure, you want to ${status} ${name} ?`);\n    setConfirm(true);\n  };\n\n  const handleOk = async () => {\n    setLoader(true);\n    setBtnLoading(true);\n    //let apiDetail = masterUpdate, data;\n    //if (model === 'user') {\n    //apiDetail = editUser\n    //apiDetail.url = apiDetail.url + record._id;\n    //data = {\n    // ...record,\n    //isActive: !record.isActive\n    //}\n    // }\n    //else {\n    // apiDetail.url = apiDetail.url + documentId;\n    //data = {\n    // id: documentId,\n    //model: model,\n    //fieldName: \"isActive\",\n    // isActive: !isActive,\n    //};\n    //}\n\n    let { method, url, baseURL } = API;\n    url = `${url}/${documentId}`;\n    // url = url + documentId;\n    let data = {\n      id: documentId,\n      model: model,\n      fieldName: 'isActive',\n      isActive: !isActive,\n      ...extraRequest,\n    };\n    let newValue = isActive;\n    let response = await CommonService({ method, url, data, baseURL });\n    if (response) {\n      if (response.code === 'OK') {\n        // console.log(\"activeDeatcive\", response);\n        newValue = !isActive;\n        let record = { ...props.record };\n        record.isActive = !record.isActive;\n        onActiveDeactive(record);\n        setConfirm(false);\n        setBtnLoading(false);\n        Toast.success(response.message);\n      } else {\n        setBtnLoading(false);\n        Toast.error(response.message);\n      }\n    }\n    setBtnLoading(false);\n    setLoader(false);\n    setIsActive(newValue);\n  };\n\n  return (\n    <>\n      <Button\n        type={checkActive ? 'primary' : 'danger'}\n        size='xs'\n        onClick={handleConfirmation}\n        loading={loader}\n      >\n        {checkActive ? 'Active' : 'De-Active'}\n      </Button>\n      {confirm && (\n        <Confirm\n          style={{ width: '400px' }}\n          visible={confirm}\n          footer={[\n            <Button\n              style={{ 'margin-right': '5%' }}\n              key='cancel'\n              type='secondary'\n              size='lg'\n              onClick={() => setConfirm(false)}\n            >\n              CANCEL&nbsp;\n            </Button>,\n            <Button\n              key='ok'\n              loading={btnLoading}\n              type='primary'\n              size='lg'\n              onClick={handleOk}\n            >\n              Ok\n            </Button>,\n          ]}\n          // onOk={handleOk}\n          // onCancel={() => setConfirm(false)}\n        >\n          <p>{confirmText}</p>\n        </Confirm>\n      )}\n    </>\n  );\n};\nexport default ActiveDeactive;\n"]},"metadata":{},"sourceType":"module"}