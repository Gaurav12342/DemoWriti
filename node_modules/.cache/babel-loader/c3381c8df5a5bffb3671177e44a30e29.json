{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/PrescriptionTodo/components/PrescriptionContainer.js\";\nimport React, { Component, useEffect, useState, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport axios, { getRxImage } from '../../../services/api/services/common';\nimport { getPrescriptionDetail, performTodo } from '../../../services/api/routes/prescriptionTodo';\nimport { PatientInfoBar, TodoActions, PendingTodo } from '../../../components/Todo';\nimport { Spin, LightBox, NoData } from '../../../components/common';\nimport { getPath } from '../../../util/todo';\nimport _ from 'lodash';\nimport { prescriptionFormCheck, todoUpdate, prescriptionUpdate } from '../../../services/socket/routes/todo';\nimport { TODO_CATEGORY, STATUS } from '../../../constants/todo';\nimport { TYPE } from '../../../constants/prescription';\nimport Medication from './Medications';\nimport { Refresh1 } from '../../../assets/images/pmr/index';\n\nconst PrescriptionContainer = props => {\n  const {\n    activeTodo,\n    socket,\n    authUser\n  } = props;\n  const [loader, setLoader] = useState(false);\n  const [visibleViewer, setVisibleViewer] = useState(false);\n  const [actionLoader, setActionLoader] = useState(false);\n  const [detail, setDetail] = useState(null);\n  const [imageLoader, setImageLoader] = useState(false);\n  useEffect(() => {\n    if (activeTodo) fetch();else setDetail(null);\n  }, [activeTodo]); // useEffect(() => {\n  //     prepareAttachments()\n  // }, [detail])\n\n  useEffect(() => {\n    //need to give ref of detail\n    if (!detail || !activeTodo) return;\n\n    if (socket) {\n      socket.on(todoUpdate, handleTodoUpdate); // socket.on(prescriptionFormCheck, afterPerformTodo)\n\n      socket.on(prescriptionUpdate, handlePrescribedFormUpdate);\n      return () => {\n        socket.off(todoUpdate);\n        socket.off(prescriptionUpdate);\n      };\n    }\n  }, [detail, activeTodo]);\n  const prepareAttachments = useMemo(() => {\n    var _detail$attachments;\n\n    let imageViewer = [],\n        path = null;\n\n    if ((detail === null || detail === void 0 ? void 0 : (_detail$attachments = detail.attachments) === null || _detail$attachments === void 0 ? void 0 : _detail$attachments.length) > 0) {\n      path = detail.attachments.find(x => x.sequence === Math.max(..._.map(detail.attachments, 'sequence'))).path;\n      imageViewer = _.reverse(_.map(detail.attachments, function (a) {\n        a.src = a.path;\n        return a;\n      }));\n    }\n\n    return {\n      imageViewer,\n      path\n    };\n  }, [detail]);\n  const {\n    imageViewer,\n    path\n  } = prepareAttachments;\n\n  const handleTodoUpdate = data => {\n    console.log(\"SOCKET handleTodoUpdate -> data\", data);\n    if (!activeTodo || !data || !detail) return; // if (typeof data === 'object') {\n    //     // to update after todo actions are performed\n    //     let todo = { ...data }\n    //     if (activeTodo._id === todo._id) {\n    //         afterPerformTodo(todo)\n    //         return\n    //     }\n    // }\n\n    let length = _.size(data);\n\n    if (data && data.length) {\n      if (length === 1) {\n        var _todo$prescriptionId;\n\n        // After prescription create and delete\n        //to update detail of active todo only (broadcast purpose)\n        let todo = _.first(data);\n\n        if ((activeTodo === null || activeTodo === void 0 ? void 0 : activeTodo._id) === ((_todo$prescriptionId = todo.prescriptionId) === null || _todo$prescriptionId === void 0 ? void 0 : _todo$prescriptionId._id)) {\n          // let allowed = false\n          // allowed = todo.participants.find(x => {\n          //     return x.userId === self.props.authUser.id && x.active\n          // })\n          // todo.allowed = !!allowed\n          setDetail(oldDetail => {\n            let newDetail = { ...oldDetail\n            };\n            let todoList = [...oldDetail.todos];\n\n            let todoIds = _.map(todoList, \"_id\");\n\n            if (_.includes(todoIds, todo._id)) {\n              // if (todo.status === STATUS[\"CANCELLED\"]) {\n              if (!todo.isActive) {\n                //delete todo\n                let i = todoList.findIndex(x => x._id === todo._id);\n                todoList.splice(i, 1);\n              } else {\n                //update\n                afterPerformTodo(todo);\n                return;\n              }\n            } else if (todo.isActive) {\n              // } else if (todo.status !== STATUS[\"CANCELLED\"]) {\n              //add todo (second check)\n              todoList.push(todo);\n            }\n\n            newDetail.todos = todoList;\n            newDetail.inProcess = todo.prescriptionId.inProcess;\n            return newDetail;\n          });\n        }\n      } else {\n        // prescription cancellation\n        setDetail(oldDetail => {\n          let newDetail = { ...oldDetail\n          };\n          let todoList = [...oldDetail.todos];\n          todoList.map(todo => {\n            var _todo$prescriptionId2;\n\n            if (((_todo$prescriptionId2 = todo.prescriptionId) === null || _todo$prescriptionId2 === void 0 ? void 0 : _todo$prescriptionId2._id) === (activeTodo === null || activeTodo === void 0 ? void 0 : activeTodo._id)) {\n              if (todo.status === STATUS[\"CANCELLED\"]) {\n                let i = todoList.findIndex(x => x.id === todo._id);\n                todoList.splice(i, 1);\n              }\n            }\n          });\n          newDetail.todos = todoList;\n          return newDetail;\n        });\n      }\n    }\n  };\n\n  const fetch = () => {\n    //fetch todo detail\n    if (actionLoader) setActionLoader(false);\n    setLoader(true);\n    const req = {\n      prescriptionId: activeTodo === null || activeTodo === void 0 ? void 0 : activeTodo._id\n    };\n    axios({ ...getPrescriptionDetail,\n      data: req\n    }).then(data => {\n      if (data.code === 'OK') {\n        var _data$data$attachment;\n\n        if (((_data$data$attachment = data.data.attachments) === null || _data$data$attachment === void 0 ? void 0 : _data$data$attachment.length) > 0 && (data.data.type === TYPE.FTT || data.data.type === TYPE.THIRD_PARTY)) {\n          getRxImage([data.data._id]).then(res => {\n            if (res === null || res === void 0 ? void 0 : res[0]) data.data.attachments = res[0].attachments;\n            setDetail(data.data);\n          }).catch(err => {});\n        } else setDetail(data.data);\n      }\n\n      setLoader(false);\n    }).catch(err => {\n      setLoader(false);\n    });\n  };\n\n  const handleViewPresc = visible => {\n    setVisibleViewer(visible);\n  };\n\n  const handlePerformTodo = request => {\n    setActionLoader(true);\n    axios({ ...performTodo,\n      data: request\n    }).then(data => {\n      if (data.code === 'OK') {\n        afterPerformTodo(data.data);\n      }\n\n      setActionLoader(false);\n    }).catch(err => {\n      setActionLoader(false);\n    });\n  };\n\n  const afterPerformTodo = todo => {\n    //to update detail of active todo only\n    // let allowed = false\n    // allowed = todo.participants.find(x => {\n    //     return x.userId === self.props.authUser.id && x.active\n    // })\n    // todo.allowed = !!allowed\n    let newDetail = { ...detail\n    };\n    newDetail.todos = _.map(detail.todos, function (td) {\n      return todo._id === td._id ? { ...td,\n        status: todo.status,\n        completedAt: todo.completedAt,\n        completedBy: todo.completedBy,\n        notesCount: todo.notesCount\n      } : td;\n    });\n    newDetail.inProcess = todo.prescriptionId.inProcess;\n    setDetail(newDetail);\n  };\n\n  const handlePrescribedFormUpdate = data => {\n    console.log(\"SOCKET PrescribedFormUpdate\", data);\n\n    if ((data === null || data === void 0 ? void 0 : data._id) === (activeTodo === null || activeTodo === void 0 ? void 0 : activeTodo._id) && detail) {\n      setDetail(oldDetail => {\n        let newDetail = { ...oldDetail\n        };\n        newDetail.attachments = data.attachments;\n        newDetail.inProcess = data.inProcess;\n        return newDetail;\n      });\n    }\n  };\n\n  const handleRefreshPresc = () => {\n    var _tempDetail$attachmen;\n\n    setImageLoader(true);\n    let tempDetail = { ...detail\n    };\n\n    if (((_tempDetail$attachmen = tempDetail.attachments) === null || _tempDetail$attachmen === void 0 ? void 0 : _tempDetail$attachmen.length) > 0 && tempDetail.type === TYPE.FTT) {\n      getRxImage([tempDetail._id]).then(res => {\n        if (res === null || res === void 0 ? void 0 : res[0]) tempDetail.attachments = res[0].attachments;\n        setDetail(tempDetail);\n        setImageLoader(false);\n      }).catch(err => {\n        console.log(err);\n        setImageLoader(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tododetails \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, loader ? /*#__PURE__*/React.createElement(Spin, {\n    spinning: loader,\n    str: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 26\n    }\n  }) : detail ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PatientInfoBar, {\n    patient: detail.residentId || {},\n    orderNumber: detail.orderNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  }, detail.inProcess && detail.type === TYPE.FTT ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img_process_tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 45\n    }\n  }, \"Prescription Image Processing\") : null, detail.type === TYPE.COE ? /*#__PURE__*/React.createElement(Medication, {\n    detail: detail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 53\n    }\n  }, `View ${detail.type === TYPE.THIRD_PARTY ? 'E-Processing' : 'Prescription'} - ${detail.orderNumber}`, !detail.inProcess && detail.type === TYPE.FTT ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"refresh\",\n    onClick: handleRefreshPresc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 61\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 117\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Refresh1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 121\n    }\n  }))) : null), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"zoom-in\",\n    onClick: () => handleViewPresc(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 53\n    }\n  }, \"zoom in\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pres_img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 49\n    }\n  }, imageLoader ? /*#__PURE__*/React.createElement(Spin, {\n    spinning: imageLoader,\n    str: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 57\n    }\n  }) : path ? /*#__PURE__*/React.createElement(\"img\", {\n    src: path,\n    alt: \"prescription\",\n    lazy: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 66\n    }\n  }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listing-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TodoActions, {\n    category: TODO_CATEGORY.PRESCRIPTION,\n    todoList: detail.todos,\n    loading: actionLoader,\n    onPerformTodo: handlePerformTodo,\n    authUser: authUser,\n    detail: detail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 37\n    }\n  })))) : /*#__PURE__*/React.createElement(NoData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 27\n    }\n  })), visibleViewer && imageViewer.length > 0 ? /*#__PURE__*/React.createElement(LightBox, {\n    visible: visibleViewer,\n    images: imageViewer,\n    onCloseRequest: () => handleViewPresc(false),\n    curImg: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }) : null);\n};\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  const {\n    authUser,\n    socket\n  } = auth;\n  return {\n    authUser,\n    socket\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(PrescriptionContainer));","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/PrescriptionTodo/components/PrescriptionContainer.js"],"names":["React","Component","useEffect","useState","useMemo","connect","withRouter","axios","getRxImage","getPrescriptionDetail","performTodo","PatientInfoBar","TodoActions","PendingTodo","Spin","LightBox","NoData","getPath","_","prescriptionFormCheck","todoUpdate","prescriptionUpdate","TODO_CATEGORY","STATUS","TYPE","Medication","Refresh1","PrescriptionContainer","props","activeTodo","socket","authUser","loader","setLoader","visibleViewer","setVisibleViewer","actionLoader","setActionLoader","detail","setDetail","imageLoader","setImageLoader","fetch","on","handleTodoUpdate","handlePrescribedFormUpdate","off","prepareAttachments","imageViewer","path","attachments","length","find","x","sequence","Math","max","map","reverse","a","src","data","console","log","size","todo","first","_id","prescriptionId","oldDetail","newDetail","todoList","todos","todoIds","includes","isActive","i","findIndex","splice","afterPerformTodo","push","inProcess","status","id","req","then","code","type","FTT","THIRD_PARTY","res","catch","err","handleViewPresc","visible","handlePerformTodo","request","td","completedAt","completedBy","notesCount","handleRefreshPresc","tempDetail","residentId","orderNumber","COE","PRESCRIPTION","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport axios, { getRxImage } from '../../../services/api/services/common'\nimport { getPrescriptionDetail, performTodo } from '../../../services/api/routes/prescriptionTodo'\nimport { PatientInfoBar, TodoActions, PendingTodo } from '../../../components/Todo';\nimport { Spin, LightBox, NoData } from '../../../components/common'\nimport { getPath } from '../../../util/todo'\nimport _ from 'lodash'\nimport { prescriptionFormCheck, todoUpdate, prescriptionUpdate } from '../../../services/socket/routes/todo'\nimport { TODO_CATEGORY, STATUS } from '../../../constants/todo';\nimport { TYPE } from '../../../constants/prescription'\nimport Medication from './Medications'\nimport { Refresh1 } from '../../../assets/images/pmr/index';\n\nconst PrescriptionContainer = props => {\n\n    const { activeTodo, socket, authUser } = props\n    const [loader, setLoader] = useState(false)\n    const [visibleViewer, setVisibleViewer] = useState(false)\n    const [actionLoader, setActionLoader] = useState(false)\n    const [detail, setDetail] = useState(null)\n    const [imageLoader, setImageLoader] = useState(false)\n\n    useEffect(() => {\n        if (activeTodo)\n            fetch()\n        else\n            setDetail(null)\n    }, [activeTodo])\n\n    // useEffect(() => {\n    //     prepareAttachments()\n    // }, [detail])\n\n    useEffect(() => {\n        //need to give ref of detail\n        if (!detail || !activeTodo)\n            return\n        if (socket) {\n            socket.on(todoUpdate, handleTodoUpdate)\n            // socket.on(prescriptionFormCheck, afterPerformTodo)\n            socket.on(prescriptionUpdate, handlePrescribedFormUpdate)\n            return () => {\n                socket.off(todoUpdate);\n                socket.off(prescriptionUpdate);\n            };\n        }\n    }, [detail, activeTodo])\n\n    const prepareAttachments = useMemo(() => {\n        let imageViewer = [], path = null;\n        if (detail?.attachments?.length > 0) {\n            path = detail.attachments.find(x => x.sequence === Math.max(..._.map(detail.attachments, 'sequence'))).path\n            imageViewer = _.reverse(_.map(detail.attachments, function (a) {\n                a.src = a.path\n                return a\n            }));\n        }\n        return { imageViewer, path }\n    }, [detail])\n    const { imageViewer, path } = prepareAttachments\n\n    const handleTodoUpdate = (data) => {\n        console.log(\"SOCKET handleTodoUpdate -> data\", data)\n        if (!activeTodo || !data || !detail)\n            return\n        // if (typeof data === 'object') {\n        //     // to update after todo actions are performed\n        //     let todo = { ...data }\n        //     if (activeTodo._id === todo._id) {\n        //         afterPerformTodo(todo)\n        //         return\n        //     }\n        // }\n        let length = _.size(data)\n        if (data && data.length) {\n            if (length === 1) {\n                // After prescription create and delete\n                //to update detail of active todo only (broadcast purpose)\n                let todo = _.first(data)\n                if (activeTodo?._id === todo.prescriptionId?._id) {\n                    // let allowed = false\n                    // allowed = todo.participants.find(x => {\n                    //     return x.userId === self.props.authUser.id && x.active\n                    // })\n                    // todo.allowed = !!allowed\n\n                    setDetail(oldDetail => {\n                        let newDetail = { ...oldDetail }\n                        let todoList = [...oldDetail.todos];\n                        let todoIds = _.map(todoList, \"_id\")\n                        if (_.includes(todoIds, todo._id)) {\n                            // if (todo.status === STATUS[\"CANCELLED\"]) {\n                            if (!todo.isActive) {\n                                //delete todo\n                                let i = todoList.findIndex(x => x._id === todo._id)\n                                todoList.splice(i, 1)\n                            } else {\n                                //update\n                                afterPerformTodo(todo)\n                                return\n                            }\n                        } else if (todo.isActive) {\n                            // } else if (todo.status !== STATUS[\"CANCELLED\"]) {\n                            //add todo (second check)\n                            todoList.push(todo);\n                        }\n                        newDetail.todos = todoList\n                        newDetail.inProcess = todo.prescriptionId.inProcess;\n                        return newDetail\n                    })\n\n                }\n            } else {\n                // prescription cancellation\n                setDetail(oldDetail => {\n                    let newDetail = { ...oldDetail }\n                    let todoList = [...oldDetail.todos];\n                    todoList.map(todo => {\n                        if (todo.prescriptionId?._id === activeTodo?._id) {\n                            if (todo.status === STATUS[\"CANCELLED\"]) {\n                                let i = todoList.findIndex(x => x.id === todo._id)\n                                todoList.splice(i, 1)\n                            }\n                        }\n                    })\n                    newDetail.todos = todoList\n                    return newDetail\n                })\n            }\n        }\n    }\n\n    const fetch = () => {\n        //fetch todo detail\n        if (actionLoader)\n            setActionLoader(false)\n        setLoader(true)\n        const req = { prescriptionId: activeTodo?._id }\n        axios({ ...getPrescriptionDetail, data: req }).then(data => {\n            if (data.code === 'OK') {\n                if (data.data.attachments?.length > 0 && (data.data.type === TYPE.FTT\n                    || data.data.type === TYPE.THIRD_PARTY)) {\n                    getRxImage([data.data._id]).then(res => {\n                        if (res?.[0])\n                            data.data.attachments = res[0].attachments\n                        setDetail(data.data)\n                    }).catch(err => { })\n                } else\n                    setDetail(data.data)\n            }\n            setLoader(false)\n        }).catch(err => {\n            setLoader(false)\n        })\n    }\n\n    const handleViewPresc = (visible) => {\n        setVisibleViewer(visible)\n    }\n\n    const handlePerformTodo = (request) => {\n        setActionLoader(true)\n        axios({ ...performTodo, data: request }).then(data => {\n            if (data.code === 'OK') {\n                afterPerformTodo(data.data)\n            }\n            setActionLoader(false)\n        }).catch(err => {\n            setActionLoader(false)\n        })\n    }\n\n    const afterPerformTodo = (todo) => {\n        //to update detail of active todo only\n        // let allowed = false\n        // allowed = todo.participants.find(x => {\n        //     return x.userId === self.props.authUser.id && x.active\n        // })\n        // todo.allowed = !!allowed\n        let newDetail = { ...detail }\n        newDetail.todos = _.map(detail.todos, function (td) {\n            return todo._id === td._id\n                ? {\n                    ...td,\n                    status: todo.status,\n                    completedAt: todo.completedAt,\n                    completedBy: todo.completedBy,\n                    notesCount: todo.notesCount,\n                }\n                : td;\n        });\n        newDetail.inProcess = todo.prescriptionId.inProcess\n        setDetail(newDetail)\n    }\n\n    const handlePrescribedFormUpdate = data => {\n        console.log(\"SOCKET PrescribedFormUpdate\", data)\n        if (data?._id === activeTodo?._id && detail) {\n            setDetail(oldDetail => {\n                let newDetail = { ...oldDetail }\n                newDetail.attachments = data.attachments\n                newDetail.inProcess = data.inProcess\n                return newDetail\n            })\n        }\n    }\n\n    const handleRefreshPresc = () => {\n        setImageLoader(true)\n        let tempDetail = { ...detail }\n        if (tempDetail.attachments?.length > 0 && tempDetail.type === TYPE.FTT) {\n            getRxImage([tempDetail._id]).then(res => {\n                if (res?.[0])\n                    tempDetail.attachments = res[0].attachments\n                setDetail(tempDetail)\n                setImageLoader(false)\n            }).catch(err => {\n                console.log(err)\n                setImageLoader(false)\n            })\n        }\n    }\n\n    return <>\n        <div className=\"tododetails \">\n            {\n                loader ? <Spin spinning={loader} str=\"center\" /> :\n                    detail ?\n                        <>\n                            <PatientInfoBar patient={detail.residentId || {}} orderNumber={detail.orderNumber} />\n                            < div className=\"todo-listing\">\n                                <div className=\"form \">\n                                    {\n                                        detail.inProcess && detail.type === TYPE.FTT ?\n                                            <div className=\"img_process_tag\">Prescription Image Processing</div>\n                                            : null\n                                    }\n                                    {\n                                        detail.type === TYPE.COE ?\n                                            <Medication detail={detail} />\n                                            : <>\n                                                <div className=\"form-title\">\n                                                    <h5>\n                                                        {`View ${detail.type === TYPE.THIRD_PARTY ? 'E-Processing' : 'Prescription'} - ${detail.orderNumber}`}\n                                                        {!detail.inProcess && detail.type === TYPE.FTT ?\n                                                            <span className=\"refresh\" onClick={handleRefreshPresc}> <a> <Refresh1 /></a></span>\n                                                            : null}\n                                                    </h5>\n                                                    <span className=\"zoom-in\" onClick={() => handleViewPresc(true)}>zoom in</span>\n                                                </div>\n\n                                                <div className=\"pres_img\">\n                                                    {imageLoader ?\n                                                        <Spin spinning={imageLoader} str=\"center\" />\n                                                        : path ? <img src={path} alt=\"prescription\" lazy />\n                                                            : null\n                                                    }\n                                                    {/* <img src={require('../../../assets/images/todo/form.png')} alt=\"prescription\" /> */}\n                                                </div>\n                                            </>\n                                    }\n                                </div>\n                                <div className='listing-right'>\n                                    <TodoActions\n                                        category={TODO_CATEGORY.PRESCRIPTION}\n                                        todoList={detail.todos}\n                                        loading={actionLoader}\n                                        onPerformTodo={handlePerformTodo}\n                                        authUser={authUser}\n                                        detail={detail}\n                                    />\n                                </div>\n                            </div></>\n                        : <NoData />\n            }\n        </div >\n        {visibleViewer && imageViewer.length > 0 ?\n            <LightBox visible={visibleViewer}\n                images={imageViewer}\n                onCloseRequest={() => handleViewPresc(false)}\n                curImg={0} />\n            : null\n        }\n    </>\n\n\n}\nconst mapStateToProps = ({ auth }) => {\n    const { authUser, socket } = auth;\n    return { authUser, socket };\n};\nexport default withRouter(connect(mapStateToProps)(PrescriptionContainer));"]},"metadata":{},"sourceType":"module"}