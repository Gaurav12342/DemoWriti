{"ast":null,"code":"import { decryptData } from './Crypto';\nimport { USER_TYPE } from '../constants/User';\nimport { SUB_CATEGORY } from '../constants/todo';\nexport function getOrdersLength(orderList) {\n  let orderSize = orderList.filter(order => !order.cloneFrom).length;\n  return orderSize;\n}\nexport function calculatePercentage(completedOrder, orderList = []) {\n  let orderSize = getOrdersLength(orderList);\n  let percentage = parseInt(completedOrder / orderSize * 100);\n  return percentage;\n}\nexport function isCautionAlertNotes(pmrDetail, defaultToDoCategory) {\n  if (!pmrDetail) return;\n  if ((pmrDetail.checkType === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1 || pmrDetail.checkType === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2) && pmrDetail.checkType !== SUB_CATEGORY.MED_REVIEW.PMR && defaultToDoCategory !== pmrDetail.subCategory //orderlist\n  && pmrDetail.pmrStatusUpdate && pmrDetail.pmrStatusUpdate.latest && pmrDetail.pmrStatusUpdate.latest.type && pmrDetail.pmrStatusUpdate.latest.type !== SUB_CATEGORY.MED_REVIEW.PMR) return true;else return false;\n} //conditions\n\nexport const isDrOrderView = (defaultToDoCategory, authUser) => {\n  if (!authUser) return;\n  return authUser.type === USER_TYPE.HOME.PHYSICIAN || authUser.type === USER_TYPE.HOME.NURSE && defaultToDoCategory === SUB_CATEGORY.MED_REVIEW.PMR;\n},\n      isNrAck = (pmrDetail, order, defaultToDoCategory) => {\n  return (pmrDetail.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1 || defaultToDoCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1) && order.nurseAcknowStatus1 || (pmrDetail.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2 || defaultToDoCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2) && order.nurseAcknowStatus2 || pmrDetail.subCategory === SUB_CATEGORY.MED_REVIEW.PMR;\n},\n      isUndoAck = ({\n  detail,\n  order,\n  defaultToDoCategory\n}) => {\n  return (detail.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1 || defaultToDoCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1) && order.nurseAcknowStatus1 || (detail.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2 || defaultToDoCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2) && order.nurseAcknowStatus2 || detail.subCategory === SUB_CATEGORY.MED_REVIEW.PMR;\n};","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/util/pmr.js"],"names":["decryptData","USER_TYPE","SUB_CATEGORY","getOrdersLength","orderList","orderSize","filter","order","cloneFrom","length","calculatePercentage","completedOrder","percentage","parseInt","isCautionAlertNotes","pmrDetail","defaultToDoCategory","checkType","MED_REVIEW","NURSE_REVIEW_1","NURSE_REVIEW_2","PMR","subCategory","pmrStatusUpdate","latest","type","isDrOrderView","authUser","HOME","PHYSICIAN","NURSE","isNrAck","nurseAcknowStatus1","nurseAcknowStatus2","isUndoAck","detail"],"mappings":"AAAA,SAASA,WAAT,QAA4B,UAA5B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,OAAO,SAASC,eAAT,CAAyBC,SAAzB,EAAoC;AACvC,MAAIC,SAAS,GAAGD,SAAS,CAACE,MAAV,CAAiBC,KAAK,IAAI,CAACA,KAAK,CAACC,SAAjC,EAA4CC,MAA5D;AACA,SAAOJ,SAAP;AACH;AACD,OAAO,SAASK,mBAAT,CAA6BC,cAA7B,EAA6CP,SAAS,GAAG,EAAzD,EAA6D;AAChE,MAAIC,SAAS,GAAGF,eAAe,CAACC,SAAD,CAA/B;AACA,MAAIQ,UAAU,GAAGC,QAAQ,CAAEF,cAAc,GAAGN,SAAlB,GAA+B,GAAhC,CAAzB;AACA,SAAOO,UAAP;AACH;AAED,OAAO,SAASE,mBAAT,CAA6BC,SAA7B,EAAwCC,mBAAxC,EAA6D;AAChE,MAAI,CAACD,SAAL,EACI;AACJ,MAAI,CAACA,SAAS,CAACE,SAAV,KAAwBf,YAAY,CAACgB,UAAb,CAAwBC,cAAhD,IACDJ,SAAS,CAACE,SAAV,KAAwBf,YAAY,CAACgB,UAAb,CAAwBE,cADhD,KAEGL,SAAS,CAACE,SAAV,KAAwBf,YAAY,CAACgB,UAAb,CAAwBG,GAFnD,IAGGL,mBAAmB,KAAKD,SAAS,CAACO,WAHrC,CAGiD;AAHjD,KAIIP,SAAS,CAACQ,eAAV,IAA6BR,SAAS,CAACQ,eAAV,CAA0BC,MAAvD,IACGT,SAAS,CAACQ,eAAV,CAA0BC,MAA1B,CAAiCC,IADpC,IAEAV,SAAS,CAACQ,eAAV,CAA0BC,MAA1B,CAAiCC,IAAjC,KAA0CvB,YAAY,CAACgB,UAAb,CAAwBG,GAN1E,EAQI,OAAO,IAAP,CARJ,KASK,OAAO,KAAP;AACR,C,CAYD;;AACA,OAAO,MACHK,aAAa,GAAG,CAACV,mBAAD,EAAsBW,QAAtB,KAAmC;AAC/C,MAAI,CAACA,QAAL,EAAe;AACf,SAAOA,QAAQ,CAACF,IAAT,KAAkBxB,SAAS,CAAC2B,IAAV,CAAeC,SAAjC,IACFF,QAAQ,CAACF,IAAT,KAAkBxB,SAAS,CAAC2B,IAAV,CAAeE,KAAjC,IACGd,mBAAmB,KAAKd,YAAY,CAACgB,UAAb,CAAwBG,GAFxD;AAGH,CANE;AAAA,MAOHU,OAAO,GAAG,CAAChB,SAAD,EAAYR,KAAZ,EAAmBS,mBAAnB,KAA2C;AACjD,SAAQ,CAACD,SAAS,CAACO,WAAV,KAA0BpB,YAAY,CAACgB,UAAb,CAAwBC,cAAlD,IACLH,mBAAmB,KAAKd,YAAY,CAACgB,UAAb,CAAwBC,cAD5C,KAEJZ,KAAK,CAACyB,kBAFH,IAGF,CAACjB,SAAS,CAACO,WAAV,KAA0BpB,YAAY,CAACgB,UAAb,CAAwBE,cAAlD,IACEJ,mBAAmB,KAAKd,YAAY,CAACgB,UAAb,CAAwBE,cADnD,KAEMb,KAAK,CAAC0B,kBALV,IAMFlB,SAAS,CAACO,WAAV,KAA0BpB,YAAY,CAACgB,UAAb,CAAwBG,GANvD;AAOH,CAfE;AAAA,MAgBHa,SAAS,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAU5B,EAAAA,KAAV;AAAiBS,EAAAA;AAAjB,CAAD,KAA4C;AACpD,SAAQ,CAACmB,MAAM,CAACb,WAAP,KAAuBpB,YAAY,CAACgB,UAAb,CAAwBC,cAA/C,IACLH,mBAAmB,KAAKd,YAAY,CAACgB,UAAb,CAAwBC,cAD5C,KAEJZ,KAAK,CAACyB,kBAFH,IAGF,CAACG,MAAM,CAACb,WAAP,KAAuBpB,YAAY,CAACgB,UAAb,CAAwBE,cAA/C,IACEJ,mBAAmB,KAAKd,YAAY,CAACgB,UAAb,CAAwBE,cADnD,KAEMb,KAAK,CAAC0B,kBALV,IAMFE,MAAM,CAACb,WAAP,KAAuBpB,YAAY,CAACgB,UAAb,CAAwBG,GANpD;AAOH,CAxBE","sourcesContent":["import { decryptData } from './Crypto';\nimport { USER_TYPE } from '../constants/User'\nimport { SUB_CATEGORY } from '../constants/todo';\n\nexport function getOrdersLength(orderList) {\n    let orderSize = orderList.filter(order => !order.cloneFrom).length\n    return orderSize\n}\nexport function calculatePercentage(completedOrder, orderList = []) {\n    let orderSize = getOrdersLength(orderList)\n    let percentage = parseInt((completedOrder / orderSize) * 100)\n    return percentage\n}\n\nexport function isCautionAlertNotes(pmrDetail, defaultToDoCategory) {\n    if (!pmrDetail)\n        return\n    if ((pmrDetail.checkType === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1 ||\n        pmrDetail.checkType === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2)\n        && pmrDetail.checkType !== SUB_CATEGORY.MED_REVIEW.PMR\n        && defaultToDoCategory !== pmrDetail.subCategory //orderlist\n        && (pmrDetail.pmrStatusUpdate && pmrDetail.pmrStatusUpdate.latest\n            && pmrDetail.pmrStatusUpdate.latest.type &&\n            pmrDetail.pmrStatusUpdate.latest.type !== SUB_CATEGORY.MED_REVIEW.PMR)\n    )\n        return true\n    else return false\n}\n\n\n\n\n\n\n\n\n\n\n\n//conditions\nexport const\n    isDrOrderView = (defaultToDoCategory, authUser) => {\n        if (!authUser) return\n        return authUser.type === USER_TYPE.HOME.PHYSICIAN ||\n            (authUser.type === USER_TYPE.HOME.NURSE &&\n                defaultToDoCategory === SUB_CATEGORY.MED_REVIEW.PMR)\n    },\n    isNrAck = (pmrDetail, order, defaultToDoCategory) => {\n        return ((pmrDetail.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1 ||\n            defaultToDoCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1) &&\n            order.nurseAcknowStatus1) ||\n            ((pmrDetail.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2 ||\n                defaultToDoCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2)\n                && order.nurseAcknowStatus2) ||\n            (pmrDetail.subCategory === SUB_CATEGORY.MED_REVIEW.PMR)\n    },\n    isUndoAck = ({ detail, order, defaultToDoCategory }) => {\n        return ((detail.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1 ||\n            defaultToDoCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1) &&\n            order.nurseAcknowStatus1) ||\n            ((detail.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2 ||\n                defaultToDoCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2)\n                && order.nurseAcknowStatus2) ||\n            (detail.subCategory === SUB_CATEGORY.MED_REVIEW.PMR)\n    }"]},"metadata":{},"sourceType":"module"}