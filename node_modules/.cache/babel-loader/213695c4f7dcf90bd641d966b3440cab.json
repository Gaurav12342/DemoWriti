{"ast":null,"code":"import moment from 'moment';\nimport localForage from 'localforage';\n\nfunction checkExcludeOTP(result) {\n  let excludeOTPVerification;\n  let current = moment().toISOString();\n\n  if (moment(current).isAfter(result.extendedTime)) {\n    excludeOTPVerification = false;\n  } else {\n    excludeOTPVerification = true;\n  }\n\n  return excludeOTPVerification;\n}\n\nexport async function getUserDetail(obj) {\n  // check for user existence\n  let exist = false,\n      excludeOTPVerification = false;\n  return localForage.getItem(obj.email).then(value => {\n    if (value) exist = true; //set flag whether to show OTP screen or not\n\n    if (exist) {\n      excludeOTPVerification = checkExcludeOTP(value);\n    }\n\n    return {\n      excludeOTPVerification: excludeOTPVerification\n    };\n  }).catch(error => {\n    console.log(\"getUserDetail -> error\", error);\n  }); // handle errors\n}\nexport async function addUserData(obj) {\n  let extendedTime = moment().add(4, \"hours\").toISOString();\n  var data = {\n    \"extendedTime\": extendedTime,\n    \"email\": obj.email\n  }; // ES6 Promise\n\n  return localForage.setItem(obj.email, data).then(value => {\n    console.log(\"addUserData -> value\", value);\n  }) // do something with \"foo\"\n  .catch(error => {\n    console.log(\"addUserData -> error\", error);\n  }); // handle errors\n}\n;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/services/DBService/auth.js"],"names":["moment","localForage","checkExcludeOTP","result","excludeOTPVerification","current","toISOString","isAfter","extendedTime","getUserDetail","obj","exist","getItem","email","then","value","catch","error","console","log","addUserData","add","data","setItem"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,WAAP,MAAwB,aAAxB;;AAEA,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,MAAIC,sBAAJ;AACA,MAAIC,OAAO,GAAGL,MAAM,GAAGM,WAAT,EAAd;;AACA,MAAIN,MAAM,CAACK,OAAD,CAAN,CAAgBE,OAAhB,CAAwBJ,MAAM,CAACK,YAA/B,CAAJ,EAAkD;AAC9CJ,IAAAA,sBAAsB,GAAG,KAAzB;AACH,GAFD,MAEO;AACHA,IAAAA,sBAAsB,GAAG,IAAzB;AACH;;AACD,SAAOA,sBAAP;AACH;;AAED,OAAO,eAAeK,aAAf,CAA6BC,GAA7B,EAAkC;AACrC;AACA,MAAIC,KAAK,GAAG,KAAZ;AAAA,MAAmBP,sBAAsB,GAAG,KAA5C;AACA,SAAOH,WAAW,CAACW,OAAZ,CAAoBF,GAAG,CAACG,KAAxB,EACFC,IADE,CACIC,KAAD,IAAW;AAEb,QAAIA,KAAJ,EACIJ,KAAK,GAAG,IAAR,CAHS,CAKb;;AACA,QAAIA,KAAJ,EAAW;AACPP,MAAAA,sBAAsB,GAAGF,eAAe,CAACa,KAAD,CAAxC;AACH;;AACD,WAAO;AAAEX,MAAAA,sBAAsB,EAAEA;AAA1B,KAAP;AACH,GAXE,EAYFY,KAZE,CAYKC,KAAD,IAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,KAAtC;AAEH,GAfE,CAAP,CAHqC,CAkB5B;AACZ;AAED,OAAO,eAAeG,WAAf,CAA2BV,GAA3B,EAAgC;AAEnC,MAAIF,YAAY,GAAGR,MAAM,GAAGqB,GAAT,CAAa,CAAb,EAAgB,OAAhB,EAAyBf,WAAzB,EAAnB;AACA,MAAIgB,IAAI,GAAG;AACP,oBAAgBd,YADT;AAEP,aAASE,GAAG,CAACG;AAFN,GAAX,CAHmC,CAQnC;;AACA,SAAOZ,WAAW,CAACsB,OAAZ,CAAoBb,GAAG,CAACG,KAAxB,EAA+BS,IAA/B,EACFR,IADE,CACIC,KAAD,IAAW;AACbG,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCJ,KAApC;AACH,GAHE,EAGG;AAHH,GAIFC,KAJE,CAIKC,KAAD,IAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAApC;AAEH,GAPE,CAAP,CATmC,CAgB1B;AACZ;AAAA","sourcesContent":["import moment from 'moment';\nimport localForage from 'localforage';\n\nfunction checkExcludeOTP(result) {\n    let excludeOTPVerification\n    let current = moment().toISOString();\n    if (moment(current).isAfter(result.extendedTime)) {\n        excludeOTPVerification = false\n    } else {\n        excludeOTPVerification = true\n    }\n    return excludeOTPVerification\n}\n\nexport async function getUserDetail(obj) {\n    // check for user existence\n    let exist = false, excludeOTPVerification = false\n    return localForage.getItem(obj.email)\n        .then((value) => {\n\n            if (value)\n                exist = true\n\n            //set flag whether to show OTP screen or not\n            if (exist) {\n                excludeOTPVerification = checkExcludeOTP(value)\n            }\n            return { excludeOTPVerification: excludeOTPVerification }\n        })\n        .catch((error) => {\n            console.log(\"getUserDetail -> error\", error)\n\n        });  // handle errors\n}\n\nexport async function addUserData(obj) {\n\n    let extendedTime = moment().add(4, \"hours\").toISOString();\n    var data = {\n        \"extendedTime\": extendedTime,\n        \"email\": obj.email\n    };\n\n    // ES6 Promise\n    return localForage.setItem(obj.email, data)\n        .then((value) => {\n            console.log(\"addUserData -> value\", value)\n        })    // do something with \"foo\"\n        .catch((error) => {\n            console.log(\"addUserData -> error\", error)\n\n        });  // handle errors\n};\n\n"]},"metadata":{},"sourceType":"module"}