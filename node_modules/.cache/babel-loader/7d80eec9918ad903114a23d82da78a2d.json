{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/NotesPopup/Upsert.js\";\nimport React, { useState, useEffect } from 'react';\nimport { createForm } from 'rc-form';\nimport Dialog from '../common/Popup/index';\nimport { Plus, Info } from '../../../src/assets/images/popup/index';\nimport Button from '../common/Button';\nimport Select from '../common/Select';\nimport TextArea from '../common/TextArea';\nimport Reminder from '../common/Reminder';\nimport { displayDateTime } from '../../util/moment';\nimport { getUserNameWithDesignation } from '../../util/common';\nimport { priority as masterPriority } from '../../constants/notes';\nimport { X_RAY_TODO_TYPES, TODO_CATEGORY } from './../../constants/todo';\nimport { Toast } from '../common/index';\n\nconst Upsert = props => {\n  const {\n    isEdit,\n    form,\n    onCancel,\n    noteTypes,\n    detail = {},\n    xRayNumber,\n    addButtonLoading\n  } = props;\n  const noteTypeOptions = noteTypes.map(n => ({ ...n,\n    key: n._id,\n    label: n.name,\n    id: n._id,\n    value: n._id\n  })); //console.log(\"ðŸš€ ~ file: Upsert.js ~ line 21 ~ Upsert ~ noteTypeOptions\", noteTypeOptions)\n\n  const [reminder, setReminder] = useState(false);\n  const [note, setNote] = useState(detail.note);\n  const [priority, setPriority] = useState(detail.priority);\n  const [isAlert, setIsAlert] = useState(detail.isAlert || false);\n  const {\n    getFieldDecorator,\n    getFieldValue\n  } = form;\n  useEffect(() => {\n    var _detail$noteType;\n\n    form.setFieldsValue({\n      noteType: (_detail$noteType = detail.noteType) === null || _detail$noteType === void 0 ? void 0 : _detail$noteType._id\n    });\n    setPriority(detail.priority || 1);\n    setNote(detail.note);\n  }, [detail.noteType, detail.note, detail.priority]);\n\n  const handleOk = async () => {\n    const noteType = getFieldValue('noteType');\n\n    if (!note) {\n      Toast.error('Please enter notes');\n      return;\n    }\n\n    if (isEdit) {\n      props.handleUpdate(detail._id, {\n        noteType,\n        // priority,\n        note,\n        isAlert\n      });\n    } else {\n      props.handleAdd({\n        noteType,\n        // priority,\n        note,\n        tags: [],\n        isPublic: true,\n        isAlert\n      });\n    }\n  };\n\n  const handleReminder = visible => {\n    setReminder(visible);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, Object.assign({}, props, {\n    footer: false,\n    customChildren: true,\n    className: \"logout_popup add_notes_warp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content-log\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"name_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, isEdit ? 'Edit' : 'Add', \" Note\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), !!isEdit && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ptrik-notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Created By : \", detail.addedBy && getUserNameWithDesignation(detail.addedBy)), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Created At : \", detail.createdAt && displayDateTime(detail.createdAt))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex j-space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap mb-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"components\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, getFieldDecorator('noteType', {\n    rules: [{\n      required: true,\n      message: \"Please select type\"\n    }]\n  })( /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Note Type\",\n    options: noteTypeOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Alert\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter_value d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"yes\",\n    className: \"filter_check mr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"alert\",\n    id: \"yes\",\n    value: true,\n    checked: isAlert === true,\n    onChange: e => setIsAlert(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, \"Yes\")), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"no\",\n    className: \"filter_check mr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"alert\",\n    id: \"no\",\n    value: false,\n    checked: isAlert === false,\n    onChange: e => setIsAlert(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, \"No\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"additional-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    value: note,\n    onChange: e => setNote(e.target.value),\n    placeholder: \"Add Note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex bottom-doc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, \"Associated with Document \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"color-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, xRayNumber)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex reminder-part j-space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex j-space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex-end f-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"prev-screen-btn gray-btn sh-btn\",\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, \"CANCEL\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    size: \"sm\",\n    loading: addButtonLoading,\n    onClick: handleOk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, isEdit ? 'UPDATE' : 'ADD')))), reminder ? /*#__PURE__*/React.createElement(Reminder, {\n    visible: reminder,\n    onOk: () => handleReminder(false),\n    onCancel: () => handleReminder(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }) : null);\n};\n\nexport default createForm()(Upsert);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/NotesPopup/Upsert.js"],"names":["React","useState","useEffect","createForm","Dialog","Plus","Info","Button","Select","TextArea","Reminder","displayDateTime","getUserNameWithDesignation","priority","masterPriority","X_RAY_TODO_TYPES","TODO_CATEGORY","Toast","Upsert","props","isEdit","form","onCancel","noteTypes","detail","xRayNumber","addButtonLoading","noteTypeOptions","map","n","key","_id","label","name","id","value","reminder","setReminder","note","setNote","setPriority","isAlert","setIsAlert","getFieldDecorator","getFieldValue","setFieldsValue","noteType","handleOk","error","handleUpdate","handleAdd","tags","isPublic","handleReminder","visible","addedBy","createdAt","rules","required","message","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { createForm } from 'rc-form';\nimport Dialog from '../common/Popup/index';\nimport { Plus, Info } from '../../../src/assets/images/popup/index'\nimport Button from '../common/Button'\nimport Select from '../common/Select'\nimport TextArea from '../common/TextArea';\nimport Reminder from '../common/Reminder'\nimport { displayDateTime } from '../../util/moment';\nimport { getUserNameWithDesignation } from '../../util/common';\nimport { priority as masterPriority } from '../../constants/notes';\nimport { X_RAY_TODO_TYPES, TODO_CATEGORY } from './../../constants/todo'\nimport { Toast } from '../common/index';\n\nconst Upsert = (props) => {\n    const { isEdit, form, onCancel, noteTypes, detail = {}, xRayNumber, addButtonLoading } = props;\n\n    const noteTypeOptions = noteTypes.map(n => ({\n        ...n, key: n._id, label: n.name, id: n._id, value: n._id\n    }))\n    //console.log(\"ðŸš€ ~ file: Upsert.js ~ line 21 ~ Upsert ~ noteTypeOptions\", noteTypeOptions)\n    const [reminder, setReminder] = useState(false)\n    const [note, setNote] = useState(detail.note);\n    const [priority, setPriority] = useState(detail.priority)\n    const [isAlert, setIsAlert] = useState(detail.isAlert || false)\n    const { getFieldDecorator, getFieldValue } = form;\n\n    useEffect(() => {\n        form.setFieldsValue({\n            noteType: detail.noteType?._id\n        });\n        setPriority(detail.priority || 1)\n        setNote(detail.note)\n    }, [detail.noteType, detail.note, detail.priority])\n\n    const handleOk = async () => {\n        const noteType = getFieldValue('noteType');\n        if (!note) {\n            Toast.error('Please enter notes')\n            return\n        }\n\n        if (isEdit) {\n            props.handleUpdate(detail._id, {\n                noteType,\n                // priority,\n                note, isAlert\n            })\n        } else {\n            props.handleAdd({\n                noteType,\n                // priority,\n                note,\n                tags: [],\n                isPublic: true,\n                isAlert\n            })\n        }\n    }\n\n    const handleReminder = (visible) => {\n        setReminder(visible)\n    }\n    return <Dialog {...props} footer={false} customChildren={true}\n        className=\"logout_popup add_notes_warp\"\n    >\n        <div className=\"popup-content-log\">\n            <h3 className=\"name_head\">{isEdit ? 'Edit' : 'Add'} Note</h3>\n            <div className=\"bb\"></div>\n            {\n                !!isEdit &&\n                <div className=\"ptrik-notes\">\n                    <span>Created By : {detail.addedBy && getUserNameWithDesignation(detail.addedBy)}</span>\n                    <span>Created At : {detail.createdAt && displayDateTime(detail.createdAt)}</span>\n                </div>\n            }\n\n            <div className=\"d-flex j-space-between\">\n                <form action=\"\">\n                    <div className=\"form_wrap mb-10\">\n                        <div className=\"components\">\n                            {getFieldDecorator('noteType', {\n                                rules: [{ required: true, message: \"Please select type\" }]\n                            })(\n                                <Select\n                                    placeholder=\"Select Note Type\"\n                                    options={noteTypeOptions}\n                                />\n                            )}\n\n                        </div>\n                    </div>\n                </form>\n                <div className=\"alert-box\">\n                    <span>Alert</span>\n                    {/* <div className=\"filter_value d-flex\">\n\n                        <label htmlFor=\"yes\" className=\"filter_check mr-0\">\n                            <input\n                                type=\"checkbox\"\n                                name=\"alert\"\n                                id=\"yes\"\n                                value={true}\n                                checked={isAlert === 'yes'}\n                                onChange={e => setIsAlert(e.target.value)}\n                            />\n                            <span className=\"checkbox\"></span>\n                            <span className=\"lbl\">Yes</span>\n                        </label>\n                        <label htmlFor=\"no\" className=\"filter_check mr-0\">\n                            <input type=\"checkbox\" name=\"alert\" id=\"no\"\n                                value={false}\n                                checked={isAlert === 'no'}\n                                onChange={e => setIsAlert(e.target.value)} />\n                            <span className=\"checkbox\"></span>\n                            <span className=\"lbl\">No</span>\n                        </label>\n                    </div> */}\n\n                    <div className=\"filter_value d-flex\">\n\n                        <label htmlFor=\"yes\" className=\"filter_check mr-0\">\n                            <input\n                                type=\"checkbox\"\n                                name=\"alert\"\n                                id=\"yes\"\n                                value={true}\n                                checked={isAlert === true}\n                                onChange={e => setIsAlert(true)}\n                            />\n                            <span className=\"checkbox\"></span>\n                            <span className=\"lbl\">Yes</span>\n                        </label>\n                        <label htmlFor=\"no\" className=\"filter_check mr-0\">\n                            <input type=\"checkbox\" name=\"alert\" id=\"no\"\n                                value={false}\n                                checked={isAlert === false}\n                                onChange={e => setIsAlert(false)} />\n                            <span className=\"checkbox\"></span>\n                            <span className=\"lbl\">No</span>\n                        </label>\n                    </div>\n                </div>\n\n                {/* <div className=\"alert-box\">\n                    <span>Priority</span>\n                    <div className=\"filter_value d-flex\">\n\n                        <label htmlFor=\"low\" className=\"filter_check\">\n                            <input\n                                type=\"checkbox\"\n                                name=\"priority\"\n                                id=\"low\"\n                                value={masterPriority.LOW}\n                                checked={priority === masterPriority.LOW}\n                                onChange={e => setPriority(masterPriority.LOW)}\n                            />\n                            <span className=\"checkbox\"></span>\n                            <span className=\"lbl\">Low</span>\n                        </label>\n                        <label htmlFor=\"medium\" className=\"filter_check\">\n                            <input type=\"checkbox\" name=\"priority\" id=\"medium\"\n                                value={masterPriority.MEDIUM}\n                                checked={priority === masterPriority.MEDIUM}\n                                onChange={e => setPriority(masterPriority.MEDIUM)} />\n                            <span className=\"checkbox\"></span>\n                            <span className=\"lbl\">Medium</span>\n                        </label>\n                        <label htmlFor=\"high\" className=\"filter_check\">\n                            <input type=\"checkbox\" name=\"priority\" id=\"high\"\n                                value={masterPriority.HIGH}\n                                checked={priority === masterPriority.HIGH}\n                                onChange={e => setPriority(masterPriority.HIGH)} />\n                            <span className=\"checkbox\"></span>\n                            <span className=\"lbl\">High</span>\n                        </label>\n                    </div>\n                </div> */}\n\n            </div>\n\n\n            <div className=\"additional-textarea\">\n                <TextArea value={note} onChange={e => setNote(e.target.value)} placeholder=\"Add Note\"></TextArea>\n            </div>\n\n            <div className=\"d-flex bottom-doc\">\n                <Info />\n                <span className=\"\">Associated with Document </span>\n                <span className=\"color-green\">{xRayNumber}</span>\n                {/* <MathPlus onClick={handleDoc} /> */}\n            </div>\n\n            <div className=\"d-flex reminder-part j-space-between\">\n                <div className=\"d-flex j-space-between\">\n                    {/* <div className=\"plus-icon\">\n                        <div className=\"d-flex mr-20\">\n                            <p className=\"green-bg-plus\" onClick={() => handleReminder(true)}>\n                                <Plus />\n                            </p>\n                            <span className=\"green-text\">Set Reminder</span>\n                        </div>\n                    </div> */}\n                </div>\n                <div className=\"d-flex-end f-end\">\n                    <Button\n                        className=\"prev-screen-btn gray-btn sh-btn\"\n                        onClick={onCancel}\n                    >\n                        CANCEL\n                    </Button>\n                    <Button type=\"primary\" size=\"sm\" loading={addButtonLoading} onClick={handleOk}>\n                        {isEdit ? 'UPDATE' : 'ADD'}\n                    </Button>\n                </div>\n            </div>\n        </div>\n\n        {reminder ?\n            <Reminder\n                visible={reminder}\n                onOk={() => handleReminder(false)}\n                onCancel={() => handleReminder(false)}\n            />\n            : null\n        }\n\n    </Dialog >\n}\n\nexport default createForm()(Upsert)"]},"metadata":{},"sourceType":"module"}