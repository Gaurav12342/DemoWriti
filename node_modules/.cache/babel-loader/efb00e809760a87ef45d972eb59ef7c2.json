{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/common/Input.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Pvisible, Punvisible } from '../../assets/images/index';\nimport { ChevronDown, Clear } from \"../../assets/images/index\";\n\nconst appendIcon = opt => {\n  if (opt.inputIcon) {\n    if (opt.allowClear && opt.value) return null;else return opt.inputIcon;\n  }\n\n  return null;\n};\n\nconst Input = ({\n  componentClass,\n  onClear,\n  onSearch,\n  isSearch,\n  allowClear,\n  hideshowpasschange,\n  show,\n  ispass,\n  clearClassName,\n  ...props\n}) => {\n  const handleClear = e => {\n    e.stopPropagation();\n    if (onClear) onClear();\n    props.onChange([]);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    onKeyDown: e => {\n      if (isSearch && (e.which === 13 || e.keyCode === 13) && onSearch) {\n        console.log(\"e.target.value\", e.target.value);\n        onSearch(e.target.value);\n        e.preventDefault();\n      }\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })), ispass ? /*#__PURE__*/React.createElement(React.Fragment, null, show ? /*#__PURE__*/React.createElement(Pvisible, {\n    onClick: hideshowpasschange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(Punvisible, {\n    onClick: hideshowpasschange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 64\n    }\n  })) : null, allowClear && props.value && !props.disabled ? clearClassName ? /*#__PURE__*/React.createElement(Clear, {\n    className: clearClassName,\n    onClick: handleClear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Clear, {\n    onClick: handleClear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }) : null, appendIcon(props));\n};\n\nexport default Input;\nInput.defaultProps = {\n  className: \"form_control\",\n  // className: \"inputForm\",\n  componentClass: \"\",\n  allowClear: false,\n  ispass: false,\n  show: false\n};\nInput.propTypes = {\n  className: PropTypes.string,\n  componentClass: PropTypes.string,\n  allowClear: PropTypes.bool,\n  onClear: PropTypes.func,\n  ispass: PropTypes.bool,\n  show: PropTypes.bool,\n  hideshowpasschange: PropTypes.func\n};","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/common/Input.js"],"names":["React","useState","PropTypes","Pvisible","Punvisible","ChevronDown","Clear","appendIcon","opt","inputIcon","allowClear","value","Input","componentClass","onClear","onSearch","isSearch","hideshowpasschange","show","ispass","clearClassName","props","handleClear","e","stopPropagation","onChange","which","keyCode","console","log","target","preventDefault","disabled","defaultProps","className","propTypes","string","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Pvisible, Punvisible } from '../../assets/images/index'\nimport { ChevronDown, Clear } from \"../../assets/images/index\";\n\nconst appendIcon = (opt) => {\n  if (opt.inputIcon) {\n    if (opt.allowClear && opt.value)\n      return null\n    else return opt.inputIcon\n  } return null\n}\n\nconst Input = ({\n  componentClass,\n  onClear,\n  onSearch,\n  isSearch,\n  allowClear,\n  hideshowpasschange,\n  show,\n  ispass,\n  clearClassName,\n  ...props\n}) => {\n\n  const handleClear = e => {\n    e.stopPropagation();\n    if(onClear)\n    onClear();\n    props.onChange([])\n  }\n\n  return (\n    <>\n      {/* <div className={\"components \" + componentClass}> */}\n      <input\n        type=\"text\"\n        onKeyDown={(e) => {\n          if (isSearch && (e.which === 13 || e.keyCode === 13) && onSearch) {\n            console.log(\"e.target.value\", e.target.value);\n            onSearch(e.target.value);\n            e.preventDefault();\n          }\n        }}\n        {...props}\n      />\n      {\n        ispass ?\n          <>{\n            show ? <Pvisible onClick={hideshowpasschange} /> : <Punvisible onClick={hideshowpasschange} />\n          }\n          </> : null\n      }\n\n      {allowClear && props.value && !props.disabled ? (\n        clearClassName ?\n          <Clear className={clearClassName} onClick={handleClear} /> :\n          <Clear onClick={handleClear} />\n      ) : null}\n      {appendIcon(props)}\n      {/* {appendIcon({ inputIcon, allowClear, value: props.value })} */}\n      {/* </div> */}\n    </>\n  );\n};\n\nexport default Input;\nInput.defaultProps = {\n  className: \"form_control\",\n\n  // className: \"inputForm\",\n  componentClass: \"\",\n  allowClear: false,\n  ispass: false,\n  show: false\n};\nInput.propTypes = {\n  className: PropTypes.string,\n  componentClass: PropTypes.string,\n  allowClear: PropTypes.bool,\n  onClear: PropTypes.func,\n  ispass: PropTypes.bool,\n  show: PropTypes.bool,\n  hideshowpasschange: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}