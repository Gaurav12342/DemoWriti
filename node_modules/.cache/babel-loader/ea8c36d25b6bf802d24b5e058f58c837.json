{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Customers/Clientele/components/SettingModal.js\";\nimport React, { useEffect } from \"react\";\nimport { createForm } from \"rc-form\";\nimport Modal from '../../../../components/common/Popup';\nimport { Toast } from '../../../../components/common';\nimport Setting from './SettingForm';\nimport axios from \"../../../../services/api/services/common\";\nimport { UpsertSetting, pharmacyUpdate } from \"../../../../services/api/routes/customer\";\nimport { USER_TYPE } from \"../../../../constants/User\";\nimport { CLIENTELE_TYPE } from \"../../../../constants/Customer\";\n\nconst SettingModal = props => {\n  const {\n    form,\n    detail,\n    visible,\n    onCancel,\n    queryData,\n    authUser\n  } = props;\n  useEffect(() => {\n    if (visible && detail && detail.assignedSubscriptionGroupId && form) {\n      if (!form.getFieldValue('assignedSubscriptionGroupId')) form.setFieldsValue({\n        assignedSubscriptionGroupId: detail.assignedSubscriptionGroupId\n      });\n    }\n  }, [detail, visible, form]);\n\n  const handleSave = async () => {\n    form.validateFields(async (err, values) => {\n      if (err) return;\n      let req = { ...values\n      },\n          url,\n          res;\n\n      if (queryData === CLIENTELE_TYPE.PHARMACY) {\n        url = pharmacyUpdate.url + '/' + detail._id;\n        res = await axios({ ...pharmacyUpdate,\n          url,\n          data: req\n        });\n      } else {\n        url = UpsertSetting.url + detail._id;\n        res = await axios({ ...UpsertSetting,\n          url,\n          data: req\n        });\n      }\n\n      if (res) {\n        if (res && res.code === 'OK') {\n          Toast.success(res.message);\n          onCancel(res.data);\n        } else Toast.error(res.message);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    style: {\n      width: '600px'\n    },\n    visible: visible,\n    title: `Update ${queryData === CLIENTELE_TYPE.PHARMACY ? 'Pharmacy' : 'Home'} Setting`,\n    footer: null,\n    onCancel: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Setting, {\n    form: form,\n    queryData: queryData,\n    col: \"col-12\",\n    isModal: true,\n    onSave: handleSave,\n    onCancel: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default createForm()(SettingModal);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Customers/Clientele/components/SettingModal.js"],"names":["React","useEffect","createForm","Modal","Toast","Setting","axios","UpsertSetting","pharmacyUpdate","USER_TYPE","CLIENTELE_TYPE","SettingModal","props","form","detail","visible","onCancel","queryData","authUser","assignedSubscriptionGroupId","getFieldValue","setFieldsValue","handleSave","validateFields","err","values","req","url","res","PHARMACY","_id","data","code","success","message","error","width"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { createForm } from \"rc-form\";\nimport Modal from '../../../../components/common/Popup'\nimport { Toast } from '../../../../components/common'\nimport Setting from './SettingForm'\nimport axios from \"../../../../services/api/services/common\";\nimport { UpsertSetting, pharmacyUpdate } from \"../../../../services/api/routes/customer\";\nimport { USER_TYPE } from \"../../../../constants/User\";\nimport { CLIENTELE_TYPE } from \"../../../../constants/Customer\";\n\nconst SettingModal = props => {\n\n    const { form, detail, visible, onCancel, queryData, authUser } = props\n\n    useEffect(() => {\n        if (visible && detail && detail.assignedSubscriptionGroupId && form) {\n            if (!form.getFieldValue('assignedSubscriptionGroupId'))\n                form.setFieldsValue({ assignedSubscriptionGroupId: detail.assignedSubscriptionGroupId })\n        }\n    }, [detail, visible, form])\n\n    const handleSave = async () => {\n        form.validateFields(async (err, values) => {\n            if (err)\n                return\n            let req = {\n                ...values,\n            }, url, res\n            if (queryData === CLIENTELE_TYPE.PHARMACY) {\n                url = pharmacyUpdate.url + '/' + detail._id\n                res = await axios({ ...pharmacyUpdate, url, data: req })\n            } else {\n                url = UpsertSetting.url + detail._id\n                res = await axios({ ...UpsertSetting, url, data: req })\n            }\n            if (res) {\n                if (res && res.code === 'OK') {\n                    Toast.success(res.message)\n                    onCancel(res.data)\n                } else\n                    Toast.error(res.message)\n            }\n        })\n    }\n\n    return <>\n        <Modal style={{ width: '600px' }}\n            visible={visible}\n            title={`Update ${queryData === CLIENTELE_TYPE.PHARMACY ? 'Pharmacy' : 'Home'} Setting`}\n            footer={null}\n            onCancel={onCancel}\n        >\n            <Setting form={form} queryData={queryData} col='col-12'\n                isModal={true}\n                onSave={handleSave}\n                onCancel={onCancel} />\n        </Modal>\n    </>\n}\n\nexport default createForm()(SettingModal)"]},"metadata":{},"sourceType":"module"}