{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/PmrTodo/components/OrderList.js\";\nimport React, { Component, useEffect, useState, useMemo } from 'react';\nimport { displayDateTime } from '../../../util/moment';\nimport { Input, Search, Spin, Toast, ConfirmPopup } from '../../../components/common/index';\nimport DiscontActionModal from '../../../components/common/Popup/action-popup';\nimport { SUB_CATEGORY, STATUS } from '../../../constants/todo';\nimport PmrOrder from './PmrOrder';\nimport _ from 'lodash';\nimport { isDrOrderView, isNrAck, isUndoAck, getOrdersLength } from '../../../util/pmr';\nimport { PMR_ORDER, KROLL_ORDER_STATUS } from '../../../constants/pmr';\nimport moment from 'moment';\nimport { displayPmrProcess } from '../../../util/todo';\n\nfunction getCheckedDC(order) {\n  // To get Discont order for D/C & New , D/C Edit \n  let cloned = [];\n  cloned = order.clonedOrders.filter(x => x.cloneFrom); // if cloned then take status of cloned order\n\n  let status = cloned.length ? cloned[0].status : order.status;\n  return status;\n}\n\nconst lower = (val = '') => val.trim().toLowerCase();\n\nconst TableHeader = ({\n  query,\n  authUser\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \" \", isDrOrderView(query.subCategory, authUser) ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-block bb head-ack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rate-box RPN-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"order-d-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"Order\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ack-block pt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 50\n    }\n  }, \"Cont.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ack-block pt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 50\n    }\n  }, \"D/C\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ack-block pt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 50\n    }\n  }, \"Hold\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-block bb bt head-ack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rate-box RPN-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"order-d-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 53\n    }\n  }, \"Order\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ack-block pt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 50\n    }\n  }, \"Ack\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ack-block pt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 50\n    }\n  }, \"Edit\"))));\n};\n\nconst OrderList = props => {\n  var _detail$pmrStatusUpda, _detail$pmrStatusUpda2, _detail$pmrStatusUpda3, _activeTodo$todoDetai;\n\n  const {\n    detail,\n    setAddModalVisible,\n    orderListLoader,\n    isEditMode,\n    activeTodo,\n    onAddOrder,\n    onEditOrder,\n    onNurseAck,\n    onDrAck,\n    query,\n    authUser,\n    onUpdateOrder,\n    onAllNurseAck,\n    handleOrderRef\n  } = props;\n  const originalRef = React.useRef([]);\n  const [search, setSearch] = useState('');\n  const [original, setOriginal] = useState([]);\n  const [visibleDCOrder, setVisibleDCOrder] = useState(false);\n  const [orderStatus, setOrderStatus] = useState(0);\n  const [curOrder, setCurOrder] = useState(null);\n  const [confirmMsg, setConfirmMsg] = useState('');\n  const isAllAck = useMemo(() => getOrdersLength(detail.orderList) === detail.completedOrder);\n  useEffect(() => {\n    if (detail.orderList) {\n      let orderList = _.cloneDeep(detail.orderList);\n\n      let cloned = [],\n          tempOriginal = [];\n      orderList.map(order => {\n        if (order.cloneFrom) {\n          cloned.push(order);\n        } else {\n          tempOriginal.push(order); // console.log(\"original\", original)\n        }\n      });\n      cloned = _.groupBy(cloned, 'cloneFrom');\n\n      if (detail.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1) {\n        let assig = [],\n            notAssig = [];\n        assig = tempOriginal.filter(x => x.nurseAcknowStatus1);\n        notAssig = tempOriginal.filter(x => !x.nurseAcknowStatus1);\n        tempOriginal = notAssig.concat(assig);\n      } else if (detail.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2) {\n        let assig = [],\n            notAssig = [];\n        assig = tempOriginal.filter(x => x.nurseAcknowStatus2);\n        notAssig = tempOriginal.filter(x => !x.nurseAcknowStatus2);\n        tempOriginal = notAssig.concat(assig);\n      } else if (detail.subCategory === SUB_CATEGORY.MED_REVIEW.PMR) {\n        let assig = [],\n            notAssig = [];\n        assig = tempOriginal.filter(x => {\n          let status = cloned[x._id] ? cloned[x._id][0].status : x.status;\n          return status === PMR_ORDER.STATUS[\"CONTINUE\"] || status === PMR_ORDER.STATUS[\"HOLD\"] || status === PMR_ORDER.STATUS[\"DISCONTINUE\"];\n        });\n        notAssig = tempOriginal.filter(x => !assig.includes(x));\n        tempOriginal = notAssig.concat(assig);\n      }\n\n      tempOriginal.map(order => {\n        let clonedOrders = [],\n            clonedOrderObj = null;\n        order.isClonedExist = cloned[order._id] ? true : false;\n        clonedOrders.push(order);\n\n        if (cloned[order._id]) {\n          //order.isClonedExist = true\n          clonedOrderObj = cloned[order._id][0];\n          clonedOrders = clonedOrders.concat(cloned[order._id]);\n        }\n\n        order.clonedOrders = clonedOrders;\n        return order;\n      });\n      originalRef.current = [...tempOriginal];\n      setOriginal(tempOriginal);\n    }\n  }, [detail]);\n\n  const handleNurseAck = (e, params) => {\n    if (!showDivDisable(e)) return;\n    const {\n      order\n    } = params;\n    let type = params.type;\n\n    if (type === 'EDIT BY NURSE') {\n      onEditOrder(params);\n      return;\n    }\n\n    type = isUndoAck({\n      order,\n      detail,\n      defaultToDoCategory: query.subCategory\n    }) ? 'UNDO BY NURSE' : 'ACK BY NURSE';\n    let request = {\n      \"pmrOrderId\": order._id\n    };\n\n    if (type === 'ACK BY NURSE') {\n      request.nurseAcknowStatus = true;\n      console.log(\"handleNurseAck -> request\", request);\n      onNurseAck(request);\n    } else if (type === 'UNDO BY NURSE') {\n      request.nurseAcknowStatus = false;\n      onNurseAck(request);\n    }\n  };\n\n  const handleSearch = e => {\n    const searchTerm = lower(e.target.value);\n    const originalData = [...originalRef.current];\n    const filtered = originalData.filter(data => {\n      var _data$drug;\n\n      return lower(data === null || data === void 0 ? void 0 : (_data$drug = data.drug) === null || _data$drug === void 0 ? void 0 : _data$drug.name).includes(searchTerm.trim());\n    });\n    setOriginal([...filtered]);\n  };\n\n  const handleDrAck = (e, params) => {\n    if (!showDivDisable(e)) return;\n    let {\n      order\n    } = params;\n    let newOrderStatus = Number(e.target.value);\n    let prevent = preventOrderUpdate(order, newOrderStatus);\n    if (prevent) return;\n    setOrderStatus(newOrderStatus);\n\n    if (newOrderStatus === PMR_ORDER.STATUS.CONTINUE && order.krollOrderStatus !== KROLL_ORDER_STATUS.SUSPENDED) {\n      // Continue order\n      updateOrderStatus(newOrderStatus, order);\n    } else if (newOrderStatus === PMR_ORDER.STATUS.CONTINUE && order.krollOrderStatus === KROLL_ORDER_STATUS.SUSPENDED) {\n      // Continue order & Suspended\n      handleVisibleDC(true, order);\n      setOrderStatus(newOrderStatus);\n    } else if (newOrderStatus === PMR_ORDER.STATUS.DISCONTINUE) {\n      handleVisibleDC(true, order);\n    } else if (newOrderStatus === PMR_ORDER.STATUS.HOLD && order.krollOrderStatus !== KROLL_ORDER_STATUS.SUSPENDED) {\n      // Hold order\n      updateOrderStatus(newOrderStatus, order);\n    } else if (newOrderStatus === PMR_ORDER.STATUS.HOLD && order.krollOrderStatus === KROLL_ORDER_STATUS.SUSPENDED) {\n      // Hold order && suspended\n      handleVisibleDC(true, order);\n      setOrderStatus(newOrderStatus);\n    }\n  };\n\n  const handleVisibleDC = (visible, ordreObj, subact, date) => {\n    //handle discontinue actions\n    setVisibleDCOrder(visible);\n    setCurOrder(ordreObj);\n\n    if (subact) {\n      if (subact === PMR_ORDER.STATUS.CONTINUE) updateOrderStatus(PMR_ORDER.STATUS.CONTINUE, curOrder);else if (subact === 'SUSPEND') updateOrderStatus('SUSPEND', curOrder);else if (subact === PMR_ORDER.STATUS.HOLD) updateOrderStatus(PMR_ORDER.STATUS.HOLD, curOrder, date);else if (subact === 'DC') updateOrderStatus(PMR_ORDER.STATUS.DISCONTINUE, curOrder);else if (subact === 'EDIT') onEditOrder({\n        type: PMR_ORDER.STATUS.DISCONTINUE,\n        order: curOrder\n      });else if (subact === 'DC_NEW') onEditOrder({\n        type: PMR_ORDER.STATUS.DISCONTINUE,\n        order: curOrder,\n        isdcNew: true\n      });\n    }\n  };\n\n  const updateOrderStatus = (status, order, date) => {\n    setCheckedDc(status, order); // to set radio value\n    //prepare request for doctor ack\n\n    let request = {\n      \"pmrOrderId\": order._id,\n      \"docStatusUpdate\": status,\n      \"status\": status\n    };\n\n    if (order.krollOrderStatus === KROLL_ORDER_STATUS.SUSPENDED) {\n      if (status === PMR_ORDER.STATUS.CONTINUE && order.krollOrderStatus === KROLL_ORDER_STATUS.SUSPENDED) {\n        // Continue order\n        request = { ...request,\n          \"docStatusUpdate\": PMR_ORDER.STATUS.CONTINUE,\n          \"status\": PMR_ORDER.STATUS.CONTINUE\n        };\n      } else if (status === 'SUSPEND' && order.krollOrderStatus === KROLL_ORDER_STATUS.SUSPENDED) {\n        // Continue to Suspend order\n        request = { ...request,\n          \"docStatusUpdate\": PMR_ORDER.STATUS.HOLD,\n          \"status\": PMR_ORDER.STATUS.HOLD\n        };\n      } else if (status === PMR_ORDER.STATUS.HOLD && date && order.krollOrderStatus === KROLL_ORDER_STATUS.SUSPENDED) {\n        //    Hold Order Until Date\n        // this.setState({ visibleOrderStatus: '' })\n        request = { ...request,\n          \"docStatusUpdate\": status,\n          \"status\": PMR_ORDER.STATUS.HOLD,\n          \"holdUntil\": moment(date).toISOString()\n        };\n      } else if (status === PMR_ORDER.STATUS.HOLD && order.krollOrderStatus === KROLL_ORDER_STATUS.SUSPENDED) {\n        //    Hold Order \n        request = { ...request,\n          \"docStatusUpdate\": status,\n          \"status\": PMR_ORDER.STATUS.HOLD\n        };\n      } else if (status === PMR_ORDER.STATUS.DISCONTINUE) {\n        request = { ...request,\n          \"subActionType\": PMR_ORDER.SUB_ACTION.DISCONTINUE,\n          \"status\": PMR_ORDER.STATUS.DISCONTINUE\n        };\n      }\n    }\n\n    handleVisibleDC(false);\n    onDrAck(request);\n  };\n\n  const setCheckedDc = (e, order) => {\n    let tempOrig = [...original];\n    tempOrig.map(x => {\n      if (x._id === order._id) {\n        x.clonedOrders = x.clonedOrders.map(cx => {\n          if (cx._id === order._id) {\n            cx.status = e;\n          }\n\n          return cx;\n        });\n      }\n\n      return x;\n    });\n    setOriginal(tempOrig);\n  };\n\n  const preventOrderUpdate = (order, status) => {\n    let cloned = [];\n    cloned = order.clonedOrders.filter(x => x.cloneFrom);\n    if (cloned.length) order = cloned[0]; //getting cloned orders\n    //Prevent for already ack order with the same status\n\n    if (status === order.status) return true;else return false;\n  };\n\n  const showDivDisable = e => {\n    if (!detail.isDiv) {\n      // if (!this.onNotesClick) {\n      e.preventDefault(); // Don't show message on 'Notes'\n\n      Toast.warn(\"You do not have the permission to update the PMR order status\");\n      return false; // }\n    } else return true;\n  };\n\n  const handleNurseAllAck = () => {\n    setConfirmMsg(`Are you sure you want to proceed without changes?`);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-Nurse-prep w100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pro-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }, ((_detail$pmrStatusUpda = detail.pmrStatusUpdate) === null || _detail$pmrStatusUpda === void 0 ? void 0 : (_detail$pmrStatusUpda2 = _detail$pmrStatusUpda.latest) === null || _detail$pmrStatusUpda2 === void 0 ? void 0 : _detail$pmrStatusUpda2.message) || displayPmrProcess((_detail$pmrStatusUpda3 = detail.pmrStatusUpdate) === null || _detail$pmrStatusUpda3 === void 0 ? void 0 : _detail$pmrStatusUpda3.latest), (activeTodo === null || activeTodo === void 0 ? void 0 : (_activeTodo$todoDetai = activeTodo.todoDetail) === null || _activeTodo$todoDetai === void 0 ? void 0 : _activeTodo$todoDetai.status) === STATUS[\"UNDO\"] && detail.editExpireTime ? ` can be edit until ${displayDateTime(detail.editExpireTime)}` : ''), /*#__PURE__*/React.createElement(\"div\", {\n    style: !detail.isDiv ? {\n      pointerEvents: 'none',\n      opacity: '0.5'\n    } : {\n      cursor: 'pointer'\n    },\n    className: \"flex-block\",\n    onClick: () => setAddModalVisible(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"green-bg mr-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../NursePrep/img/plus.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 21\n    }\n  }, \"Add New\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"med_ack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group search-box mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    allowClear: true,\n    placeholder: \"Medication\",\n    style: {\n      width: '165px'\n    },\n    value: search,\n    onChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 21\n    }\n  })), !isDrOrderView(query.subCategory, authUser) ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ack-block\",\n    onClick: handleNurseAllAck,\n    style: !detail.isDiv || orderListLoader || isAllAck ? {\n      pointerEvents: 'none',\n      opacity: '0.5'\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"checkbox2\",\n    checked: isAllAck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"checkbox2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 29\n    }\n  }, \"Acknowledge all orders\")) : null), /*#__PURE__*/React.createElement(TableHeader, {\n    query: query,\n    authUser: authUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scroll-block\",\n    style: !detail.isDiv ? {\n      opacity: '0.5'\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }\n  }, orderListLoader ? /*#__PURE__*/React.createElement(Spin, {\n    str: \"center\",\n    spinning: orderListLoader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 25\n    }\n  }) : original.map(order => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-block bb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"resident-detail rate-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 33\n      }\n    }, order.clonedOrders.map((corder, orderIndex) => {\n      return /*#__PURE__*/React.createElement(PmrOrder, {\n        key: corder._id,\n        pmrOrder: corder,\n        detail: detail,\n        query: query,\n        authUser: authUser,\n        onUpdateOrder: onUpdateOrder,\n        handleOrderRef: handleOrderRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 52\n        }\n      });\n    })), isDrOrderView(query.subCategory, authUser) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ack-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"round\",\n      onClick: e => handleDrAck(e, {\n        order: order\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"cont\" + order._id,\n      value: PMR_ORDER.STATUS.CONTINUE,\n      checked: getCheckedDC(order) === PMR_ORDER.STATUS.CONTINUE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"cont\" + order._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ack-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"round\",\n      onClick: e => handleDrAck(e, {\n        order: order\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"dc\" + order._id,\n      value: PMR_ORDER.STATUS.DISCONTINUE,\n      checked: getCheckedDC(order) === PMR_ORDER.STATUS.DISCONTINUE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"dc\" + order._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ack-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"round\",\n      onClick: e => handleDrAck(e, {\n        order: order\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"hold\" + order._id,\n      type: \"checkbox\",\n      value: PMR_ORDER.STATUS.HOLD,\n      checked: getCheckedDC(order) === PMR_ORDER.STATUS.HOLD ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"hold\" + order._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 53\n      }\n    })))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ack-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"round\",\n      onClick: e => handleNurseAck(e, {\n        order: order\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"checkbox1\",\n      checked: isNrAck(detail, order, query.subCategory),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"checkbox1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ack-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 45\n      }\n    }, !isNrAck(detail, order, query.subCategory) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"round\",\n      onClick: e => handleNurseAck(e, {\n        type: 'EDIT BY NURSE',\n        order: order\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 57\n      }\n    })))));\n  }))), visibleDCOrder ? /*#__PURE__*/React.createElement(DiscontActionModal, {\n    visible: visibleDCOrder,\n    onCancel: (subact, date) => handleVisibleDC(false, null, subact, date),\n    onUpdateOrderStatus: updateOrderStatus,\n    order: curOrder,\n    orderStatus: orderStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 17\n    }\n  }) : null, confirmMsg ? /*#__PURE__*/React.createElement(ConfirmPopup, {\n    title: confirmMsg,\n    okText: \"Yes\",\n    visible: !!confirmMsg,\n    onCancel: () => {\n      setConfirmMsg('');\n    },\n    onOk: () => {\n      setConfirmMsg('');\n      onAllNurseAck();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 17\n    }\n  }) : null);\n};\n\nexport default OrderList;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/PmrTodo/components/OrderList.js"],"names":["React","Component","useEffect","useState","useMemo","displayDateTime","Input","Search","Spin","Toast","ConfirmPopup","DiscontActionModal","SUB_CATEGORY","STATUS","PmrOrder","_","isDrOrderView","isNrAck","isUndoAck","getOrdersLength","PMR_ORDER","KROLL_ORDER_STATUS","moment","displayPmrProcess","getCheckedDC","order","cloned","clonedOrders","filter","x","cloneFrom","status","length","lower","val","trim","toLowerCase","TableHeader","query","authUser","subCategory","OrderList","props","detail","setAddModalVisible","orderListLoader","isEditMode","activeTodo","onAddOrder","onEditOrder","onNurseAck","onDrAck","onUpdateOrder","onAllNurseAck","handleOrderRef","originalRef","useRef","search","setSearch","original","setOriginal","visibleDCOrder","setVisibleDCOrder","orderStatus","setOrderStatus","curOrder","setCurOrder","confirmMsg","setConfirmMsg","isAllAck","orderList","completedOrder","cloneDeep","tempOriginal","map","push","groupBy","MED_REVIEW","NURSE_REVIEW_1","assig","notAssig","nurseAcknowStatus1","concat","NURSE_REVIEW_2","nurseAcknowStatus2","PMR","_id","includes","clonedOrderObj","isClonedExist","current","handleNurseAck","e","params","showDivDisable","type","defaultToDoCategory","request","nurseAcknowStatus","console","log","handleSearch","searchTerm","target","value","originalData","filtered","data","drug","name","handleDrAck","newOrderStatus","Number","prevent","preventOrderUpdate","CONTINUE","krollOrderStatus","SUSPENDED","updateOrderStatus","handleVisibleDC","DISCONTINUE","HOLD","visible","ordreObj","subact","date","isdcNew","setCheckedDc","toISOString","SUB_ACTION","tempOrig","cx","isDiv","preventDefault","warn","handleNurseAllAck","pmrStatusUpdate","latest","message","todoDetail","editExpireTime","pointerEvents","opacity","cursor","require","width","corder","orderIndex"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState, useMemo } from 'react';\nimport { displayDateTime } from '../../../util/moment'\nimport { Input, Search, Spin, Toast, ConfirmPopup } from '../../../components/common/index';\nimport DiscontActionModal from '../../../components/common/Popup/action-popup';\nimport { SUB_CATEGORY, STATUS } from '../../../constants/todo';\nimport PmrOrder from './PmrOrder'\nimport _ from 'lodash'\nimport { isDrOrderView, isNrAck, isUndoAck, getOrdersLength } from '../../../util/pmr'\nimport { PMR_ORDER, KROLL_ORDER_STATUS } from '../../../constants/pmr'\nimport moment from 'moment'\nimport { displayPmrProcess } from '../../../util/todo';\nfunction getCheckedDC(order) {\n    // To get Discont order for D/C & New , D/C Edit \n    let cloned = []\n    cloned = order.clonedOrders.filter(x => x.cloneFrom)\n    // if cloned then take status of cloned order\n    let status = cloned.length ? cloned[0].status : order.status\n    return status\n}\n\nconst lower = (val = '') => val.trim().toLowerCase();\n\nconst TableHeader = ({ query, authUser }) => {\n\n    return <> {\n        isDrOrderView(query.subCategory, authUser) ?\n            <div className=\"flex-block bb head-ack\" >\n                <div className=\"rate-box RPN-block\">\n                    <span className=\"order-d-text\">Order</span>\n                </div>\n                <div className=\"ack-block pt-10\"><span>Cont.</span></div>\n                <div className=\"ack-block pt-10\"><span>D/C</span></div>\n                <div className=\"ack-block pt-10\"><span>Hold</span></div>\n            </div > :\n            <div className=\"flex-block bb bt head-ack\">\n                <div className=\"rate-box RPN-block\"><span className=\"order-d-text\">Order</span>\n                </div>\n                <div className=\"ack-block pt-10\"><span>Ack</span></div>\n                <div className=\"ack-block pt-10\"><span>Edit</span></div>\n            </div>\n    }\n    </>\n}\n\nconst OrderList = props => {\n    const { detail, setAddModalVisible, orderListLoader, isEditMode, activeTodo,\n        onAddOrder, onEditOrder, onNurseAck, onDrAck, query, authUser, onUpdateOrder, onAllNurseAck, handleOrderRef } = props;\n\n    const originalRef = React.useRef([])\n    const [search, setSearch] = useState('')\n    const [original, setOriginal] = useState([])\n    const [visibleDCOrder, setVisibleDCOrder] = useState(false)\n    const [orderStatus, setOrderStatus] = useState(0)\n    const [curOrder, setCurOrder] = useState(null)\n    const [confirmMsg, setConfirmMsg] = useState('')\n    const isAllAck = useMemo(() => getOrdersLength(detail.orderList) === detail.completedOrder)\n\n    useEffect(() => {\n\n        if (detail.orderList) {\n            let orderList = _.cloneDeep(detail.orderList)\n            let cloned = [], tempOriginal = [];\n            orderList.map(order => {\n                if (order.cloneFrom) {\n                    cloned.push(order)\n                } else {\n                    tempOriginal.push(order)\n                    // console.log(\"original\", original)\n                }\n            })\n            cloned = _.groupBy(cloned, 'cloneFrom');\n\n            if (detail.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_1) {\n                let assig = [], notAssig = []\n                assig = tempOriginal.filter(x => x.nurseAcknowStatus1)\n                notAssig = tempOriginal.filter(x => !x.nurseAcknowStatus1)\n                tempOriginal = notAssig.concat(assig)\n            } else if (detail.subCategory === SUB_CATEGORY.MED_REVIEW.NURSE_REVIEW_2) {\n                let assig = [], notAssig = []\n                assig = tempOriginal.filter(x => x.nurseAcknowStatus2)\n                notAssig = tempOriginal.filter(x => !x.nurseAcknowStatus2)\n                tempOriginal = notAssig.concat(assig)\n            } else if (detail.subCategory === SUB_CATEGORY.MED_REVIEW.PMR) {\n                let assig = [], notAssig = []\n                assig = tempOriginal.filter(x => {\n                    let status = cloned[x._id] ? cloned[x._id][0].status : x.status\n                    return status === PMR_ORDER.STATUS[\"CONTINUE\"] ||\n                        status === PMR_ORDER.STATUS[\"HOLD\"] || status === PMR_ORDER.STATUS[\"DISCONTINUE\"]\n                })\n                notAssig = tempOriginal.filter(x => !assig.includes(x));\n                tempOriginal = notAssig.concat(assig)\n            }\n\n            tempOriginal.map(order => {\n                let clonedOrders = [], clonedOrderObj = null\n                order.isClonedExist = cloned[order._id] ? true : false\n                clonedOrders.push(order)\n                if (cloned[order._id]) {\n                    //order.isClonedExist = true\n                    clonedOrderObj = cloned[order._id][0]\n                    clonedOrders = clonedOrders.concat(cloned[order._id])\n\n                }\n                order.clonedOrders = clonedOrders;\n                return order\n            });\n            originalRef.current = [...tempOriginal];\n            setOriginal(tempOriginal)\n        }\n\n    }, [detail])\n\n    const handleNurseAck = (e, params) => {\n        if (!showDivDisable(e))\n            return\n        const { order } = params\n        let type = params.type\n        if (type === 'EDIT BY NURSE') {\n            onEditOrder(params)\n            return\n        }\n        type = isUndoAck({\n            order, detail, defaultToDoCategory: query.subCategory\n        }) ? 'UNDO BY NURSE' : 'ACK BY NURSE'\n\n        let request = {\n            \"pmrOrderId\": order._id,\n        }\n\n        if (type === 'ACK BY NURSE') {\n            request.nurseAcknowStatus = true\n            console.log(\"handleNurseAck -> request\", request)\n            onNurseAck(request)\n        } else if (type === 'UNDO BY NURSE') {\n            request.nurseAcknowStatus = false\n            onNurseAck(request)\n        }\n    }\n\n    const handleSearch = e => {\n        const searchTerm = lower(e.target.value);\n        const originalData = [...originalRef.current];\n        const filtered = originalData.filter(data => {\n            return lower(data?.drug?.name).includes(searchTerm.trim())\n        });\n        setOriginal([...filtered]);\n    }\n    const handleDrAck = (e, params) => {\n        if (!showDivDisable(e))\n            return\n        let { order } = params\n        let newOrderStatus = Number(e.target.value)\n        let prevent = preventOrderUpdate(order, newOrderStatus)\n        if (prevent)\n            return\n\n        setOrderStatus(newOrderStatus)\n        if (newOrderStatus === PMR_ORDER.STATUS.CONTINUE &&\n            order.krollOrderStatus !== KROLL_ORDER_STATUS.SUSPENDED) {\n            // Continue order\n            updateOrderStatus(newOrderStatus, order)\n\n        }\n        else if (newOrderStatus === PMR_ORDER.STATUS.CONTINUE &&\n            order.krollOrderStatus === KROLL_ORDER_STATUS.SUSPENDED) {\n            // Continue order & Suspended\n            handleVisibleDC(true, order)\n            setOrderStatus(newOrderStatus)\n        }\n        else if (newOrderStatus === PMR_ORDER.STATUS.DISCONTINUE) {\n            handleVisibleDC(true, order)\n        }\n        else if (newOrderStatus === PMR_ORDER.STATUS.HOLD &&\n            order.krollOrderStatus !== KROLL_ORDER_STATUS.SUSPENDED) {\n            // Hold order\n            updateOrderStatus(newOrderStatus, order)\n\n        } else if (newOrderStatus === PMR_ORDER.STATUS.HOLD &&\n            order.krollOrderStatus === KROLL_ORDER_STATUS.SUSPENDED) {\n\n            // Hold order && suspended\n            handleVisibleDC(true, order)\n            setOrderStatus(newOrderStatus)\n        }\n    }\n\n    const handleVisibleDC = (visible, ordreObj, subact, date) => {\n        //handle discontinue actions\n        setVisibleDCOrder(visible)\n        setCurOrder(ordreObj)\n        if (subact) {\n            if (subact === PMR_ORDER.STATUS.CONTINUE)\n                updateOrderStatus(PMR_ORDER.STATUS.CONTINUE, curOrder)\n            else if (subact === 'SUSPEND')\n                updateOrderStatus('SUSPEND', curOrder)\n            else if (subact === PMR_ORDER.STATUS.HOLD)\n                updateOrderStatus(PMR_ORDER.STATUS.HOLD, curOrder, date)\n            else if (subact === 'DC')\n                updateOrderStatus(PMR_ORDER.STATUS.DISCONTINUE, curOrder)\n            else if (subact === 'EDIT')\n                onEditOrder({ type: PMR_ORDER.STATUS.DISCONTINUE, order: curOrder })\n            else if (subact === 'DC_NEW')\n                onEditOrder({ type: PMR_ORDER.STATUS.DISCONTINUE, order: curOrder, isdcNew: true })\n        }\n    }\n\n    const updateOrderStatus = (status, order, date) => {\n        setCheckedDc(status, order) // to set radio value\n        //prepare request for doctor ack\n        let request = {\n            \"pmrOrderId\": order._id,\n            \"docStatusUpdate\": status,\n            \"status\": status\n        }\n        if (order.krollOrderStatus === KROLL_ORDER_STATUS.SUSPENDED) {\n\n            if (status === PMR_ORDER.STATUS.CONTINUE &&\n                order.krollOrderStatus === KROLL_ORDER_STATUS.SUSPENDED) {\n                // Continue order\n                request = {\n                    ...request,\n                    \"docStatusUpdate\": PMR_ORDER.STATUS.CONTINUE,\n                    \"status\": PMR_ORDER.STATUS.CONTINUE,\n                }\n            }\n            else if (status === 'SUSPEND' &&\n                order.krollOrderStatus === KROLL_ORDER_STATUS.SUSPENDED) {\n                // Continue to Suspend order\n                request = {\n                    ...request,\n                    \"docStatusUpdate\": PMR_ORDER.STATUS.HOLD,\n                    \"status\": PMR_ORDER.STATUS.HOLD,\n                }\n            }\n            else if (status === PMR_ORDER.STATUS.HOLD && date &&\n                order.krollOrderStatus === KROLL_ORDER_STATUS.SUSPENDED) {\n                //    Hold Order Until Date\n                // this.setState({ visibleOrderStatus: '' })\n                request = {\n                    ...request,\n                    \"docStatusUpdate\": status,\n                    \"status\": PMR_ORDER.STATUS.HOLD,\n                    \"holdUntil\": moment(date).toISOString()\n                }\n            }\n            else if (status === PMR_ORDER.STATUS.HOLD &&\n                order.krollOrderStatus === KROLL_ORDER_STATUS.SUSPENDED) {\n                //    Hold Order \n                request = {\n                    ...request,\n                    \"docStatusUpdate\": status,\n                    \"status\": PMR_ORDER.STATUS.HOLD,\n                }\n            }\n            else if (status === PMR_ORDER.STATUS.DISCONTINUE) {\n                request = {\n                    ...request,\n                    \"subActionType\": PMR_ORDER.SUB_ACTION.DISCONTINUE,\n                    \"status\": PMR_ORDER.STATUS.DISCONTINUE,\n                }\n            }\n        }\n        handleVisibleDC(false)\n        onDrAck(request)\n    }\n\n    const setCheckedDc = (e, order) => {\n        let tempOrig = [...original]\n        tempOrig.map(x => {\n            if (x._id === order._id) {\n                x.clonedOrders = x.clonedOrders.map(cx => {\n                    if (cx._id === order._id) {\n                        cx.status = e\n                    }\n                    return cx\n                })\n            }\n            return x\n        })\n        setOriginal(tempOrig)\n    }\n\n    const preventOrderUpdate = (order, status) => {\n        let cloned = []\n        cloned = order.clonedOrders.filter(x => x.cloneFrom)\n        if (cloned.length)\n            order = cloned[0] //getting cloned orders\n\n        //Prevent for already ack order with the same status\n        if (status === order.status)\n            return true\n        else\n            return false\n    }\n\n    const showDivDisable = (e) => {\n        if (!detail.isDiv) {\n            // if (!this.onNotesClick) {\n            e.preventDefault()\n            // Don't show message on 'Notes'\n            Toast.warn(\"You do not have the permission to update the PMR order status\");\n            return false\n            // }\n        } else return true\n    }\n\n    const handleNurseAllAck = () => {\n        setConfirmMsg(`Are you sure you want to proceed without changes?`)\n    }\n\n    return <>\n        <div className=\"right-Nurse-prep w100\">\n            <div className=\"pro-title\">\n                <h3>{detail.pmrStatusUpdate?.latest?.message ||\n                    displayPmrProcess(detail.pmrStatusUpdate?.latest)}\n                    {\n                        activeTodo?.todoDetail?.status === STATUS[\"UNDO\"]\n                            && detail.editExpireTime ?\n                            ` can be edit until ${displayDateTime(detail.editExpireTime)}` : ''\n                    }\n                </h3>\n                <div style={!detail.isDiv ? { pointerEvents: 'none', opacity: '0.5' } : { cursor: 'pointer' }} className=\"flex-block\" onClick={() => setAddModalVisible(true)}>\n                    <p className=\"green-bg mr-8\">\n                        <img src={require(\"../../NursePrep/img/plus.svg\")} />\n                    </p>\n                    <span>Add New</span>\n                </div>\n            </div>\n            <div className=\"med_ack\">\n                <div className='form_group search-box mb-0'>\n                    <Search\n                        allowClear={true}\n                        placeholder='Medication'\n                        style={{ width: '165px' }}\n                        value={search}\n                        onChange={handleSearch}\n                    />\n                </div>\n                {\n                    !isDrOrderView(query.subCategory, authUser) ?\n                        <div className=\"ack-block\" onClick={handleNurseAllAck}\n                            style={(!detail.isDiv || orderListLoader || isAllAck) ? { pointerEvents: 'none', opacity: '0.5' } : null}\n                        >\n                            <div class=\"round\" >\n                                <input type=\"checkbox\" id=\"checkbox2\"\n                                    checked={isAllAck} />\n                                <label for=\"checkbox2\"></label>\n                            </div>\n                            <span>Acknowledge all orders</span>\n                        </div> : null\n                }\n\n\n            </div>\n\n            <TableHeader query={query} authUser={authUser} />\n\n            <div className=\"scroll-block\" style={!detail.isDiv ? { opacity: '0.5' } : {}}>\n                {/* start white section */}\n                {\n                    orderListLoader ?\n                        <Spin str=\"center\" spinning={orderListLoader} />\n                        : original.map(order => {\n                            return <div className=\"flex-block bb\">\n                                <div className=\"resident-detail rate-box\">\n                                    {\n                                        order.clonedOrders.map((corder, orderIndex) => {\n                                            return <PmrOrder\n                                                key={corder._id}\n                                                pmrOrder={corder}\n                                                detail={detail}\n                                                query={query}\n                                                authUser={authUser}\n                                                onUpdateOrder={onUpdateOrder}\n                                                handleOrderRef={handleOrderRef}\n                                            />\n\n                                        })\n                                    }\n                                </div>\n                                {\n                                    isDrOrderView(query.subCategory, authUser) ?\n                                        <>\n                                            <div className=\"ack-block\">\n                                                <div className=\"round\"\n                                                    onClick={(e) => handleDrAck(e, { order: order })}\n                                                >\n                                                    <input type=\"checkbox\" id={\"cont\" + order._id}\n                                                        value={PMR_ORDER.STATUS.CONTINUE}\n                                                        checked={getCheckedDC(order) === PMR_ORDER.STATUS.CONTINUE}\n                                                    />\n                                                    <label for={\"cont\" + order._id}></label>\n                                                </div>\n                                            </div>\n                                            <div className=\"ack-block\">\n                                                <div className=\"round\"\n                                                    onClick={(e) => handleDrAck(e, { order: order })}\n                                                >\n                                                    <input type=\"checkbox\" id={\"dc\" + order._id}\n                                                        value={PMR_ORDER.STATUS.DISCONTINUE}\n                                                        checked={getCheckedDC(order) === PMR_ORDER.STATUS.DISCONTINUE}\n                                                    />\n                                                    <label for={\"dc\" + order._id}></label>\n                                                </div>\n                                            </div>\n                                            <div className=\"ack-block\">\n                                                <div className=\"round\"\n                                                    onClick={(e) => handleDrAck(e, { order: order })}                                                >\n                                                    <input id={\"hold\" + order._id} type=\"checkbox\"\n                                                        value={PMR_ORDER.STATUS.HOLD}\n                                                        checked={getCheckedDC(order) === PMR_ORDER.STATUS.HOLD ? true : false}\n                                                    />\n                                                    <label for={\"hold\" + order._id}></label>\n                                                </div>\n                                            </div>\n                                        </>\n                                        : <>\n                                            <div className=\"ack-block\">\n                                                <div className=\"round\"\n                                                    onClick={(e) => handleNurseAck(e, { order: order })}>\n                                                    <input type=\"checkbox\" id=\"checkbox1\"\n                                                        checked={isNrAck(detail, order, query.subCategory)} />\n                                                    <label for=\"checkbox1\"></label>\n                                                </div>\n                                            </div>\n                                            <div className=\"ack-block\">\n                                                {\n                                                    !isNrAck(detail, order, query.subCategory) &&\n                                                    <div className=\"round\"\n                                                        onClick={(e) => handleNurseAck(e, { type: 'EDIT BY NURSE', order: order })}>\n                                                        <input type=\"checkbox\" />\n                                                        <label ></label>\n                                                    </div>\n                                                }\n                                            </div>\n                                        </>\n                                }\n\n                            </div>\n                        })\n                }\n            </div>\n        </div>\n        {\n            visibleDCOrder ?\n                <DiscontActionModal\n                    visible={visibleDCOrder}\n                    onCancel={(subact, date) => handleVisibleDC(false, null, subact, date)}\n                    onUpdateOrderStatus={updateOrderStatus}\n                    order={curOrder}\n                    orderStatus={orderStatus}\n                />\n                : null\n        }\n        {\n            confirmMsg ?\n                <ConfirmPopup\n                    title={confirmMsg}\n                    okText='Yes'\n                    visible={!!confirmMsg}\n                    onCancel={() => {\n                        setConfirmMsg('')\n                    }}\n                    onOk={() => {\n                        setConfirmMsg('')\n                        onAllNurseAck()\n                    }}\n                /> : null\n        }\n    </>\n}\n\nexport default OrderList"]},"metadata":{},"sourceType":"module"}