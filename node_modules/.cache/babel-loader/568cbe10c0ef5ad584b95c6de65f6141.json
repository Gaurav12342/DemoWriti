{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/App.js\";\nimport React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport './App.css';\nimport './styles/scss/style.scss';\nimport { Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport configureStore, { history } from './appRedux/store/index.js';\nimport { setSocket, setToken } from './appRedux/actions/Auth';\nimport { decryptData } from './util/Crypto';\nimport MainApp from './containers/MainApp.js';\nimport { AppContainer } from 'react-hot-loader';\nimport reducers from './appRedux/reducers/index';\nimport instance from './services/api/config';\nimport { Toast } from './components/common';\nimport { userLogout } from './util/common';\nimport CommonService from './services/api/services/common';\nimport { tokenRefresh } from './services/api/routes/auth';\nimport { isPharmacyUser } from './constants/User';\nexport const store = configureStore(); //export const store = reducers && configureStore();\n\nconst App = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"App\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(AppContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(ConnectedRouter, {\n  history: history,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  path: '/',\n  component: MainApp,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 13\n  }\n}))))));\n\nconst {\n  dispatch\n} = store;\nconst socketIns = store.getState().auth.socket;\nlet previousRequest = {}; //response interceptors\n\ninstance.interceptors.response.use(response => Promise.resolve(response), error => {\n  console.log(\"=======5555======================\");\n  if (!error.response) Toast.error(error.message || 'Network error - something went wrong');\n\n  if (error.response && error.response.data) {\n    if (error.response.data.code !== 'E_INVALID_TOKEN') Toast.error(error.response.data.message);\n\n    if (error.response.data.code === 'E_UNAUTHORIZED') {\n      dispatch(userLogout());\n    } else if (error.response.data.code === 'E_INVALID_TOKEN') {\n      //refresh token\n      const {\n        method,\n        url\n      } = tokenRefresh;\n      const user = decryptData(localStorage.getItem('user'));\n      let token = localStorage.getItem('refreshToken');\n      const req = {\n        refreshToken: 'jwt ' + JSON.parse(token)\n      };\n      let canCall = true;\n\n      if (previousRequest && previousRequest.url) {\n        if (previousRequest.url !== error.config.url) {\n          previousRequest = error.config;\n        } else {\n          canCall = false;\n        }\n      } else {\n        previousRequest = error.config;\n      }\n\n      if (canCall) {\n        let tokenResponse = CommonService({ ...tokenRefresh,\n          method,\n          url,\n          data: req\n        }).then(async data => {\n          if (data && data.code === 'OK') {\n            if (socketIns) {\n              socketIns.disconnect();\n            }\n\n            dispatch(setSocket(null));\n            localStorage.setItem('token', JSON.stringify(data.data.token));\n            previousRequest.headers['Authorization'] = 'JWT ' + data.data.token;\n            dispatch(setToken(data.data.token));\n            let res = await instance(previousRequest); // call API which had return expire token error\n\n            return Promise.resolve(res);\n          }\n        });\n        if (tokenResponse) return Promise.resolve(tokenResponse);\n      }\n    } else {}\n  }\n\n  return Promise.reject(error);\n});\nexport default App;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/App.js"],"names":["React","ConnectedRouter","Route","Switch","Provider","configureStore","history","setSocket","setToken","decryptData","MainApp","AppContainer","reducers","instance","Toast","userLogout","CommonService","tokenRefresh","isPharmacyUser","store","App","dispatch","socketIns","getState","auth","socket","previousRequest","interceptors","response","use","Promise","resolve","error","console","log","message","data","code","method","url","user","localStorage","getItem","token","req","refreshToken","JSON","parse","canCall","config","tokenResponse","then","disconnect","setItem","stringify","headers","res","reject"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\nimport './App.css';\nimport './styles/scss/style.scss';\nimport { Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport configureStore, { history } from './appRedux/store/index.js';\nimport { setSocket, setToken } from './appRedux/actions/Auth'\nimport { decryptData } from './util/Crypto';\nimport MainApp from './containers/MainApp.js';\nimport { AppContainer } from 'react-hot-loader';\nimport reducers from './appRedux/reducers/index'\nimport instance from './services/api/config'\nimport { Toast } from './components/common'\nimport { userLogout } from './util/common'\nimport CommonService from './services/api/services/common'\nimport { tokenRefresh } from './services/api/routes/auth';\nimport { isPharmacyUser } from './constants/User'\n\nexport const store = configureStore();\n//export const store = reducers && configureStore();\n\nconst App = () => (\n  <div className=\"App\">\n    <AppContainer>\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <Switch>\n            <Route path={'/'} component={MainApp} />\n          </Switch>\n        </ConnectedRouter>\n      </Provider>\n    </AppContainer>\n  </div>\n);\n\nconst { dispatch } = store\nconst socketIns = store.getState().auth.socket\n\nlet previousRequest = {};\n//response interceptors\ninstance.interceptors.response.use(\n  (response) => Promise.resolve(response),\n  (error) => {\n    console.log(\"=======5555======================\")\n    if (!error.response)\n      Toast.error(error.message || 'Network error - something went wrong');\n    if (error.response && error.response.data) {\n      if (error.response.data.code !== 'E_INVALID_TOKEN')\n        Toast.error(error.response.data.message);\n      if (error.response.data.code === 'E_UNAUTHORIZED') {\n        dispatch(userLogout());\n      } else if (error.response.data.code === 'E_INVALID_TOKEN') {\n        //refresh token\n        const { method, url } = tokenRefresh;\n        const user = decryptData(localStorage.getItem('user'));\n        let token = localStorage.getItem('refreshToken');\n        const req = {\n          refreshToken: 'jwt ' + JSON.parse(token),\n        };\n        let canCall = true;\n        if (previousRequest && previousRequest.url) {\n          if (previousRequest.url !== error.config.url) {\n            previousRequest = error.config;\n          } else {\n            canCall = false;\n          }\n        } else {\n          previousRequest = error.config;\n        }\n        if (canCall) {\n          let tokenResponse = CommonService({\n            ...tokenRefresh,\n            method,\n            url,\n            data: req,\n          }).then(async (data) => {\n            if (data && data.code === 'OK') {\n              if (socketIns) {\n                socketIns.disconnect()\n              }\n              dispatch(setSocket(null))\n              localStorage.setItem('token', JSON.stringify(data.data.token));\n              previousRequest.headers['Authorization'] = 'JWT ' + data.data.token;\n              dispatch(setToken(data.data.token))\n              let res = await instance(previousRequest); // call API which had return expire token error\n              return Promise.resolve(res);\n            }\n          });\n          if (tokenResponse) return Promise.resolve(tokenResponse);\n        }\n      } else {\n\n      }\n    }\n    return Promise.reject(error);\n  }\n);\nexport default App;\n"]},"metadata":{},"sourceType":"module"}