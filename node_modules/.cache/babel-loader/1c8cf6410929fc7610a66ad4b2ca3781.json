{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Profile/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { createForm } from 'rc-form';\nimport { connect } from 'react-redux';\nimport ProfileTabs from '../Profile/components/ProfileTabs';\nimport { updateProfile, changePassword } from '../../../src/services/api/routes/profile';\nimport axios from '../../../src/services/api/config';\nimport { Toast } from '../../../src/components/common/Toast';\nimport { withRouter } from 'react-router-dom';\nimport { updateUserData } from '../../../src/appRedux/actions/Auth';\nimport Uploader, { FILE_CATEGORY, FILE_TYPES } from '../../../src/components/common/Upload/Uploader';\nimport { fileUpload } from '../../../src/services/api/routes/common';\n\nconst Profile = props => {\n  const {\n    form,\n    authUser\n  } = props;\n  const [profileBtnLoading, setProfileBtnLoading] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [fileData, setFileData] = useState(authUser === null || authUser === void 0 ? void 0 : authUser.image);\n  const [passBtnLoading, setPassBtnLoading] = useState(false);\n  let {\n    resetFields\n  } = form;\n\n  const handleUpdateProfile = value => {\n    setProfileBtnLoading(true);\n    let {\n      method,\n      url,\n      baseURL\n    } = updateProfile;\n    axios({\n      method,\n      url,\n      data: value,\n      baseURL\n    }).then(response => {\n      if (response.data.code === 'OK') {\n        let user = { ...response.data.data\n        };\n        props.updateUserData(user);\n        setProfileBtnLoading(false);\n        Toast.success(response.data.message);\n      } else {\n        setProfileBtnLoading(false);\n        Toast.error(response.data.message);\n      }\n    }).catch(error => {\n      setProfileBtnLoading(false);\n      Toast.error(error);\n    });\n  };\n\n  const handleResetPassword = value => {\n    setPassBtnLoading(true);\n    let {\n      method,\n      url,\n      baseURL\n    } = changePassword;\n    axios({\n      method,\n      url,\n      data: value,\n      baseURL\n    }).then(response => {\n      if (response.data.code == 'OK') {\n        // setDd(true);\n        // form.resetFields()\n        setPassBtnLoading(false);\n        Toast.success(response.data.message);\n      } else {\n        setPassBtnLoading(false);\n        Toast.error(response.data.message);\n      }\n    }).catch(error => {\n      setPassBtnLoading(false);\n      Toast.error(error);\n    });\n  };\n\n  const handleVisible = () => {\n    setVisible(true);\n  };\n\n  const handleDisable = () => {\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProfileTabs, {\n    onUpdateProfile: handleUpdateProfile,\n    onResetPassword: handleResetPassword,\n    authUser: authUser,\n    form: form,\n    onProfileLoader: profileBtnLoading,\n    onPassLoader: passBtnLoading,\n    fileData: fileData,\n    visible: visible,\n    onOpen: handleVisible,\n    onClose: handleDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }))), visible && /*#__PURE__*/React.createElement(Uploader, {\n    visible: visible,\n    onRequestClose: () => {\n      handleDisable();\n    },\n    multiple: false,\n    uploadUrl: { ...fileUpload\n    } // defaultList={authUser ? [authUser.image] : null}\n    ,\n    allowedTypes: FILE_TYPES.IMAGE,\n    extraData: {\n      category: [FILE_CATEGORY.IMAGE].join(','),\n      isUploadToS3: true\n    } // maxSizeInMB={1}\n    ,\n    fileLength: 1,\n    onError: err => {\n      Toast.error(err);\n    },\n    onSuccess: uploaded => {\n      if (uploaded.code === 'OK') {\n        uploaded && uploaded.data && uploaded.data.length && uploaded.data.map(data => {\n          return setFileData(data.path);\n        });\n        handleDisable();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  const {\n    authUser\n  } = auth;\n  return {\n    authUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateUserData\n})(createForm()(withRouter(Profile)));","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Profile/index.js"],"names":["React","useEffect","useState","createForm","connect","ProfileTabs","updateProfile","changePassword","axios","Toast","withRouter","updateUserData","Uploader","FILE_CATEGORY","FILE_TYPES","fileUpload","Profile","props","form","authUser","profileBtnLoading","setProfileBtnLoading","visible","setVisible","fileData","setFileData","image","passBtnLoading","setPassBtnLoading","resetFields","handleUpdateProfile","value","method","url","baseURL","data","then","response","code","user","success","message","error","catch","handleResetPassword","handleVisible","handleDisable","IMAGE","category","join","isUploadToS3","err","uploaded","length","map","path","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createForm } from 'rc-form';\nimport { connect } from 'react-redux';\nimport ProfileTabs from '../Profile/components/ProfileTabs';\nimport {\n  updateProfile,\n  changePassword,\n} from '../../../src/services/api/routes/profile';\nimport axios from '../../../src/services/api/config';\nimport { Toast } from '../../../src/components/common/Toast';\nimport { withRouter } from 'react-router-dom';\nimport { updateUserData } from '../../../src/appRedux/actions/Auth';\nimport Uploader, {\n  FILE_CATEGORY,\n  FILE_TYPES,\n} from '../../../src/components/common/Upload/Uploader';\nimport { fileUpload } from '../../../src/services/api/routes/common';\n\nconst Profile = (props) => {\n  const { form, authUser } = props;\n  const [profileBtnLoading, setProfileBtnLoading] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [fileData, setFileData] = useState(authUser?.image);\n  const [passBtnLoading, setPassBtnLoading] = useState(false);\n  let { resetFields } = form;\n\n  const handleUpdateProfile = (value) => {\n    setProfileBtnLoading(true);\n    let { method, url, baseURL } = updateProfile;\n    axios({ method, url, data: value, baseURL })\n      .then((response) => {\n        if (response.data.code === 'OK') {\n          let user = { ...response.data.data };\n          props.updateUserData(user);\n          setProfileBtnLoading(false);\n          Toast.success(response.data.message);\n        } else {\n          setProfileBtnLoading(false);\n          Toast.error(response.data.message);\n        }\n      })\n      .catch((error) => {\n        setProfileBtnLoading(false);\n        Toast.error(error);\n      });\n  };\n\n  const handleResetPassword = (value) => {\n    setPassBtnLoading(true);\n    let { method, url, baseURL } = changePassword;\n    axios({ method, url, data: value, baseURL })\n      .then((response) => {\n        if (response.data.code == 'OK') {\n          // setDd(true);\n          // form.resetFields()\n          setPassBtnLoading(false);\n          Toast.success(response.data.message);\n        } else {\n          setPassBtnLoading(false);\n          Toast.error(response.data.message);\n        }\n      })\n      .catch((error) => {\n        setPassBtnLoading(false);\n        Toast.error(error);\n      });\n  };\n\n  const handleVisible = () => {\n    setVisible(true);\n  };\n  const handleDisable = () => {\n    setVisible(false);\n  };\n\n  return (\n    <>\n      <div className='container'>\n        <div className='pmr_wrap'>\n          <ProfileTabs\n            onUpdateProfile={handleUpdateProfile}\n            onResetPassword={handleResetPassword}\n            authUser={authUser}\n            form={form}\n            onProfileLoader={profileBtnLoading}\n            onPassLoader={passBtnLoading}\n            fileData={fileData}\n            visible={visible}\n            onOpen={handleVisible}\n            onClose={handleDisable}\n          />\n        </div>\n      </div>\n      {visible && (\n        <Uploader\n          visible={visible}\n          onRequestClose={() => {\n            handleDisable();\n          }}\n          multiple={false}\n          uploadUrl={{ ...fileUpload }}\n          // defaultList={authUser ? [authUser.image] : null}\n          allowedTypes={FILE_TYPES.IMAGE}\n          extraData={{\n            category: [FILE_CATEGORY.IMAGE].join(','),\n            isUploadToS3: true,\n          }}\n          // maxSizeInMB={1}\n          fileLength={1}\n          onError={(err) => {\n            Toast.error(err);\n          }}\n          onSuccess={(uploaded) => {\n            if (uploaded.code === 'OK') {\n              uploaded &&\n                uploaded.data &&\n                uploaded.data.length &&\n                uploaded.data.map((data) => {\n                  return setFileData(data.path);\n                });\n              handleDisable();\n            }\n          }}\n        />\n      )}\n    </>\n  );\n};\nconst mapStateToProps = ({ auth }) => {\n  const { authUser } = auth;\n  return { authUser };\n};\n\nexport default connect(mapStateToProps, { updateUserData })(\n  createForm()(withRouter(Profile))\n);\n"]},"metadata":{},"sourceType":"module"}