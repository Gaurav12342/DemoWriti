{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Xray/View/DynamicModal/DynamicModal.js\";\nimport React from 'react';\nimport { Check } from '../../../../assets/images/todo/index';\nimport Modal from \"../../../../components/common/Popup/index\";\n\nfunction DynamicModal(props) {\n  const {\n    onCloseModal,\n    isVisible,\n    optionList,\n    handleTextChange,\n    handleItemChange,\n    selectedCodes,\n    selectedTextInput,\n    title,\n    onOk,\n    errorMessage,\n    alertText\n  } = props;\n  return /*#__PURE__*/React.createElement(Modal, {\n    visible: isVisible // title=\"Finger(s) X-Ray - O'Laughlin, Craig (Room No 2056)\"\n    ,\n    title: title,\n    maskClosable: false,\n    onCancel: onCloseModal,\n    onClose: onCloseModal,\n    footer: true,\n    className: \"lock_popup xray_selection_popup toes_popup\",\n    closable: false,\n    onOk: onOk,\n    btnClass: \"d-flex-end f-end footer-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"xray_type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, optionList && optionList.length > 0 ? optionList.map((option, i) => {\n    return option.viewType !== 5 ? option.viewType === 1 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"components\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: option.name + '' + i,\n      className: \"lg_check\",\n      key: option.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"pne\",\n      required: \"required\",\n      checked: selectedCodes.includes(option.code),\n      onClick: () => handleItemChange(option),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => handleItemChange(option),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 49\n      }\n    }, option.name, \" \", option.isMandatory ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"mandatory-filled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 86\n      }\n    }, \"*\") : null, /*#__PURE__*/React.createElement(Check, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 53\n      }\n    })))) : option.viewType === 3 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"components textarea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: `${option.name}${option.isMandatory ? '*' : ''}` || 'Other',\n      value: selectedTextInput[option.code],\n      onChange: e => handleTextChange(e.target.value, option),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 49\n      }\n    })) : option.viewType === 2 ? /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: `${option.name}${option.isMandatory ? '*' : ''}` || 'Other',\n      onChange: e => handleTextChange(e.target.value, option),\n      value: selectedTextInput[option.code],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 49\n      }\n    }) : null : null;\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-mes\",\n    style: {\n      textAlign: \"center\",\n      color: 'red',\n      wordWrap: 'break-word'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, alertText), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, errorMessage))));\n}\n\nexport default DynamicModal;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Xray/View/DynamicModal/DynamicModal.js"],"names":["React","Check","Modal","DynamicModal","props","onCloseModal","isVisible","optionList","handleTextChange","handleItemChange","selectedCodes","selectedTextInput","title","onOk","errorMessage","alertText","length","map","option","i","viewType","name","includes","code","isMandatory","e","target","value","textAlign","color","wordWrap"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Check } from '../../../../assets/images/todo/index'\nimport Modal from \"../../../../components/common/Popup/index\"\nfunction DynamicModal(props) {\n    const { onCloseModal, isVisible, optionList, handleTextChange, handleItemChange,\n        selectedCodes, selectedTextInput, title, onOk, errorMessage, alertText } = props\n    return (<Modal\n        visible={isVisible}\n        // title=\"Finger(s) X-Ray - O'Laughlin, Craig (Room No 2056)\"\n        title={title}\n        maskClosable={false}\n        onCancel={onCloseModal}\n        onClose={onCloseModal}\n        footer={true}\n        className=\"lock_popup xray_selection_popup toes_popup\"\n        closable={false}\n        onOk={onOk}\n        btnClass=\"d-flex-end f-end footer-block\">\n        <form >\n            <div className=\"xray_type\">\n                <div className=\"form_wrap\">\n                    {\n                        optionList && optionList.length > 0 ?\n                            optionList.map((option, i) => {\n                                return option.viewType !== 5 ?\n                                    option.viewType === 1 ?\n                                        <div className=\"components\">\n                                            <label for={option.name + '' + i} className=\"lg_check\" key={option.name} >\n                                                <input type=\"checkbox\" id=\"pne\" required=\"required\"\n                                                    checked={selectedCodes.includes(option.code)}\n                                                    onClick={() => handleItemChange(option)}\n                                                />\n                                                <span\n                                                    onClick={() => handleItemChange(option)}\n                                                >{option.name} {option.isMandatory ? <span className=\"mandatory-filled\">*</span> : null}\n                                                    <Check />\n                                                </span>\n                                            </label>\n                                        </div> :\n                                        option.viewType === 3 ?\n                                            <div className=\"components textarea\">\n                                                <textarea\n                                                    placeholder={`${option.name}${option.isMandatory ? '*' : ''}` || 'Other'}\n                                                    value={selectedTextInput[option.code]}\n                                                    onChange={(e) => handleTextChange(e.target.value, option)}\n                                                ></textarea>\n                                            </div> : option.viewType === 2 ?\n                                                <input placeholder={`${option.name}${option.isMandatory ? '*' : ''}` || 'Other'}\n                                                    onChange={(e) => handleTextChange(e.target.value, option)}\n                                                    value={selectedTextInput[option.code]}\n                                                ></input> : null\n                                    : null\n                            }) : null\n                    }\n                </div>\n            </div>\n            {/* <div className=\"bottom-part\">\n                    <div className=\"d-flex\">\n                        <label>\n                            <span>Selected&nbsp;-&nbsp;</span>Osteoarthritis (All)\n                        </label>\n                    </div>\n                </div>*/}\n            <div className=\"alert-mes\" style={{ textAlign: \"center\", color: 'red', wordWrap: 'break-word' }}>\n                <div>\n                    {\n                        alertText\n                    }\n                </div>\n                <div>\n                    {\n                        errorMessage\n                    }\n                </div>\n            </div>\n        </form>\n    </Modal>);\n}\nexport default DynamicModal\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}