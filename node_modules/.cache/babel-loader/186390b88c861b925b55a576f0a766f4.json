{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/PrescriptionTodo/index.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport TodoListContainer from './components/TodoListContainer';\nimport PrescriptionContainer from './components/PrescriptionContainer';\n\nfunction Todo(props) {\n  const [todo, setTodo] = useState(false);\n  const [activeTodo, setActiveTodo] = useState(null);\n  const [viewType, setViewType] = useState();\n  const [activeSubCategory, setActiveSubCategory] = useState();\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const handleResize = e => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n  }, []);\n\n  const handleToDo = () => {\n    setTodo(!todo);\n  };\n\n  const todoListContainerProps = {\n    activeSubCategory: activeSubCategory,\n    onChangeListview: val => setViewType(val),\n    onsetActiveTodo: val => setActiveTodo(val),\n    onSetActiveSubCategory: val => setActiveSubCategory(val)\n  }; //  const todoListContainerProps = React.useMemo(() => ({\n  //   activeSubCategory: activeSubCategory,\n  //   onChangeListview: (val) => setViewType(val),\n  //   onsetActiveTodo: (val) => setActiveTodo(val),\n  //   onSetActiveSubCategory: (val) => setActiveSubCategory(val)\n  // }), [])\n\n  console.log(\"00000000\", activeTodo);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, windowWidth < 1024 ? todo ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"responsive_ipad_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TodoListContainer, {\n    todoListContainerProps: todoListContainerProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  })) : '' : /*#__PURE__*/React.createElement(TodoListContainer, {\n    todoListContainerProps: todoListContainerProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PrescriptionContainer, {\n    activeTodo: activeTodo,\n    viewType: viewType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `chat_toggle todo ` + (todo ? 'open' : ''),\n    onClick: handleToDo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"To Dos \\xA0 & \\xA0 Residents\"))));\n}\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  const {\n    authUser\n  } = auth;\n  return {\n    authUser\n  };\n};\n\nexport default connect(mapStateToProps)(Todo);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/PrescriptionTodo/index.js"],"names":["React","Component","useEffect","useState","connect","TodoListContainer","PrescriptionContainer","Todo","props","todo","setTodo","activeTodo","setActiveTodo","viewType","setViewType","activeSubCategory","setActiveSubCategory","windowWidth","setWindowWidth","window","innerWidth","handleResize","e","addEventListener","handleToDo","todoListContainerProps","onChangeListview","val","onsetActiveTodo","onSetActiveSubCategory","console","log","mapStateToProps","auth","authUser"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\nimport TodoListContainer from './components/TodoListContainer'\nimport PrescriptionContainer from './components/PrescriptionContainer'\n\nfunction Todo(props) {\n  const [todo, setTodo] = useState(false);\n  const [activeTodo, setActiveTodo] = useState(null);\n  const [viewType, setViewType] = useState();\n  const [activeSubCategory, setActiveSubCategory] = useState();\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const handleResize = (e) => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize)\n  }, [])\n\n  const handleToDo = () => {\n    setTodo(!todo);\n  }\n\n  const todoListContainerProps = {\n    activeSubCategory: activeSubCategory,\n    onChangeListview: (val) => setViewType(val),\n    onsetActiveTodo: (val) => setActiveTodo(val),\n    onSetActiveSubCategory: (val) => setActiveSubCategory(val)\n  }\n  //  const todoListContainerProps = React.useMemo(() => ({\n  //   activeSubCategory: activeSubCategory,\n  //   onChangeListview: (val) => setViewType(val),\n  //   onsetActiveTodo: (val) => setActiveTodo(val),\n  //   onSetActiveSubCategory: (val) => setActiveSubCategory(val)\n  // }), [])\n  console.log(\"00000000\", activeTodo)\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"todo_wrap\">\n          {(windowWidth < 1024) ? (todo ?\n            <div className=\"responsive_ipad_wrap\">\n              <TodoListContainer todoListContainerProps={todoListContainerProps} />\n            </div>\n            : '') :\n            <TodoListContainer todoListContainerProps={todoListContainerProps} />\n          }\n          <PrescriptionContainer activeTodo={activeTodo} viewType={viewType} />\n        </div>\n        <div className={`chat_toggle todo ` + (todo ? 'open' : '')}\n          onClick={handleToDo}>\n          <p>\n            To Dos &nbsp; & &nbsp; Residents\n        </p>\n        </div>\n      </div>\n    </>\n  );\n}\nconst mapStateToProps = ({ auth }) => {\n  const { authUser } = auth\n  return {\n    authUser\n  }\n}\nexport default connect(mapStateToProps)(Todo);"]},"metadata":{},"sourceType":"module"}