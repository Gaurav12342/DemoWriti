{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Permission/components/PermissionList.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { PERMISSION_ACCESS_TYPE, TODOS } from '../../../constants/subscription';\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport { Move } from '../../../assets/images';\nconst DragHandle = SortableHandle(() => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"drag_icon\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 41\n  }\n}, /*#__PURE__*/React.createElement(Move, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 68\n  }\n})));\nconst SortableItem = SortableElement(({\n  visibleAdd,\n  x,\n  mod,\n  submod,\n  handleChange\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"row_group\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  className: \"filter_check\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"input\", {\n  type: \"checkbox\",\n  name: \"type\",\n  disabled: !visibleAdd,\n  value: x.code,\n  checked: x.isSelect,\n  onChange: e => handleChange(submod, e, mod.module),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"checkbox\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"lbl\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 17\n  }\n}, x.label || x.name))), visibleAdd ? /*#__PURE__*/React.createElement(DragHandle, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 23\n  }\n}) : null));\nconst SortableList = SortableContainer(({\n  items,\n  handleChange,\n  mod,\n  submod,\n  visibleAdd\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, items.map((x, i) => /*#__PURE__*/React.createElement(SortableItem, {\n    key: x.code,\n    index: i,\n    useDragHandle: true,\n    visibleAdd: visibleAdd,\n    mod: mod,\n    submod: submod,\n    x: x,\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })));\n});\n\nconst PermissionsList = props => {\n  const {\n    listData,\n    saveLoader,\n    onSetPermission,\n    visibleAdd,\n    onSelection,\n    onSelectAll,\n    isAll,\n    onSortEnd,\n    isView\n  } = props;\n\n  const selection = (data, mod) => {\n    let obj = {\n      data: data,\n      module: mod\n    };\n    onSelection(obj);\n  };\n\n  const handleChange = (data, e, mod) => {\n    //mod is to identify submodule data\n    let code = e.target.value;\n    let obj = {\n      data: data,\n      code: code,\n      module: mod\n    };\n    onSetPermission(obj);\n  };\n\n  const sortEnd = (e, submod, mod) => {\n    const {\n      oldIndex,\n      newIndex\n    } = e;\n    let items = arrayMove(submod.actions, oldIndex, newIndex);\n    items.map((x, i) => {\n      x.sequence = i + 1;\n      return x;\n    });\n    let index = mod.subModules.findIndex(x => x.subModule === submod.subModule);\n    if (index > -1) mod.subModules[index].actions = items;\n    onSortEnd(mod);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"permissions_list_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `permission_group select-all`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"permission_group_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, !isView && /*#__PURE__*/React.createElement(\"label\", {\n    className: \"filter_check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    disabled: !visibleAdd,\n    checked: isAll,\n    onChange: onSelectAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, \"Select All\"))))), listData.map(mod => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: mod.module,\n      className: `permission_group collapsed`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"permission_group_head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, !isView && /*#__PURE__*/React.createElement(\"label\", {\n      className: \"filter_check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      disabled: !visibleAdd,\n      checked: mod.isSelect,\n      onChange: e => selection(mod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, mod.moduleName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"apply_permission_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, mod.actions && mod.actions.map((x, i) => {\n      return /*#__PURE__*/React.createElement(\"label\", {\n        className: \"filter_check\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 48\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"type\",\n        disabled: !visibleAdd,\n        value: x.code,\n        checked: x.isSelect,\n        onChange: e => handleChange(mod, e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"lbl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 45\n        }\n      }, x.label || x.name));\n    }))), mod.subModules && mod.subModules.length ? mod.subModules.map(submod => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"permission_group_row\",\n      key: submod.subModule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 58\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row_group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `title`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, !isView && /*#__PURE__*/React.createElement(\"label\", {\n      className: \"filter_check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: submod.isSelect,\n      disabled: !visibleAdd,\n      onChange: e => selection(submod, mod.module),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 41\n      }\n    }, submod.subModuleName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"apply_permission_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }, !TODOS.includes(submod.subModule) && submod.actions && submod.actions.map((x, i) => {\n      return /*#__PURE__*/React.createElement(\"label\", {\n        className: \"filter_check\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 56\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"type\",\n        disabled: !visibleAdd,\n        value: x.code,\n        checked: x.isSelect,\n        onChange: e => handleChange(submod, e, mod.module),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"lbl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 53\n        }\n      }, x.label || x.name));\n    }))), // submod.permissionAccesstype === PERMISSION_ACCESS_TYPE.DATA &&\n    TODOS.includes(submod.subModule) ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row_group_content expand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(SortableList, {\n      items: submod.actions,\n      useDragHandle: true,\n      shouldCancelStart: () => {\n        if (!visibleAdd) return true;else return false;\n      },\n      onSortEnd: e => sortEnd(e, submod, mod),\n      visibleAdd: visibleAdd,\n      mod: mod,\n      submod: submod,\n      handleChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 45\n      }\n    })) : null)) : null);\n  })));\n};\n\nexport default PermissionsList;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Permission/components/PermissionList.js"],"names":["React","Component","useState","useEffect","PERMISSION_ACCESS_TYPE","TODOS","SortableContainer","SortableElement","SortableHandle","arrayMove","Move","DragHandle","SortableItem","visibleAdd","x","mod","submod","handleChange","code","isSelect","e","module","label","name","SortableList","items","map","i","PermissionsList","props","listData","saveLoader","onSetPermission","onSelection","onSelectAll","isAll","onSortEnd","isView","selection","data","obj","target","value","sortEnd","oldIndex","newIndex","actions","sequence","index","subModules","findIndex","subModule","moduleName","length","subModuleName","includes"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { PERMISSION_ACCESS_TYPE, TODOS } from '../../../constants/subscription'\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport { Move } from '../../../assets/images'\n\n\nconst DragHandle = SortableHandle(() => <div className=\"drag_icon\"><Move /></div>)\nconst SortableItem = SortableElement(({ visibleAdd, x, mod, submod, handleChange }) => (\n    <div className=\"row_group\">\n        <div className=\"title\">\n            <label className=\"filter_check\">\n                <input type=\"checkbox\" name=\"type\" disabled={!visibleAdd}\n                    value={x.code}\n                    checked={x.isSelect}\n                    onChange={(e) => handleChange(submod, e, mod.module)} />\n                <span className=\"checkbox\"></span>\n                <span className=\"lbl\">{x.label || x.name}</span>\n            </label>\n        </div>\n        {visibleAdd ? <DragHandle /> : null}\n    </div>\n));\n\nconst SortableList = SortableContainer(({ items, handleChange, mod, submod, visibleAdd }) => {\n    return (\n        <div>\n            {items.map((x, i) => (\n                <SortableItem key={x.code} index={i} useDragHandle={true}\n                    visibleAdd={visibleAdd} mod={mod} submod={submod} x={x}\n                    handleChange={handleChange} />\n            ))}\n        </div>\n    );\n});\n\nconst PermissionsList = props => {\n    const { listData, saveLoader, onSetPermission, visibleAdd, onSelection, onSelectAll, isAll, onSortEnd,\n        isView } = props\n\n    const selection = (data, mod) => {\n        let obj = {\n            data: data, module: mod\n        }\n        onSelection(obj)\n    }\n\n    const handleChange = (data, e, mod) => {\n        //mod is to identify submodule data\n        let code = e.target.value\n        let obj = {\n            data: data, code: code, module: mod\n        }\n        onSetPermission(obj)\n    };\n\n    const sortEnd = (e, submod, mod) => {\n        const { oldIndex, newIndex } = e\n        let items = arrayMove(submod.actions, oldIndex, newIndex)\n        items.map((x, i) => {\n            x.sequence = i + 1\n            return x\n        })\n        let index = mod.subModules.findIndex(x => x.subModule === submod.subModule)\n        if (index > -1)\n            mod.subModules[index].actions = items\n        onSortEnd(mod)\n    }\n\n    return <>\n        <div className=\"permissions_list_wrap\">\n            <div className={`permission_group select-all`} >\n                <div className=\"permission_group_head\">\n                    <div className='title'>\n                        {\n                            !isView &&\n                            <label className=\"filter_check\">\n                                <input type=\"checkbox\" disabled={!visibleAdd} checked={isAll}\n                                    onChange={onSelectAll} />\n                                <span className=\"checkbox\"></span>\n                                <span className=\"lbl\">Select All</span>\n                            </label>\n                        }\n                    </div>\n                </div>\n            </div>\n            {/* <input type=\"checkbox\" indeterminate={true} /> */}\n            {\n                listData.map(mod => {\n                    return <div key={mod.module}\n                        className={`permission_group collapsed`} >\n                        <div className=\"permission_group_head\">\n                            <div className='title'>\n                                {\n                                    !isView &&\n                                    <label className=\"filter_check\">\n                                        <input type=\"checkbox\" disabled={!visibleAdd} checked={mod.isSelect}\n                                            onChange={(e) => selection(mod)} />\n                                        <span className=\"checkbox\"></span>\n                                    </label>\n                                }\n                                <h4>{mod.moduleName}</h4>\n                            </div>\n                            <div className=\"apply_permission_container\">\n                                {mod.actions &&\n                                    mod.actions.map((x, i) => {\n                                        return <label className=\"filter_check\" key={i}>\n                                            <input type=\"checkbox\" name=\"type\" disabled={!visibleAdd}\n                                                value={x.code}\n                                                checked={x.isSelect}\n                                                onChange={(e) => handleChange(mod, e)}\n                                            />\n                                            <span className=\"checkbox\"></span>\n                                            <span className=\"lbl\">{x.label || x.name}</span>\n                                        </label>\n                                    })\n                                }\n                            </div>\n                        </div>\n                        {mod.subModules && mod.subModules.length ?\n                            mod.subModules.map(submod => <div className=\"permission_group_row\" key={submod.subModule}>\n                                <div className=\"row_group\">\n                                    <div className={`title`}>\n                                        {!isView &&\n                                            <label className=\"filter_check\">\n                                                <input type=\"checkbox\" checked={submod.isSelect} disabled={!visibleAdd}\n                                                    onChange={(e) => selection(submod, mod.module)} />\n                                                <span className=\"checkbox\"></span>\n                                            </label>\n                                        }\n                                        <h4>{submod.subModuleName}</h4>\n                                    </div>\n                                    <div className=\"apply_permission_container\">\n                                        {!TODOS.includes(submod.subModule) && submod.actions &&\n                                            submod.actions.map((x, i) => {\n                                                return <label className=\"filter_check\" key={i}>\n                                                    <input type=\"checkbox\" name=\"type\" disabled={!visibleAdd}\n                                                        value={x.code}\n                                                        checked={x.isSelect}\n                                                        onChange={(e) => handleChange(submod, e, mod.module)} />\n                                                    <span className=\"checkbox\"></span>\n                                                    <span className=\"lbl\">{x.label || x.name}</span>\n                                                </label>\n                                            })\n                                        }\n                                    </div>\n                                </div>\n                                {\n                                    // submod.permissionAccesstype === PERMISSION_ACCESS_TYPE.DATA &&\n                                    TODOS.includes(submod.subModule) ?\n                                        <div className='row_group_content expand'>\n                                            <SortableList items={submod.actions}\n                                                useDragHandle={true}\n                                                shouldCancelStart={() => {\n                                                    if (!visibleAdd)\n                                                        return true\n                                                    else return false\n                                                }}\n                                                onSortEnd={(e) => sortEnd(e, submod, mod)}\n                                                visibleAdd={visibleAdd} mod={mod} submod={submod}\n                                                handleChange={handleChange} />\n                                        </div>\n                                        : null\n                                }\n                            </div>\n                            ) : null\n                        }\n                    </div>\n                })\n            }\n        </div>\n    </>\n}\nexport default PermissionsList;"]},"metadata":{},"sourceType":"module"}