{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/PmrGroup/components/MoveResident.js\";\nimport React, { useState, useEffect } from 'react';\nimport Modal from '../../../components/common/Popup/index';\nimport Table from '../../../components/common/Table/index';\nimport { Select, Option } from '../../../components/common/index';\nimport { pmrGroupPaginate, getPmrGroupResidentList, moveResident } from '../../../services/api/routes/pmr';\nimport axios from '../../../services/api/config';\nimport { Toast } from '../../../components/common';\nimport { getUserNameWithDesignation } from '../../../util/common';\n\nconst _ = require('lodash');\n\nconst MoveResident = props => {\n  const {\n    onCloseModal,\n    moveResidentVisible,\n    title,\n    okText,\n    selectedPmrGroupId,\n    residentId,\n    onCloseAssignResidentModal\n  } = props;\n  const [pmrGroups, setPmrGroups] = useState([]);\n  const [residentLoader, setResidentLoader] = useState(false);\n  const [pmrGroupLoader, setpmrGroupLoader] = useState(false);\n  const [residentData, setResidentData] = useState([]);\n  const [moveResidentloader, setMoveResidentLoader] = useState(false);\n  const [residentTotal, setResidentTotal] = useState(0);\n  const [dropDownValue, setDropDownValue] = useState('');\n  useEffect(() => {\n    if (selectedPmrGroupId) {\n      fetchPMRGroup();\n    }\n  }, [selectedPmrGroupId]);\n\n  const fetchPMRGroup = () => {\n    setpmrGroupLoader(true);\n    axios({ ...pmrGroupPaginate,\n      data: {\n        query: {\n          ne: [{\n            _id: selectedPmrGroupId\n          }],\n          find: {\n            isActive: true\n          }\n        }\n      }\n    }).then(response => {\n      var _response$data;\n\n      if (((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.code) === 'OK') {\n        var _response$data$data;\n\n        setPmrGroups((_response$data$data = response.data.data) === null || _response$data$data === void 0 ? void 0 : _response$data$data.list);\n        setpmrGroupLoader(false);\n      } else {\n        setpmrGroupLoader(false);\n      }\n    }).catch(err => {\n      setpmrGroupLoader(false);\n    });\n  };\n\n  const modifiedList = list => {\n    let modifiedList = list.map(current => {\n      return current;\n    });\n    return modifiedList;\n  };\n\n  const handleChangePmrGorup = value => {\n    setResidentLoader(true);\n    setDropDownValue(value);\n    let {\n      method,\n      url,\n      baseURL\n    } = getPmrGroupResidentList;\n    axios({\n      method,\n      url,\n      baseURL,\n      data: {\n        pmrGroupId: value,\n        sortBy: {\n          firstName: 'DESC'\n        }\n      }\n    }).then(response => {\n      var _response$data2;\n\n      if (((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.code) === 'OK') {\n        let updatedList = modifiedList(response.data.data.list);\n        setResidentData(updatedList);\n        setResidentTotal(response.data.data.count);\n        setResidentLoader(false);\n      } else {\n        setResidentLoader(false);\n      }\n    }).catch(err => {\n      setResidentLoader(false);\n    });\n  };\n\n  const handleMove = () => {\n    setMoveResidentLoader(true);\n    let {\n      method,\n      url,\n      baseURL\n    } = moveResident;\n    let obj = {\n      fromPmrId: selectedPmrGroupId,\n      toPmrId: dropDownValue,\n      residentId: residentId\n    };\n    axios({\n      method,\n      url,\n      baseURL,\n      data: obj\n    }).then(response => {\n      var _response$data3;\n\n      if (((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.code) === 'OK') {\n        setMoveResidentLoader(false);\n        onCloseModal('ok');\n        onCloseAssignResidentModal();\n        Toast.success(response.data.message);\n      }\n    }).catch(error => {\n      setMoveResidentLoader(false);\n      Toast.error(error);\n    });\n  };\n\n  const getColumns = () => [{\n    title: 'Resident',\n    dataIndex: 'mergeLFName',\n    render: (text, record) => /*#__PURE__*/React.createElement(React.Fragment, null, text ? text : '-')\n  }, {\n    title: 'Room No',\n    dataIndex: 'room',\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, text ? text : '-')\n  }, // {\n  //   title: 'Home',\n  //   dataIndex: 'home',\n  //   render: (text) => (\n  //     <span style={{ textTransform: 'capitalize' }}>{text ? text : '-'}</span>\n  //   ),\n  // },\n  {\n    title: 'Home Area',\n    dataIndex: 'homeAreaId',\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, (text === null || text === void 0 ? void 0 : text.name) ? text.name : '-')\n  }, {\n    title: 'Physician',\n    dataIndex: 'physicianId',\n    render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, text ? getUserNameWithDesignation(record.physicianId) : '-')\n  }, {\n    title: 'HC#',\n    dataIndex: 'hc',\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, text ? text : '-')\n  }];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    visible: moveResidentVisible,\n    title: title,\n    onOk: handleMove,\n    okText: okText,\n    onCancel: onCloseModal,\n    onClose: onCloseModal,\n    maskClosable: false,\n    style: {\n      width: '70%'\n    },\n    okButtonProps: {\n      loading: moveResidentloader\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    loading: pmrGroupLoader,\n    placeholder: \"Select PMR Group\",\n    showSearch: true,\n    onChange: event => {\n      handleChangePmrGorup(event);\n    },\n    filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, _.map(pmrGroups, data => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Option, {\n      value: data._id,\n      key: data._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 23\n      }\n    }, data.groupName));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontSize: '18px',\n      alignItems: 'center',\n      width: '30%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, \"Resident\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"r_no\",\n    style: {\n      marginTop: '1%',\n      marginLeft: '2%',\n      fontSize: '55%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, residentTotal))), /*#__PURE__*/React.createElement(Table, {\n    columns: getColumns(),\n    datasource: residentData,\n    loading: residentLoader,\n    pagination: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default MoveResident;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/PmrGroup/components/MoveResident.js"],"names":["React","useState","useEffect","Modal","Table","Select","Option","pmrGroupPaginate","getPmrGroupResidentList","moveResident","axios","Toast","getUserNameWithDesignation","_","require","MoveResident","props","onCloseModal","moveResidentVisible","title","okText","selectedPmrGroupId","residentId","onCloseAssignResidentModal","pmrGroups","setPmrGroups","residentLoader","setResidentLoader","pmrGroupLoader","setpmrGroupLoader","residentData","setResidentData","moveResidentloader","setMoveResidentLoader","residentTotal","setResidentTotal","dropDownValue","setDropDownValue","fetchPMRGroup","data","query","ne","_id","find","isActive","then","response","code","list","catch","err","modifiedList","map","current","handleChangePmrGorup","value","method","url","baseURL","pmrGroupId","sortBy","firstName","updatedList","count","handleMove","obj","fromPmrId","toPmrId","success","message","error","getColumns","dataIndex","render","text","record","textTransform","name","physicianId","width","loading","marginTop","event","input","option","children","toLowerCase","indexOf","groupName","fontSize","alignItems","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from '../../../components/common/Popup/index';\nimport Table from '../../../components/common/Table/index';\nimport { Select, Option } from '../../../components/common/index';\nimport {\n  pmrGroupPaginate,\n  getPmrGroupResidentList,\n  moveResident,\n} from '../../../services/api/routes/pmr';\nimport axios from '../../../services/api/config';\nimport { Toast } from '../../../components/common';\nimport { getUserNameWithDesignation } from '../../../util/common';\n\nconst _ = require('lodash');\n\nconst MoveResident = (props) => {\n  const {\n    onCloseModal,\n    moveResidentVisible,\n    title,\n    okText,\n    selectedPmrGroupId,\n    residentId,\n    onCloseAssignResidentModal,\n  } = props;\n\n  const [pmrGroups, setPmrGroups] = useState([]);\n  const [residentLoader, setResidentLoader] = useState(false);\n  const [pmrGroupLoader, setpmrGroupLoader] = useState(false);\n  const [residentData, setResidentData] = useState([]);\n  const [moveResidentloader, setMoveResidentLoader] = useState(false);\n\n  const [residentTotal, setResidentTotal] = useState(0);\n  const [dropDownValue, setDropDownValue] = useState('');\n\n  useEffect(() => {\n    if (selectedPmrGroupId) {\n      fetchPMRGroup();\n    }\n  }, [selectedPmrGroupId]);\n\n  const fetchPMRGroup = () => {\n    setpmrGroupLoader(true);\n    axios({\n      ...pmrGroupPaginate,\n      data: {\n        query: { ne: [{ _id: selectedPmrGroupId }], find: { isActive: true } },\n      },\n    })\n      .then((response) => {\n        if (response.data?.code === 'OK') {\n          setPmrGroups(response.data.data?.list);\n          setpmrGroupLoader(false);\n        } else {\n          setpmrGroupLoader(false);\n        }\n      })\n      .catch((err) => {\n        setpmrGroupLoader(false);\n      });\n  };\n\n  const modifiedList = (list) => {\n    let modifiedList = list.map((current) => {\n      return current;\n    });\n    return modifiedList;\n  };\n\n  const handleChangePmrGorup = (value) => {\n    setResidentLoader(true);\n    setDropDownValue(value);\n    let { method, url, baseURL } = getPmrGroupResidentList;\n    axios({\n      method,\n      url,\n      baseURL,\n      data: { pmrGroupId: value, sortBy: { firstName: 'DESC' } },\n    })\n      .then((response) => {\n        if (response.data?.code === 'OK') {\n          let updatedList = modifiedList(response.data.data.list);\n          setResidentData(updatedList);\n          setResidentTotal(response.data.data.count);\n          setResidentLoader(false);\n        } else {\n          setResidentLoader(false);\n        }\n      })\n      .catch((err) => {\n        setResidentLoader(false);\n      });\n  };\n\n  const handleMove = () => {\n    setMoveResidentLoader(true);\n    let { method, url, baseURL } = moveResident;\n    let obj = {\n      fromPmrId: selectedPmrGroupId,\n      toPmrId: dropDownValue,\n      residentId: residentId,\n    };\n    axios({ method, url, baseURL, data: obj })\n      .then((response) => {\n        if (response.data?.code === 'OK') {\n          setMoveResidentLoader(false);\n          onCloseModal('ok');\n          onCloseAssignResidentModal();\n          Toast.success(response.data.message);\n        }\n      })\n      .catch((error) => {\n        setMoveResidentLoader(false);\n        Toast.error(error);\n      });\n  };\n\n  const getColumns = () => [\n    {\n      title: 'Resident',\n      dataIndex: 'mergeLFName',\n      render: (text, record) => <>{text ? text : '-'}</>,\n    },\n    {\n      title: 'Room No',\n      dataIndex: 'room',\n      render: (text) => <span>{text ? text : '-'}</span>,\n    },\n    // {\n    //   title: 'Home',\n    //   dataIndex: 'home',\n    //   render: (text) => (\n    //     <span style={{ textTransform: 'capitalize' }}>{text ? text : '-'}</span>\n    //   ),\n    // },\n    {\n      title: 'Home Area',\n      dataIndex: 'homeAreaId',\n      render: (text) => (\n        <span style={{ textTransform: 'capitalize' }}>\n          {text?.name ? text.name : '-'}\n        </span>\n      ),\n    },\n    {\n      title: 'Physician',\n      dataIndex: 'physicianId',\n      render: (text, record) => (\n        <span style={{ textTransform: 'capitalize' }}>\n          {text ? getUserNameWithDesignation(record.physicianId) : '-'}\n        </span>\n      ),\n    },\n    {\n      title: 'HC#',\n      dataIndex: 'hc',\n      render: (text) => (\n        <span style={{ textTransform: 'capitalize' }}>{text ? text : '-'}</span>\n      ),\n    },\n  ];\n  return (\n    <>\n      <Modal\n        visible={moveResidentVisible}\n        title={title}\n        onOk={handleMove}\n        okText={okText}\n        onCancel={onCloseModal}\n        onClose={onCloseModal}\n        maskClosable={false}\n        style={{ width: '70%' }}\n        okButtonProps={{ loading: moveResidentloader }}\n      >\n        <div>\n          <div className='form_row' style={{ marginTop: '2%' }}>\n            <div className='form_group col-12'>\n              <Select\n                loading={pmrGroupLoader}\n                placeholder='Select PMR Group'\n                showSearch\n                onChange={(event) => {\n                  handleChangePmrGorup(event);\n                }}\n                filterOption={(input, option) =>\n                  option.props.children\n                    .toLowerCase()\n                    .indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {_.map(pmrGroups, (data) => {\n                  return (\n                    <>\n                      <Option value={data._id} key={data._id}>\n                        {data.groupName}\n                      </Option>\n                    </>\n                  );\n                })}\n              </Select>\n            </div>\n          </div>\n          <div className='page_head'>\n            <h3\n              style={{ fontSize: '18px', alignItems: 'center', width: '30%' }}\n            >\n              Resident\n              <span\n                className='r_no'\n                style={{ marginTop: '1%', marginLeft: '2%', fontSize: '55%' }}\n              >\n                {residentTotal}\n              </span>\n            </h3>\n          </div>\n          <Table\n            columns={getColumns()}\n            datasource={residentData}\n            loading={residentLoader}\n            pagination={false}\n          />\n        </div>\n      </Modal>\n    </>\n  );\n};\nexport default MoveResident;\n"]},"metadata":{},"sourceType":"module"}