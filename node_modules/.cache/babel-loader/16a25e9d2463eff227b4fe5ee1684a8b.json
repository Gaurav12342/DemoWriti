{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/PrescriptionTodo/components/ResidentList.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Search, Spin, Select, Option } from '../../../components/common';\nimport { Filters } from '../../../assets/images/resident-detail/index';\nimport axios from '../../../services/api/services/common';\nimport { getTodoList as presTodo } from '../../../services/api/routes/prescriptionTodo';\nimport { getTodoList as pmrTodo } from '../../../services/api/routes/pmr';\nimport SearchResidents from '../../../components/SearchResidents';\nimport { getLFName } from '../../../util/common';\n\nconst ResidentList = props => {\n  const {\n    query,\n    onsetActiveTodo,\n    type\n  } = props;\n  const [loader, setLoader] = useState(false);\n  const [filter, setFilter] = useState({ ...query,\n    // \"residentId\": [\"5fd08ab91d2f807dae615505\", \"5ce3debd9e63335be089caa9\", \"5fcdb947e6dcac6dd7f10315\"],\n    // \"physicianId\": [\"5fc101220089781f3b221eaa\", \"5fca24d40cb2f70380bff79f\"],\n    \"page\": 1,\n    \"limit\": 15\n  });\n  const [todoList, setTodoList] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [search, setSearch] = useState();\n  const [residents, setResidents] = useState([]);\n  const [activeTodo, setActiveTodo] = useState(null);\n  const [infyLoader, setInfyLoader] = useState(false);\n  const mountRef = React.useRef(false);\n  let scrollParentRef = null;\n  useEffect(() => {\n    if (mountRef.current) {\n      let tempObj = { ...filter,\n        ...query,\n        \"page\": 1\n      };\n      setFilter(tempObj);\n    }\n  }, [query]);\n  useEffect(() => {\n    if (mountRef.current) {\n      if (filter.hasOwnProperty('orderNumber')) {\n        const delayDebounceFn = setTimeout(() => {\n          fetch();\n        }, 600);\n        return () => clearTimeout(delayDebounceFn);\n      } else fetch();\n    }\n  }, [filter]);\n  React.useEffect(() => {\n    // do not change sequence of this hook\n    mountRef.current = true;\n    fetch();\n  }, []);\n\n  const fetch = () => {\n    // get todoList based on category and subcategory\n    if (filter.page === 1) {\n      setTodoList([]);\n      setLoader(true);\n    }\n\n    const apiData = type === 'medReview' ? pmrTodo : presTodo;\n    axios({ ...apiData,\n      data: filter\n    }).then(data => {\n      if (data.code === 'OK') {\n        var _lists, _lists2;\n\n        let lists = filter.page === 1 ? [] : [...todoList];\n        lists = lists.concat(data.data.list);\n        setTodoList(lists);\n        setTotal(data.data.count);\n        if (((_lists = lists) === null || _lists === void 0 ? void 0 : _lists.length) > 0 && filter.page === 1) handleTodoClick(data.data.list[0]);\n        if (((_lists2 = lists) === null || _lists2 === void 0 ? void 0 : _lists2.length) === 0) handleTodoClick(null);\n        if (data.data.list.length < filter.limit) setHasMore(false);else setHasMore(true);\n      }\n\n      setLoader(false);\n      setInfyLoader(false);\n    }).catch(err => {\n      setLoader(false);\n      setInfyLoader(false);\n    });\n  };\n\n  const handleInfiniteOnLoad = page => {\n    setInfyLoader(true);\n    setFilter({ ...filter,\n      page: page + 1\n    });\n  };\n\n  const handleSearchRx = e => {\n    let value = e.target.value;\n    let obj = { ...filter,\n      orderNumber: value,\n      \"page\": 1\n    };\n    setFilter(obj);\n  };\n\n  const handleSelectResident = val => {\n    let obj = { ...filter,\n      residentId: (val === null || val === void 0 ? void 0 : val.length) > 0 ? val : undefined,\n      \"page\": 1\n    };\n    setFilter(obj);\n  };\n\n  const handleTodoClick = val => {\n    setActiveTodo(val);\n    onsetActiveTodo(val);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchlist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap col-12 form_group with_filter\",\n    style: {\n      padding: '12px 20px 0',\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchResidents, {\n    placeholder: \"Search Resident\",\n    allowClear: true,\n    onSelectResident: handleSelectResident,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Filters, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group search_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    placeholder: \"Search by Rx Order\",\n    value: filter.orderNumber,\n    onChange: handleSearchRx,\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listing\",\n    ref: ref => scrollParentRef = ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, loader ? /*#__PURE__*/React.createElement(Spin, {\n    spinning: loader,\n    str: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }) : (todoList === null || todoList === void 0 ? void 0 : todoList.length) > 0 ? /*#__PURE__*/React.createElement(InfiniteScroll, {\n    initialLoad: false,\n    loadMore: handleInfiniteOnLoad,\n    hasMore: hasMore && !loader && !infyLoader,\n    useWindow: false,\n    getScrollParent: () => scrollParentRef,\n    threshold: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, todoList.map((x, i) => {\n    const patientData = type === 'medReview' ? x === null || x === void 0 ? void 0 : x.patientId : x === null || x === void 0 ? void 0 : x.residentId;\n    const orderNumber = type === 'medReview' ? x === null || x === void 0 ? void 0 : x.pmrId : x === null || x === void 0 ? void 0 : x.orderNumber;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: `media ${x._id === (activeTodo === null || activeTodo === void 0 ? void 0 : activeTodo._id) ? \" active\" : \"\"}`,\n      onClick: () => handleTodoClick(x),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, patientData.image ? /*#__PURE__*/React.createElement(\"img\", {\n      src: patientData.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }\n    }) : getLFName({\n      mergeLFName: patientData.mergeLFName\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"media-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 27\n      }\n    }, patientData.mergeLFName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 27\n      }\n    }, orderNumber))));\n  }), infyLoader ? /*#__PURE__*/React.createElement(Spin, {\n    spinning: infyLoader,\n    str: \"center autoheight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 31\n    }\n  }) : null) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, \"No Data\")));\n};\n\nexport default ResidentList;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/PrescriptionTodo/components/ResidentList.js"],"names":["React","Component","useEffect","useState","InfiniteScroll","Search","Spin","Select","Option","Filters","axios","getTodoList","presTodo","pmrTodo","SearchResidents","getLFName","ResidentList","props","query","onsetActiveTodo","type","loader","setLoader","filter","setFilter","todoList","setTodoList","total","setTotal","hasMore","setHasMore","search","setSearch","residents","setResidents","activeTodo","setActiveTodo","infyLoader","setInfyLoader","mountRef","useRef","scrollParentRef","current","tempObj","hasOwnProperty","delayDebounceFn","setTimeout","fetch","clearTimeout","page","apiData","data","then","code","lists","concat","list","count","length","handleTodoClick","limit","catch","err","handleInfiniteOnLoad","handleSearchRx","e","value","target","obj","orderNumber","handleSelectResident","val","residentId","undefined","padding","marginBottom","ref","map","x","i","patientData","patientId","pmrId","_id","image","mergeLFName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,MAA/B,QAA6C,4BAA7C;AACA,SAASC,OAAT,QAAwB,8CAAxB;AACA,OAAOC,KAAP,MAAkB,uCAAlB;AACA,SAASC,WAAW,IAAIC,QAAxB,QAAwC,+CAAxC;AACA,SAASD,WAAW,IAAIE,OAAxB,QAAuC,kCAAvC;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,eAAT;AAA0BC,IAAAA;AAA1B,MAAmCH,KAAzC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,EACnC,GAAGe,KADgC;AAEnC;AACA;AACA,YAAQ,CAJ2B;AAKnC,aAAS;AAL0B,GAAD,CAApC;AAOA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAAC0B,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC4B,MAAD,EAASC,SAAT,IAAsB7B,QAAQ,EAApC;AACA,QAAM,CAAC8B,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgC,UAAD,EAAaC,aAAb,IAA8BjC,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACkC,UAAD,EAAaC,aAAb,IAA8BnC,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMoC,QAAQ,GAAGvC,KAAK,CAACwC,MAAN,CAAa,KAAb,CAAjB;AACA,MAAIC,eAAe,GAAG,IAAtB;AAEAvC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqC,QAAQ,CAACG,OAAb,EAAsB;AACpB,UAAIC,OAAO,GAAG,EACZ,GAAGpB,MADS;AAEZ,WAAGL,KAFS;AAGZ,gBAAQ;AAHI,OAAd;AAKAM,MAAAA,SAAS,CAACmB,OAAD,CAAT;AACD;AACF,GATQ,EASN,CAACzB,KAAD,CATM,CAAT;AAWAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqC,QAAQ,CAACG,OAAb,EAAsB;AACpB,UAAInB,MAAM,CAACqB,cAAP,CAAsB,aAAtB,CAAJ,EAA0C;AACxC,cAAMC,eAAe,GAAGC,UAAU,CAAC,MAAM;AACvCC,UAAAA,KAAK;AACN,SAFiC,EAE/B,GAF+B,CAAlC;AAGA,eAAO,MAAMC,YAAY,CAACH,eAAD,CAAzB;AACD,OALD,MAMEE,KAAK;AACR;AACF,GAVQ,EAUN,CAACxB,MAAD,CAVM,CAAT;AAYAvB,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpB;AACAqC,IAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAnB;AACAK,IAAAA,KAAK;AACN,GAJD,EAIG,EAJH;;AAKA,QAAMA,KAAK,GAAG,MAAM;AAClB;AACA,QAAIxB,MAAM,CAAC0B,IAAP,KAAgB,CAApB,EAAuB;AACrBvB,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAJ,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACD,UAAM4B,OAAO,GAAG9B,IAAI,KAAK,WAAT,GAAuBP,OAAvB,GAAiCD,QAAjD;AACAF,IAAAA,KAAK,CAAC,EAAE,GAAGwC,OAAL;AAAcC,MAAAA,IAAI,EAAE5B;AAApB,KAAD,CAAL,CAAoC6B,IAApC,CAAyCD,IAAI,IAAI;AAC/C,UAAIA,IAAI,CAACE,IAAL,KAAc,IAAlB,EAAwB;AAAA;;AACtB,YAAIC,KAAK,GAAG/B,MAAM,CAAC0B,IAAP,KAAgB,CAAhB,GAAoB,EAApB,GAAyB,CAAC,GAAGxB,QAAJ,CAArC;AACA6B,QAAAA,KAAK,GAAGA,KAAK,CAACC,MAAN,CAAaJ,IAAI,CAACA,IAAL,CAAUK,IAAvB,CAAR;AACA9B,QAAAA,WAAW,CAAC4B,KAAD,CAAX;AACA1B,QAAAA,QAAQ,CAACuB,IAAI,CAACA,IAAL,CAAUM,KAAX,CAAR;AACA,YAAI,WAAAH,KAAK,UAAL,wCAAOI,MAAP,IAAgB,CAAhB,IAAqBnC,MAAM,CAAC0B,IAAP,KAAgB,CAAzC,EACEU,eAAe,CAACR,IAAI,CAACA,IAAL,CAAUK,IAAV,CAAe,CAAf,CAAD,CAAf;AACF,YAAI,YAAAF,KAAK,UAAL,0CAAOI,MAAP,MAAkB,CAAtB,EACEC,eAAe,CAAC,IAAD,CAAf;AACF,YAAIR,IAAI,CAACA,IAAL,CAAUK,IAAV,CAAeE,MAAf,GAAwBnC,MAAM,CAACqC,KAAnC,EACE9B,UAAU,CAAC,KAAD,CAAV,CADF,KAGEA,UAAU,CAAC,IAAD,CAAV;AACH;;AACDR,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAgB,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAjBD,EAiBGuB,KAjBH,CAiBSC,GAAG,IAAI;AACdxC,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAgB,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KApBD;AAqBD,GA5BD;;AA8BA,QAAMyB,oBAAoB,GAAId,IAAD,IAAU;AACrCX,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAd,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER0B,MAAAA,IAAI,EAAEA,IAAI,GAAG;AAFL,KAAD,CAAT;AAID,GAND;;AAQA,QAAMe,cAAc,GAAIC,CAAD,IAAO;AAC5B,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACA,QAAIE,GAAG,GAAG,EACR,GAAG7C,MADK;AAER8C,MAAAA,WAAW,EAAEH,KAFL;AAGR,cAAQ;AAHA,KAAV;AAKA1C,IAAAA,SAAS,CAAC4C,GAAD,CAAT;AACD,GARD;;AAUA,QAAME,oBAAoB,GAAGC,GAAG,IAAI;AAClC,QAAIH,GAAG,GAAG,EACR,GAAG7C,MADK;AAERiD,MAAAA,UAAU,EAAE,CAAAD,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEb,MAAL,IAAc,CAAd,GAAkBa,GAAlB,GAAwBE,SAF5B;AAGR,cAAQ;AAHA,KAAV;AAKAjD,IAAAA,SAAS,CAAC4C,GAAD,CAAT;AACD,GAPD;;AASA,QAAMT,eAAe,GAAGY,GAAG,IAAI;AAC7BnC,IAAAA,aAAa,CAACmC,GAAD,CAAb;AACApD,IAAAA,eAAe,CAACoD,GAAD,CAAf;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAyD,IAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAE,aAAX;AAA0BC,MAAAA,YAAY,EAAE;AAAxC,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAC,iBAA7B;AAA+C,IAAA,UAAU,MAAzD;AACE,IAAA,gBAAgB,EAAEL,oBADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,eAME;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,oBAApB;AACE,IAAA,KAAK,EAAE/C,MAAM,CAAC8C,WADhB;AAEE,IAAA,QAAQ,EAAEL,cAFZ;AAGE,IAAA,UAAU,EAAE,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,eAYE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,GAAG,EAAGY,GAAD,IAASnC,eAAe,GAAGmC,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIvD,MAAM,gBACJ,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,MAAhB;AAAwB,IAAA,GAAG,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,GAEF,CAAAI,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEiC,MAAV,IAAmB,CAAnB,gBACA,oBAAC,cAAD;AACE,IAAA,WAAW,EAAE,KADf;AAEE,IAAA,QAAQ,EAAEK,oBAFZ;AAGE,IAAA,OAAO,EAAElC,OAAO,IAAI,CAACR,MAAZ,IAAsB,CAACgB,UAHlC;AAIE,IAAA,SAAS,EAAE,KAJb;AAKE,IAAA,eAAe,EAAE,MAAMI,eALzB;AAME,IAAA,SAAS,EAAE,EANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASIhB,QAAQ,CAACoD,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB,UAAMC,WAAW,GAAG5D,IAAI,KAAK,WAAT,GAAuB0D,CAAvB,aAAuBA,CAAvB,uBAAuBA,CAAC,CAAEG,SAA1B,GAAsCH,CAAtC,aAAsCA,CAAtC,uBAAsCA,CAAC,CAAEN,UAA7D;AACA,UAAMH,WAAW,GAAGjD,IAAI,KAAK,WAAT,GAAuB0D,CAAvB,aAAuBA,CAAvB,uBAAuBA,CAAC,CAAEI,KAA1B,GAAkCJ,CAAlC,aAAkCA,CAAlC,uBAAkCA,CAAC,CAAET,WAAzD;AAEA,wBAAO,uDACL;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,SAAS,EAAG,SAAQS,CAAC,CAACK,GAAF,MAAUhD,UAAV,aAAUA,UAAV,uBAAUA,UAAU,CAAEgD,GAAtB,IAA4B,SAA5B,GAAwC,EAAG,EAA3E;AAA8E,MAAA,OAAO,EAAE,MAAMxB,eAAe,CAACmB,CAAD,CAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,WAAW,CAACI,KAAZ,gBACC;AAAK,MAAA,GAAG,EAAEJ,WAAW,CAACI,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAEGrE,SAAS,CAAC;AAAEsE,MAAAA,WAAW,EAAEL,WAAW,CAACK;AAA3B,KAAD,CAHf,CAFF,eAOE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBL,WAAW,CAACK,WAAlC,CADF,eAEE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBhB,WAArB,CAFF,CAPF,CADK,CAAP;AAcD,GAlBD,CATJ,EA6BGhC,UAAU,gBAAG,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,UAAhB;AAA4B,IAAA,GAAG,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA4D,IA7BzE,CADA,gBAgCE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApCV,CAZF,CADF;AAuDD,CArKD;;AAsKA,eAAerB,YAAf","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Search, Spin, Select, Option } from '../../../components/common'\nimport { Filters } from '../../../assets/images/resident-detail/index';\nimport axios from '../../../services/api/services/common'\nimport { getTodoList as presTodo } from '../../../services/api/routes/prescriptionTodo';\nimport { getTodoList as pmrTodo } from '../../../services/api/routes/pmr';\nimport SearchResidents from '../../../components/SearchResidents'\nimport { getLFName } from '../../../util/common'\n\nconst ResidentList = props => {\n  const { query, onsetActiveTodo, type } = props\n  const [loader, setLoader] = useState(false);\n  const [filter, setFilter] = useState({\n    ...query,\n    // \"residentId\": [\"5fd08ab91d2f807dae615505\", \"5ce3debd9e63335be089caa9\", \"5fcdb947e6dcac6dd7f10315\"],\n    // \"physicianId\": [\"5fc101220089781f3b221eaa\", \"5fca24d40cb2f70380bff79f\"],\n    \"page\": 1,\n    \"limit\": 15\n  });\n  const [todoList, setTodoList] = useState([])\n  const [total, setTotal] = useState(0)\n  const [hasMore, setHasMore] = useState(true)\n  const [search, setSearch] = useState()\n  const [residents, setResidents] = useState([]);\n  const [activeTodo, setActiveTodo] = useState(null);\n  const [infyLoader, setInfyLoader] = useState(false);\n  const mountRef = React.useRef(false);\n  let scrollParentRef = null\n\n  useEffect(() => {\n    if (mountRef.current) {\n      let tempObj = {\n        ...filter,\n        ...query,\n        \"page\": 1,\n      }\n      setFilter(tempObj)\n    }\n  }, [query])\n\n  useEffect(() => {\n    if (mountRef.current) {\n      if (filter.hasOwnProperty('orderNumber')) {\n        const delayDebounceFn = setTimeout(() => {\n          fetch()\n        }, 600)\n        return () => clearTimeout(delayDebounceFn)\n      } else\n        fetch()\n    }\n  }, [filter]);\n\n  React.useEffect(() => {\n    // do not change sequence of this hook\n    mountRef.current = true;\n    fetch()\n  }, [])\n  const fetch = () => {\n    // get todoList based on category and subcategory\n    if (filter.page === 1) {\n      setTodoList([])\n      setLoader(true);\n    }\n    const apiData = type === 'medReview' ? pmrTodo : presTodo\n    axios({ ...apiData, data: filter }).then(data => {\n      if (data.code === 'OK') {\n        let lists = filter.page === 1 ? [] : [...todoList]\n        lists = lists.concat(data.data.list)\n        setTodoList(lists)\n        setTotal(data.data.count)\n        if (lists?.length > 0 && filter.page === 1)\n          handleTodoClick(data.data.list[0])\n        if (lists?.length === 0)\n          handleTodoClick(null)\n        if (data.data.list.length < filter.limit)\n          setHasMore(false)\n        else\n          setHasMore(true)\n      }\n      setLoader(false)\n      setInfyLoader(false)\n    }).catch(err => {\n      setLoader(false)\n      setInfyLoader(false)\n    })\n  }\n\n  const handleInfiniteOnLoad = (page) => {\n    setInfyLoader(true)\n    setFilter({\n      ...filter,\n      page: page + 1\n    })\n  }\n\n  const handleSearchRx = (e) => {\n    let value = e.target.value\n    let obj = {\n      ...filter,\n      orderNumber: value,\n      \"page\": 1,\n    }\n    setFilter(obj)\n  }\n\n  const handleSelectResident = val => {\n    let obj = {\n      ...filter,\n      residentId: val?.length > 0 ? val : undefined,\n      \"page\": 1,\n    }\n    setFilter(obj)\n  }\n\n  const handleTodoClick = val => {\n    setActiveTodo(val)\n    onsetActiveTodo(val)\n  }\n\n  return (\n    <div className=\"searchlist\">\n      <div className=\"form_wrap col-12 form_group with_filter\" style={{ padding: '12px 20px 0', marginBottom: 0 }}>\n        <SearchResidents placeholder=\"Search Resident\" allowClear\n          onSelectResident={handleSelectResident} />\n        <Filters />\n      </div>\n      <div className=\"form_group search_box\">\n        <Search placeholder='Search by Rx Order'\n          value={filter.orderNumber}\n          onChange={handleSearchRx}\n          allowClear={true} />\n      </div>\n      <div className=\"listing\" ref={(ref) => scrollParentRef = ref}>\n        {\n          loader ?\n            <Spin spinning={loader} str='center' />\n            : todoList?.length > 0 ?\n              <InfiniteScroll\n                initialLoad={false}\n                loadMore={handleInfiniteOnLoad}\n                hasMore={hasMore && !loader && !infyLoader}\n                useWindow={false}\n                getScrollParent={() => scrollParentRef}\n                threshold={20}\n              >\n                {\n                  todoList.map((x, i) => {\n                    const patientData = type === 'medReview' ? x?.patientId : x?.residentId;\n                    const orderNumber = type === 'medReview' ? x?.pmrId : x?.orderNumber;\n\n                    return <>\n                      <a href=\"#\" className={`media ${x._id === activeTodo?._id ? \" active\" : \"\"}`} onClick={() => handleTodoClick(x)}>\n                        {/* <a href=\"#\" className=\"media offline\"> */}\n                        <div className=\"contact-profile\">\n                          {patientData.image ?\n                            <img src={patientData.image} />\n                            : getLFName({ mergeLFName: patientData.mergeLFName })}\n                        </div>\n                        <div className=\"media-body\">\n                          <h3 className=\"name\">{patientData.mergeLFName}</h3>\n                          <p className=\"desc\">{orderNumber}</p>\n                        </div>\n                      </a>\n                    </>\n                  })\n                }\n                {infyLoader ? <Spin spinning={infyLoader} str='center autoheight' /> : null}\n              </InfiniteScroll>\n              : <p className=\"text-center\">No Data</p>\n        }\n      </div>\n    </div>\n  );\n\n}\nexport default ResidentList;\n"]},"metadata":{},"sourceType":"module"}