{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/ReminderPopup/Upsert.js\";\nimport React, { useState, useEffect } from 'react';\nimport Dialog from '../common/Popup/index';\nimport Button from '../common/Button';\nimport TextArea from '../common/TextArea';\nimport { displayDateTime } from '../../util/moment';\nimport { getUserNameWithDesignation } from '../../util/common';\nimport { DURATION_TYPE } from './../../constants/reminder';\nimport ErrorMsg from './../common/ErrorMsg';\nimport moment from 'moment';\nimport { DateTimePicker } from './../common';\n\nconst Upsert = props => {\n  const {\n    isEdit,\n    onCancel,\n    detail = {},\n    xRayNumber\n  } = props;\n  const [message, setMessage] = useState(detail.message);\n  const [reminderDate, setReminderDate] = useState(detail.reminderDate);\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    setReminderDate(detail.reminderDate ? moment(detail.reminderDate) : null);\n    setMessage(detail.message);\n  }, [detail.message, detail.reminderDate]);\n\n  const handleOk = async () => {\n    let errors = {};\n\n    if (!message || !message.trim) {\n      errors['message'] = ['Please enter reminder note.'];\n    }\n\n    if (!reminderDate) {\n      errors['reminderDate'] = ['Please enter reminder date.'];\n    }\n\n    ;\n\n    if (errors['message'] || errors['reminderDate']) {\n      return setErrors(errors);\n    }\n\n    if (isEdit) {\n      props.handleUpdate({\n        reminderDate,\n        message,\n        id: detail._id\n      });\n    } else {\n      props.handleAdd({\n        timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n        durationType: DURATION_TYPE.SINGLE_DAY,\n        isActive: true,\n        reminderDate,\n        message\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, Object.assign({}, props, {\n    footer: false,\n    customChildren: true,\n    className: \"logout_popup add_notes_warp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content-log\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"name_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, isEdit ? 'Edit' : 'Add', \" Reminder\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), !!isEdit && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ptrik-notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Created By : \", detail.addedBy && getUserNameWithDesignation(detail.addedBy)), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Created At : \", detail.createdAt && displayDateTime(detail.createdAt))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row verticle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    style: {\n      height: 'auto'\n    },\n    rows: \"6\",\n    Placeholder: \"Reminder Notes\",\n    onChange: e => setMessage(e.target.value),\n    value: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors['message'] || [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex reminder-part j-space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    placeholder: \"Select Date & Time*\",\n    value: reminderDate,\n    onChange: setReminderDate,\n    timePicker: true,\n    disabled: false,\n    showOk: true,\n    timePickerProps: {\n      format: \"HH:mm\",\n      minuteStep: 5,\n      showSecond: false,\n      use12Hours: false\n    },\n    disabledDate: current => current.isBefore(moment().subtract(1, 'days')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors['reminderDate'] || [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex-center f-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"prev-screen-btn gray-btn sh-btn\",\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"CANCEL\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"prev-screen-btn sh-btn\",\n    onClick: handleOk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, isEdit ? 'UPDATE' : 'ADD')))));\n};\n\nexport default Upsert;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/ReminderPopup/Upsert.js"],"names":["React","useState","useEffect","Dialog","Button","TextArea","displayDateTime","getUserNameWithDesignation","DURATION_TYPE","ErrorMsg","moment","DateTimePicker","Upsert","props","isEdit","onCancel","detail","xRayNumber","message","setMessage","reminderDate","setReminderDate","errors","setErrors","handleOk","trim","handleUpdate","id","_id","handleAdd","timeZone","Intl","DateTimeFormat","resolvedOptions","durationType","SINGLE_DAY","isActive","addedBy","createdAt","height","e","target","value","format","minuteStep","showSecond","use12Hours","current","isBefore","subtract"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Dialog from '../common/Popup/index';\nimport Button from '../common/Button'\nimport TextArea from '../common/TextArea';\nimport { displayDateTime } from '../../util/moment';\nimport { getUserNameWithDesignation } from '../../util/common';\nimport { DURATION_TYPE } from './../../constants/reminder'\nimport ErrorMsg from './../common/ErrorMsg';\nimport moment from 'moment'\nimport { DateTimePicker } from './../common'\n\nconst Upsert = (props) => {\n    const { isEdit, onCancel, detail = {}, xRayNumber } = props;\n\n    const [message, setMessage] = useState(detail.message);\n    const [reminderDate, setReminderDate] = useState(detail.reminderDate);\n    const [errors, setErrors] = useState({});\n\n    useEffect(() => {\n        setReminderDate(detail.reminderDate ? moment(detail.reminderDate) : null)\n        setMessage(detail.message)\n    }, [detail.message, detail.reminderDate])\n\n    const handleOk = async () => {\n        let errors = {}\n        if (!message || !message.trim) {\n            errors['message'] = ['Please enter reminder note.']\n        }\n        if (!reminderDate) {\n            errors['reminderDate'] = ['Please enter reminder date.']\n        };\n        if (errors['message'] || errors['reminderDate']) {\n            return setErrors(errors)\n        }\n        if (isEdit) {\n            props.handleUpdate({ reminderDate, message, id: detail._id })\n        } else {\n            props.handleAdd({\n                timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n                durationType: DURATION_TYPE.SINGLE_DAY,\n                isActive: true,\n                reminderDate,\n                message\n            })\n        }\n    }\n    \n\n    return <Dialog {...props} footer={false} customChildren={true}\n        className=\"logout_popup add_notes_warp\"\n    >\n        <div className=\"popup-content-log\">\n            <h3 className=\"name_head\">{isEdit ? 'Edit' : 'Add'} Reminder</h3>\n            <div className=\"bb\"></div>\n            {\n                !!isEdit &&\n                <div className=\"ptrik-notes\">\n                    <span>Created By : {detail.addedBy && getUserNameWithDesignation(detail.addedBy)}</span>\n                    <span>Created At : {detail.createdAt && displayDateTime(detail.createdAt)}</span>\n                </div>\n            }\n            <div className=\"form\">\n                <form>\n                    <div className=\"form_row verticle\">\n                        <div className='form_group'>\n                            <TextArea\n                                style={{ height: 'auto' }}\n                                rows='6'\n                                Placeholder=\"Reminder Notes\"\n                                onChange={e => setMessage(e.target.value)}\n                                value={message}\n                            />\n                            <ErrorMsg errors={errors['message'] || []} />\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div className=\"d-flex reminder-part j-space-between\">\n                <div className='form_group'>\n                    <DateTimePicker\n                        placeholder=\"Select Date & Time*\"\n                        value={reminderDate}\n                        onChange={setReminderDate}\n                        timePicker={true}\n                        disabled={false}\n                        showOk={true}\n                        timePickerProps={{\n                            format: \"HH:mm\",\n                            minuteStep: 5,\n                            showSecond: false,\n                            use12Hours: false,\n                        }}\n                        disabledDate={current => current.isBefore(moment().subtract(1,'days'))}\n                    />\n                    <ErrorMsg errors={errors['reminderDate'] || []} />\n                </div>\n                <div className=\"d-flex-center f-center\">\n                    <Button\n                        className=\"prev-screen-btn gray-btn sh-btn\"\n                        onClick={onCancel}\n                    >\n                        CANCEL\n                    </Button>\n                    <Button className=\"prev-screen-btn sh-btn\" onClick={handleOk}>\n                        {isEdit ? 'UPDATE' : 'ADD'}\n                    </Button>\n                </div>\n            </div>\n        </div>\n    </Dialog >\n}\n\nexport default Upsert"]},"metadata":{},"sourceType":"module"}