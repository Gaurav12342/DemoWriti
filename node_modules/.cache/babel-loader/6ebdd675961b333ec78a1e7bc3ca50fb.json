{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/SearchResidents.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Search, Spin, Select, Option } from './common';\nimport axios from '../services/api/services/common';\nimport { getResidents } from '../services/api/routes/resident';\nimport PropTypes from \"prop-types\";\nimport { STATUS } from '../constants/resident';\n\nconst Resident = props => {\n  const {\n    placeholder,\n    onSelectResident\n  } = props;\n  const [filter, setFilter] = useState({\n    fields: ['mergeLFName'],\n    sortBy: {\n      createdAt: 'DESC'\n    },\n    find: {\n      status: STATUS.ACTIVE\n    }\n  });\n  const [data, setData] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const mountedRef = React.useRef(false);\n  useEffect(() => {\n    if (mountedRef.current) {\n      const delayDebounceFn = setTimeout(() => {\n        fetch();\n      }, 600);\n      return () => clearTimeout(delayDebounceFn);\n    }\n  }, [filter]);\n  useEffect(() => {\n    mountedRef.current = true;\n  }, []);\n\n  const handleSearch = value => {\n    let obj = { ...filter,\n      search: {\n        keyword: value,\n        keys: ['mergeLFName']\n      }\n    };\n    setFilter(obj);\n  };\n\n  const fetch = () => {\n    setLoader(true);\n    axios({ ...getResidents,\n      data: {\n        'query': { ...filter\n        }\n      }\n    }).then(data => {\n      if (data.code === 'OK') {\n        setData(data.data.data);\n      }\n\n      setLoader(false);\n    }).catch(err => {\n      setLoader(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n    placeholder: placeholder,\n    allowClear: true,\n    multiple: true,\n    showSearch: true,\n    filterOption: false,\n    onChange: onSelectResident,\n    onSearch: handleSearch,\n    searchable: true,\n    notFoundContent: loader ? /*#__PURE__*/React.createElement(Spin, {\n      spinning: loader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 39\n      }\n    }) : 'No Data Found',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, !loader && data.map(res => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: res._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, res.mergeLFName);\n  })));\n};\n\nexport default Resident;\nResident.defaultProps = {\n  combobox: false\n};","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/SearchResidents.js"],"names":["React","useEffect","useState","Search","Spin","Select","Option","axios","getResidents","PropTypes","STATUS","Resident","props","placeholder","onSelectResident","filter","setFilter","fields","sortBy","createdAt","find","status","ACTIVE","data","setData","loader","setLoader","mountedRef","useRef","current","delayDebounceFn","setTimeout","fetch","clearTimeout","handleSearch","value","obj","search","keyword","keys","then","code","catch","err","map","res","_id","mergeLFName","defaultProps","combobox"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Search, Spin, Select, Option } from './common'\nimport axios from '../services/api/services/common'\nimport { getResidents } from '../services/api/routes/resident';\nimport PropTypes from \"prop-types\";\nimport { STATUS } from '../constants/resident';\n\nconst Resident = props => {\n    const { placeholder, onSelectResident } = props\n    const [filter, setFilter] = useState({\n        fields: ['mergeLFName'],\n        sortBy: { createdAt: 'DESC' },\n        find: { status: STATUS.ACTIVE },\n    });\n    const [data, setData] = useState([]);\n    const [loader, setLoader] = useState(false);\n    const mountedRef = React.useRef(false)\n\n    useEffect(() => {\n        if (mountedRef.current) {\n            const delayDebounceFn = setTimeout(() => {\n                fetch()\n            }, 600)\n            return () => clearTimeout(delayDebounceFn)\n        }\n    }, [filter])\n\n    useEffect(() => {\n        mountedRef.current = true;\n    }, [])\n\n    const handleSearch = (value) => {\n\n        let obj = {\n            ...filter,\n            search: {\n                keyword: value,\n                keys: ['mergeLFName'],\n            }\n        }\n        setFilter(obj)\n    }\n\n    const fetch = () => {\n        setLoader(true)\n        axios({ ...getResidents, data: { 'query': { ...filter } } }).then(data => {\n            if (data.code === 'OK') {\n                setData(data.data.data)\n            }\n            setLoader(false)\n        }).catch(err => {\n            setLoader(false)\n        })\n    }\n\n    return <>\n        <Select\n            placeholder={placeholder}\n            allowClear multiple showSearch\n            filterOption={false}\n            onChange={onSelectResident}\n            onSearch={handleSearch}\n            searchable={true}\n            notFoundContent={loader ? <Spin spinning={loader}></Spin> : 'No Data Found'}\n        >\n            {\n                !loader &&\n                data.map(res => {\n                    return (\n                        <Option key={res._id}>{res.mergeLFName}</Option>\n                    );\n                })\n            }\n        </Select>\n\n    </>\n}\n\nexport default Resident\nResident.defaultProps = { combobox: false };"]},"metadata":{},"sourceType":"module"}