{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Xray/List/STLRequest.js\";\nimport React, { Component } from 'react';\n\nfunction STLRequest(props) {\n  let {\n    data\n  } = props;\n  console.log('request data', data);\n  return /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"my-fieldset request\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    className: \"custom-legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, \"Request\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"listDotes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, data.selectedOptions && Object.keys(data.selectedOptions).length ? Object.keys(data.selectedOptions).map((key, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      style: {\n        listStyleType: 'none',\n        float: \"left\",\n        textAlign: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 36\n      }\n    }, data.selectedOptions[key].isClickable ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"key\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 67\n      }\n    }, i + 1, \".\", key)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 104\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"key-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 45\n      }\n    }, data.selectedOptions[key].items)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"key\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 67\n      }\n    }, i + 1, \".\", key)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 104\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 45\n      }\n    }, Object.keys(data.selectedOptions[key]).map((subKey, j) => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 64\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"subkey\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 61\n        }\n      }, j + 1, \".\", subKey), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 109\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"subkey-option\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 61\n        }\n      }, data.selectedOptions[key][subKey].optionItems), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 61\n        }\n      }));\n    }))));\n  }) : null));\n}\n\nexport default STLRequest;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Xray/List/STLRequest.js"],"names":["React","Component","STLRequest","props","data","console","log","selectedOptions","Object","keys","length","map","key","i","listStyleType","float","textAlign","isClickable","items","subKey","j","optionItems"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,MAAI;AAAEC,IAAAA;AAAF,MAAWD,KAAf;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,IAA5B;AACA,sBACI;AAAU,IAAA,SAAS,EAAC,qBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,IAAI,CAACG,eAAL,IAAwBC,MAAM,CAACC,IAAP,CAAYL,IAAI,CAACG,eAAjB,EAAkCG,MAA1D,GACIF,MAAM,CAACC,IAAP,CAAYL,IAAI,CAACG,eAAjB,EAAkCI,GAAlC,CAAsC,CAACC,GAAD,EAAMC,CAAN,KAAY;AAE9C,wBAAO;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAa,EAAE,MAAjB;AAAwBC,QAAAA,KAAK,EAAC,MAA9B;AAAqCC,QAAAA,SAAS,EAAC;AAA/C,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAECZ,IAAI,CAACG,eAAL,CAAqBK,GAArB,EAA0BK,WAA1B,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASJ,CAAC,GAAG,CAAb,OAAiBD,GAAjB,CAAtB,CADJ,eAC+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD/D,eAEI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BR,IAAI,CAACG,eAAL,CAAqBK,GAArB,EAA0BM,KAAxD,CAFJ,CADJ,gBAMM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASL,CAAC,GAAG,CAAb,OAAiBD,GAAjB,CAAtB,CADF,eAC6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7D,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQJ,MAAM,CAACC,IAAP,CAAYL,IAAI,CAACG,eAAL,CAAqBK,GAArB,CAAZ,EAAuCD,GAAvC,CAA2C,CAACQ,MAAD,EAASC,CAAT,KAAe;AACtD,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACH;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BA,CAAC,GAAG,CAA9B,OAAkCD,MAAlC,CADG,eAC6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD7C,eAEH;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCf,IAAI,CAACG,eAAL,CAAqBK,GAArB,EAA0BO,MAA1B,EAAkCE,WAAnE,CAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHG,CAAP;AAKH,KAND,CAFR,CAFF,CARP,CAAP;AA0BH,GA5BD,CADJ,GA6BS,IA/BjB,CAFJ,CADJ;AAuCH;;AACD,eAAenB,UAAf","sourcesContent":["import React, { Component } from 'react'\n\nfunction STLRequest(props) {\n    let { data } = props\n    console.log('request data', data)\n    return (\n        <fieldset className=\"my-fieldset request\">\n            <legend className=\"custom-legend\" >Request</legend>\n            <ul className=\"listDotes\">\n                {\n                    data.selectedOptions && Object.keys(data.selectedOptions).length ?\n                        Object.keys(data.selectedOptions).map((key, i) => {\n\n                            return <li style={{ listStyleType: 'none',float:\"left\",textAlign:'left' }}>\n                                {\n                                    data.selectedOptions[key].isClickable ?\n                                        <span>\n                                            <span className=\"key\"><strong>{i + 1}.{key}</strong></span><br />\n                                            <span className=\"key-option\">{data.selectedOptions[key].items}</span>\n                                            \n                                        </span>\n                                        : <div >\n                                            <span className=\"key\"><strong>{i + 1}.{key}</strong></span><br />\n                                            <span>\n                                                {\n                                                    Object.keys(data.selectedOptions[key]).map((subKey, j) => {\n                                                        return <span>\n                                                            <span className=\"subkey\">{j + 1}.{subKey}</span><br />\n                                                            <span className=\"subkey-option\">{data.selectedOptions[key][subKey].optionItems}</span>\n                                                            <br />\n                                                        </span>\n                                                    })\n                                                }\n\n                                            </span>\n\n                                        </div>\n                                }\n                            </li>\n                        }) : null\n                }\n            </ul>\n        </fieldset>\n    )\n}\nexport default STLRequest"]},"metadata":{},"sourceType":"module"}