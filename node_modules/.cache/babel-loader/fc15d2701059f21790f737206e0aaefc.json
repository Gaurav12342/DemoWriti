{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/Todo/PendingTodo.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { View } from '../../assets/images/todo/index';\nimport { getTodoName } from '../../util/todo';\nimport { displayDateTime } from '../../util/moment';\nimport { TODO_TYPES } from '../../constants/prescription';\n\nconst PendingTodo = props => {\n  const {\n    todo,\n    onFetchTodoDetail\n  } = props;\n  const [pendingTodo, setPendingTodo] = useState(todo.otherPendingTodos || [1, 2, 3]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listing-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"Pending To Do - \", getTodoName(TODO_TYPES, todo.subCategory || 15))), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"top-cell pending-to-do\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: '#609fae'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Rx Order \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 57\n    }\n  }, pendingTodo.length)), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"PMR\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"E-Processing\")), pendingTodo.map(pt => {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      className: \"pending-to-do\",\n      key: pt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, \"Rx 123456 - 18th May 2020, 12:20 pm\"), /*#__PURE__*/React.createElement(View, {\n      onClick: () => onFetchTodoDetail(pt.prescribedFormId.id, true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }));\n  }));\n};\n\nexport default PendingTodo;\nPendingTodo.defaultProps = {};\nPendingTodo.propTypes = {\n  todo: PropTypes.object,\n  onFetchTodoDetail: PropTypes.func\n};","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/Todo/PendingTodo.js"],"names":["React","useState","PropTypes","View","getTodoName","displayDateTime","TODO_TYPES","PendingTodo","props","todo","onFetchTodoDetail","pendingTodo","setPendingTodo","otherPendingTodos","subCategory","color","length","map","pt","prescribedFormId","id","defaultProps","propTypes","object","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,gCAArB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,UAAT,QAA2B,8BAA3B;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA8BF,KAApC;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAACQ,IAAI,CAACI,iBAAL,IAA0B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA3B,CAA9C;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqBT,WAAW,CAACE,UAAD,EAAaG,IAAI,CAACK,WAAL,IAAoB,EAAjC,CAAhC,CADJ,CADG,eAIH;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA4C;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBJ,WAAW,CAACK,MAArC,CAA5C,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CAJG,EAUCL,WAAW,CAACM,GAAZ,CAAgBC,EAAE,IAAI;AAClB,wBAAO;AAAG,MAAA,SAAS,EAAC,eAAb;AAA6B,MAAA,GAAG,EAAEA,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAJG,eAKH,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,MAAMR,iBAAiB,CAACQ,EAAE,CAACC,gBAAH,CAAoBC,EAArB,EAAyB,IAAzB,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALG,CAAP;AAQH,GATD,CAVD,CAAP;AAuBH,CA3BD;;AA4BA,eAAeb,WAAf;AACAA,WAAW,CAACc,YAAZ,GAA2B,EAA3B;AAEAd,WAAW,CAACe,SAAZ,GAAwB;AACpBb,EAAAA,IAAI,EAAEP,SAAS,CAACqB,MADI;AAEpBb,EAAAA,iBAAiB,EAAER,SAAS,CAACsB;AAFT,CAAxB","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { View } from '../../assets/images/todo/index';\nimport { getTodoName } from '../../util/todo';\nimport { displayDateTime } from '../../util/moment';\nimport { TODO_TYPES } from '../../constants/prescription'\n\nconst PendingTodo = (props) => {\n    const { todo, onFetchTodoDetail } = props\n    const [pendingTodo, setPendingTodo] = useState(todo.otherPendingTodos || [1, 2, 3])\n\n    return <div className='listing-bottom'>\n        <div className='form-title'>\n            <h5>Pending To Do - {getTodoName(TODO_TYPES, todo.subCategory || 15)}</h5>\n        </div>\n        <a className='top-cell pending-to-do'>\n            <span style={{ color: '#609fae' }}>Rx Order <span className='count'>{pendingTodo.length}</span></span>\n            <span>PMR</span>\n            <span>E-Processing</span>\n        </a>\n        {\n            pendingTodo.map(pt => {\n                return <a className='pending-to-do' key={pt}>\n                    {/* <span>{pt.prescribedFormId.orderNumber} -\n                        {displayDateTime(pt.prescribedFormId.orderGeneratedAt)}\n                        </span> */}\n                    <span>Rx 123456 - 18th May 2020, 12:20 pm</span>\n                    <View onClick={() => onFetchTodoDetail(pt.prescribedFormId.id, true)\n                    } />\n                </a>\n            })\n        }\n    </div>\n\n}\nexport default PendingTodo\nPendingTodo.defaultProps = {\n}\nPendingTodo.propTypes = {\n    todo: PropTypes.object,\n    onFetchTodoDetail: PropTypes.func\n}"]},"metadata":{},"sourceType":"module"}