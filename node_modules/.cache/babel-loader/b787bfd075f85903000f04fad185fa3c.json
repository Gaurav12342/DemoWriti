{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/PccLog/components/FilterForPcc.js\";\nimport React, { useState, useEffect } from 'react';\nimport Modal from '../../../components/common/Popup/index';\nimport { Input, Button, ErrorMsg } from '../../../components/common/index';\n\nconst _ = require('lodash');\n\nconst {\n  PCC_LOGS_STATUS_TEXT_TYPE\n} = require(\"../../../constants/common\");\n\nconst FilterForPcc = props => {\n  let errors;\n  const {\n    form,\n    onSave,\n    radioData,\n    setRadioData\n  } = props;\n  const {\n    getFieldDecorator,\n    validateFields,\n    getFieldError,\n    setFieldsValue\n  } = form;\n  const {\n    isVisible,\n    onCancel,\n    onClose\n  } = props; // const [radioData, setRadioData] = useState(\"ALL\");\n\n  const handleSubmit = () => {\n    validateFields((error, value) => {\n      if (!error) {\n        const obj = {\n          url: value.url,\n          type: radioData\n        };\n        onSave(obj);\n      } else {\n        console.log(error);\n      }\n    });\n  };\n\n  const hadleRadioValue = e => {\n    if (e.target.checked) {\n      setRadioData(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    visible: isVisible,\n    onCancel: onClose,\n    onClose: onClose // style={{ width: '50%' }}\n    // title={title}\n    ,\n    maskClosable: true,\n    onOk: handleSubmit // okText={okText}\n    // cancelText={cancelText}\n    // okButtonProps={{ loading: loading }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12 \",\n    style: {\n      marginBottom: '3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"Url\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 32\n    }\n  }, \"*\")), getFieldDecorator('url', {})( /*#__PURE__*/React.createElement(Input, {\n    name: \"url\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 28\n    }\n  })), (errors = getFieldError('url')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"Type\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \" col-12\",\n    style: {\n      marginBottom: '3%',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, Object.keys(PCC_LOGS_STATUS_TEXT_TYPE).map((data, index) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"filter_check radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"type\",\n      value: PCC_LOGS_STATUS_TEXT_TYPE[data],\n      checked: radioData === PCC_LOGS_STATUS_TEXT_TYPE[data],\n      onChange: hadleRadioValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkbox radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 41\n      }\n    }, data.replace(/_/g, ' '))));\n  })))));\n};\n\nexport default FilterForPcc;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/PccLog/components/FilterForPcc.js"],"names":["React","useState","useEffect","Modal","Input","Button","ErrorMsg","_","require","PCC_LOGS_STATUS_TEXT_TYPE","FilterForPcc","props","errors","form","onSave","radioData","setRadioData","getFieldDecorator","validateFields","getFieldError","setFieldsValue","isVisible","onCancel","onClose","handleSubmit","error","value","obj","url","type","console","log","hadleRadioValue","e","target","checked","marginTop","marginBottom","display","Object","keys","map","data","index","replace"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport Modal from '../../../components/common/Popup/index';\nimport {\n    Input,\n    Button,\n    ErrorMsg,\n} from '../../../components/common/index';\n\nconst _ = require('lodash');\n\nconst { PCC_LOGS_STATUS_TEXT_TYPE } = require(\"../../../constants/common\");\n\nconst FilterForPcc = (props) => {\n    let errors;\n\n    const { form, onSave ,radioData, setRadioData} = props\n    const {\n        getFieldDecorator,\n        validateFields,\n        getFieldError,\n        setFieldsValue,\n\n    } = form;\n    const { isVisible, onCancel, onClose } = props\n    // const [radioData, setRadioData] = useState(\"ALL\");\n\n    const handleSubmit = () => {\n        validateFields((error, value) => {\n            if (!error) {\n                const obj = {\n                    url:value.url,\n                    type:radioData\n                }\n                onSave(obj);\n            } else {\n                console.log(error);\n            }\n        });\n    };\n\n    const hadleRadioValue = (e) => {\n        if (e.target.checked) {\n            setRadioData(e.target.value);\n        }\n    };\n    return (\n        <>\n            <Modal\n                visible={isVisible}\n                onCancel={onClose}\n                onClose={onClose}\n                // style={{ width: '50%' }}\n                // title={title}\n                maskClosable={true}\n                onOk={handleSubmit}\n            // okText={okText}\n            // cancelText={cancelText}\n            // okButtonProps={{ loading: loading }}\n            >\n                <div className='form_row' style={{ marginTop: '2%' }}>\n                    <div\n                        className='form_group col-12 '\n                        style={{ marginBottom: '3%' }}\n                    >\n                        <label>\n                            Url<span>*</span>\n                        </label>\n                        {getFieldDecorator('url', {\n                            \n                        })(<Input name='url' />)}\n                        {(errors = getFieldError('url')) ? (\n                            <ErrorMsg errors={errors} />\n                        ) : null}\n                    </div>\n\n                    <div className='form_group col-12 required'>\n                        <label>\n                            Type<span>*</span>\n                        </label>\n                    </div>\n                    <div\n                        className=' col-12'\n                        style={{ marginBottom: '3%', display: 'flex' }}\n                    >\n                        {Object.keys(PCC_LOGS_STATUS_TEXT_TYPE).map((data, index) => {\n                            return (\n                                <>\n                                    <label className='filter_check radio'>\n                                        <input\n                                            type='checkbox'\n                                            name='type'\n                                            value={PCC_LOGS_STATUS_TEXT_TYPE[data]}\n                                            checked={radioData === PCC_LOGS_STATUS_TEXT_TYPE[data]}\n                                            onChange={hadleRadioValue}\n                                        />\n                                        <span className='checkbox radio'></span>\n                                        <span className='lbl'>{data.replace(/_/g, ' ')}</span>\n                                    </label>\n                                </>\n                            );\n                        })}\n                    </div>\n\n                </div>\n            </Modal>\n        </>\n    );\n}\nexport default (FilterForPcc); "]},"metadata":{},"sourceType":"module"}