{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Customers/Clientele/components/SettingForm.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Select, Input, Option, Button, ErrorMsg, TextArea } from \"../../../../components/common\";\nimport routes from \"../../../../routes/constant\";\nimport axios from \"../../../../services/api/services/common\";\nimport { getAll } from \"../../../../services/api/routes/subscription\";\nimport { Info } from \"../../../../assets/images/popup\";\nimport Tooltip from \"rc-tooltip\";\nimport \"rc-tooltip/assets/bootstrap.css\";\nimport ViewSubscription from \"../../../SubscriptionUpsert/components/ViewSubscription\";\nimport { Download } from './../../../../assets/images/resident-detail/index';\nimport Thumbnail from \"../../../../components/common/Upload/Thumbnail\";\nimport _ from 'lodash';\nimport { CLIENTELE_TYPE, EHR_Integration } from \"../../../../constants/Customer\";\nimport { Attachments } from \"../../../../assets/images/resident-detail\";\n\nfunction SettingForm(props) {\n  const {\n    isPharmacy,\n    onSave,\n    onCancel,\n    form,\n    editId,\n    queryData,\n    col,\n    isModal,\n    editPhamacy,\n    onRedirect,\n    onPdfVisible,\n    onJsonVisible,\n    loading,\n    onXrayVisible,\n    onUltraSoundVisible,\n    xrayData,\n    ultrasoundData,\n    onPdfData,\n    onJsonData,\n    eHR,\n    onSourceMediumChange\n  } = props;\n  const {\n    getFieldError,\n    getFieldDecorator,\n    getFieldValue\n  } = form;\n  const [subscripData, setSubscripData] = useState([]);\n  const [visible, setVisible] = useState(false);\n  let errors;\n  useEffect(() => {\n    fetchSubscriptions();\n  }, []);\n  useEffect(() => {\n    if (editPhamacy) {\n      form.setFieldsValue({\n        assignedSubscriptionGroupId: editPhamacy.assignedSubscriptionGroupId,\n        careClause: editPhamacy.careClause\n      });\n\n      if (editPhamacy.printer) {\n        form.setFieldsValue({\n          printerName: editPhamacy.printer.name\n        });\n        form.setFieldsValue({\n          machineId: editPhamacy.printer.machineId\n        });\n      }\n    }\n  }, [editPhamacy]);\n\n  const fetchSubscriptions = async () => {\n    const data = {\n      sortBy: {\n        createdAt: \"DESC\"\n      },\n      where: {\n        isActive: true\n      }\n    };\n    let res = await axios({ ...getAll,\n      data\n    });\n\n    if (res) {\n      if (res.code === \"OK\") {\n        setSubscripData(res.data.data);\n      }\n    }\n  };\n\n  const viewSubscription = visible => {\n    setVisible(visible);\n  };\n\n  const handleCancel = () => {\n    if (onCancel) onCancel();\n  };\n\n  const GetFilename = url => {\n    if (url) {\n      let p = url.split('/').pop();\n      return p;\n    }\n\n    return \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !isModal && queryData == CLIENTELE_TYPE.PHARMACY && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"PMS Integration\"), getFieldDecorator(\"isKroll\", {\n    rules: [{\n      required: false // message: \"Please enter the description.!\",\n\n    }]\n  })( /*#__PURE__*/React.createElement(\"label\", {\n    className: \"filter_check checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"isKroll\",\n    id: \"isKroll\" // onChange={handleChangeCheckBoxValue}\n    // checked={checkValues}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Telus Health(Kroll)\"))))), !isModal && queryData == CLIENTELE_TYPE.HOME ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12\",\n    style: {\n      marginBottom: \"1px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, \"Source Medium\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 30\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, Object.keys(EHR_Integration).map(x => {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      className: \"filter_check radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"medium\",\n      value: EHR_Integration[x],\n      checked: eHR === EHR_Integration[x],\n      onChange: onSourceMediumChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkbox radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }, x));\n  })))) : null, queryData == CLIENTELE_TYPE.HOME || queryData == CLIENTELE_TYPE.PHARMACY ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `form_group  ${col ? col : \"col-6\"}`,\n    style: {\n      marginTop: \"2%\",\n      marginBottom: col ? \"0\" : \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-10 required\",\n    style: {\n      float: \"left\",\n      marginLeft: \"-15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, \"Subscription\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 31\n    }\n  }, \"*\")), getFieldDecorator(\"assignedSubscriptionGroupId\", {\n    rules: [{\n      required: true,\n      message: `Please select`\n    }]\n  })( /*#__PURE__*/React.createElement(Select, {\n    showSearch: true,\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Select Subscription Plan\",\n    filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    name: \"assignedSubscriptionGroupId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }, subscripData.map(v => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: v._id,\n      value: v._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, v.name);\n  }))), (errors = getFieldError(\"assignedSubscriptionGroupId\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-1\",\n    style: {\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, getFieldValue(\"assignedSubscriptionGroupId\") ? /*#__PURE__*/React.createElement(Tooltip, {\n    overlay: \"View Subscription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Info, {\n    style: {\n      marginTop: \"-7px\",\n      marginRight: \"45px\",\n      cursor: \"pointer\",\n      width: \"20px\",\n      height: \"20px\"\n    },\n    onClick: () => viewSubscription(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  })) : null)), !isModal && (queryData == CLIENTELE_TYPE.HOME || isPharmacy) ? /*#__PURE__*/React.createElement(\"div\", {\n    className: `form_group  ${col ? col : \"col-6\"}`,\n    style: {\n      marginTop: \"2%\",\n      marginLeft: \"-1%\",\n      marginBottom: col ? \"0\" : \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 19\n    }\n  }, \"Care Clause\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 32\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"additional-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap mb-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  }, getFieldDecorator(\"careClause\", {\n    rules: [{\n      required: false,\n      message: \"Please enter the addrsess line 1.!\"\n    }]\n  })( /*#__PURE__*/React.createElement(TextArea, {\n    style: {\n      width: \"100%\"\n    },\n    name: \"careClause\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  })), (errors = getFieldError(\"careClause\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  }) : null)))) : null) : null, !isModal && queryData == CLIENTELE_TYPE.PHARMACY ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-6 required\",\n    style: {\n      float: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, \"PDF Path\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 23\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"transparent\",\n    onClick: onPdfVisible,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, \"PDF Path\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, onPdfData && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upd_img_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Thumbnail, {\n    path: onPdfData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-6 required\",\n    style: {\n      float: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, \"JSON Path\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 24\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"transparent\",\n    onClick: onJsonVisible,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, \"JSON Path\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, onJsonData && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upd_img_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Thumbnail, {\n    path: onJsonData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 19\n    }\n  }))))) : null, !isModal && (queryData == CLIENTELE_TYPE.HOME || isPharmacy) ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, \"Printer Name\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 27\n    }\n  }, \"*\")), getFieldDecorator(\"printerName\", {\n    rules: [{\n      required: false,\n      message: `Please enter the printer name.`\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"printerName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 16\n    }\n  })), (errors = getFieldError(\"printerName\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 15\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-6\",\n    style: {\n      float: \"left\",\n      marginBottom: \"330px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }, \"Machine Id\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 25\n    }\n  }, \"*\")), getFieldDecorator(\"machineId\", {\n    rules: [{\n      required: false,\n      message: `Please enter the machine id.`\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"machineId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 16\n    }\n  })), (errors = getFieldError(\"machineId\")) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 15\n    }\n  }) : null)) : null, queryData == CLIENTELE_TYPE.IMAGING_DIAGNOSTIC && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }, \"X-Ray JSON\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 25\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"transparent\",\n    onClick: onXrayVisible,\n    classNames: \"img-upload\",\n    style: {\n      \"min-width\": \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 15\n    }\n  }, \"Uplaod X-Ray JSON\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }, xrayData && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upd_img_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Thumbnail, {\n    path: xrayData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }\n  }, \"Ultrasound JSON\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 30\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"transparent\",\n    classNames: \"img-upload\",\n    onClick: onUltraSoundVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 15\n    }\n  }, \"Uplaod Ultrasound JSON\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }\n  }, ultrasoundData && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upd_img_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Thumbnail, {\n    path: ultrasoundData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12\",\n    style: {\n      textAlign: \"right\",\n      borderTop: \"1px solid #919A9F\",\n      paddingTop: \"20px\",\n      paddingBottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"secondary\",\n    size: \"lg\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    loading: loading,\n    onClick: onSave,\n    size: \"lg\",\n    style: {\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 11\n    }\n  }, editId ? \"Update\" : \"Add\"), visible ? /*#__PURE__*/React.createElement(ViewSubscription, {\n    visible: visible,\n    id: getFieldValue(\"assignedSubscriptionGroupId\"),\n    onCancel: () => viewSubscription(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }\n  }) : null)));\n}\n\nexport default SettingForm;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Customers/Clientele/components/SettingForm.js"],"names":["React","useEffect","useState","Select","Input","Option","Button","ErrorMsg","TextArea","routes","axios","getAll","Info","Tooltip","ViewSubscription","Download","Thumbnail","_","CLIENTELE_TYPE","EHR_Integration","Attachments","SettingForm","props","isPharmacy","onSave","onCancel","form","editId","queryData","col","isModal","editPhamacy","onRedirect","onPdfVisible","onJsonVisible","loading","onXrayVisible","onUltraSoundVisible","xrayData","ultrasoundData","onPdfData","onJsonData","eHR","onSourceMediumChange","getFieldError","getFieldDecorator","getFieldValue","subscripData","setSubscripData","visible","setVisible","errors","fetchSubscriptions","setFieldsValue","assignedSubscriptionGroupId","careClause","printer","printerName","name","machineId","data","sortBy","createdAt","where","isActive","res","code","viewSubscription","handleCancel","GetFilename","url","p","split","pop","PHARMACY","marginTop","rules","required","HOME","marginBottom","display","Object","keys","map","x","float","marginLeft","message","width","input","option","children","toLowerCase","indexOf","v","_id","marginRight","cursor","height","IMAGING_DIAGNOSTIC","textAlign","borderTop","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Select,\n  Input,\n  Option,\n  Button,\n  ErrorMsg,\n  TextArea,\n} from \"../../../../components/common\";\nimport routes from \"../../../../routes/constant\";\nimport axios from \"../../../../services/api/services/common\";\nimport { getAll } from \"../../../../services/api/routes/subscription\";\nimport { Info } from \"../../../../assets/images/popup\";\nimport Tooltip from \"rc-tooltip\";\nimport \"rc-tooltip/assets/bootstrap.css\";\nimport ViewSubscription from \"../../../SubscriptionUpsert/components/ViewSubscription\";\nimport {\n  Download,\n} from './../../../../assets/images/resident-detail/index';\nimport Thumbnail from \"../../../../components/common/Upload/Thumbnail\";\nimport _ from 'lodash'\nimport { CLIENTELE_TYPE, EHR_Integration } from \"../../../../constants/Customer\";\nimport { Attachments } from \"../../../../assets/images/resident-detail\";\nfunction SettingForm(props) {\n  const {\n    isPharmacy,\n    onSave,\n    onCancel,\n    form,\n    editId,\n    queryData,\n    col,\n    isModal,\n    editPhamacy,\n    onRedirect,\n    onPdfVisible,\n    onJsonVisible,\n    loading,\n    onXrayVisible,\n    onUltraSoundVisible,\n    xrayData,\n    ultrasoundData,\n    onPdfData,\n    onJsonData,\n    eHR,\n    onSourceMediumChange\n  } = props;\n\n  const { getFieldError, getFieldDecorator, getFieldValue } = form;\n  const [subscripData, setSubscripData] = useState([]);\n  const [visible, setVisible] = useState(false);\n  let errors;\n\n  useEffect(() => {\n    fetchSubscriptions();\n  }, []);\n\n  useEffect(() => {\n    if (editPhamacy) {\n      form.setFieldsValue({\n        assignedSubscriptionGroupId: editPhamacy.assignedSubscriptionGroupId,\n        careClause: editPhamacy.careClause,\n      });\n      if (editPhamacy.printer) {\n        form.setFieldsValue({ printerName: editPhamacy.printer.name });\n        form.setFieldsValue({ machineId: editPhamacy.printer.machineId });\n      }\n    }\n  }, [editPhamacy]);\n\n  const fetchSubscriptions = async () => {\n    const data = { sortBy: { createdAt: \"DESC\" }, where: { isActive: true } };\n    let res = await axios({ ...getAll, data });\n    if (res) {\n      if (res.code === \"OK\") {\n        setSubscripData(res.data.data);\n      }\n    }\n  };\n\n  const viewSubscription = (visible) => {\n    setVisible(visible);\n  };\n\n  const handleCancel = () => {\n    if (onCancel) onCancel();\n  };\n\n  const GetFilename = (url) => {\n    if (url) {\n      let p = url.split('/').pop()\n      return p\n    }\n    return \"\";\n  }\n\n  return (\n    <>\n      {!isModal  && queryData == CLIENTELE_TYPE.PHARMACY && (\n        <div className=\"form_row\" style={{marginTop:\"20px\"}}>\n\n<div\n                className=\"form_group col-2\"\n              >\n          <b>PMS Integration</b>\n          {getFieldDecorator(\"isKroll\", {\n            rules: [\n              {\n                required: false,\n                // message: \"Please enter the description.!\",\n              },\n            ],\n          })(\n            <label className=\"filter_check checkbox\">\n              <input\n                type=\"checkbox\"\n                name=\"isKroll\"\n                id=\"isKroll\"\n              // onChange={handleChangeCheckBoxValue}\n              // checked={checkValues}\n              />\n              <span className=\"checkbox\"></span>\n              <span className=\"lbl\">Telus Health(Kroll)</span>\n            </label>\n          )}\n        </div>\n        </div>\n      )}\n\n\n      {!isModal && queryData == CLIENTELE_TYPE.HOME\n        ? (\n          <div className=\"form_row\" style={{ marginTop: \"20px\" }}>\n\n            <div\n              className=\"form_group col-12\"\n              style={{ marginBottom: \"1px\" }}\n            >\n              <label>\n                Source Medium<span>*</span>\n              </label>\n            </div>\n            <div className=\"col-12\">\n              <div style={{ display: \"flex\" }}>\n                {Object.keys(EHR_Integration).map((x) => {\n                  return (\n                    <label className=\"filter_check radio\">\n                      <input\n                        type=\"checkbox\"\n                        name=\"medium\"\n                        value={EHR_Integration[x]}\n                        checked={eHR === EHR_Integration[x]}\n                        onChange={onSourceMediumChange}\n                      />\n                      <span className=\"checkbox radio\"></span>\n                      <span className=\"lbl\">{x}</span>\n                    </label>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        ) : null}\n\n\n\n      {queryData == CLIENTELE_TYPE.HOME ||\n        queryData == CLIENTELE_TYPE.PHARMACY ? (\n          <div className=\"form_row\" style={{ marginTop: \"2%\" }}>\n            <div\n              className={`form_group  ${col ? col : \"col-6\"}`}\n              style={{ marginTop: \"2%\", marginBottom: col ? \"0\" : \"0\" }}\n            >\n              <div\n                className=\"form_group col-10 required\"\n                style={{ float: \"left\", marginLeft: \"-15px\" }}\n              >\n                <label>\n                  Subscription<span>*</span>\n                </label>\n                {getFieldDecorator(\"assignedSubscriptionGroupId\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: `Please select`,\n                    },\n                  ],\n                })(\n                  <Select\n                    showSearch\n                    style={{ width: \"100%\" }}\n                    placeholder=\"Select Subscription Plan\"\n                    filterOption={(input, option) =>\n                      option.props.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                    name=\"assignedSubscriptionGroupId\"\n                  >\n                    {subscripData.map((v) => {\n                      return (\n                        <Option key={v._id} value={v._id}>\n                          {v.name}\n                        </Option>\n                      );\n                    })}\n                  </Select>\n                )}\n                {(errors = getFieldError(\"assignedSubscriptionGroupId\")) ? (\n                  <ErrorMsg errors={errors} />\n                ) : null}\n              </div>\n\n              <div className=\"form_group col-1\" style={{ float: \"right\" }}>\n                {getFieldValue(\"assignedSubscriptionGroupId\") ? (\n                  <Tooltip overlay={\"View Subscription\"}>\n                    <Info\n                      style={{\n                        marginTop: \"-7px\",\n                        marginRight: \"45px\",\n                        cursor: \"pointer\",\n                        width: \"20px\",\n                        height: \"20px\",\n                      }}\n                      onClick={() => viewSubscription(true)}\n                    />\n                  </Tooltip>\n                ) : null}\n              </div>\n            </div>\n\n            {!isModal && (queryData == CLIENTELE_TYPE.HOME || isPharmacy) ? (\n              <div\n                className={`form_group  ${col ? col : \"col-6\"}`}\n                style={{\n                  marginTop: \"2%\",\n                  marginLeft: \"-1%\",\n                  marginBottom: col ? \"0\" : \"0\",\n                }}\n              >\n                <div className=\"form_group col-12 \">\n                  <label>\n                    Care Clause<span>*</span>\n                  </label>\n                  <div className=\"additional-textarea\">\n                    <div className=\"form_wrap mb-12\">\n                      {getFieldDecorator(\"careClause\", {\n                        rules: [\n                          {\n                            required: false,\n                            message: \"Please enter the addrsess line 1.!\",\n                          },\n                        ],\n                      })(\n                        <TextArea style={{ width: \"100%\" }} name=\"careClause\" />\n                      )}\n                      {(errors = getFieldError(\"careClause\")) ? (\n                        <ErrorMsg errors={errors} />\n                      ) : null}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : null}\n          </div>\n        ) : null}\n\n      {!isModal && queryData == CLIENTELE_TYPE.PHARMACY ? (\n        <div className=\"form_row\" style={{ marginTop: \"1%\" }}>\n          <div className=\"form_group col-6 required\" style={{ float: \"left\" }}>\n            <label>\n              PDF Path<span>*</span>\n            </label>\n\n            <Button\n              type=\"transparent\"\n              onClick={onPdfVisible}\n              style={{ width: \"100%\" }}\n            >\n              PDF Path\n            </Button>\n\n            <div className=\"form_row add-user\">\n              {onPdfData && (\n                <div className=\"upd_img_wrap\">\n                  <Thumbnail path={onPdfData} />\n                </div>\n              )}\n            </div>\n          </div>\n\n\n          <div className=\"form_group col-6 required\" style={{ float: \"left\" }}>\n            <label>\n              JSON Path<span>*</span>\n            </label>\n\n            <Button\n              type=\"transparent\"\n              onClick={onJsonVisible}\n              style={{ width: \"100%\" }}\n            >\n              JSON Path\n            </Button>\n\n            <div className=\"form_row add-user\">\n              {onJsonData && (\n                <div className=\"upd_img_wrap\">\n                  <Thumbnail path={onJsonData} />\n                </div>\n              )}\n            </div>\n          </div>\n\n        </div>\n      ) : null}\n\n      {!isModal && (queryData == CLIENTELE_TYPE.HOME || isPharmacy) ? (\n        <div className=\"form_row\" style={{ marginTop: \"1%\" }}>\n          <div className=\"form_group col-6\">\n            <label>\n              Printer Name<span>*</span>\n            </label>\n\n            {getFieldDecorator(\"printerName\", {\n              rules: [\n                {\n                  required: false,\n                  message: `Please enter the printer name.`,\n                },\n              ],\n            })(<Input name=\"printerName\" />)}\n            {(errors = getFieldError(\"printerName\")) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n\n          <div\n            className=\"form_group col-6\"\n            style={{ float: \"left\", marginBottom: \"330px\" }}\n          >\n            <label>\n              Machine Id<span>*</span>\n            </label>\n\n            {getFieldDecorator(\"machineId\", {\n              rules: [\n                {\n                  required: false,\n                  message: `Please enter the machine id.`,\n                },\n              ],\n            })(<Input name=\"machineId\" />)}\n            {(errors = getFieldError(\"machineId\")) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n        </div>\n      ) : null}\n\n      {queryData == CLIENTELE_TYPE.IMAGING_DIAGNOSTIC && (\n        <div className=\"form_row\" style={{ marginTop: \"20px\" }}>\n          <div className=\"form_group col-4 required\">\n            <label>\n              X-Ray JSON<span>*</span>\n            </label>\n            <div className=\"d-flex align-items-center\">\n              <Button\n                type=\"transparent\"\n                onClick={onXrayVisible}\n                classNames=\"img-upload\"\n                style={{ \"min-width\": \"auto\" }}\n              >\n                Uplaod X-Ray JSON\n              </Button>\n            </div>\n            <div className=\"form_row add-user\">\n              {xrayData && (\n                <div className=\"upd_img_wrap\">\n                  <Thumbnail path={xrayData} />\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"form_group col-4 required\">\n            <label>\n              Ultrasound JSON<span>*</span>\n            </label>\n            <div className=\"d-flex align-items-center\">\n              <Button\n                type=\"transparent\"\n                classNames=\"img-upload\"\n                onClick={onUltraSoundVisible}\n              >\n                Uplaod Ultrasound JSON\n            </Button>\n            </div>\n            <div className=\"form_row add-user\">\n              {ultrasoundData && (\n                <div className=\"upd_img_wrap\">\n                  <Thumbnail path={ultrasoundData} />\n                </div>\n              )}\n            </div>\n          </div>\n          <div>\n\n          </div>\n        </div>\n      )}\n\n      <div className=\"form_row\">\n        <div\n          className=\"form_group col-12\"\n          style={{\n            textAlign: \"right\",\n            borderTop: \"1px solid #919A9F\",\n            paddingTop: \"20px\",\n            paddingBottom: \"10px\",\n          }}\n        >\n          <Button type=\"secondary\" size=\"lg\" onClick={handleCancel}>\n            Cancel\n          </Button>\n          <Button\n            loading={loading}\n            onClick={onSave}\n            size=\"lg\"\n            style={{ marginLeft: \"10px\" }}\n          >\n            {editId ? \"Update\" : \"Add\"}\n          </Button>\n          {visible ? (\n            <ViewSubscription\n              visible={visible}\n              id={getFieldValue(\"assignedSubscriptionGroupId\")}\n              onCancel={() => viewSubscription(false)}\n            />\n          ) : null}\n        </div>\n      </div>\n    </>\n  );\n}\nexport default SettingForm;\n"]},"metadata":{},"sourceType":"module"}