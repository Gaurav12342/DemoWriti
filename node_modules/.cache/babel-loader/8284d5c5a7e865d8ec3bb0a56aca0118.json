{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/PccLog/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport PageHead from './components/PageHead';\nimport FilterForPcc from './components/FilterForPcc';\nimport { createForm } from 'rc-form';\nimport { dateTimeFormat, displayDateTime } from '../../util/moment';\nimport axios from '../../services/api/services/common';\nimport { Info } from '../../../src/assets/images/popup/index';\nimport { pccLogs } from '../../services/api/routes/pcc';\nimport Table from '../../components/common/Table/index';\nimport { Toast, Spin } from '../../components/common';\nimport DetailView from './components/DetailView';\nimport { PCC_LOGS_STATUS_TEXT_TYPE } from '../../constants/common';\n\nconst moment = require('moment');\n\nconst _ = require('lodash');\n\nconst fromd = moment().subtract(15, 'days');\nconst tod = moment();\nconst color = {\n  SUCESS: 'green',\n  ERROR: 'red'\n};\n\nconst PccLog = props => {\n  const {\n    form\n  } = props;\n  const {\n    validateFields\n  } = form;\n  const [visible, setVisible] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [defaultDate, setDefaultDate] = useState([fromd, tod]);\n  const [data, setData] = useState();\n  const [count, setCount] = useState(0);\n  const [viewDetailModal, setViewDetailModal] = useState(false);\n  const [detailViewData, setDetailViewData] = useState({});\n  const [radioData, setRadioData] = useState(\"ALL\");\n  const [apiFilter, setApiFilter] = useState({\n    page: 1,\n    limit: 10,\n    lte: [{\n      createdAt: tod\n    }],\n    gte: [{\n      createdAt: fromd\n    }],\n    fields: [],\n    find: {},\n    sort: {\n      createdAt: \"DESC\"\n    }\n  });\n  useEffect(() => {\n    fetch();\n  }, [apiFilter]);\n\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    let tempFilter = { ...apiFilter,\n      page: pagination.current,\n      limit: pagination.pageSize\n    };\n    setApiFilter(tempFilter);\n  };\n\n  const onShowSizeChange = size => {\n    if (size) {\n      setApiFilter(prevFilter => ({ ...prevFilter,\n        page: 1,\n        limit: size\n      }));\n    }\n  };\n\n  const fetch = async () => {\n    let res = await axios({ ...pccLogs,\n      data: {\n        query: apiFilter\n      }\n    });\n\n    if (res) {\n      if (res.code === 'OK') {\n        setData(res.data.data);\n        setCount(res.data.count);\n      } else {\n        Toast.error(res.message);\n      }\n    }\n\n    setLoading(false); // filter.find && filter.find.facId ? setDetailLoader(false) : setLoading(false);\n  };\n\n  const onOpenModal = () => {\n    console.log(\"VISIBLE\");\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const handleSave = obj => {\n    console.log(\"handle save called\", obj);\n    let tempApiFilter = {};\n\n    if (obj && obj.type === PCC_LOGS_STATUS_TEXT_TYPE.ALL) {\n      tempApiFilter = { ...apiFilter,\n        find: {},\n        search: {\n          keys: [\"request.url\"],\n          keyword: obj.url\n        },\n        page: 1,\n        limit: 10\n      };\n    } else {\n      tempApiFilter = { ...apiFilter,\n        find: {\n          \"response.statusText\": obj.type\n        },\n        search: {\n          keys: [\"request.url\"],\n          keyword: obj.url\n        },\n        page: 1,\n        limit: 10\n      };\n    }\n\n    setApiFilter({ ...apiFilter,\n      ...tempApiFilter\n    });\n    setVisible(false);\n  };\n\n  const onDetailViewClose = () => {\n    setViewDetailModal(false);\n  };\n\n  const onDateChange = dateRange => {\n    setDefaultDate(dateRange);\n    setApiFilter(exFilter => {\n      return { ...exFilter,\n        gte: [{\n          createdAt: dateRange[0]\n        }],\n        lte: [{\n          createdAt: dateRange[1]\n        }],\n        page: 1,\n        limit: 10\n      };\n    });\n  };\n\n  const getColumns = () => [{\n    title: 'Sr.No',\n    keyword: 'index',\n    dataIndex: 'index',\n    render: (text, record, index) => (apiFilter.page - 1) * apiFilter.limit + (index + 1)\n  }, {\n    title: \"URL\",\n    dataIndex: \"url\",\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: \"capitalize\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, text || \"-\")\n  }, {\n    title: \"Requested Date\",\n    dataIndex: \"createdAt\",\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: \"capitalize\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, displayDateTime(text) || \"-\")\n  }, {\n    title: \"Status\",\n    dataIndex: \"response\",\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: text[0].statusText === \"SUCCESS\" ? color.SUCESS : color.ERROR\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, text[0].statusText)\n  }, {\n    title: 'Info',\n    render: (text, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Info, {\n      style: {\n        marginTop: '-7px',\n        marginRight: '45px',\n        cursor: 'pointer',\n        width: '20px',\n        height: '20px'\n      },\n      onClick: () => setViewDetailModal(() => {\n        setDetailViewData(record);\n        return true;\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }))\n  }];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageHead, {\n    total: count,\n    onOpenModal: onOpenModal,\n    onDateChange: onDateChange,\n    defaultDate: defaultDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }), visible && /*#__PURE__*/React.createElement(FilterForPcc, {\n    isVisible: visible // uploaderOpen={() => {\n    //     setVisible(true);\n    // }}\n    // filePath={filePath}\n    // radioValue={radioValue}\n    // hadleRadioValue={hadleRadioValue}\n    ,\n    form: form,\n    okText: \"Add\",\n    cancelText: \"Cancel\",\n    title: \"Add Version\",\n    onSave: handleSave,\n    onClose: onClose,\n    onCancel: onClose,\n    setRadioData: setRadioData,\n    radioData: radioData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }), viewDetailModal && /*#__PURE__*/React.createElement(DetailView, {\n    isVisible: viewDetailModal // uploaderOpen={() => {\n    //     setVisible(true);\n    // }}\n    // filePath={filePath}\n    // radioValue={radioValue}\n    // hadleRadioValue={hadleRadioValue}\n    ,\n    data: detailViewData,\n    title: \"Details\",\n    onClose: onDetailViewClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    columns: getColumns(),\n    datasource: data,\n    loading: loading,\n    onChange: handleTableChange,\n    pagination: {\n      current: apiFilter.page,\n      pageSize: apiFilter.limit,\n      total: count,\n      showSizeChanger: true,\n      onShowSizeChange: onShowSizeChange\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default createForm()(PccLog);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/PccLog/index.js"],"names":["React","useState","useEffect","PageHead","FilterForPcc","createForm","dateTimeFormat","displayDateTime","axios","Info","pccLogs","Table","Toast","Spin","DetailView","PCC_LOGS_STATUS_TEXT_TYPE","moment","require","_","fromd","subtract","tod","color","SUCESS","ERROR","PccLog","props","form","validateFields","visible","setVisible","loading","setLoading","defaultDate","setDefaultDate","data","setData","count","setCount","viewDetailModal","setViewDetailModal","detailViewData","setDetailViewData","radioData","setRadioData","apiFilter","setApiFilter","page","limit","lte","createdAt","gte","fields","find","sort","fetch","handleTableChange","pagination","tfilter","sorter","tempFilter","current","pageSize","onShowSizeChange","size","prevFilter","res","query","code","error","message","onOpenModal","console","log","onClose","handleSave","obj","tempApiFilter","type","ALL","search","keys","keyword","url","onDetailViewClose","onDateChange","dateRange","exFilter","getColumns","title","dataIndex","render","text","record","index","textTransform","statusText","marginTop","marginRight","cursor","width","height","total","showSizeChanger"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PageHead from './components/PageHead';\nimport FilterForPcc from './components/FilterForPcc'\nimport { createForm } from 'rc-form';\nimport { dateTimeFormat, displayDateTime } from '../../util/moment';\nimport axios from '../../services/api/services/common';\nimport { Info } from '../../../src/assets/images/popup/index'\nimport {\n    pccLogs\n} from '../../services/api/routes/pcc';\nimport Table from '../../components/common/Table/index';\nimport { Toast, Spin } from '../../components/common';\nimport DetailView from './components/DetailView'\nimport { PCC_LOGS_STATUS_TEXT_TYPE } from '../../constants/common';\n\nconst moment = require('moment')\nconst _ = require('lodash');\n\nconst fromd = moment().subtract(15, 'days')\nconst tod = moment()\n\nconst color = {\n    SUCESS: 'green',\n    ERROR: 'red'\n}\nconst PccLog = (props) => {\n    const { form } = props;\n    const { validateFields } = form;\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [defaultDate, setDefaultDate] = useState([fromd, tod]);\n    const [data, setData] = useState();\n    const [count, setCount] = useState(0)\n    const [viewDetailModal, setViewDetailModal] = useState(false)\n    const [detailViewData, setDetailViewData] = useState({})\n    const [radioData, setRadioData] = useState(\"ALL\");\n    const [apiFilter, setApiFilter] = useState({\n        page: 1,\n        limit: 10,\n        lte: [{ createdAt: tod }],\n        gte: [{ createdAt: fromd }],\n        fields: [],\n        find: {},\n        sort: { createdAt: \"DESC\" }\n    })\n    useEffect(() => {\n        fetch();\n    }, [apiFilter]);\n\n    const handleTableChange = (pagination, tfilter, sorter) => {\n        let tempFilter = {\n            ...apiFilter,\n            page: pagination.current,\n            limit: pagination.pageSize,\n        };\n        setApiFilter(tempFilter);\n    };\n    const onShowSizeChange = (size) => {\n        if (size) {\n            setApiFilter((prevFilter) => ({ ...prevFilter, page: 1, limit: size }));\n        }\n    };\n\n    const fetch = async () => {\n\n        let res = await axios({ ...pccLogs, data: { query: apiFilter } })\n        if (res) {\n            if (res.code === 'OK') {\n                setData(res.data.data)\n                setCount(res.data.count)\n            } else {\n                Toast.error(res.message)\n            }\n        }\n        setLoading(false);\n        // filter.find && filter.find.facId ? setDetailLoader(false) : setLoading(false);\n    };\n\n\n    const onOpenModal = () => {\n        console.log(\"VISIBLE\")\n        setVisible(true);\n    }\n    const onClose = () => {\n        setVisible(false)\n    }\n\n    const handleSave = (obj) => {\n        console.log(\"handle save called\", obj)\n        let tempApiFilter = {}\n        if (obj && obj.type === PCC_LOGS_STATUS_TEXT_TYPE.ALL) {\n            tempApiFilter = {\n                ...apiFilter,\n                find: {},\n                search: {\n                    keys: [\"request.url\"],\n                    keyword: obj.url,\n                },\n                page: 1,\n                limit: 10\n            }\n        }\n        else {\n            tempApiFilter = {\n                ...apiFilter,\n                find: {\n                    \"response.statusText\": obj.type\n                },\n                search: {\n                    keys: [\"request.url\"],\n                    keyword: obj.url,\n                },\n                page: 1,\n                limit: 10\n            }\n        }\n\n        setApiFilter({\n            ...apiFilter,\n            ...tempApiFilter\n        })\n        setVisible(false)\n    }\n\n\n    const onDetailViewClose = () => {\n        setViewDetailModal(false)\n    }\n\n\n    const onDateChange = (dateRange) => {\n\n        setDefaultDate(dateRange)\n        setApiFilter(exFilter => {\n            return {\n                ...exFilter,\n                gte: [{ createdAt: dateRange[0] }],\n                lte: [{ createdAt: dateRange[1] }],\n                page: 1,\n                limit: 10\n            }\n        })\n\n    }\n    const getColumns = () => [\n        {\n            title: 'Sr.No',\n            keyword: 'index',\n            dataIndex: 'index',\n            render: (text, record, index) =>\n                (apiFilter.page - 1) * apiFilter.limit + (index + 1),\n        },\n        {\n            title: \"URL\",\n            dataIndex: \"url\",\n            render: text => (\n                <span style={{ textTransform: \"capitalize\" }}>{text || \"-\"}</span>\n            )\n        },\n        {\n            title: \"Requested Date\",\n            dataIndex: \"createdAt\",\n            render: text => (\n                <span style={{ textTransform: \"capitalize\" }}>{displayDateTime(text) || \"-\"}</span>\n            )\n        },\n        {\n            title: \"Status\",\n            dataIndex: \"response\",\n            render: text => (\n                <span\n                    style={{ color: text[0].statusText === \"SUCCESS\" ? color.SUCESS : color.ERROR }}\n                >{text[0].statusText}</span>\n            )\n        },\n        {\n            title: 'Info',\n            render: (text, record) => (\n                <div className=\"actions\">\n                    {\n                        <Info\n                            style={{\n                                marginTop: '-7px',\n                                marginRight: '45px',\n                                cursor: 'pointer',\n                                width: '20px',\n                                height: '20px',\n\n                            }}\n                            onClick={() => setViewDetailModal(() => {\n                                setDetailViewData(record)\n                                return true\n                            })}\n                        />\n                    }\n\n                </div>\n            ),\n        },\n    ];\n\n    return (\n\n        <>\n            <div className='pmr_wrap'>\n                <div className='container'>\n                    <PageHead total={count} onOpenModal={onOpenModal} onDateChange={onDateChange}\n                        defaultDate={defaultDate}\n                    />\n\n                    {visible && (\n                        <FilterForPcc\n                            isVisible={visible}\n                            // uploaderOpen={() => {\n                            //     setVisible(true);\n                            // }}\n                            // filePath={filePath}\n                            // radioValue={radioValue}\n                            // hadleRadioValue={hadleRadioValue}\n                            form={form}\n                            okText=\"Add\"\n                            cancelText=\"Cancel\"\n                            title=\"Add Version\"\n                            onSave={handleSave}\n                            onClose={onClose}\n                            onCancel={onClose}\n                            setRadioData={setRadioData}\n                            radioData={radioData}\n                        />\n                    )}\n\n                    {viewDetailModal && (\n                        <DetailView\n                            isVisible={viewDetailModal}\n                            // uploaderOpen={() => {\n                            //     setVisible(true);\n                            // }}\n                            // filePath={filePath}\n                            // radioValue={radioValue}\n                            // hadleRadioValue={hadleRadioValue}\n                            data={detailViewData}\n                            title=\"Details\"\n\n                            onClose={onDetailViewClose}\n\n                        />\n                    )}\n\n                    <Table\n                        columns={getColumns()}\n                        datasource={data}\n                        loading={loading}\n                        onChange={handleTableChange}\n                        pagination={{\n                            current: apiFilter.page,\n                            pageSize: apiFilter.limit,\n                            total: count,\n                            showSizeChanger: true,\n                            onShowSizeChange: onShowSizeChange,\n                        }}\n                    />\n                </div>\n            </div>\n            {/* {\n                visibleMap ?\n                    <MappingModal\n                        visible={visibleMap}\n                        onCancel={() => handleMapping(false, null)}\n                        onOk={() => handleMapping(false, null, 'ok')}\n                        detail={record}\n                        authUser={authUser}\n                    />\n                    : null\n            }\n            {\n                visibleDetail ?\n                    <DetailViewModal\n                        visible={visibleDetail}\n                        onCancel={() => handleDetailView(false, null)}\n                        detail={record}\n                        authUser={authUser}\n                    /> : null\n            } */}\n        </>\n    )\n\n}\n\nexport default createForm()(PccLog) "]},"metadata":{},"sourceType":"module"}