{"ast":null,"code":"import axios from '../services/api/config';\nimport { tokenRefresh } from '../services/api/routes/auth';\nexport async function reGenerateToken(previousRequest) {\n  const {\n    method,\n    url\n  } = tokenRefresh;\n  let token = localStorage.getItem('refreshToken');\n  const req = {\n    refreshToken: \"jwt \" + JSON.parse(token)\n  };\n  let response = await axios({ ...tokenRefresh,\n    method,\n    url,\n    data: req\n  }).then(async ({\n    data\n  }) => {\n    if (data && data.code === 'OK') {\n      localStorage.setItem('token', JSON.stringify(data.data.token));\n      return axios({ ...previousRequest\n      }).then(({\n        data\n      }) => {\n        return Promise.resolve(data);\n      }).catch(err => {\n        return Promise.resolve({\n          status: 'error'\n        });\n      });\n    }\n  });\n  return response;\n}","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/util/RegenToken.js"],"names":["axios","tokenRefresh","reGenerateToken","previousRequest","method","url","token","localStorage","getItem","req","refreshToken","JSON","parse","response","data","then","code","setItem","stringify","Promise","resolve","catch","err","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,wBAAlB;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAO,eAAeC,eAAf,CAA+BC,eAA/B,EAAgD;AACnD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAkBJ,YAAxB;AACA,MAAIK,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAZ;AAEA,QAAMC,GAAG,GAAG;AACRC,IAAAA,YAAY,EAAE,SAASC,IAAI,CAACC,KAAL,CAAWN,KAAX;AADf,GAAZ;AAGA,MAAIO,QAAQ,GAAG,MAAMb,KAAK,CAAC,EACvB,GAAGC,YADoB;AAEvBG,IAAAA,MAFuB;AAGvBC,IAAAA,GAHuB;AAIvBS,IAAAA,IAAI,EAAEL;AAJiB,GAAD,CAAL,CAKlBM,IALkB,CAKb,OAAO;AAAED,IAAAA;AAAF,GAAP,KAAoB;AACxB,QAAIA,IAAI,IAAIA,IAAI,CAACE,IAAL,KAAc,IAA1B,EAAgC;AAC5BT,MAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,SAAL,CAAeJ,IAAI,CAACA,IAAL,CAAUR,KAAzB,CAA9B;AACA,aAAQN,KAAK,CAAC,EAAE,GAAGG;AAAL,OAAD,CAAL,CAA8BY,IAA9B,CAAmC,CAAC;AAAED,QAAAA;AAAF,OAAD,KAAc;AACrD,eAAOK,OAAO,CAACC,OAAR,CAAgBN,IAAhB,CAAP;AACH,OAFO,EAELO,KAFK,CAECC,GAAG,IAAI;AACZ,eAAOH,OAAO,CAACC,OAAR,CAAgB;AAAEG,UAAAA,MAAM,EAAE;AAAV,SAAhB,CAAP;AACH,OAJO,CAAR;AAKH;AACJ,GAdoB,CAArB;AAeA,SAAOV,QAAP;AACH","sourcesContent":["import axios from '../services/api/config'\nimport { tokenRefresh } from '../services/api/routes/auth';\nexport async function reGenerateToken(previousRequest) {\n    const { method, url } = tokenRefresh;\n    let token = localStorage.getItem('refreshToken');\n\n    const req = {\n        refreshToken: \"jwt \" + JSON.parse(token),\n    };\n    let response = await axios({\n        ...tokenRefresh,\n        method,\n        url,\n        data: req,\n    }).then(async ({ data }) => {\n        if (data && data.code === 'OK') {\n            localStorage.setItem('token', JSON.stringify(data.data.token));\n            return  axios({ ...previousRequest }).then(({ data }) => {\n                return Promise.resolve(data)\n            }).catch(err => {\n                return Promise.resolve({ status: 'error' })\n            })\n        }\n    });\n    return response\n}"]},"metadata":{},"sourceType":"module"}