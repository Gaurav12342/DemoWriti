{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/common/Table/Rows/index.js\";\nimport React from 'react';\nimport Rows from './Rows';\nimport PropTypes from 'prop-types';\n\nfunction RowsMain(props) {\n  const {\n    columns,\n    datasource,\n    range,\n    isData,\n    showResult,\n    resultCol,\n    rowId,\n    renderSubTable\n  } = props; // console.log(\"TCL: RowsMain -> datasource\", datasource\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, datasource && datasource.length > 0 ? datasource.map((currentRow, i) => /*#__PURE__*/React.createElement(Rows, Object.assign({\n    key: 'row' + i,\n    rowId: rowId,\n    index: range && range[i] ? range[i] : i,\n    isData: isData,\n    resultCol: resultCol,\n    renderSubTable: renderSubTable,\n    showResult: showResult,\n    record: currentRow\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 81\n    }\n  }))) : null);\n}\n\nexport default RowsMain;\nRowsMain.protoTypes = {\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    columnClassname: PropTypes.string,\n    style: PropTypes.object,\n    dataIndex: PropTypes.string.isRequired,\n    render: PropTypes.func,\n    title: PropTypes.string.isRequired\n  })).isRequired,\n  datasource: PropTypes.arrayOf(PropTypes.object)\n};","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/common/Table/Rows/index.js"],"names":["React","Rows","PropTypes","RowsMain","props","columns","datasource","range","isData","showResult","resultCol","rowId","renderSubTable","length","map","currentRow","i","protoTypes","arrayOf","shape","columnClassname","string","style","object","dataIndex","isRequired","render","func","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA,MAA9B;AAAsCC,IAAAA,UAAtC;AAAkDC,IAAAA,SAAlD;AAA6DC,IAAAA,KAA7D;AAAoEC,IAAAA;AAApE,MAAuFR,KAA7F,CADqB,CAErB;;AAEA,sBAAQ,0CACJE,UAAU,IAAIA,UAAU,CAACO,MAAX,GAAoB,CAAlC,GAAsCP,UAAU,CAACQ,GAAX,CAAe,CAACC,UAAD,EAAaC,CAAb,kBAAmB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAE,QAAQA,CAAnB;AACpE,IAAA,KAAK,EAAEL,KAD6D;AAEpE,IAAA,KAAK,EAAEJ,KAAK,IAAIA,KAAK,CAACS,CAAD,CAAd,GAAoBT,KAAK,CAACS,CAAD,CAAzB,GAA+BA,CAF8B;AAGpE,IAAA,MAAM,EAAER,MAH4D;AAIpE,IAAA,SAAS,EAAEE,SAJyD;AAKpE,IAAA,cAAc,EAAEE,cALoD;AAMpE,IAAA,UAAU,EAAEH,UANwD;AAOpE,IAAA,MAAM,EAAEM;AAP4D,KAQhEX,KARgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlC,CAAtC,GAQqB,IATjB,CAAR;AAWH;;AACD,eAAeD,QAAf;AACAA,QAAQ,CAACc,UAAT,GAAsB;AAClBZ,EAAAA,OAAO,EAAEH,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,KAAV,CAAgB;AACvCC,IAAAA,eAAe,EAAElB,SAAS,CAACmB,MADY;AAEvCC,IAAAA,KAAK,EAAEpB,SAAS,CAACqB,MAFsB;AAGvCC,IAAAA,SAAS,EAAEtB,SAAS,CAACmB,MAAV,CAAiBI,UAHW;AAIvCC,IAAAA,MAAM,EAAExB,SAAS,CAACyB,IAJqB;AAKvCC,IAAAA,KAAK,EAAE1B,SAAS,CAACmB,MAAV,CAAiBI;AALe,GAAhB,CAAlB,EAMLA,UAPc;AAQlBnB,EAAAA,UAAU,EAAEJ,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACqB,MAA5B;AARM,CAAtB","sourcesContent":["import React from 'react'\nimport Rows from './Rows'\nimport PropTypes from 'prop-types'\nfunction RowsMain(props) {\n    const { columns, datasource, range, isData, showResult, resultCol, rowId, renderSubTable } = props\n    // console.log(\"TCL: RowsMain -> datasource\", datasource\n\n    return (<>{\n        datasource && datasource.length > 0 ? datasource.map((currentRow, i) => <Rows key={'row' + i}\n            rowId={rowId}\n            index={range && range[i] ? range[i] : i}\n            isData={isData}\n            resultCol={resultCol}\n            renderSubTable={renderSubTable}\n            showResult={showResult}\n            record={currentRow}\n            {...props} />) : null\n    }</>)\n}\nexport default RowsMain\nRowsMain.protoTypes = {\n    columns: PropTypes.arrayOf(PropTypes.shape({\n        columnClassname: PropTypes.string,\n        style: PropTypes.object,\n        dataIndex: PropTypes.string.isRequired,\n        render: PropTypes.func,\n        title: PropTypes.string.isRequired\n    })).isRequired,\n    datasource: PropTypes.arrayOf(PropTypes.object)\n}\n"]},"metadata":{},"sourceType":"module"}