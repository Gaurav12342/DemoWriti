{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Version/components/VersionUpsertForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport Modal from '../../../components/common/Popup/index';\nimport { Input, Button, ErrorMsg } from '../../../components/common/index';\nimport { VERSION_PLATFORM } from '../../../constants/common';\nimport Thumbnail from \"../../../components/common/Upload/Thumbnail\";\n\nconst _ = require('lodash');\n\nconst VersionUpsertForm = props => {\n  let errors;\n  const {\n    isVisible,\n    onClose,\n    onCancel,\n    title,\n    radioValue,\n    okText,\n    onOk,\n    cancelText,\n    form,\n    value,\n    uploaderOpen,\n    filePath\n  } = props;\n  const {\n    getFieldDecorator,\n    validateFields,\n    getFieldError,\n    setFieldsValue\n  } = form;\n  const [checkValues, setCheckValues] = useState(value && value.isHardUpdate ? value.isHardUpdate : false);\n  const [loading, setLoading] = useState(false);\n  const [radioData, setRadioData] = useState(radioValue);\n  const [platFormValue, setPlatformValue] = useState();\n\n  const hadleRadioValue = e => {\n    if (e.target.checked) {\n      setRadioData(parseInt(e.target.value));\n    }\n  };\n\n  useEffect(() => {\n    if (value) {\n      setPlatformValue(value.platform);\n      let obj = {\n        name: value.name,\n        number: value.number,\n        platform: value.platform,\n        isHardUpdate: value.isHardUpdate\n      };\n      setFieldsValue(obj);\n    }\n  }, [value]);\n\n  const handleChangeCheckBoxValue = e => {\n    setCheckValues(e.target.checked);\n  };\n\n  const handleSubmit = () => {\n    validateFields((error, value) => {\n      if (!error) {\n        let obj = _.clone(value);\n\n        obj = {\n          platform: radioData,\n          name: value.name,\n          number: value.number,\n          isHardUpdate: checkValues,\n          isActive: false,\n          apk_path: filePath != null ? filePath : null\n        };\n        onOk(obj);\n        setLoading(true);\n      } else {\n        setLoading(false);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    visible: isVisible,\n    onCancel: onCancel,\n    onClose: onClose,\n    style: {\n      width: '50%'\n    },\n    title: title,\n    maskClosable: false,\n    onOk: handleSubmit,\n    okText: okText,\n    cancelText: cancelText,\n    okButtonProps: {\n      loading: loading\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12 required\",\n    style: {\n      marginBottom: '3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Version Name\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 27\n    }\n  }, \"*\")), getFieldDecorator('name', {\n    rules: [{\n      required: true,\n      message: 'Please enter the version name.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 16\n    }\n  })), (errors = getFieldError('name')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12 required\",\n    style: {\n      marginBottom: '3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Version Number\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, \"*\")), getFieldDecorator('number', {\n    rules: [{\n      required: true,\n      message: 'Please enter the version number.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 16\n    }\n  })), (errors = getFieldError('number')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Platform\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 23\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \" col-12\",\n    style: {\n      marginBottom: '3%',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, Object.keys(VERSION_PLATFORM).map((data, index) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"filter_check radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"platform\",\n      value: VERSION_PLATFORM[data],\n      checked: radioData === VERSION_PLATFORM[data],\n      onChange: platFormValue ? platFormValue : hadleRadioValue // onChange={platFormValue ? platFormValue : hadleRadioValue}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkbox radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, data.replace(/_/g, ' '))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 inline_check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"filter_check checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"isHardUpdate\",\n    onChange: handleChangeCheckBoxValue,\n    checked: checkValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"lbl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, \"Hard Update\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, radioData == VERSION_PLATFORM.HOME_BACKUP || radioData == VERSION_PLATFORM.PRINT_EXE ? getFieldDecorator('apk_path')( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: uploaderOpen,\n    type: \"transparent\",\n    style: {\n      width: '250px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  }, \"Uplaod EXE\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, filePath && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upd_img_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Thumbnail, {\n    path: filePath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }))))) : null))));\n};\n\nexport default VersionUpsertForm;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Version/components/VersionUpsertForm.js"],"names":["React","useState","useEffect","Modal","Input","Button","ErrorMsg","VERSION_PLATFORM","Thumbnail","_","require","VersionUpsertForm","props","errors","isVisible","onClose","onCancel","title","radioValue","okText","onOk","cancelText","form","value","uploaderOpen","filePath","getFieldDecorator","validateFields","getFieldError","setFieldsValue","checkValues","setCheckValues","isHardUpdate","loading","setLoading","radioData","setRadioData","platFormValue","setPlatformValue","hadleRadioValue","e","target","checked","parseInt","platform","obj","name","number","handleChangeCheckBoxValue","handleSubmit","error","clone","isActive","apk_path","width","marginTop","marginBottom","rules","required","message","display","Object","keys","map","data","index","replace","HOME_BACKUP","PRINT_EXE"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from '../../../components/common/Popup/index';\nimport { Input, Button, ErrorMsg } from '../../../components/common/index';\nimport { VERSION_PLATFORM } from '../../../constants/common';\nimport Thumbnail from \"../../../components/common/Upload/Thumbnail\";\nconst _ = require('lodash');\n\nconst VersionUpsertForm = (props) => {\n  let errors;\n  const {\n    isVisible,\n    onClose,\n    onCancel,\n    title,\n    radioValue,\n    okText,\n    onOk,\n    cancelText,\n    form,\n    value,\n    uploaderOpen,\n    filePath,\n  } = props;\n\n  \n  const {\n    getFieldDecorator,\n    validateFields,\n    getFieldError,\n    setFieldsValue,\n  } = form;\n  const [checkValues, setCheckValues] = useState(\n    value && value.isHardUpdate ? value.isHardUpdate : false\n  );\n  const [loading, setLoading] = useState(false);\n  const [radioData, setRadioData] = useState(radioValue);\n  const [platFormValue, setPlatformValue] = useState();\n\n  const hadleRadioValue = (e) => {\n    if (e.target.checked) {\n      setRadioData(parseInt(e.target.value));\n    }\n  };\n\n  useEffect(() => {\n    if (value) {\n      setPlatformValue(value.platform);\n      let obj = {\n        name: value.name,\n        number: value.number,\n        platform: value.platform,\n        isHardUpdate: value.isHardUpdate,\n      };\n      setFieldsValue(obj);\n    }\n  }, [value]);\n\n  const handleChangeCheckBoxValue = (e) => {\n    setCheckValues(e.target.checked);\n  };\n\n  const handleSubmit = () => {\n    validateFields((error, value) => {\n      if (!error) {\n        let obj = _.clone(value);\n        obj = {\n          platform: radioData,\n          name: value.name,\n          number: value.number,\n          isHardUpdate: checkValues,\n          isActive: false,\n          apk_path: filePath != null ? filePath : null,\n        };\n        onOk(obj);\n        setLoading(true);\n      } else {\n        setLoading(false);\n      }\n    });\n  };\n\n  return (\n    <>\n      <Modal\n        visible={isVisible}\n        onCancel={onCancel}\n        onClose={onClose}\n        style={{ width: '50%' }}\n        title={title}\n        maskClosable={false}\n        onOk={handleSubmit}\n        okText={okText}\n        cancelText={cancelText}\n        okButtonProps={{ loading: loading }}\n      >\n        <div className='form_row' style={{ marginTop: '2%' }}>\n          <div\n            className='form_group col-12 required'\n            style={{ marginBottom: '3%' }}\n          >\n            <label>\n              Version Name<span>*</span>\n            </label>\n            {getFieldDecorator('name', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please enter the version name.!',\n                },\n              ],\n            })(<Input name='name' />)}\n            {(errors = getFieldError('name')) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n          <div\n            className='form_group col-12 required'\n            style={{ marginBottom: '3%' }}\n          >\n            <label>\n              Version Number<span>*</span>\n            </label>\n            {getFieldDecorator('number', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please enter the version number.!',\n                },\n              ],\n            })(<Input name='number' />)}\n            {(errors = getFieldError('number')) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n          <div className='form_group col-12 required'>\n            <label>\n              Platform<span>*</span>\n            </label>\n          </div>\n          <div\n            className=' col-12'\n            style={{ marginBottom: '3%', display: 'flex' }}\n          >\n            {Object.keys(VERSION_PLATFORM).map((data, index) => {\n              return (\n                <>\n                  <label className='filter_check radio'>\n                    <input\n                      type='checkbox'\n                      name='platform'\n                      value={VERSION_PLATFORM[data]}\n                      checked={radioData === VERSION_PLATFORM[data]}\n                      onChange={platFormValue ? platFormValue : hadleRadioValue}\n                    // onChange={platFormValue ? platFormValue : hadleRadioValue}\n                    />\n                    <span className='checkbox radio'></span>\n                    <span className='lbl'>{data.replace(/_/g, ' ')}</span>\n                  </label>\n                </>\n              );\n            })}\n          </div>\n          <div className='form_group col-3 inline_check'>\n            <label className='filter_check checkbox'>\n              <input\n                type='checkbox'\n                name='isHardUpdate'\n                onChange={handleChangeCheckBoxValue}\n                checked={checkValues}\n              />\n              <span className='checkbox'></span>\n              <span className='lbl'>Hard Update</span>\n            </label>\n          </div>\n\n          <div className='form_group col-12'>\n            {radioData == VERSION_PLATFORM.HOME_BACKUP ||\n              radioData == VERSION_PLATFORM.PRINT_EXE\n              ? getFieldDecorator('apk_path')(\n                <>\n                  <Button\n                    onClick={uploaderOpen}\n                    type='transparent'\n                    style={{ width: '250px' }}\n                  >\n                    Uplaod EXE\n                    </Button>\n                  <div className=\"form_row add-user\">\n                    {filePath && (\n                      <div className=\"upd_img_wrap\">\n                        <Thumbnail path={filePath} />\n                      </div>\n                    )}\n                  </div>\n                </>\n              )\n              : null}\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default VersionUpsertForm;\n"]},"metadata":{},"sourceType":"module"}