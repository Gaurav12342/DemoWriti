{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/User/Components/ResetPassword/ResetPassword.js\";\nimport React from 'react';\nimport Modal from '../../../../components/common/Popup/index';\nimport { ErrorMsg, Input } from '../../../../components/common/index';\n\nfunction ResetPassword(props) {\n  const {\n    onCancel,\n    onOk,\n    form,\n    visible\n  } = props;\n  const {\n    getFieldDecorator,\n    getFieldError\n  } = form;\n  let errors;\n\n  const compareToFirstPassword = (rule, value, callback) => {\n    if (value && value !== form.getFieldValue('newPassword')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  const validateToNextPassword = (rule, value, callback) => {\n    if (value) {\n      form.validateFields(['confirm'], {\n        force: true\n      });\n    }\n\n    callback();\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    visible: visible,\n    title: \"Reset Password\",\n    onCancel: onCancel,\n    onClose: onCancel,\n    maskClosable: false,\n    onOk: onOk,\n    style: {\n      width: \"730px\"\n    },\n    okText: \"Reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group required col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Password\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 36\n    }\n  }, \"*\")), getFieldDecorator('newPassword', {\n    rules: [{\n      required: true,\n      message: 'Please add your password!'\n    }, {\n      min: 8,\n      message: 'Password must be minimum of 8 digit.'\n    }, {\n      validator: validateToNextPassword\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    autoComplete: \"off\",\n    placeholder: \"Enter New Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  })), (errors = getFieldError('newPassword')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 64\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group required col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 44\n    }\n  }, \"*\")), getFieldDecorator('confirm', {\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, {\n      validator: compareToFirstPassword\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Enter Confirm Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  })), (errors = getFieldError('confirm')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 60\n    }\n  }) : null)))));\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/User/Components/ResetPassword/ResetPassword.js"],"names":["React","Modal","ErrorMsg","Input","ResetPassword","props","onCancel","onOk","form","visible","getFieldDecorator","getFieldError","errors","compareToFirstPassword","rule","value","callback","getFieldValue","validateToNextPassword","validateFields","force","width","e","preventDefault","rules","required","message","min","validator"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Modal from '../../../../components/common/Popup/index'\nimport { ErrorMsg, Input } from '../../../../components/common/index'\nfunction ResetPassword(props) {\n    const { onCancel, onOk, form, visible } = props\n    const { getFieldDecorator, getFieldError } = form\n    let errors\n\n    const compareToFirstPassword = (rule, value, callback) => {\n        if (value && value !== form.getFieldValue('newPassword')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    }\n    const validateToNextPassword = (rule, value, callback) => {\n        if (value) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n    return <Modal\n        visible={visible}\n        title='Reset Password'\n        onCancel={onCancel}\n        onClose={onCancel}\n        maskClosable={false}\n        onOk={onOk}\n        style={{ width: \"730px\" }}\n        okText='Reset'\n    >\n        <form autoComplete=\"off\" onSubmit={(e)=>e.preventDefault()}\n        >\n        <div className=\"form_wrap flex-wrap\">\n            <div className='form_row add-user'>\n                <div className='form_group required col-8'>\n                    <label>Password<span>*</span></label>\n                    {getFieldDecorator('newPassword', {\n                        rules: [{\n                            required: true, message: 'Please add your password!',\n                        }, {\n                            min: 8,\n                            message: 'Password must be minimum of 8 digit.',\n                        }, {\n                            validator: validateToNextPassword,\n                        }],\n                    })(\n                        <Input type=\"password\" autoComplete=\"off\" placeholder=\"Enter New Password\" />\n                    )}\n                    {(errors = getFieldError('newPassword')) ? <ErrorMsg errors={errors} /> : null}\n                </div>\n\n            </div>\n            <div className='form_row add-user'>\n                <div className='form_group required col-8'>\n                    <label>Confirm Password<span>*</span></label>\n                    {getFieldDecorator('confirm', {\n                        rules: [{\n                            required: true, message: 'Please confirm your password!',\n                        }, {\n                            validator: compareToFirstPassword,\n                        }],\n                    })(\n                        <Input type=\"password\" placeholder=\"Enter Confirm Password\" />\n                    )}\n                    {(errors = getFieldError('confirm')) ? <ErrorMsg errors={errors} /> : null}\n                </div>\n            </div>\n        </div>\n        </form>\n    </Modal>\n}\nexport default ResetPassword"]},"metadata":{},"sourceType":"module"}