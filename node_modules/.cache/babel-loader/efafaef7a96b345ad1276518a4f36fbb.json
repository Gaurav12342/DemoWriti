{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/UserAuth/UpdateDefaultPassword/index.js\";\nimport React, { useState } from 'react';\nimport { createForm } from 'rc-form';\nimport UpdateDefaultPassword from './UpdateDefaultPassword';\nimport { updateDefaultPassword } from '../../../services/api/routes/auth';\nimport { clearLocalStorage, userLogout } from '../../../util/common';\nimport { setDefaultPassword } from '../../../appRedux/actions/Auth';\nimport axios from '../../../services/api/config';\nimport { SET_USER_DEFAULT_PASSWORD } from '../../../appRedux/ActionTypes';\nimport { connect } from 'react-redux';\nimport routes from '../../../routes/constant';\nconst initialShowPassState = {\n  currentPass: false,\n  password: false,\n  newPass: false\n};\n\nfunction DefaultPassword(props) {\n  const [disbaleBtn, setDisbaleBtn] = useState(false);\n  const [showPassword, setShowPassword] = useState(initialShowPassState);\n  const {\n    form\n  } = props;\n\n  const handleReset = () => {\n    form.validateFields((error, value) => {\n      if (error) {\n        return;\n      }\n\n      if (value.currentPassword !== value.password && value.newPassword === value.password) {\n        setDisbaleBtn(true);\n        axios({ ...updateDefaultPassword,\n          data: { ...value\n          }\n        }).then(({\n          data\n        }) => {\n          // console.log(\"TCL: handleReset -> data\", data)\n          // debugger\n          if (data.code === 'OK') {\n            console.log('logout here');\n            userLogout();\n            props.history.push({\n              pathName: routes.login.path\n            });\n          }\n\n          setDisbaleBtn(false);\n        }).catch(err => setDisbaleBtn(false));\n      }\n    });\n  };\n\n  const handleBackLogin = () => {\n    clearLocalStorage();\n    props.setDefaultPassword(SET_USER_DEFAULT_PASSWORD, null, function () {\n      props.history.push({\n        pathname: routes.login.path\n      });\n    });\n  };\n\n  const handleHideShowPassChange = label => {\n    setShowPassword({ ...showPassword,\n      [label]: !showPassword[label]\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(UpdateDefaultPassword, {\n    form: form,\n    btnLoading: disbaleBtn,\n    onReset: handleReset,\n    showPassword: showPassword,\n    onBackLogin: handleBackLogin,\n    hideshowpasschange: handleHideShowPassChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }\n  });\n}\n\nexport default connect(null, {\n  setDefaultPassword\n})(createForm('DefaultPassword')(DefaultPassword));","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/UserAuth/UpdateDefaultPassword/index.js"],"names":["React","useState","createForm","UpdateDefaultPassword","updateDefaultPassword","clearLocalStorage","userLogout","setDefaultPassword","axios","SET_USER_DEFAULT_PASSWORD","connect","routes","initialShowPassState","currentPass","password","newPass","DefaultPassword","props","disbaleBtn","setDisbaleBtn","showPassword","setShowPassword","form","handleReset","validateFields","error","value","currentPassword","newPassword","data","then","code","console","log","history","push","pathName","login","path","catch","err","handleBackLogin","pathname","handleHideShowPassChange","label"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { createForm } from 'rc-form'\nimport UpdateDefaultPassword from './UpdateDefaultPassword'\nimport { updateDefaultPassword } from '../../../services/api/routes/auth'\nimport { clearLocalStorage, userLogout } from '../../../util/common'\nimport { setDefaultPassword } from '../../../appRedux/actions/Auth'\nimport axios from '../../../services/api/config'\nimport { SET_USER_DEFAULT_PASSWORD } from '../../../appRedux/ActionTypes'\nimport { connect } from 'react-redux'\nimport routes from '../../../routes/constant'\n\nconst initialShowPassState={\n    currentPass:false,\n    password:false,\n    newPass:false\n}\n\nfunction DefaultPassword(props) {\n    const [disbaleBtn, setDisbaleBtn] = useState(false)\n    const [showPassword, setShowPassword] = useState(initialShowPassState)\n    const { form } = props\n\n    const handleReset = () => {\n        form.validateFields((error, value) => {\n            if (error) {\n                return\n            }\n            if ((value.currentPassword !== value.password) && (value.newPassword === value.password)) {\n                setDisbaleBtn(true)\n                axios({ ...updateDefaultPassword, data: { ...value } }).then(({ data }) => {\n                // console.log(\"TCL: handleReset -> data\", data)\n                // debugger\n                if (data.code === 'OK') {\n                    console.log('logout here')\n                    userLogout()\n                    props.history.push({\n                        pathName: routes.login.path,\n                    });\n                }\n                setDisbaleBtn(false)\n            }).catch(err => setDisbaleBtn(false))\n            }\n        })\n    }\n    const handleBackLogin = () => {\n        clearLocalStorage()\n        props.setDefaultPassword(SET_USER_DEFAULT_PASSWORD, null, function () {\n            props.history.push({\n                pathname: routes.login.path\n            })\n        })\n    }\n    const handleHideShowPassChange=(label)=>{\n        setShowPassword({\n            ...showPassword,\n            [label]:!showPassword[label]            \n        })\n        \n    }\n    \n    return <UpdateDefaultPassword\n        form={form}\n        btnLoading={disbaleBtn}\n        onReset={handleReset}\n        showPassword={showPassword}\n        onBackLogin={handleBackLogin}\n        hideshowpasschange={handleHideShowPassChange}\n    />\n}\nexport default connect(null, { setDefaultPassword })(createForm('DefaultPassword')(DefaultPassword)) "]},"metadata":{},"sourceType":"module"}