{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/EProcessing/AddEProcessing/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { createForm } from 'rc-form';\nimport { Spin, ErrorMsg, Select, Option, Button, TextArea, Toast, Confirm } from '../../../../../components/common';\nimport { ORDER_TYPE, RX_TYPE, STATUS, TYPE } from '../../../../../constants/prescription';\nimport { isDrOrNp } from '../../../../../util/common';\nimport { setTimeToZero } from '../../../../../util/moment';\nimport { upsertEProcessing } from '../../../../../services/api/routes/prescription';\nimport axios, { getSubMasters } from '../../../../../services/api/services/common';\nimport Upsert from './UpsertForm';\nimport _ from 'lodash';\nimport uuid from 'uuid';\nimport moment from 'moment';\n\nconst AddEprocessing = props => {\n  const {\n    form,\n    residentDetail,\n    authUser,\n    onOk,\n    onCancel,\n    edit\n  } = props;\n  const [okLoader, setOkLoader] = useState(false);\n  const [subMasterLoader, setSubMasterLoader] = useState(false);\n  const [documentTypes, setDocumentTypes] = useState([]);\n  useEffect(() => {\n    setSubMasterLoader(true);\n    getSubMasters('THIRD_PARTY_PRESCRIPTION_TYPE').then(res => {\n      setSubMasterLoader(false);\n      setDocumentTypes(res);\n    }).catch(err => {\n      setSubMasterLoader(false);\n    });\n  }, []);\n\n  const handleSave = params => {\n    var _residentDetail$homeA;\n\n    setOkLoader(true);\n    let request = {\n      \"attachments\": params.attachments,\n      \"deviceId\": uuid(),\n      \"isCancel\": false,\n      \"isMedicalDirectiveAuthorized\": params.isMedicalDirectiveAuthorized,\n      \"isVerbalOrder\": isDrOrNp(authUser) ? false : true,\n      \"homeAreaId\": (_residentDetail$homeA = residentDetail.homeAreaId) === null || _residentDetail$homeA === void 0 ? void 0 : _residentDetail$homeA._id,\n      \"medStrip\": false,\n      \"orderGeneratedAt\": moment(params.orderGeneratedAt).toISOString(),\n      \"physicianId\": isDrOrNp(authUser) ? authUser._id : params.physicianId,\n      \"residentId\": residentDetail._id,\n      \"rxType\": RX_TYPE.THIRD_PARTY,\n      \"status\": STATUS.SUBMITTED,\n      \"thirdPartyPrescriptionType\": params.thirdPartyPrescriptionType,\n      \"type\": TYPE.THIRD_PARTY\n    };\n\n    if (edit) {\n      request = { ...request,\n        \"status\": STATUS.EDITED,\n        \"_id\": edit._id,\n        \"uniqueId\": edit.uniqueId\n      };\n    }\n\n    axios({ ...upsertEProcessing,\n      data: request\n    }).then(data => {\n      if (data.code === 'OK') {\n        Toast.success(data.message);\n        onOk();\n      }\n\n      setOkLoader(false);\n    }).catch(err => setOkLoader(false));\n  };\n\n  const handleCancel = () => {\n    onCancel();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"on_going_call_wrap add_eprocessing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Upsert, Object.assign({}, props, {\n    okLoader: okLoader,\n    subMasterLoader: subMasterLoader,\n    documentTypes: documentTypes,\n    onOk: handleSave,\n    onCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default createForm()(AddEprocessing);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/EProcessing/AddEProcessing/index.js"],"names":["React","useEffect","useState","createForm","Spin","ErrorMsg","Select","Option","Button","TextArea","Toast","Confirm","ORDER_TYPE","RX_TYPE","STATUS","TYPE","isDrOrNp","setTimeToZero","upsertEProcessing","axios","getSubMasters","Upsert","_","uuid","moment","AddEprocessing","props","form","residentDetail","authUser","onOk","onCancel","edit","okLoader","setOkLoader","subMasterLoader","setSubMasterLoader","documentTypes","setDocumentTypes","then","res","catch","err","handleSave","params","request","attachments","isMedicalDirectiveAuthorized","homeAreaId","_id","orderGeneratedAt","toISOString","physicianId","THIRD_PARTY","SUBMITTED","thirdPartyPrescriptionType","EDITED","uniqueId","data","code","success","message","handleCancel"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createForm } from 'rc-form';\nimport { Spin, ErrorMsg, Select, Option, Button, TextArea, Toast, Confirm } from '../../../../../components/common'\nimport { ORDER_TYPE, RX_TYPE, STATUS, TYPE } from '../../../../../constants/prescription'\nimport { isDrOrNp } from '../../../../../util/common'\nimport { setTimeToZero } from '../../../../../util/moment'\nimport { upsertEProcessing } from '../../../../../services/api/routes/prescription';\nimport axios, { getSubMasters } from '../../../../../services/api/services/common';\nimport Upsert from './UpsertForm'\nimport _ from 'lodash'\nimport uuid from 'uuid'\nimport moment from 'moment'\n\nconst AddEprocessing = props => {\n    const { form, residentDetail, authUser, onOk, onCancel, edit } = props\n    const [okLoader, setOkLoader] = useState(false)\n    const [subMasterLoader, setSubMasterLoader] = useState(false)\n    const [documentTypes, setDocumentTypes] = useState([])\n\n    useEffect(() => {\n        setSubMasterLoader(true)\n        getSubMasters('THIRD_PARTY_PRESCRIPTION_TYPE').then(res => {\n            setSubMasterLoader(false)\n            setDocumentTypes(res)\n        }).catch(err => {\n            setSubMasterLoader(false)\n        })\n    }, [])\n\n    const handleSave = (params) => {\n        setOkLoader(true)\n        let request = {\n            \"attachments\": params.attachments,\n            \"deviceId\": uuid(),\n            \"isCancel\": false,\n            \"isMedicalDirectiveAuthorized\": params.isMedicalDirectiveAuthorized,\n            \"isVerbalOrder\": isDrOrNp(authUser) ? false : true,\n            \"homeAreaId\": residentDetail.homeAreaId?._id,\n            \"medStrip\": false,\n            \"orderGeneratedAt\": moment(params.orderGeneratedAt).toISOString(),\n            \"physicianId\": isDrOrNp(authUser) ? authUser._id : params.physicianId,\n            \"residentId\": residentDetail._id,\n            \"rxType\": RX_TYPE.THIRD_PARTY,\n            \"status\": STATUS.SUBMITTED,\n            \"thirdPartyPrescriptionType\": params.thirdPartyPrescriptionType,\n            \"type\": TYPE.THIRD_PARTY\n        }\n        if (edit) {\n            request = {\n                ...request,\n                \"status\": STATUS.EDITED,\n                \"_id\": edit._id,\n                \"uniqueId\": edit.uniqueId\n            }\n        }\n        axios({ ...upsertEProcessing, data: request }).then((data) => {\n            if (data.code === 'OK') {\n                Toast.success(data.message)\n                onOk()\n            }\n            setOkLoader(false)\n        }).catch(err => setOkLoader(false))\n    }\n\n    const handleCancel = () => {\n        onCancel()\n    }\n\n    return <>\n        <div className=\"on_going_call_wrap add_eprocessing\">\n            <Upsert {...props}\n                okLoader={okLoader}\n                subMasterLoader={subMasterLoader}\n                documentTypes={documentTypes}\n                onOk={handleSave}\n                onCancel={handleCancel}\n            />\n        </div>\n    </>\n}\nexport default createForm()(AddEprocessing)"]},"metadata":{},"sourceType":"module"}