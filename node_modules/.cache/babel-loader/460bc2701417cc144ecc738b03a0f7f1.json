{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/PmrTodo/components/Header.js\";\nimport React, { useMemo, useEffect, useState } from 'react';\nimport { displayDOB, displayTime } from '../../../util/moment';\nimport { Button, Select, Option } from '../../../components/common';\nimport { displayDate } from '../../../util/moment';\nimport Modal from '../../../components/common/Popup';\nimport PDFViewer from 'pdf-viewer-reactjs';\nimport { MODULE, ACTIONS } from '../../../constants/subscription';\nimport { canPerformAction, isModuleAccessible } from '../../../util/common';\n\nconst Header = props => {\n  const {\n    detail,\n    onPerformTodo,\n    pmrRange,\n    attachmentArr,\n    visible,\n    prevPMR,\n    prevPmrVal,\n    onPrevPMRChange,\n    isEditMode\n  } = props;\n  const {\n    pmrId,\n    patientId\n  } = detail;\n  const [pmrHistioryVisble, setPmrHistoryVisible] = useState(false);\n  const [curPmr, setCurPmr] = useState(prevPMR);\n  const [prevLoading, setPrevLoading] = useState(false);\n  const [nextLoading, setNextLoading] = useState(false);\n  const [prevPmrValData, setPrevPmrValData] = useState(prevPmrVal);\n  const [curIndex, setCurIndex] = useState(0); //   const [attachment, setAttachment] = useState(null);\n  //   const [visibleView, setVisibleViwer] = useState(visible);\n\n  const canPerformTodo = useMemo(() => {\n    const performTodoParams = {\n      moduleId: MODULE.TODO,\n      actiontoCheck: isEditMode ? ACTIONS.UNDO.CODE : ACTIONS.YES_NA.CODE\n    };\n\n    if (isModuleAccessible(MODULE.TODO) && canPerformAction(performTodoParams)) {\n      return true;\n    }\n  }, [isEditMode]);\n\n  const handleHistoryModal = visible => {\n    setPmrHistoryVisible(visible);\n    setPrevPmrValData(visible);\n    onPrevPMRChange(visible);\n  };\n\n  const navigation = val => {\n    const attachmentArr = [...attachmentArr];\n    let curPmr = { ...curPmr\n    }; // let index = attachmentArr.findIndex(x => x.id === curPmr.id)\n\n    let index = curPmr.index;\n\n    if (val === 'prev') {\n      setPrevLoading(true);\n\n      if (index > 0) {\n        index--;\n        curPmr = attachmentArr[index];\n      }\n    } else {\n      setNextLoading(true);\n\n      if (index <= attachmentArr.length - 1) {\n        index++;\n        curPmr = attachmentArr[index];\n      }\n    }\n\n    setCurIndex(index);\n    setCurPmr(curPmr);\n    setPrevLoading(false);\n    setNextLoading(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"main-title-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, pmrId, \" \", patientId === null || patientId === void 0 ? void 0 : patientId.mergeLFName, \" (Room No \", patientId === null || patientId === void 0 ? void 0 : patientId.room, \")\", ' ', displayDOB(patientId === null || patientId === void 0 ? void 0 : patientId.dob)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"access-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../NursePrep/img/small-info.svg'),\n    className: \"prev-c mr-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"prev-c\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Previous PMR can be\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, \"accessible for view only.\")))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, `PMR Range - ${displayDate(detail.pmrScheduleDate.startDate)} - ${displayDate(detail.pmrScheduleDate.endDate)}`), canPerformTodo ? /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    className: \"btn Click-here\",\n    disabled: isEditMode ? false : !detail.isSave,\n    onClick: onPerformTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, isEditMode ? 'Edit' : 'Save') : null), pmrHistioryVisble && /*#__PURE__*/React.createElement(Modal, {\n    visible: pmrHistioryVisble,\n    title: `Privious PMR History`,\n    maskClosable: true,\n    onCancel: () => {\n      handleHistoryModal(false);\n    },\n    style: {\n      width: '60%'\n    },\n    footer: [/*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      loading: prevLoading // onClick={() => navigation('prev')}\n      // disabled={curPmr.index <= 0}\n      ,\n      type: \"primary\",\n      onClick: () => {\n        handleHistoryModal(false);\n      },\n      size: \"lg\",\n      style: {\n        'margin-right': '65%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, ' ', \"Prev\"), /*#__PURE__*/React.createElement(Button, {\n      loading: nextLoading // onClick={() => navigation('next')}\n      // disabled={curPmr.index === attachmentArr.length - 1}\n      ,\n      type: \"primary\",\n      size: \"lg\",\n      onClick: () => {\n        handleHistoryModal(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, \"Next\"))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PDFViewer, {\n    document: {\n      url: 'https://arxiv.org/pdf/quant-ph/0410100.pdf'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/PmrTodo/components/Header.js"],"names":["React","useMemo","useEffect","useState","displayDOB","displayTime","Button","Select","Option","displayDate","Modal","PDFViewer","MODULE","ACTIONS","canPerformAction","isModuleAccessible","Header","props","detail","onPerformTodo","pmrRange","attachmentArr","visible","prevPMR","prevPmrVal","onPrevPMRChange","isEditMode","pmrId","patientId","pmrHistioryVisble","setPmrHistoryVisible","curPmr","setCurPmr","prevLoading","setPrevLoading","nextLoading","setNextLoading","prevPmrValData","setPrevPmrValData","curIndex","setCurIndex","canPerformTodo","performTodoParams","moduleId","TODO","actiontoCheck","UNDO","CODE","YES_NA","handleHistoryModal","navigation","val","index","length","mergeLFName","room","dob","require","pmrScheduleDate","startDate","endDate","isSave","width","url"],"mappings":"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","sourcesContent":["import React, { useMemo, useEffect, useState } from 'react';\nimport { displayDOB, displayTime } from '../../../util/moment';\nimport { Button, Select, Option } from '../../../components/common';\nimport { displayDate } from '../../../util/moment';\nimport Modal from '../../../components/common/Popup';\nimport PDFViewer from 'pdf-viewer-reactjs';\nimport { MODULE, ACTIONS } from '../../../constants/subscription';\nimport {\n  canPerformAction,\n  isModuleAccessible,\n} from '../../../util/common';\n\nconst Header = (props) => {\n  const {\n    detail,\n    onPerformTodo,\n    pmrRange,\n    attachmentArr,\n    visible,\n    prevPMR,\n    prevPmrVal,\n    onPrevPMRChange,\n    isEditMode\n  } = props;\n  const { pmrId, patientId } = detail;\n  const [pmrHistioryVisble, setPmrHistoryVisible] = useState(false);\n  const [curPmr, setCurPmr] = useState(prevPMR);\n  const [prevLoading, setPrevLoading] = useState(false);\n  const [nextLoading, setNextLoading] = useState(false);\n  const [prevPmrValData, setPrevPmrValData] = useState(prevPmrVal);\n  const [curIndex, setCurIndex] = useState(0);\n  //   const [attachment, setAttachment] = useState(null);\n  //   const [visibleView, setVisibleViwer] = useState(visible);\n\n  const canPerformTodo = useMemo(() => {\n    const performTodoParams = {\n      moduleId: MODULE.TODO,\n      actiontoCheck: isEditMode ? ACTIONS.UNDO.CODE : ACTIONS.YES_NA.CODE,\n    };\n    if (isModuleAccessible(MODULE.TODO) && canPerformAction(performTodoParams)) {\n      return true\n    }\n  }, [isEditMode])\n\n  const handleHistoryModal = (visible) => {\n    setPmrHistoryVisible(visible);\n    setPrevPmrValData(visible);\n    onPrevPMRChange(visible);\n  };\n\n  const navigation = (val) => {\n    const attachmentArr = [...attachmentArr];\n    let curPmr = { ...curPmr };\n    // let index = attachmentArr.findIndex(x => x.id === curPmr.id)\n    let index = curPmr.index;\n    if (val === 'prev') {\n      setPrevLoading(true);\n      if (index > 0) {\n        index--;\n        curPmr = attachmentArr[index];\n      }\n    } else {\n      setNextLoading(true);\n      if (index <= attachmentArr.length - 1) {\n        index++;\n        curPmr = attachmentArr[index];\n      }\n    }\n\n    setCurIndex(index);\n    setCurPmr(curPmr);\n    setPrevLoading(false);\n    setNextLoading(false);\n  };\n\n  return (\n    <>\n      <h2 className='main-title-bar'>\n        {pmrId} {patientId?.mergeLFName} (Room No {patientId?.room}){' '}\n        {displayDOB(patientId?.dob)}\n      </h2>\n\n      <div className='pmr-row'>\n        <div className='access-view'>\n          <form action=''>\n            {/* <div className='form_wrap mr-10'>\n              <Select\n                name='frequency'\n                mode='single'\n                // value={\n                //   pmrRange && pmrRange.length\n                //     ? this.state.prevPmrVal\n                //     : undefined\n                // }\n                onChange={() => {\n                  handleHistoryModal(true);\n                }}\n                // onChange={(value) => dateFrequencyChanges(value, 'frequency')}\n                placeholder='Select PMR Range'\n              >\n                {/* {pmrRange &&\n                  pmrRange.map((x) => {\n                    return (\n                      <Option value={x.id}>\n                        {displayDate(x.pmrScheduleDate.startDate) +\n                          ' - ' +\n                          displayDate(x.pmrScheduleDate.endDate)}\n                      </Option>\n                    );\n                  })} */}\n            {/* {detail &&\n                  detail.pmrScheduleDate &&\n                  detail.pmrScheduleDate.map((data) => {\n                    return (\n                      <Option>{`${displayDate(data.startDate)} - ${displayDate(\n                        data.endDate\n                      )}`}</Option>\n                    );\n                  })} */}\n            {/* </Select>\n            </div> */}\n          </form>\n          <div className=''>\n            <img\n              src={require('../../NursePrep/img/small-info.svg')}\n              className='prev-c mr-5'\n            />\n            <p className='prev-c'>\n              Previous PMR can be\n              <span>accessible for view only.</span>\n            </p>\n          </div>\n        </div>\n\n        <h3>{`PMR Range - ${displayDate(detail.pmrScheduleDate.startDate)} - ${displayDate(\n          detail.pmrScheduleDate.endDate\n        )}`}</h3>\n        {\n          canPerformTodo ?\n            <Button\n              type='primary'\n              className='btn Click-here'\n              disabled={(isEditMode) ? false : !detail.isSave}\n              onClick={onPerformTodo}\n            >\n              {isEditMode ? 'Edit' : 'Save'}\n            </Button> : null\n        }\n      </div>\n\n      {pmrHistioryVisble && (\n        <Modal\n          visible={pmrHistioryVisble}\n          title={`Privious PMR History`}\n          maskClosable={true}\n          onCancel={() => {\n            handleHistoryModal(false);\n          }}\n          style={{ width: '60%' }}\n          footer={[\n            <>\n              <Button\n                loading={prevLoading}\n                // onClick={() => navigation('prev')}\n                // disabled={curPmr.index <= 0}\n                type='primary'\n                onClick={() => {\n                  handleHistoryModal(false);\n                }}\n                size='lg'\n                style={{ 'margin-right': '65%' }}\n              >\n                {' '}\n                Prev\n              </Button>\n\n              <Button\n                loading={nextLoading}\n                // onClick={() => navigation('next')}\n                // disabled={curPmr.index === attachmentArr.length - 1}\n                type='primary'\n                size='lg'\n                onClick={() => {\n                  handleHistoryModal(false);\n                }}\n              >\n                Next\n              </Button>\n            </>,\n          ]}\n        >\n          {/* {curPmr.pmrId} */}\n          {/* {(curPmr && (\n            <PDFViewer\n              document={{ url: 'https://arxiv.org/pdf/quant-ph/0410100.pdf' }}\n            />\n          )) ||\n            ''} */}\n          <div className=\"pmr_history\">\n            <PDFViewer\n              document={{ url: 'https://arxiv.org/pdf/quant-ph/0410100.pdf' }}\n            />\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}