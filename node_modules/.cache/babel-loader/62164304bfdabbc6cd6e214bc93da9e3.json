{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Resident/components/PrescriptionModal.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { createForm } from \"rc-form\";\nimport { Toast } from '../../../components/common';\nimport Modal from '../../../components/common/Popup';\nimport { PrescriptionForm } from '../../../components/Prescription';\nimport axios from \"../../../services/api/services/common\";\nimport { UpsertSetting } from \"../../../services/api/routes/customer\";\n\nconst PrescModal = props => {\n  const {\n    visible,\n    onCancel,\n    edit,\n    resident\n  } = props;\n\n  const handleSave = async request => {\n    // const {method,url}=UpsertSetting\n    let res = await axios({ ...UpsertSetting,\n      request\n    });\n\n    if (res) {\n      if (res && res.code === 'Ok') {\n        Toast.success(res.data.message);\n        onCancel();\n      } else Toast.error(res.data.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    style: {\n      width: '800px'\n    },\n    visible: visible,\n    title: `${edit ? 'Update' : 'Add'} Rx Order for ${resident}`,\n    onCancel: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PrescriptionForm, {\n    edit: edit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default PrescModal;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Resident/components/PrescriptionModal.js"],"names":["React","useEffect","useState","createForm","Toast","Modal","PrescriptionForm","axios","UpsertSetting","PrescModal","props","visible","onCancel","edit","resident","handleSave","request","res","code","success","data","message","error","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,OAAOC,KAAP,MAAkB,uCAAlB;AACA,SAASC,aAAT,QAA8B,uCAA9B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAExB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA;AAA3B,MAAwCJ,KAA9C;;AAEA,QAAMK,UAAU,GAAG,MAAOC,OAAP,IAAmB;AAClC;AACA,QAAIC,GAAG,GAAG,MAAMV,KAAK,CAAC,EAAE,GAAGC,aAAL;AAAoBQ,MAAAA;AAApB,KAAD,CAArB;;AACA,QAAIC,GAAJ,EAAS;AACL,UAAIA,GAAG,IAAIA,GAAG,CAACC,IAAJ,KAAa,IAAxB,EAA8B;AAC1Bd,QAAAA,KAAK,CAACe,OAAN,CAAcF,GAAG,CAACG,IAAJ,CAASC,OAAvB;AACAT,QAAAA,QAAQ;AACX,OAHD,MAIIR,KAAK,CAACkB,KAAN,CAAYL,GAAG,CAACG,IAAJ,CAASC,OAArB;AACP;AACJ,GAVD;;AAYA,sBAAO,uDACH,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAAd;AACI,IAAA,OAAO,EAAEZ,OADb;AACsB,IAAA,KAAK,EAAG,GAAEE,IAAI,GAAG,QAAH,GAAc,KAAM,iBAAgBC,QAAS,EADjF;AAEI,IAAA,QAAQ,EAAEF,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,gBAAD;AACI,IAAA,IAAI,EAAEC,IADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADG,CAAP;AAUH,CA1BD;;AA4BA,eAAeJ,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { createForm } from \"rc-form\";\nimport { Toast } from '../../../components/common'\nimport Modal from '../../../components/common/Popup'\nimport { PrescriptionForm } from '../../../components/Prescription'\nimport axios from \"../../../services/api/services/common\";\nimport { UpsertSetting } from \"../../../services/api/routes/customer\";\n\nconst PrescModal = props => {\n\n    const { visible, onCancel, edit, resident } = props\n\n    const handleSave = async (request) => {\n        // const {method,url}=UpsertSetting\n        let res = await axios({ ...UpsertSetting, request })\n        if (res) {\n            if (res && res.code === 'Ok') {\n                Toast.success(res.data.message)\n                onCancel()\n            } else\n                Toast.error(res.data.message)\n        }\n    }\n\n    return <>\n        <Modal style={{ width: '800px' }}\n            visible={visible} title={`${edit ? 'Update' : 'Add'} Rx Order for ${resident}`}\n            onCancel={onCancel}\n        >\n            <PrescriptionForm\n                edit={edit}\n            />\n        </Modal>\n    </>\n}\n\nexport default PrescModal"]},"metadata":{},"sourceType":"module"}