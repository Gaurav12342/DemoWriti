{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/OrdersTab/index.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { createForm, formShape } from 'rc-form';\nimport { Filters, DetailsLess, VerbalOrder, Todo, Cancel, Clarification, Edit } from '../../../../assets/images/resident-detail/index';\nimport { Refresh, View, Notes, Reminder, MoreDots, Audit } from '../../../../assets/images/pmr/index';\nimport { FirstPage, LastPage, Next, Prev } from '../../../../assets/images/index';\nimport AddNotesPopup from '../../../../components/common/Popup/addnotes-popup';\nimport AuditPopup from '../../../../components/common/Popup/audit-popup';\nimport ViewNotesPopup from '../../../../components/common/Popup/viewnotes-popup';\nimport ClarificationPopup from '../popup/Clarification';\nimport { DatePicker, DatePickerInput } from 'rc-datepicker';\nimport { TabPanel } from 'react-tabs';\nimport { tabData, TAB_KEYS } from '../../../../components/common/Tab/data';\nimport CommonTab from '../../../../components/common/Tab';\nimport TogglePane from '../togglePane';\nimport { Spin, Toast, LightBox } from '../../../../components/common';\nimport Table from '../../../../components/common/Table/index';\nimport { Column_classNames } from '../../../../constants/Columns';\nimport Header from './Header';\nimport { getUserNameWithDesignation, capitalizeStr, isDrOrNp, canPerformAction } from '../../../../util/common';\nimport { displayDateTime } from '../../../../util/moment';\nimport { STATUS, ORDER_TYPE, STATUS_CLASSNAME, ORDER_TYPE_CLASSNAME, RX_TYPE, MODIFY_ACTION, TYPE } from '../../../../constants/prescription';\nimport { MODULE, ACTIONS } from '../../../../constants/subscription';\nimport axios, { getRxImage } from '../../../../services/api/services/common';\nimport { getAllRxOrders } from '../../../../services/api/routes/prescription';\nimport { setUserData } from '../../../../appRedux/actions/Auth';\nimport { actionContext } from '../UserResidentDetail';\nimport CancelRxModal from './CancelRxModal';\nimport AuthenticateModal from '../../../../components/AuthenticateModal';\nimport { updateOpenResident } from '../../../../appRedux/actions/Resident';\nimport NotesModal from '../../../../components/NotesPopup/List';\nimport ReminderModal from '../../../../components/ReminderPopup/List';\nimport { X_RAY_TODO_TYPES, TODO_CATEGORY, SUB_CATEGORY, DEVICE_VIEW } from '../../../../constants/todo';\nimport { getTodoRedirectUrl } from '../../../../util/todo';\n\nconst _ = require('lodash');\n\nconst NOTALLOWEDSTATUS = [STATUS.CANCELLED, STATUS.EDITED, STATUS.DISCARDED];\n\nconst OrderTab = props => {\n  const {\n    onFetchData,\n    residentActions,\n    isTabActive,\n    currentResidentId,\n    authUser,\n    onEditRx,\n    editDetail,\n    residentDetail\n  } = props;\n  const [loader, setLoader] = useState(false);\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState(0);\n  const [visibleCancel, setVisibleCancel] = useState(false);\n  const [visibleEdit, setVisibleEdit] = useState(false);\n  const [visibleImage, setVisibleImage] = useState(false);\n  const [imgLoader, setImgLoader] = useState(false);\n  const [detail, setDetail] = useState(null);\n  const [filter, setFilter] = useState({\n    page: 1,\n    limit: 10,\n    populate: [{\n      physicianId: [\"mergeLFName\", \"type\", {\n        \"assignedCustomer\": [\"isActive\", \"homeId\", {\n          \"designationId\": [\"name\", \"code\", \"parentId\"]\n        }] // match: { homeId: '5cd963ea1fd1603a09ae7f9f' }\n\n      }]\n    }, {\n      prescriptionMedication: [{\n        \"notes\": []\n      }],\n      match: {\n        isDelete: false\n      }\n    }, {\n      notes: [{\n        addedBy: []\n      }]\n    }],\n    sortBy: {\n      orderGeneratedAt: 'DESC'\n    },\n    find: {\n      residentId: currentResidentId,\n      type: [TYPE.COE, TYPE.FTT]\n    }\n  });\n  const [notesModal, setNotesModal] = useState(false);\n  const [medicationNotesModal, setMedicationNotesModal] = useState(false);\n  const [notesFilterOptions, setNotesFilterOptions] = useState({});\n  const [reminderFilterOptions, setReminderFilterOptions] = useState({});\n  const [reminderModal, setReminderModal] = useState(false);\n  const currentModalData = React.useRef();\n  let statusFilters = [];\n  Object.keys(STATUS).map(k => {\n    return statusFilters.push({\n      text: k,\n      value: STATUS[k]\n    });\n  });\n  const columns = [{\n    title: 'Sr.No',\n    // classname: Column_classNames.sr,\n    key: 'index',\n    width: '5%',\n    render: (text, record, index) => (filter.page - 1) * filter.limit + (index + 1)\n  }, {\n    title: 'Rx. No',\n    dataIndex: 'orderNumber',\n    width: '20%',\n    // classname: Column_classNames.ph,\n    key: 'orderNumber',\n    render: (text, record) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, Object.keys(ORDER_TYPE).map(type => {\n      return ORDER_TYPE[type] == (record === null || record === void 0 ? void 0 : record.status) ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ot_container\",\n        key: ORDER_TYPE[type],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }\n      }, record.isVerbalOrder ? /*#__PURE__*/React.createElement(VerbalOrder, {\n        className: ORDER_TYPE_CLASSNAME[record === null || record === void 0 ? void 0 : record.status],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 19\n        }\n      }) : null) : null;\n    }), ' ', text, record.isUrgent ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: 'urgent',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, \" Urgent \")) : null)\n  }, {\n    title: 'Physician',\n    dataIndex: 'physicianId',\n    width: '15%',\n    // classname: Column_classNames.ph,\n    key: 'physicianId',\n    render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, (text === null || text === void 0 ? void 0 : text.mergeLFName) ? getUserNameWithDesignation(text, true) : '')\n  }, {\n    title: 'Date & Time',\n    dataIndex: 'orderGeneratedAt',\n    width: '10%',\n    // classname: Column_classNames.dt,\n    key: 'orderGeneratedAt',\n    render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    }, displayDateTime(text))\n  }, {\n    title: 'Status',\n    width: '15%',\n    dataIndex: 'status',\n    // classname: Column_classNames.st,\n    render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, Object.keys(STATUS).map(k => {\n      return STATUS[k] === text ? /*#__PURE__*/React.createElement(\"span\", {\n        key: k,\n        className: 'o_status ' + STATUS_CLASSNAME[text],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }\n      }, k) : null;\n    })),\n    filters: statusFilters,\n    onFilter: (value, record) => record.status === value\n  }, {\n    title: 'Actions',\n    showRefresh: true,\n    width: '25%',\n    // className: Column_classNames.Actions,\n    render: (text, record) => {\n      var _record$physicianId;\n\n      const redirectUrl = handlePendingTodo(record);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }\n      }, // imgLoader ?\n      //   <Spin spinning={imgLoader} className=\"center\"></Spin>\n      //   :\n      record.attachments.length > 0 ? /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => handleViewImages(true, record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ac_count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 19\n        }\n      }, \"View\")) : null, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => createNotesModal(record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ac_count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Notes, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }\n      }), record.notesCount ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"notes tot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 19\n        }\n      }, record.notesCount) : null), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }\n      }, \"Notes\")), /*#__PURE__*/React.createElement(\"a\", {\n        target: \"_blank\",\n        href: redirectUrl,\n        style: {\n          textDecoration: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ac_count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Todo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }\n      }), record.pendingTodoCount ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"todo tot read\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 19\n        }\n      }, record.pendingTodoCount) : null), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }\n      }, \"To Do\")), /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => {\n          createReminderModal(record);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ac_count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Reminder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }\n      }), record.reminderCount ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"rem tot read\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 19\n        }\n      }, record.reminderCount) : null), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }\n      }, \"Reminder\")), /*#__PURE__*/React.createElement(\"a\", {\n        className: \"more\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MoreDots, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"more_wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }\n      }, record.rxType === RX_TYPE.PRESCRIPTION && record.type === TYPE.COE && (((_record$physicianId = record.physicianId) === null || _record$physicianId === void 0 ? void 0 : _record$physicianId._id) === authUser._id || record.addedBy === authUser._id) && (record.status === STATUS.SUBMITTED || record.status === STATUS.DRAFT) && canPerformAction({\n        moduleId: MODULE.RX_ORDER,\n        actiontoCheck: ACTIONS.EDIT.CODE\n      }) ? /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => handleEditPresc(true, record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Edit, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 23\n        }\n      }, \"Edit\")) : null, record.rxType === RX_TYPE.PRESCRIPTION && record.status !== STATUS.DISCARDED && (isDrOrNp(authUser) || record.addedBy === authUser._id) && record.status !== STATUS.CANCELLED && canPerformAction({\n        moduleId: MODULE.RX_ORDER,\n        actiontoCheck: ACTIONS.CANCEL.CODE\n      }) ? /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => handleCancelPresc(true, record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Cancel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 23\n        }\n      }, \"Cancel\")) : null, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => this.modalActionFn('clarificationRef', true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Clarification, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 19\n        }\n      }, \"Clarification\")), /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => this.modalActionFn('auditPopupRef', true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Audit, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 19\n        }\n      }, \"Audit\")))));\n    }\n  }];\n  useEffect(() => {\n    //fetch data while tab is active,\n    if (isTabActive) fetch();\n  }, [isTabActive, filter]); // useEffect(() => {\n  //     // empty tab data on set filter\n  //     updateOpenResident({ tabkey: TAB_KEYS.ORDERS, response: null })\n  // }, [filter])\n  // useEffect(() => {\n  //     // once tab data is updated in redux then call fetch as filter is set\n  //     if (isTabActive)\n  //         fetch()\n  // }, [residentDetail])\n\n  const fetch = async () => {\n    setLoader(true);\n\n    try {\n      let res; // if (residentDetail[TAB_KEYS.ORDERS]) {\n      //     res = residentDetail.response\n      // }\n      // else\n\n      res = await axios({ ...getAllRxOrders,\n        data: {\n          query: { ...filter\n          }\n        }\n      });\n\n      if (res) {\n        if (res.code === 'OK') {\n          res.data.list = res.data.list.map((obj, i) => {\n            obj.Orders = _.map(obj.prescriptionMedication, 'medicineFullName');\n            obj.Direction = _.map(obj.prescriptionMedication, 'direction');\n            obj.Indication = _.map(obj.prescriptionMedication, 'indication');\n            obj.Actions = [];\n\n            _.map(obj.prescriptionMedication, med => {\n              var _med$notes;\n\n              let actObj = {\n                notes: ((_med$notes = med.notes) === null || _med$notes === void 0 ? void 0 : _med$notes.length) > 0 ? med.notes : [] // key: 'notes',\n                // value: med.notes?.length > 0 ? med.notes : []\n\n              };\n              obj.Actions.push(actObj);\n            });\n\n            return obj;\n          });\n          setData(res.data.list);\n          setCount(res.data.count);\n          onFetchData({\n            tabtitle: 'Orders',\n            records: res.data.count,\n            module: MODULE.RX_ORDER\n          }); // updateOpenResident({ tabkey: TAB_KEYS.ORDERS, response: res })\n        } else Toast.error(res.message);\n      }\n\n      setLoader(false);\n    } catch {\n      setLoader(false);\n    }\n  };\n\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    console.log(\"handleTableChange -> pagination, tfilter, sorter\", pagination, tfilter, sorter); // if (!pagination){} return\n\n    let tempFilter = { ...filter\n    };\n\n    if (pagination) {\n      tempFilter = { ...tempFilter,\n        page: pagination.current,\n        limit: pagination.pageSize\n      };\n    }\n\n    if (tfilter && Object.keys(tfilter).length) {\n      if (tfilter.status && tfilter.status.length) {\n        tempFilter.find.status = tfilter.status;\n      } else if (tempFilter.find.status) {\n        delete tempFilter.find['status'];\n      }\n\n      tempFilter.page = 1;\n    } else {// tempFilter.filter = {\n      //     type: tempFilter.filter.type\n      // }\n    }\n\n    setFilter(tempFilter);\n  };\n\n  const onShowSizeChange = size => {\n    if (size) {\n      setFilter(prevFilter => ({ ...prevFilter,\n        limit: size,\n        page: 1\n      }));\n    }\n  };\n\n  const onSearch = () => {};\n\n  const onSearchRx = e => {\n    const value = e.target.value;\n    let newFilter = { ...filter\n    };\n    newFilter = { ...newFilter,\n      page: 1,\n      search: {\n        keyword: value,\n        keys: ['orderNumber']\n      }\n    };\n    setFilter(newFilter);\n  };\n\n  const onDoctorChange = val => {\n    let newFilter = { ...filter\n    };\n    newFilter = { ...newFilter,\n      page: 1,\n      find: { ...newFilter.find,\n        physicianId: val\n      }\n    };\n    setFilter(newFilter);\n  };\n\n  const handleDateChange = val => {\n    let newFilter = { ...filter\n    }; // console.log(val)\n\n    newFilter = { ...newFilter,\n      page: 1,\n      gte: [{\n        orderGeneratedAt: val[0]\n      }],\n      lte: [{\n        orderGeneratedAt: val[1]\n      }]\n    };\n    setFilter(newFilter);\n  };\n\n  const handleCancelPresc = (visible, record, response) => {\n    setVisibleCancel(visible);\n    setDetail(record);\n\n    if (response) {\n      fetch(); // updateOpenResident({ tabkey: TAB_KEYS.ORDERS, response: null })\n    }\n  };\n\n  const handleEditPresc = (visible, record, response) => {\n    // onEditRx(record)\n    if (response) {\n      let req = { ...detail,\n        uniqueId: response.uniqueId\n      };\n      onEditRx(req);\n    }\n\n    setVisibleEdit(visible);\n    setDetail(record);\n  };\n\n  const handleViewImages = (visible, record) => {\n    if (visible) {\n      setImgLoader(true);\n      getRxImage([record._id]).then(resp => {\n        if (resp === null || resp === void 0 ? void 0 : resp[0]) record.attachments = resp[0].attachments;\n        record.attachments.map((x, i) => {\n          x.caption = `${record.orderNumber}-${i + 1}`;\n          return x;\n        });\n        setVisibleImage(visible);\n        setDetail(record);\n        setImgLoader(false);\n      }).catch(err => {\n        setImgLoader(false);\n      });\n    } else {\n      setVisibleImage(visible);\n      setDetail(record);\n    }\n  };\n\n  const prepareAttachments = () => {\n    var _detail$attachments;\n\n    let imageViewer = [];\n\n    if ((detail === null || detail === void 0 ? void 0 : (_detail$attachments = detail.attachments) === null || _detail$attachments === void 0 ? void 0 : _detail$attachments.length) > 0) {\n      imageViewer = _.reverse(_.map(detail.attachments, function (a) {\n        a.src = a.path;\n        return a;\n      }));\n    }\n\n    return {\n      imageViewer\n    };\n  };\n\n  const {\n    imageViewer\n  } = prepareAttachments();\n\n  const visibleNotesModal = (visible, record, str, noteCount) => {\n    setNotesModal(visible);\n    setNotesFilterOptions({});\n\n    if (noteCount != undefined) {\n      setData(oldData => {\n        return oldData.map(d => {\n          if (d._id === currentModalData.current._id) {\n            d['notesCount'] = noteCount;\n            return d;\n          }\n\n          return d;\n        });\n      });\n    }\n\n    if (!visible && str !== \"cancel\") {\n      fetch();\n    }\n  };\n\n  const visibleReminderModal = (visible, record, str, reminderCount) => {\n    setReminderModal(visible);\n    setReminderFilterOptions({});\n\n    if (reminderCount != undefined) {\n      setData(oldData => {\n        return oldData.map(d => {\n          if (d._id === currentModalData.current._id) {\n            d['reminderCount'] = reminderCount;\n            return d;\n          }\n\n          return d;\n        });\n      });\n    }\n\n    if (!visible && str !== \"cancel\") fetch();\n  };\n\n  const createNotesModal = record => {\n    let options = {\n      query: {\n        find: {\n          prescriptionOrderId: record._id,\n          category: TODO_CATEGORY.PRESCRIPTION,\n          subCategory: SUB_CATEGORY.NOTES.GENERAL\n        },\n        populate: [{\n          addedBy: []\n        }]\n      }\n    };\n    currentModalData.current = { ...record\n    };\n    setNotesFilterOptions(options);\n    setNotesModal(true);\n  };\n\n  const visibleMedicationNotesModal = record => {\n    console.log(\"visibleMedicationNotesModal -> record\", record);\n    let options = {\n      query: {\n        find: {\n          prescriptionMedicationId: record.prescriptionMedicationId,\n          category: TODO_CATEGORY.PRESCRIPTION,\n          subCategory: SUB_CATEGORY.NOTES.GENERAL\n        },\n        populate: [{\n          addedBy: []\n        }]\n      }\n    };\n    currentModalData.current = { ...record\n    };\n    setNotesFilterOptions(options);\n    setMedicationNotesModal(true);\n  };\n\n  const createReminderModal = record => {\n    let options = {\n      query: {\n        find: {\n          prescriptionOrderId: record._id,\n          category: TODO_CATEGORY.PRESCRIPTION,\n          subCategory: SUB_CATEGORY.NOTES.GENERAL\n        },\n        populate: [{\n          addedBy: []\n        }]\n      }\n    };\n    currentModalData.current = { ...record\n    };\n    setReminderFilterOptions(options);\n    setReminderModal(true);\n  };\n\n  const handlePendingTodo = record => {\n    var _record$pendingTodo;\n\n    if (!record.pendingTodoCount) return;\n    let url = getTodoRedirectUrl({\n      todoCategory: TODO_CATEGORY.PRESCRIPTION,\n      subCategory: (_record$pendingTodo = record.pendingTodo) === null || _record$pendingTodo === void 0 ? void 0 : _record$pendingTodo[record.pendingTodo.length - 1].subCategory,\n      viewType: DEVICE_VIEW.PENDING,\n      orderNumber: record.orderNumber\n    });\n    return url;\n  };\n\n  const renderSubTable = (row, record) => {\n    var _row$notes;\n\n    console.log(\"renderSubTable -> text, record\", row, record);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => visibleMedicationNotesModal(row),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ac_count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Notes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 13\n      }\n    }), (row === null || row === void 0 ? void 0 : (_row$notes = row.notes) === null || _row$notes === void 0 ? void 0 : _row$notes.length) > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"notes tot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 15\n      }\n    }, row.notes.length) : null), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 11\n      }\n    }, \"Notes\")), \" \");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resi_treat_content_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    onDoctorChange: onDoctorChange,\n    onSearch: onSearch,\n    onSearchRx: onSearchRx,\n    onDateChange: handleDateChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"responsive_scroll_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    datasource: data,\n    pagination: false,\n    showResult: true,\n    resultCol: [// { width: '43%', key: 'Orders' },\n    {\n      width: '53%',\n      key: 'Orders'\n    }, {\n      width: '15%',\n      key: 'Direction'\n    }, {\n      width: '27%',\n      key: 'Indication'\n    } // { width: '10%', key: 'Actions' }\n    ],\n    setStylesToColumn: false,\n    pagination: {\n      current: filter.page,\n      pageSize: filter.limit,\n      total: count,\n      showSizeChanger: true,\n      onShowSizeChange: onShowSizeChange\n    },\n    loading: loader,\n    onChange: handleTableChange // renderSubTable={renderSubTable}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 9\n    }\n  }), visibleCancel ? /*#__PURE__*/React.createElement(CancelRxModal, {\n    visible: visibleCancel,\n    detail: detail,\n    onOk: data => handleCancelPresc(false, null, data),\n    onCancel: () => handleCancelPresc(false, null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 11\n    }\n  }) : null, visibleEdit ? /*#__PURE__*/React.createElement(AuthenticateModal, {\n    visible: visibleEdit,\n    loading: loader,\n    title: `Authetication For Update - ${detail.orderNumber}`,\n    maskClosable: false,\n    request: {\n      prescriptionId: detail._id,\n      action: MODIFY_ACTION.EDIT\n    },\n    onOk: data => handleEditPresc(false, null, data),\n    onCancel: () => handleEditPresc(false, null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 11\n    }\n  }) : null, visibleImage && imageViewer.length > 0 ? /*#__PURE__*/React.createElement(LightBox, {\n    visible: visibleImage,\n    images: imageViewer,\n    onCloseRequest: () => handleViewImages(false, null),\n    curImg: 0,\n    imageTitle: {\n      caption: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 11\n    }\n  }) : null, notesModal && /*#__PURE__*/React.createElement(NotesModal, {\n    visible: notesModal,\n    filterOptions: notesFilterOptions,\n    onCancel: data => visibleNotesModal(false, null, 'cancel', data),\n    onOk: () => visibleNotesModal(false),\n    isUpsertList: true,\n    modalTitle: `View Note - ${currentModalData.current.orderNumber}`,\n    xRayNumber: currentModalData.current.orderNumber,\n    addData: {\n      residentId: currentModalData.current.residentId,\n      prescriptionOrderId: currentModalData.current._id,\n      category: TODO_CATEGORY.PRESCRIPTION,\n      subCategory: SUB_CATEGORY.NOTES.GENERAL\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 11\n    }\n  }), medicationNotesModal && /*#__PURE__*/React.createElement(NotesModal, {\n    defaultNotes: currentModalData.current.notes,\n    visible: medicationNotesModal,\n    filterOptions: notesFilterOptions,\n    onCancel: data => visibleMedicationNotesModal(false, null, data),\n    isUpsertList: true // modalTitle={`View Note - ${currentModalData.current.orderNumber}`}\n    // xRayNumber={currentModalData.current.orderNumber}\n    // addData={{\n    //   residentId: currentModalData.current.residentId,\n    //   prescriptionOrderId: currentModalData.current._id,\n    //   category: TODO_CATEGORY.PRESCRIPTION,\n    //   subCategory: SUB_CATEGORY.NOTES.GENERAL,\n    // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 11\n    }\n  }), reminderModal && /*#__PURE__*/React.createElement(ReminderModal, {\n    visible: reminderModal,\n    filterOptions: reminderFilterOptions,\n    onCancel: data => visibleReminderModal(false, null, 'cancel', data),\n    onOk: () => visibleReminderModal(false),\n    isUpsertList: true,\n    modalTitle: `View Reminder - ${currentModalData.current.orderNumber}`,\n    xRayNumber: currentModalData.current.orderNumber,\n    addData: {\n      residentId: currentModalData.current.residentId,\n      prescriptionOrderId: currentModalData.current._id,\n      category: TODO_CATEGORY.PRESCRIPTION,\n      subCategory: SUB_CATEGORY.NOTES.GENERAL\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst mapStateToProps = ({\n  auth,\n  resident\n}) => {\n  const {\n    authUser\n  } = auth;\n  const {\n    currentResidentId\n  } = resident;\n  return {\n    authUser,\n    currentResidentId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateOpenResident\n})(createForm()(OrderTab));","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/OrdersTab/index.js"],"names":["React","useState","useEffect","useContext","connect","createForm","formShape","Filters","DetailsLess","VerbalOrder","Todo","Cancel","Clarification","Edit","Refresh","View","Notes","Reminder","MoreDots","Audit","FirstPage","LastPage","Next","Prev","AddNotesPopup","AuditPopup","ViewNotesPopup","ClarificationPopup","DatePicker","DatePickerInput","TabPanel","tabData","TAB_KEYS","CommonTab","TogglePane","Spin","Toast","LightBox","Table","Column_classNames","Header","getUserNameWithDesignation","capitalizeStr","isDrOrNp","canPerformAction","displayDateTime","STATUS","ORDER_TYPE","STATUS_CLASSNAME","ORDER_TYPE_CLASSNAME","RX_TYPE","MODIFY_ACTION","TYPE","MODULE","ACTIONS","axios","getRxImage","getAllRxOrders","setUserData","actionContext","CancelRxModal","AuthenticateModal","updateOpenResident","NotesModal","ReminderModal","X_RAY_TODO_TYPES","TODO_CATEGORY","SUB_CATEGORY","DEVICE_VIEW","getTodoRedirectUrl","_","require","NOTALLOWEDSTATUS","CANCELLED","EDITED","DISCARDED","OrderTab","props","onFetchData","residentActions","isTabActive","currentResidentId","authUser","onEditRx","editDetail","residentDetail","loader","setLoader","data","setData","count","setCount","visibleCancel","setVisibleCancel","visibleEdit","setVisibleEdit","visibleImage","setVisibleImage","imgLoader","setImgLoader","detail","setDetail","filter","setFilter","page","limit","populate","physicianId","prescriptionMedication","match","isDelete","notes","addedBy","sortBy","orderGeneratedAt","find","residentId","type","COE","FTT","notesModal","setNotesModal","medicationNotesModal","setMedicationNotesModal","notesFilterOptions","setNotesFilterOptions","reminderFilterOptions","setReminderFilterOptions","reminderModal","setReminderModal","currentModalData","useRef","statusFilters","Object","keys","map","k","push","text","value","columns","title","key","width","render","record","index","dataIndex","display","status","isVerbalOrder","isUrgent","mergeLFName","filters","onFilter","showRefresh","redirectUrl","handlePendingTodo","attachments","length","handleViewImages","createNotesModal","notesCount","textDecoration","pendingTodoCount","createReminderModal","reminderCount","rxType","PRESCRIPTION","_id","SUBMITTED","DRAFT","moduleId","RX_ORDER","actiontoCheck","EDIT","CODE","handleEditPresc","CANCEL","handleCancelPresc","modalActionFn","fetch","res","query","code","list","obj","i","Orders","Direction","Indication","Actions","med","actObj","tabtitle","records","module","error","message","handleTableChange","pagination","tfilter","sorter","console","log","tempFilter","current","pageSize","onShowSizeChange","size","prevFilter","onSearch","onSearchRx","e","target","newFilter","search","keyword","onDoctorChange","val","handleDateChange","gte","lte","visible","response","req","uniqueId","then","resp","x","caption","orderNumber","catch","err","prepareAttachments","imageViewer","reverse","a","src","path","visibleNotesModal","str","noteCount","undefined","oldData","d","visibleReminderModal","options","prescriptionOrderId","category","subCategory","NOTES","GENERAL","visibleMedicationNotesModal","prescriptionMedicationId","url","todoCategory","pendingTodo","viewType","PENDING","renderSubTable","row","total","showSizeChanger","prescriptionId","action","mapStateToProps","auth","resident"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { createForm, formShape } from 'rc-form';\nimport {\n  Filters,\n  DetailsLess,\n  VerbalOrder,\n  Todo,\n  Cancel,\n  Clarification,\n  Edit,\n} from '../../../../assets/images/resident-detail/index';\nimport {\n  Refresh,\n  View,\n  Notes,\n  Reminder,\n  MoreDots,\n  Audit,\n} from '../../../../assets/images/pmr/index';\nimport {\n  FirstPage,\n  LastPage,\n  Next,\n  Prev,\n} from '../../../../assets/images/index';\n\nimport AddNotesPopup from '../../../../components/common/Popup/addnotes-popup';\nimport AuditPopup from '../../../../components/common/Popup/audit-popup';\nimport ViewNotesPopup from '../../../../components/common/Popup/viewnotes-popup';\nimport ClarificationPopup from '../popup/Clarification';\nimport { DatePicker, DatePickerInput } from 'rc-datepicker';\nimport { TabPanel } from 'react-tabs';\nimport { tabData, TAB_KEYS } from '../../../../components/common/Tab/data';\nimport CommonTab from '../../../../components/common/Tab';\nimport TogglePane from '../togglePane';\nimport { Spin, Toast, LightBox } from '../../../../components/common';\nimport Table from '../../../../components/common/Table/index';\nimport { Column_classNames } from '../../../../constants/Columns';\nimport Header from './Header';\nimport {\n  getUserNameWithDesignation,\n  capitalizeStr,\n  isDrOrNp,\n  canPerformAction,\n} from '../../../../util/common';\nimport { displayDateTime } from '../../../../util/moment';\nimport {\n  STATUS,\n  ORDER_TYPE,\n  STATUS_CLASSNAME,\n  ORDER_TYPE_CLASSNAME,\n  RX_TYPE,\n  MODIFY_ACTION,\n  TYPE,\n} from '../../../../constants/prescription';\nimport { MODULE, ACTIONS } from '../../../../constants/subscription';\nimport axios, { getRxImage } from '../../../../services/api/services/common';\nimport { getAllRxOrders } from '../../../../services/api/routes/prescription';\nimport { setUserData } from '../../../../appRedux/actions/Auth';\nimport { actionContext } from '../UserResidentDetail';\nimport CancelRxModal from './CancelRxModal';\nimport AuthenticateModal from '../../../../components/AuthenticateModal';\nimport { updateOpenResident } from '../../../../appRedux/actions/Resident';\nimport NotesModal from '../../../../components/NotesPopup/List';\nimport ReminderModal from '../../../../components/ReminderPopup/List';\nimport {\n  X_RAY_TODO_TYPES,\n  TODO_CATEGORY,\n  SUB_CATEGORY,\n  DEVICE_VIEW,\n} from '../../../../constants/todo';\nimport { getTodoRedirectUrl } from '../../../../util/todo'\nconst _ = require('lodash');\n\nconst NOTALLOWEDSTATUS = [STATUS.CANCELLED, STATUS.EDITED, STATUS.DISCARDED];\n\nconst OrderTab = (props) => {\n  const {\n    onFetchData,\n    residentActions,\n    isTabActive,\n    currentResidentId,\n    authUser,\n    onEditRx,\n    editDetail,\n    residentDetail,\n  } = props;\n  const [loader, setLoader] = useState(false);\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState(0);\n  const [visibleCancel, setVisibleCancel] = useState(false);\n  const [visibleEdit, setVisibleEdit] = useState(false);\n  const [visibleImage, setVisibleImage] = useState(false);\n  const [imgLoader, setImgLoader] = useState(false);\n  const [detail, setDetail] = useState(null);\n  const [filter, setFilter] = useState({\n    page: 1,\n    limit: 10,\n    populate: [\n      {\n        physicianId: [\n          \"mergeLFName\",\n          \"type\",\n          {\n            \"assignedCustomer\": [\n              \"isActive\",\n              \"homeId\",\n              {\n                \"designationId\": [\n                  \"name\",\n                  \"code\",\n                  \"parentId\"\n                ]\n              }\n            ],\n            // match: { homeId: '5cd963ea1fd1603a09ae7f9f' }\n          }\n        ]\n      },\n      { prescriptionMedication: [{ \"notes\": [] }], match: { isDelete: false } },\n      { notes: [{ addedBy: [] }] }\n    ],\n    sortBy: { orderGeneratedAt: 'DESC' },\n    find: {\n      residentId: currentResidentId,\n      type: [TYPE.COE, TYPE.FTT],\n    },\n  });\n\n  const [notesModal, setNotesModal] = useState(false);\n  const [medicationNotesModal, setMedicationNotesModal] = useState(false);\n  const [notesFilterOptions, setNotesFilterOptions] = useState({});\n  const [reminderFilterOptions, setReminderFilterOptions] = useState({});\n  const [reminderModal, setReminderModal] = useState(false);\n  const currentModalData = React.useRef();\n\n  let statusFilters = [];\n  Object.keys(STATUS).map((k) => {\n    return statusFilters.push({ text: k, value: STATUS[k] });\n  });\n\n  const columns = [\n    {\n      title: 'Sr.No',\n      // classname: Column_classNames.sr,\n      key: 'index',\n      width: '5%',\n      render: (text, record, index) =>\n        (filter.page - 1) * filter.limit + (index + 1),\n    },\n    {\n      title: 'Rx. No',\n      dataIndex: 'orderNumber',\n      width: '20%',\n      // classname: Column_classNames.ph,\n      key: 'orderNumber',\n      render: (text, record) => (\n        <div style={{ display: 'flex' }}>\n          {Object.keys(ORDER_TYPE).map((type) => {\n            return ORDER_TYPE[type] == record?.status ? (\n              <div className='ot_container' key={ORDER_TYPE[type]}>\n                {record.isVerbalOrder ? (\n                  <VerbalOrder\n                    className={ORDER_TYPE_CLASSNAME[record?.status]}\n                  />\n                ) : null}\n              </div>\n            ) : null;\n          })}{' '}\n          {text}\n          {record.isUrgent ? (\n            <div>\n              <span className={'urgent'}> Urgent </span>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Physician',\n      dataIndex: 'physicianId',\n      width: '15%',\n      // classname: Column_classNames.ph,\n      key: 'physicianId',\n      render: (text, record) => (\n        <span>\n          {text?.mergeLFName ? getUserNameWithDesignation(text, true) : ''}\n        </span>\n      ),\n    },\n    {\n      title: 'Date & Time',\n      dataIndex: 'orderGeneratedAt',\n      width: '10%',\n      // classname: Column_classNames.dt,\n      key: 'orderGeneratedAt',\n      render: (text, record) => <span>{displayDateTime(text)}</span>,\n    },\n    {\n      title: 'Status',\n      width: '15%',\n      dataIndex: 'status',\n      // classname: Column_classNames.st,\n      render: (text, record) => (\n        <span>\n          {Object.keys(STATUS).map((k) => {\n            return STATUS[k] === text ? (\n              <span key={k} className={'o_status ' + STATUS_CLASSNAME[text]}>{k}</span>\n            ) : null;\n          })}\n        </span>\n      ),\n      filters: statusFilters,\n      onFilter: (value, record) => record.status === value,\n    },\n    {\n      title: 'Actions',\n      showRefresh: true,\n      width: '25%',\n      // className: Column_classNames.Actions,\n      render: (text, record) => {\n\n        const redirectUrl = handlePendingTodo(record)\n\n        return (\n          <div className='actions'>\n            {\n              // imgLoader ?\n              //   <Spin spinning={imgLoader} className=\"center\"></Spin>\n              //   :\n              record.attachments.length > 0 ? (\n                <a onClick={() => handleViewImages(true, record)}>\n                  <div className='ac_count'>\n                    <View />\n                  </div>\n                  <p>View</p>\n                </a>\n              ) : null}\n            {/* {this.state.viewNoteModal && <ViewNotesPopup visible={this.state.viewNoteModal}\n                        onClosed={() => this.modalActionFn('viewNoteModal', false)}\n                    />} */}\n            {/* <a onClick={this.onAddNotesPopupClick}> */}\n            <a onClick={() => createNotesModal(record)}>\n              <div className='ac_count'>\n                <Notes />\n                {record.notesCount ? (\n                  <span className='notes tot'>{record.notesCount}</span>\n                ) : null}\n              </div>\n              <p>Notes</p>\n            </a>\n            {/* {this.state.addNoteModal && <AddNotesPopup visible={this.state.addNoteModal}\n                        onClosed={() => this.modalActionFn('addNoteModal', false)}\n                    />} */}\n\n            <a target=\"_blank\" href={redirectUrl} style={{ textDecoration: 'none' }}>\n              <div className='ac_count'>\n                <Todo />\n                {record.pendingTodoCount ?\n                  <span className='todo tot read'>{record.pendingTodoCount}</span>\n                  : null}\n              </div>\n              <p>To Do</p>\n            </a>\n            <a\n              onClick={() => {\n                createReminderModal(record);\n              }}\n            >\n              <div className='ac_count'>\n                <Reminder />\n                {record.reminderCount ? (\n                  <span className='rem tot read'>{record.reminderCount}</span>\n                ) : null}\n              </div>\n              <p>Reminder</p>\n            </a>\n            <a className='more'>\n              <MoreDots />\n              <div className='more_wrap'>\n                {record.rxType === RX_TYPE.PRESCRIPTION &&\n                  record.type === TYPE.COE &&\n                  (record.physicianId?._id === authUser._id ||\n                    record.addedBy === authUser._id) &&\n                  (record.status === STATUS.SUBMITTED ||\n                    record.status === STATUS.DRAFT) &&\n                  canPerformAction({\n                    moduleId: MODULE.RX_ORDER,\n                    actiontoCheck: ACTIONS.EDIT.CODE,\n                  }) ? (\n                    <a onClick={() => handleEditPresc(true, record)}>\n                      <Edit />\n                      <span>Edit</span>\n                    </a>\n                  ) : null}\n                {record.rxType === RX_TYPE.PRESCRIPTION &&\n                  record.status !== STATUS.DISCARDED &&\n                  (isDrOrNp(authUser) || record.addedBy === authUser._id) &&\n                  record.status !== STATUS.CANCELLED &&\n                  canPerformAction({\n                    moduleId: MODULE.RX_ORDER,\n                    actiontoCheck: ACTIONS.CANCEL.CODE,\n                  }) ? (\n                    <a onClick={() => handleCancelPresc(true, record)}>\n                      <Cancel />\n                      <span>Cancel</span>\n                    </a>\n                  ) : null}\n                <a onClick={() => this.modalActionFn('clarificationRef', true)}>\n                  <Clarification />\n                  <span>Clarification</span>\n                </a>\n                <a onClick={() => this.modalActionFn('auditPopupRef', true)}>\n                  <Audit />\n                  <span>Audit</span>\n                </a>\n                {/* {this.state.auditModal && <AuditPopup visible={this.state.auditModal}\n                                onClosed={() => this.modalActionFn('auditModal', false)}\n                            />} */}\n              </div>\n            </a>\n          </div>\n        );\n      },\n    },\n  ];\n\n  useEffect(() => {\n    //fetch data while tab is active,\n    if (isTabActive) fetch();\n  }, [isTabActive, filter]);\n\n  // useEffect(() => {\n  //     // empty tab data on set filter\n  //     updateOpenResident({ tabkey: TAB_KEYS.ORDERS, response: null })\n  // }, [filter])\n\n  // useEffect(() => {\n  //     // once tab data is updated in redux then call fetch as filter is set\n  //     if (isTabActive)\n  //         fetch()\n  // }, [residentDetail])\n\n  const fetch = async () => {\n    setLoader(true);\n    try {\n      let res;\n      // if (residentDetail[TAB_KEYS.ORDERS]) {\n      //     res = residentDetail.response\n      // }\n      // else\n      res = await axios({ ...getAllRxOrders, data: { query: { ...filter } } });\n      if (res) {\n        if (res.code === 'OK') {\n          res.data.list = res.data.list.map((obj, i) => {\n            obj.Orders = _.map(obj.prescriptionMedication, 'medicineFullName');\n            obj.Direction = _.map(obj.prescriptionMedication, 'direction');\n            obj.Indication = _.map(obj.prescriptionMedication, 'indication');\n            obj.Actions = []\n            _.map(obj.prescriptionMedication, (med) => {\n              let actObj = {\n                notes: med.notes?.length > 0 ? med.notes : []\n                // key: 'notes',\n                // value: med.notes?.length > 0 ? med.notes : []\n              }\n              obj.Actions.push(actObj)\n            });\n            return obj;\n          });\n          setData(res.data.list);\n          setCount(res.data.count);\n          onFetchData({\n            tabtitle: 'Orders',\n            records: res.data.count,\n            module: MODULE.RX_ORDER,\n          });\n          // updateOpenResident({ tabkey: TAB_KEYS.ORDERS, response: res })\n        } else Toast.error(res.message);\n      }\n      setLoader(false);\n    } catch {\n      setLoader(false);\n    }\n  };\n\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    console.log(\"handleTableChange -> pagination, tfilter, sorter\", pagination, tfilter, sorter)\n    // if (!pagination){} return\n    let tempFilter = { ...filter };\n    if (pagination) {\n      tempFilter = {\n        ...tempFilter,\n        page: pagination.current,\n        limit: pagination.pageSize,\n      };\n    }\n    if (tfilter && Object.keys(tfilter).length) {\n      if (tfilter.status && tfilter.status.length) {\n        tempFilter.find.status = tfilter.status;\n      } else if (tempFilter.find.status) {\n        delete tempFilter.find['status'];\n      }\n      tempFilter.page = 1;\n    } else {\n      // tempFilter.filter = {\n      //     type: tempFilter.filter.type\n      // }\n    }\n    setFilter(tempFilter);\n  };\n\n  const onShowSizeChange = (size) => {\n    if (size) {\n      setFilter((prevFilter) => ({ ...prevFilter, limit: size, page: 1 }));\n    }\n  };\n\n  const onSearch = () => { };\n\n  const onSearchRx = (e) => {\n    const value = e.target.value;\n    let newFilter = { ...filter };\n    newFilter = {\n      ...newFilter,\n      page: 1,\n      search: {\n        keyword: value,\n        keys: ['orderNumber'],\n      },\n    };\n    setFilter(newFilter);\n  };\n\n  const onDoctorChange = (val) => {\n    let newFilter = { ...filter };\n    newFilter = {\n      ...newFilter,\n      page: 1,\n      find: {\n        ...newFilter.find,\n        physicianId: val,\n      },\n    };\n    setFilter(newFilter);\n  };\n\n  const handleDateChange = (val) => {\n    let newFilter = { ...filter };\n    // console.log(val)\n    newFilter = {\n      ...newFilter,\n      page: 1,\n      gte: [{ orderGeneratedAt: val[0] }],\n      lte: [{ orderGeneratedAt: val[1] }],\n    };\n    setFilter(newFilter);\n  };\n\n  const handleCancelPresc = (visible, record, response) => {\n    setVisibleCancel(visible);\n    setDetail(record);\n    if (response) {\n      fetch();\n      // updateOpenResident({ tabkey: TAB_KEYS.ORDERS, response: null })\n    }\n  };\n\n  const handleEditPresc = (visible, record, response) => {\n    // onEditRx(record)\n    if (response) {\n      let req = { ...detail, uniqueId: response.uniqueId };\n      onEditRx(req);\n    }\n    setVisibleEdit(visible);\n    setDetail(record);\n  };\n\n  const handleViewImages = (visible, record) => {\n    if (visible) {\n      setImgLoader(true)\n      getRxImage([record._id]).then(resp => {\n        if (resp?.[0])\n          record.attachments = resp[0].attachments\n        record.attachments.map((x, i) => {\n          x.caption = `${record.orderNumber}-${i + 1}`\n          return x\n        })\n        setVisibleImage(visible);\n        setDetail(record);\n\n        setImgLoader(false)\n      }).catch(err => { setImgLoader(false) })\n    } else {\n      setVisibleImage(visible);\n      setDetail(record);\n    }\n  };\n\n  const prepareAttachments = () => {\n    let imageViewer = [];\n    if (detail?.attachments?.length > 0) {\n      imageViewer = _.reverse(_.map(detail.attachments, function (a) {\n        a.src = a.path;\n        return a;\n      }));\n    }\n    return { imageViewer };\n  };\n  const { imageViewer } = prepareAttachments();\n\n  const visibleNotesModal = (visible, record, str, noteCount) => {\n    setNotesModal(visible);\n    setNotesFilterOptions({});\n    if (noteCount != undefined) {\n      setData(oldData => {\n        return oldData.map(d => {\n          if (d._id === currentModalData.current._id) {\n            d['notesCount'] = noteCount;\n            return d;\n          }\n          return d;\n        })\n      })\n    }\n    if (!visible && str !== \"cancel\") {\n      fetch();\n    }\n  };\n\n  const visibleReminderModal = (visible, record, str, reminderCount) => {\n    setReminderModal(visible);\n    setReminderFilterOptions({});\n    if (reminderCount != undefined) {\n      setData(oldData => {\n        return oldData.map(d => {\n          if (d._id === currentModalData.current._id) {\n            d['reminderCount'] = reminderCount;\n            return d;\n          }\n          return d;\n        })\n      })\n    }\n    if (!visible && str !== \"cancel\") fetch();\n  };\n\n  const createNotesModal = (record) => {\n    let options = {\n      query: {\n        find: {\n          prescriptionOrderId: record._id,\n          category: TODO_CATEGORY.PRESCRIPTION,\n          subCategory: SUB_CATEGORY.NOTES.GENERAL,\n        },\n        populate: [{ addedBy: [] }],\n      },\n    };\n    currentModalData.current = { ...record };\n    setNotesFilterOptions(options);\n    setNotesModal(true);\n  };\n\n  const visibleMedicationNotesModal = (record) => {\n    console.log(\"visibleMedicationNotesModal -> record\", record)\n    let options = {\n      query: {\n        find: {\n          prescriptionMedicationId: record.prescriptionMedicationId,\n          category: TODO_CATEGORY.PRESCRIPTION,\n          subCategory: SUB_CATEGORY.NOTES.GENERAL,\n        },\n        populate: [{ addedBy: [] }],\n      },\n    };\n    currentModalData.current = { ...record };\n    setNotesFilterOptions(options);\n    setMedicationNotesModal(true);\n  };\n\n  const createReminderModal = (record) => {\n    let options = {\n      query: {\n        find: {\n          prescriptionOrderId: record._id,\n          category: TODO_CATEGORY.PRESCRIPTION,\n          subCategory: SUB_CATEGORY.NOTES.GENERAL,\n        },\n        populate: [{ addedBy: [] }],\n      },\n    };\n    currentModalData.current = { ...record };\n    setReminderFilterOptions(options);\n    setReminderModal(true);\n  };\n\n  const handlePendingTodo = record => {\n    if (!record.pendingTodoCount)\n      return\n    let url = getTodoRedirectUrl({\n      todoCategory: TODO_CATEGORY.PRESCRIPTION,\n      subCategory: record.pendingTodo?.[record.pendingTodo.length - 1].subCategory,\n      viewType: DEVICE_VIEW.PENDING,\n      orderNumber: record.orderNumber\n    })\n    return url\n  }\n\n  const renderSubTable = (row, record) => {\n    console.log(\"renderSubTable -> text, record\", row, record)\n\n    return (\n      <div className='actions'>\n        <a\n          onClick={() => visibleMedicationNotesModal(row)}\n        >\n          <div className='ac_count'>\n            <Notes />\n            {row?.notes?.length > 0 ? (\n              <span className='notes tot'>{row.notes.length}</span>\n            ) : null}\n          </div>\n          <p>Notes</p>\n        </a> </div>\n    );\n  }\n\n  return (\n    <div className='resi_treat_content_wrap'>\n      {/* <Spin spinning={true} colorCode={\"#609fae\"} str={\"overlay center\"}></Spin> */}\n\n      <form action=''>\n        <Header\n          onDoctorChange={onDoctorChange}\n          onSearch={onSearch}\n          onSearchRx={onSearchRx}\n          onDateChange={handleDateChange}\n        />\n      </form>\n      <div className='responsive_scroll_wrap'>\n        <Table\n          columns={columns}\n          datasource={data}\n          pagination={false}\n          showResult={true}\n          resultCol={[\n            // { width: '43%', key: 'Orders' },\n            { width: '53%', key: 'Orders' },\n            { width: '15%', key: 'Direction' },\n            { width: '27%', key: 'Indication' },\n            // { width: '10%', key: 'Actions' }\n          ]}\n          setStylesToColumn={false}\n          pagination={{\n            current: filter.page,\n            pageSize: filter.limit,\n            total: count,\n            showSizeChanger: true,\n            onShowSizeChange: onShowSizeChange,\n          }}\n          loading={loader}\n          onChange={handleTableChange}\n        // renderSubTable={renderSubTable}\n        />\n\n        {visibleCancel ? (\n          <CancelRxModal\n            visible={visibleCancel}\n            detail={detail}\n            onOk={(data) => handleCancelPresc(false, null, data)}\n            onCancel={() => handleCancelPresc(false, null)}\n          />\n        ) : null}\n        {visibleEdit ? (\n          <AuthenticateModal\n            visible={visibleEdit}\n            loading={loader}\n            title={`Authetication For Update - ${detail.orderNumber}`}\n            maskClosable={false}\n            request={{\n              prescriptionId: detail._id,\n              action: MODIFY_ACTION.EDIT,\n            }}\n            onOk={(data) => handleEditPresc(false, null, data)}\n            onCancel={() => handleEditPresc(false, null)}\n          />\n        ) : null}\n        {/* loading={loader}\n            title={`Authetication For Update - ${detail.orderNumber}`}\n            maskClosable={false}\n            request={{\n              prescriptionId: detail._id,\n              action: MODIFY_ACTION.CANCEL,\n            }}\n            onOk={(data) => handleEditPresc(false, null, data)}\n            onCancel={() => handleEditPresc(false, null)}\n          />\n        ) : null} */}\n        {visibleImage && imageViewer.length > 0 ? (\n          <LightBox\n            visible={visibleImage}\n            images={imageViewer}\n            onCloseRequest={() => handleViewImages(false, null)}\n            curImg={0}\n            imageTitle={{ caption: true }}\n          />\n        ) : null}\n\n        {notesModal && (\n          <NotesModal\n            visible={notesModal}\n            filterOptions={notesFilterOptions}\n            onCancel={data => visibleNotesModal(false, null, 'cancel', data)}\n            onOk={() => visibleNotesModal(false)}\n            isUpsertList={true}\n            modalTitle={`View Note - ${currentModalData.current.orderNumber}`}\n            xRayNumber={currentModalData.current.orderNumber}\n            addData={{\n              residentId: currentModalData.current.residentId,\n              prescriptionOrderId: currentModalData.current._id,\n              category: TODO_CATEGORY.PRESCRIPTION,\n              subCategory: SUB_CATEGORY.NOTES.GENERAL,\n            }}\n          />\n        )}\n\n        {medicationNotesModal && (\n          <NotesModal\n            defaultNotes={currentModalData.current.notes}\n            visible={medicationNotesModal}\n            filterOptions={notesFilterOptions}\n            onCancel={data => visibleMedicationNotesModal(false, null, data)}\n            isUpsertList={true}\n          // modalTitle={`View Note - ${currentModalData.current.orderNumber}`}\n          // xRayNumber={currentModalData.current.orderNumber}\n          // addData={{\n          //   residentId: currentModalData.current.residentId,\n          //   prescriptionOrderId: currentModalData.current._id,\n          //   category: TODO_CATEGORY.PRESCRIPTION,\n          //   subCategory: SUB_CATEGORY.NOTES.GENERAL,\n          // }}\n          />\n        )}\n\n        {reminderModal && (\n          <ReminderModal\n            visible={reminderModal}\n            filterOptions={reminderFilterOptions}\n            onCancel={data => visibleReminderModal(false, null, 'cancel', data)}\n            onOk={() => visibleReminderModal(false)}\n            isUpsertList={true}\n            modalTitle={`View Reminder - ${currentModalData.current.orderNumber}`}\n            xRayNumber={currentModalData.current.orderNumber}\n            addData={{\n              residentId: currentModalData.current.residentId,\n              prescriptionOrderId: currentModalData.current._id,\n              category: TODO_CATEGORY.PRESCRIPTION,\n              subCategory: SUB_CATEGORY.NOTES.GENERAL,\n            }}\n          />\n        )}\n        {/* <div className=\"patient_order_wrap od_tab_temp\">\n                                  \n            </div> */}\n        {/* <div className=\"pagination_wrap\">\n                    <div className=\"showing\">\n                        Showing 01 to 06 of 1000 entries\n                                            </div>\n                    <div className=\"pagination\">\n                        <a><FirstPage /></a>\n                        <a><Prev /></a>\n                        <a className=\"active_page\">01</a>\n                        <a>02</a>\n                        <a>03</a>\n                        <a>04</a>\n                        <a>05</a>\n                        <a><Next /></a>\n                        <a><LastPage /></a>\n                    </div>\n                </div> */}\n\n        {/* {this.state.addNotesPopupRef && <AddNotesPopup visible={this.state.addNotesPopupRef}\n                onClosed={() => this.modalActionFn('addNotesPopupRef', false)}\n            />}\n            {this.state.auditPopupRef && <AuditPopup visible={this.state.auditPopupRef}\n                onClosed={() => this.modalActionFn('auditPopupRef', false)}\n            />}\n            {this.state.viewPopupRef && <ViewNotesPopup visible={this.state.viewPopupRef}\n                onClosed={() => this.modalActionFn('viewPopupRef', false)}\n            />}\n            {this.state.clarificationRef && <ClarificationPopup visible={this.state.clarificationRef}\n                onClosed={() => this.modalActionFn('clarificationRef', false)}\n            />} */}\n\n        {/* <AddNotesPopup ref={(AddNotesPopup) => { this._modal = AddNotesPopup; }} /> */}\n        {/* <AuditPopup ref={this.auditPopupRef} />\n            <ViewNotesPopup ref={this.viewPopupRef} /> */}\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = ({ auth, resident }) => {\n  const { authUser } = auth;\n  const { currentResidentId } = resident;\n  return {\n    authUser,\n    currentResidentId,\n  };\n};\nexport default connect(mapStateToProps, { updateOpenResident })(\n  createForm()(OrderTab)\n);\n"]},"metadata":{},"sourceType":"module"}