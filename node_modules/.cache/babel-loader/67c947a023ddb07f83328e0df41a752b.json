{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Customers/Clientele/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createForm } from \"rc-form\";\nimport \"../../../../node_modules/rc-tooltip/assets/bootstrap.css\";\nimport queryString from \"query-string\";\nimport { CLIENTELE_TYPE } from \"../../../constants/Customer\";\nimport PageHead from \"../Clientele/components/PageHead\";\nimport axios from \"../../../services/api/services/common\";\nimport { syncKrollResident } from \"../../../services/api/routes/resident\";\nimport { Edit, Filters } from \"../../../assets/images/resident-detail/index\";\nimport { homeOrgPagination, homeOrgUpdate, homeAreaPaginate, homeAreaUpdate, homeOrgUpdateStatus } from \"../../../services/api/routes/customer\";\nimport ActiveDeactive from \"../../../components/common/ActiveDeactive\";\nimport Table from \"../../../components/common/Table/index\";\nimport routes from \"../../../routes/constant\";\nimport SettingModal from \"../Clientele/components/SettingModal\";\nimport { pharmacyPaginate } from \"../../../services/api/routes/customer\";\nimport { Toast } from \"../../../components/common/Toast\";\nimport { Refresh1 } from \"../../../assets/images/pmr\";\nimport ConfirmPopup from \"../../../components/common/Popup/ConfirmPopup\";\n\nconst _ = require(\"lodash\");\n\nconst Clientele = props => {\n  const {\n    form,\n    location,\n    history,\n    authUser\n  } = props;\n  const [loading, setLoading] = useState(false);\n  const [queryId, setQueryId] = useState(\"\");\n  const filterInitialize = {\n    page: 1,\n    limit: 10,\n    fields: [],\n    find: {\n      isActive: true\n    },\n    populate: [{\n      pharmacyId: [\"name\"]\n    }],\n    sortBy: {\n      createdAt: \"DESC\"\n    }\n  };\n  const pharmacyFilter = {\n    fields: [\"name\"]\n  };\n  const [filter, setFilter] = useState(filterInitialize);\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [visibleSetting, setVisibleSetting] = useState(false);\n  const [record, setRecord] = useState(null);\n  const [pharmacyData, setPharmacyData] = useState([]);\n  const [filterListLoading, setFilterListLoading] = useState(false);\n  const [confirmPopupForSync, setConfirmPopupForSync] = useState(false);\n  const [homeDataForSync, setHomeDataForSync] = useState({});\n  const [syncPopupOkButtonLoading, setSyncPopupOkButtonLoading] = useState(false);\n  useEffect(() => {\n    const query = queryString.parse(location.search);\n\n    if (query.type == \"organization\") {\n      return setQueryId(CLIENTELE_TYPE.ORGANIZATION);\n    } else if (query.type == \"home\") {\n      return setQueryId(CLIENTELE_TYPE.HOME);\n    } else if (query.type == \"homeArea\") {\n      return setQueryId(CLIENTELE_TYPE.HOME_AREA);\n    } else {\n      setQueryId(query.type);\n    }\n  }, [location]);\n  useEffect(() => {\n    if (queryId) {\n      if (filter.hasOwnProperty(\"search\") && filter.search[\"keyword\"]) {\n        const delayDebounceFn = setTimeout(() => {\n          fetch();\n        }, 600);\n        return () => clearTimeout(delayDebounceFn);\n      } else fetch();\n    }\n  }, [queryId, filter]);\n  useEffect(() => {\n    setFilterListLoading(true);\n    axios({ ...pharmacyPaginate,\n      data: {\n        query: pharmacyFilter\n      }\n    }).then(data => {\n      if (data.code === \"OK\") {\n        setPharmacyData(data.data.data);\n      } else {\n        Toast.error(data.data.message);\n        setFilterListLoading(true);\n      }\n\n      setFilterListLoading(false);\n    }).catch(err => {\n      setFilterListLoading(false);\n      Toast.error(err);\n    });\n  }, []);\n\n  const modifiedList = list => {\n    let modifiedList = list.map(current => {\n      return current;\n    });\n    return modifiedList;\n  };\n\n  const fetch = () => {\n    setLoading(true);\n    let {\n      url,\n      method,\n      baseURL\n    } = queryId == CLIENTELE_TYPE.HOME_AREA ? homeAreaPaginate : homeOrgPagination;\n    let apiData = {\n      query: { ...filter,\n        find: { ...filter.find,\n          type: queryId == CLIENTELE_TYPE.HOME_AREA ? null : queryId\n        }\n      }\n    };\n    axios({\n      url,\n      method,\n      baseURL,\n      data: apiData\n    }).then(respose => {\n      if (respose.code === \"OK\") {\n        let updatedList = modifiedList(respose.data.data);\n        setData(updatedList);\n        setTotal(respose.data.count);\n        setLoading(false);\n      } else {\n        setLoading(false);\n      }\n    }).catch(err => {\n      setLoading(false);\n    });\n  };\n\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    if (!pagination) return;\n    let tempFilter = filter;\n    tempFilter = { ...tempFilter,\n      page: pagination.current,\n      limit: pagination.pageSize,\n      find: { ...tempFilter.find\n      }\n    };\n\n    if (tfilter && Object.keys(tfilter).length) {\n      if (tfilter.isActive && tfilter.isActive.length) {\n        tempFilter.find.isActive = tfilter.isActive;\n      } // else if (tempFilter.find.isActive) {\n      //   delete tempFilter.find['isActive'];\n      // }\n\n\n      tempFilter.page = pagination.current;\n    } else {// tempFilter.filter = {\n      //     type: tempFilter.filter.type\n      // }\n    }\n\n    setFilter(tempFilter);\n  };\n\n  const onShowSizeChange = size => {\n    if (size) {\n      setFilter(prevFilter => ({ ...prevFilter,\n        limit: size,\n        page: 1\n      }));\n    }\n  };\n\n  const handleSearch = event => {\n    let value = event.target.value;\n    let obj = { ...filter,\n      pageNo: 1,\n      search: {\n        keyword: value,\n        keys: [\"name\", \"emails.email\"]\n      }\n    };\n    setFilter(obj);\n  };\n\n  const handleActiveDeactive = record => {\n    let tempData = data.map(rec => {\n      if (rec._id === record._id) {\n        return { ...rec,\n          isActive: !rec.isActive\n        };\n      } else {\n        return rec;\n      }\n    });\n    setData(tempData);\n  };\n\n  const showConfirmPopupForSync = (value, data) => {\n    setHomeDataForSync(data);\n    setConfirmPopupForSync(value);\n  };\n\n  const handleEditUrl = () => {\n    if (queryId == CLIENTELE_TYPE.ORGANIZATION) {\n      return 'organization';\n    } else if (queryId == CLIENTELE_TYPE.HOME) return 'home';else if (queryId == CLIENTELE_TYPE.HOME_AREA) {\n      return 'homeArea';\n    }\n  };\n\n  const getColumns = () => [{\n    title: \"Sr.No\",\n    keyword: \"index\",\n    dataIndex: \"index\",\n    render: (text, record, index) => (filter.page - 1) * filter.limit + (index + 1)\n  }, {\n    title: \"Name.\",\n    dataIndex: \"name\",\n    render: (text, record) => /*#__PURE__*/React.createElement(React.Fragment, null, text ? text : \"\")\n  }, {\n    title: \"Email\",\n    dataIndex: \"emails\",\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }\n    }, text && text.length > 0 ? text[0].email : \"\")\n  }, {\n    title: queryId == CLIENTELE_TYPE.HOME_AREA ? null : \"Pharmacy\",\n    dataIndex: queryId == CLIENTELE_TYPE.HOME_AREA ? null : \"pharmacyId\",\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }\n    }, text && text.name ? text.name : \"\")\n  }, {\n    title: \"Phone No\",\n    dataIndex: \"phone\",\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: \"capitalize\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    }, text ? text : \" \")\n  }, {\n    title: \"Unique No\",\n    dataIndex: \"uniqueNo\",\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: \"capitalize\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }\n    }, text ? text : \" \")\n  }, {\n    title: \"Active\",\n    dataIndex: \"isActive\",\n    render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: \"capitalize\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ActiveDeactive, {\n      documentId: record._id,\n      API: queryId == CLIENTELE_TYPE.HOME_AREA ? homeAreaUpdate : queryId == CLIENTELE_TYPE.HOME ? homeOrgUpdateStatus : homeOrgUpdate,\n      record: record,\n      isActive: record.isActive,\n      model: \"master\",\n      onActiveDeactive: record => {\n        handleActiveDeactive(record);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }\n    })),\n    filters: [{\n      text: \"Active\",\n      value: true,\n      defaultChecked: true\n    }, {\n      text: \"De-active\",\n      value: false\n    }],\n    isCheck: true,\n    // onFilter: (value, record) => console.log('isActive',record),\n    onFilter: (value, record) => record.isActive === value\n  }, {\n    title: \"Action\",\n    showRefresh: true,\n    render: (text, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions\",\n      style: {\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => {\n        history.push(`${routes.clienteleUpsert.path}?type=${handleEditUrl()}&&id=${record._id} `);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 15\n      }\n    }, \"Edit\")), queryId == CLIENTELE_TYPE.HOME ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => handleSetting(true, record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Filters, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 19\n      }\n    }, \"Setting\")), record.krollId && /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => showConfirmPopupForSync(true, record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Refresh1, {\n      style: {\n        marginTop: \"-4px\",\n        cursor: \"pointer\",\n        height: \"20px\",\n        width: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }\n    }, \"Sync Resident From Kroll\"))) : null))\n  }];\n\n  const handleSetting = (visible, record, res) => {\n    setVisibleSetting(visible);\n    setRecord(record);\n\n    if (res) {\n      let newData = [...data];\n      let index = newData.findIndex(x => x._id === res._id);\n\n      if (index >= 0) {\n        newData[index] = { ...newData[index],\n          assignedSubscriptionGroupId: res.assignedSubscriptionGroupId\n        };\n        setData(newData);\n      }\n    }\n  };\n\n  const hadleRadioValue = e => {\n    if (e.target.checked) {\n      let val = parseInt(e.target.value);\n      setQueryId(val);\n      props.history.push({\n        pathname: props.location.pathname,\n        search: `?type=${val === CLIENTELE_TYPE.HOME ? \"home\" : val === CLIENTELE_TYPE.ORGANIZATION ? \"organization\" : \"homeArea\"}`\n      });\n    }\n  };\n\n  const handleRedirect = () => {\n    if (queryId == CLIENTELE_TYPE.ORGANIZATION) {\n      return history.push(`${routes.clienteleUpsert.path}?type=organization`);\n    } else if (queryId == CLIENTELE_TYPE.HOME) {\n      return history.push(`${routes.clienteleUpsert.path}?type=home`);\n    } else if (queryId == CLIENTELE_TYPE.HOME_AREA) {\n      return history.push(`${routes.clienteleUpsert.path}?type=homeArea`);\n    } else {\n      return null;\n    }\n  };\n\n  const onPharmacyFilterChange = pharmacyId => {\n    const tempFilter = { ...filter\n    };\n    tempFilter.find = { ...tempFilter.find,\n      pharmacyId\n    };\n    setFilter(tempFilter);\n  };\n\n  const handleHomeSync = async () => {\n    var _homeDataForSync$phar;\n\n    setSyncPopupOkButtonLoading(true);\n    axios({ ...syncKrollResident,\n      data: {\n        homeId: homeDataForSync._id,\n        pharmacyId: (_homeDataForSync$phar = homeDataForSync.pharmacyId) === null || _homeDataForSync$phar === void 0 ? void 0 : _homeDataForSync$phar._id,\n        activeHomes: [homeDataForSync.krollId],\n        homeIdentifier: homeDataForSync.homeIdentifier\n      }\n    }).then(data => {\n      console.log(\"🚀 ~ file: index.js ~ line 382 ~ .then ~ data\", data);\n\n      if (data.code === \"OK\") {\n        setConfirmPopupForSync(false);\n        setSyncPopupOkButtonLoading(false);\n        Toast.success(data.message);\n      } else {\n        setConfirmPopupForSync(false);\n        setSyncPopupOkButtonLoading(false);\n      }\n    }).catch(error => {\n      setConfirmPopupForSync(false);\n      console.log(\"EEOROR\", error);\n      setSyncPopupOkButtonLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageHead, {\n    total: total,\n    form: form,\n    hadleRadioValue: hadleRadioValue,\n    queryData: queryId,\n    onSearch: handleSearch,\n    handleRedirect: handleRedirect,\n    pharmacyData: pharmacyData,\n    filterListLoading: filterListLoading,\n    onPharmacyFilterChange: onPharmacyFilterChange,\n    placeholder: \"Select Pharmacy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    columns: getColumns(),\n    datasource: data,\n    loading: loading,\n    onChange: handleTableChange,\n    pagination: {\n      current: filter.page,\n      pageSize: filter.limit,\n      total: total,\n      showSizeChanger: true,\n      onShowSizeChange: onShowSizeChange\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 11\n    }\n  }))), visibleSetting ? /*#__PURE__*/React.createElement(SettingModal, {\n    queryData: queryId,\n    visible: visibleSetting,\n    subscripData: record,\n    detail: record,\n    onCancel: res => handleSetting(false, null, res),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 9\n    }\n  }) : null, confirmPopupForSync && /*#__PURE__*/React.createElement(ConfirmPopup, {\n    children: /*#__PURE__*/React.createElement(\"b\", {\n      className: \"font-22\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 21\n      }\n    }, \"Are you sure you want to sync Kroll Resident ?\"),\n    visible: showConfirmPopupForSync,\n    okButtonProps: {\n      loading: syncPopupOkButtonLoading\n    },\n    onOK: handleHomeSync,\n    onCancel: () => showConfirmPopupForSync(false, {}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  const {\n    authUser\n  } = auth;\n  return {\n    authUser\n  };\n};\n\nexport default connect(mapStateToProps)(createForm()(withRouter(Clientele)));","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Customers/Clientele/index.js"],"names":["React","useState","useEffect","withRouter","connect","createForm","queryString","CLIENTELE_TYPE","PageHead","axios","syncKrollResident","Edit","Filters","homeOrgPagination","homeOrgUpdate","homeAreaPaginate","homeAreaUpdate","homeOrgUpdateStatus","ActiveDeactive","Table","routes","SettingModal","pharmacyPaginate","Toast","Refresh1","ConfirmPopup","_","require","Clientele","props","form","location","history","authUser","loading","setLoading","queryId","setQueryId","filterInitialize","page","limit","fields","find","isActive","populate","pharmacyId","sortBy","createdAt","pharmacyFilter","filter","setFilter","data","setData","total","setTotal","visibleSetting","setVisibleSetting","record","setRecord","pharmacyData","setPharmacyData","filterListLoading","setFilterListLoading","confirmPopupForSync","setConfirmPopupForSync","homeDataForSync","setHomeDataForSync","syncPopupOkButtonLoading","setSyncPopupOkButtonLoading","query","parse","search","type","ORGANIZATION","HOME","HOME_AREA","hasOwnProperty","delayDebounceFn","setTimeout","fetch","clearTimeout","then","code","error","message","catch","err","modifiedList","list","map","current","url","method","baseURL","apiData","respose","updatedList","count","handleTableChange","pagination","tfilter","sorter","tempFilter","pageSize","Object","keys","length","onShowSizeChange","size","prevFilter","handleSearch","event","value","target","obj","pageNo","keyword","handleActiveDeactive","tempData","rec","_id","showConfirmPopupForSync","handleEditUrl","getColumns","title","dataIndex","render","text","index","email","name","textTransform","filters","defaultChecked","isCheck","onFilter","showRefresh","width","push","clienteleUpsert","path","handleSetting","krollId","marginTop","cursor","height","visible","res","newData","findIndex","x","assignedSubscriptionGroupId","hadleRadioValue","e","checked","val","parseInt","pathname","handleRedirect","onPharmacyFilterChange","handleHomeSync","homeId","activeHomes","homeIdentifier","console","log","success","showSizeChanger","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createForm } from \"rc-form\";\nimport \"../../../../node_modules/rc-tooltip/assets/bootstrap.css\";\nimport queryString from \"query-string\";\nimport { CLIENTELE_TYPE } from \"../../../constants/Customer\";\nimport PageHead from \"../Clientele/components/PageHead\";\nimport axios from \"../../../services/api/services/common\";\nimport { syncKrollResident } from \"../../../services/api/routes/resident\";\nimport { Edit, Filters } from \"../../../assets/images/resident-detail/index\";\nimport {\n  homeOrgPagination,\n  homeOrgUpdate,\n  homeAreaPaginate,\n  homeAreaUpdate,\n  homeOrgUpdateStatus,\n} from \"../../../services/api/routes/customer\";\nimport ActiveDeactive from \"../../../components/common/ActiveDeactive\";\nimport Table from \"../../../components/common/Table/index\";\nimport routes from \"../../../routes/constant\";\nimport SettingModal from \"../Clientele/components/SettingModal\";\nimport { pharmacyPaginate } from \"../../../services/api/routes/customer\";\nimport { Toast } from \"../../../components/common/Toast\";\nimport { Refresh1 } from \"../../../assets/images/pmr\";\nimport ConfirmPopup from \"../../../components/common/Popup/ConfirmPopup\";\n\nconst _ = require(\"lodash\");\n\nconst Clientele = (props) => {\n  const { form, location, history, authUser } = props;\n\n  const [loading, setLoading] = useState(false);\n  const [queryId, setQueryId] = useState(\"\");\n\n  const filterInitialize = {\n    page: 1,\n    limit: 10,\n    fields: [],\n    find: { isActive: true },\n    populate: [{ pharmacyId: [\"name\"] }],\n    sortBy: { createdAt: \"DESC\" },\n  };\n  const pharmacyFilter = {\n    fields: [\"name\"],\n  };\n  const [filter, setFilter] = useState(filterInitialize);\n\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [visibleSetting, setVisibleSetting] = useState(false);\n  const [record, setRecord] = useState(null);\n  const [pharmacyData, setPharmacyData] = useState([]);\n  const [filterListLoading, setFilterListLoading] = useState(false);\n  const [confirmPopupForSync, setConfirmPopupForSync] = useState(false);\n  const [homeDataForSync, setHomeDataForSync] = useState({});\n  const [syncPopupOkButtonLoading, setSyncPopupOkButtonLoading] = useState(\n    false\n  );\n  useEffect(() => {\n    const query = queryString.parse(location.search);\n    if (query.type == \"organization\") {\n      return setQueryId(CLIENTELE_TYPE.ORGANIZATION);\n    } else if (query.type == \"home\") {\n      return setQueryId(CLIENTELE_TYPE.HOME);\n    } else if (query.type == \"homeArea\") {\n      return setQueryId(CLIENTELE_TYPE.HOME_AREA);\n    } else {\n      setQueryId(query.type);\n    }\n  }, [location]);\n  useEffect(() => {\n    if (queryId) {\n      if (filter.hasOwnProperty(\"search\") && filter.search[\"keyword\"]) {\n        const delayDebounceFn = setTimeout(() => {\n          fetch();\n        }, 600);\n        return () => clearTimeout(delayDebounceFn);\n      } else fetch();\n    }\n  }, [queryId, filter]);\n\n  useEffect(() => {\n    setFilterListLoading(true);\n    axios({ ...pharmacyPaginate, data: { query: pharmacyFilter } })\n      .then((data) => {\n        if (data.code === \"OK\") {\n          setPharmacyData(data.data.data);\n        } else {\n          Toast.error(data.data.message);\n          setFilterListLoading(true);\n        }\n        setFilterListLoading(false);\n      })\n      .catch((err) => {\n        setFilterListLoading(false);\n        Toast.error(err);\n      });\n  }, []);\n  const modifiedList = (list) => {\n    let modifiedList = list.map((current) => {\n      return current;\n    });\n    return modifiedList;\n  };\n\n  const fetch = () => {\n    setLoading(true);\n    let { url, method, baseURL } =\n      queryId == CLIENTELE_TYPE.HOME_AREA\n        ? homeAreaPaginate\n        : homeOrgPagination;\n\n    let apiData = {\n      query: {\n        ...filter,\n        find: {\n          ...filter.find,\n          type: queryId == CLIENTELE_TYPE.HOME_AREA ? null : queryId,\n        },\n      },\n    };\n    axios({\n      url,\n      method,\n      baseURL,\n      data: apiData,\n    })\n      .then((respose) => {\n        if (respose.code === \"OK\") {\n          let updatedList = modifiedList(respose.data.data);\n          setData(updatedList);\n          setTotal(respose.data.count);\n          setLoading(false);\n        } else {\n          setLoading(false);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n\n  const handleTableChange = (pagination, tfilter, sorter) => {\n    if (!pagination) return;\n    let tempFilter = filter;\n    tempFilter = {\n      ...tempFilter,\n      page: pagination.current,\n      limit: pagination.pageSize,\n      find: {\n        ...tempFilter.find,\n      },\n    };\n    if (tfilter && Object.keys(tfilter).length) {\n      if (tfilter.isActive && tfilter.isActive.length) {\n        tempFilter.find.isActive = tfilter.isActive;\n      }\n      // else if (tempFilter.find.isActive) {\n      //   delete tempFilter.find['isActive'];\n      // }\n      tempFilter.page = pagination.current;\n    } else {\n      // tempFilter.filter = {\n      //     type: tempFilter.filter.type\n      // }\n    }\n    setFilter(tempFilter);\n  };\n\n  const onShowSizeChange = (size) => {\n    if (size) {\n      setFilter((prevFilter) => ({ ...prevFilter, limit: size, page: 1 }));\n    }\n  };\n\n  const handleSearch = (event) => {\n    let value = event.target.value;\n    let obj = {\n      ...filter,\n      pageNo: 1,\n      search: {\n        keyword: value,\n        keys: [\"name\", \"emails.email\"],\n      },\n    };\n    setFilter(obj);\n  };\n\n  const handleActiveDeactive = (record) => {\n    let tempData = data.map((rec) => {\n      if (rec._id === record._id) {\n        return { ...rec, isActive: !rec.isActive };\n      } else {\n        return rec;\n      }\n    });\n    setData(tempData);\n  };\n\n  const showConfirmPopupForSync = (value, data) => {\n    setHomeDataForSync(data);\n    setConfirmPopupForSync(value);\n  };\n\n  const handleEditUrl = () => {\n    if (queryId == CLIENTELE_TYPE.ORGANIZATION) {\n      return 'organization'\n    } else if (queryId == CLIENTELE_TYPE.HOME)\n      return 'home'\n    else if (queryId == CLIENTELE_TYPE.HOME_AREA) {\n      return 'homeArea'\n    }\n  }\n\n  const getColumns = () => [\n    {\n      title: \"Sr.No\",\n      keyword: \"index\",\n      dataIndex: \"index\",\n      render: (text, record, index) =>\n        (filter.page - 1) * filter.limit + (index + 1),\n    },\n    {\n      title: \"Name.\",\n      dataIndex: \"name\",\n      render: (text, record) => <>{text ? text : \"\"}</>,\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"emails\",\n      render: (text) => (\n        <span>{text && text.length > 0 ? text[0].email : \"\"}</span>\n      ),\n    },\n    {\n      title: queryId == CLIENTELE_TYPE.HOME_AREA ? null : \"Pharmacy\",\n      dataIndex: queryId == CLIENTELE_TYPE.HOME_AREA ? null : \"pharmacyId\",\n      render: (text) => <span>{text && text.name ? text.name : \"\"}</span>,\n    },\n    {\n      title: \"Phone No\",\n      dataIndex: \"phone\",\n      render: (text) => (\n        <span style={{ textTransform: \"capitalize\" }}>{text ? text : \" \"}</span>\n      ),\n    },\n    {\n      title: \"Unique No\",\n      dataIndex: \"uniqueNo\",\n      render: (text) => (\n        <span style={{ textTransform: \"capitalize\" }}>{text ? text : \" \"}</span>\n      ),\n    },\n    {\n      title: \"Active\",\n      dataIndex: \"isActive\",\n      render: (text, record) => (\n        <span style={{ textTransform: \"capitalize\" }}>\n          <ActiveDeactive\n            documentId={record._id}\n            API={\n              queryId == CLIENTELE_TYPE.HOME_AREA\n                ? homeAreaUpdate\n                : queryId == CLIENTELE_TYPE.HOME\n                  ? homeOrgUpdateStatus\n                  : homeOrgUpdate\n            }\n            record={record}\n            isActive={record.isActive}\n            model=\"master\"\n            onActiveDeactive={(record) => {\n              handleActiveDeactive(record);\n            }}\n          />\n        </span>\n      ),\n      filters: [\n        { text: \"Active\", value: true, defaultChecked: true },\n        { text: \"De-active\", value: false, },\n      ],\n      isCheck: true,\n      // onFilter: (value, record) => console.log('isActive',record),\n      onFilter: (value, record) => record.isActive === value,\n    },\n    {\n      title: \"Action\",\n      showRefresh: true,\n      render: (text, record) => (\n        <>\n          <div className=\"actions\" style={{ width: \"50%\" }}>\n            <a\n              onClick={() => {\n                history.push(\n                  `${routes.clienteleUpsert.path}?type=${\n                  handleEditUrl()\n                  }&&id=${record._id} `\n                );\n              }}\n            >\n              <Edit />\n              <p>Edit</p>\n            </a>\n            {queryId == CLIENTELE_TYPE.HOME ? (\n              <>\n                <a onClick={() => handleSetting(true, record)}>\n                  <Filters />\n                  <p>Setting</p>\n                </a>\n                {record.krollId && (\n                  <a onClick={() => showConfirmPopupForSync(true, record)}>\n                    <Refresh1\n                      style={{\n                        marginTop: \"-4px\",\n                        cursor: \"pointer\",\n                        height: \"20px\",\n                        width: \"20px\",\n                      }}\n                    />\n                    <p>Sync Resident From Kroll</p>\n                  </a>\n                )}\n              </>\n            ) : null}\n          </div>\n        </>\n      ),\n    },\n  ];\n\n  const handleSetting = (visible, record, res) => {\n    setVisibleSetting(visible);\n    setRecord(record);\n    if (res) {\n      let newData = [...data];\n      let index = newData.findIndex((x) => x._id === res._id);\n      if (index >= 0) {\n        newData[index] = {\n          ...newData[index],\n          assignedSubscriptionGroupId: res.assignedSubscriptionGroupId,\n        };\n        setData(newData);\n      }\n    }\n  };\n\n  const hadleRadioValue = (e) => {\n    if (e.target.checked) {\n      let val = parseInt(e.target.value);\n      setQueryId(val);\n      props.history.push({\n        pathname: props.location.pathname,\n        search: `?type=${\n          val === CLIENTELE_TYPE.HOME\n            ? \"home\"\n            : val === CLIENTELE_TYPE.ORGANIZATION\n              ? \"organization\"\n              : \"homeArea\"\n          }`,\n      });\n    }\n  };\n\n  const handleRedirect = () => {\n    if (queryId == CLIENTELE_TYPE.ORGANIZATION) {\n      return history.push(`${routes.clienteleUpsert.path}?type=organization`);\n    } else if (queryId == CLIENTELE_TYPE.HOME) {\n      return history.push(`${routes.clienteleUpsert.path}?type=home`);\n    } else if (queryId == CLIENTELE_TYPE.HOME_AREA) {\n      return history.push(`${routes.clienteleUpsert.path}?type=homeArea`);\n    } else {\n      return null;\n    }\n  };\n  const onPharmacyFilterChange = (pharmacyId) => {\n    const tempFilter = { ...filter };\n    tempFilter.find = { ...tempFilter.find, pharmacyId };\n    setFilter(tempFilter);\n  };\n  const handleHomeSync = async () => {\n    setSyncPopupOkButtonLoading(true);\n    axios({\n      ...syncKrollResident,\n      data: {\n        homeId: homeDataForSync._id,\n        pharmacyId: homeDataForSync.pharmacyId?._id,\n        activeHomes: [homeDataForSync.krollId],\n        homeIdentifier: homeDataForSync.homeIdentifier,\n      },\n    })\n      .then((data) => {\n        console.log(\"🚀 ~ file: index.js ~ line 382 ~ .then ~ data\", data)\n        if (data.code === \"OK\") {\n          setConfirmPopupForSync(false);\n          setSyncPopupOkButtonLoading(false);\n          Toast.success(data.message);\n        } else {\n          setConfirmPopupForSync(false);\n          setSyncPopupOkButtonLoading(false);\n        }\n      })\n      .catch((error) => {\n        setConfirmPopupForSync(false);\n        console.log(\"EEOROR\", error);\n        setSyncPopupOkButtonLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <div className=\"pmr_wrap\">\n        <div className=\"container\">\n          <PageHead\n            total={total}\n            form={form}\n            hadleRadioValue={hadleRadioValue}\n            queryData={queryId}\n            onSearch={handleSearch}\n            handleRedirect={handleRedirect}\n            pharmacyData={pharmacyData}\n            filterListLoading={filterListLoading}\n            onPharmacyFilterChange={onPharmacyFilterChange}\n            placeholder={\"Select Pharmacy\"}\n          />\n          <Table\n            columns={getColumns()}\n            datasource={data}\n            loading={loading}\n            onChange={handleTableChange}\n            pagination={{\n              current: filter.page,\n              pageSize: filter.limit,\n              total: total,\n              showSizeChanger: true,\n              onShowSizeChange: onShowSizeChange,\n            }}\n          />\n        </div>\n      </div>\n      {visibleSetting ? (\n        <SettingModal\n          queryData={queryId}\n          visible={visibleSetting}\n          subscripData={record}\n          detail={record}\n          onCancel={(res) => handleSetting(false, null, res)}\n        />\n      ) : null}\n      {confirmPopupForSync && (\n        <ConfirmPopup\n          children={<b className=\"font-22\">Are you sure you want to sync Kroll Resident ?</b>}\n          visible={showConfirmPopupForSync}\n          okButtonProps={{ loading: syncPopupOkButtonLoading }}\n          onOK={handleHomeSync}\n          onCancel={() => showConfirmPopupForSync(false, {})}\n        />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ auth }) => {\n  const { authUser } = auth;\n  return { authUser };\n};\n\nexport default connect(mapStateToProps)(createForm()(withRouter(Clientele)));\n"]},"metadata":{},"sourceType":"module"}