{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/Todo/List.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Etar, Consent, Emar, VerbalOrder, Ebox, DrugRecord, CarePlan, Xray, ChangeSticker } from '../../assets/images/resident-detail/todo/index'; // import { TODO_ICONS } from '../../constants/prescription'\n\nimport { TodoIcons } from './index';\nimport { SUB_MODULE, ACTIONS, MODULE } from '../../constants/subscription';\nimport { canPerformAction, isModuleAccessible } from '../../util/common';\nimport { Spin } from '../../components/common';\nimport { TODO_ICONS, TODO_CATEGORY, SUB_CATEGORY } from '../../constants/todo';\nimport { getMappedTodoKey, getIcons } from '../../util/todo'; // const getIcons = (record) => {\n//     let subcat = getMappedTodoKey(record.type)\n//     if (subcat)\n//         return require('../../assets/images/dashboard/' + TODO_ICONS[subcat])\n//     else\n//         return require('../../assets/images/dashboard/drugs.svg')\n// }\n\nconst List = props => {\n  const {\n    todos,\n    loading,\n    dashboardCount,\n    onSetActiveSubCategory,\n    activeSubCategory\n  } = props;\n  const validationParams = {\n    moduleId: MODULE.RX_ORDER,\n    subModuleId: SUB_MODULE.RX_ORDER_TODO,\n    checkSubAction: ACTIONS.CONSENT_OBTAINED.CODE\n  };\n  const validationParams1 = {\n    moduleId: MODULE.RX_ORDER,\n    subModuleId: SUB_MODULE.RX_ORDER_TODO,\n    checkSubAction: ACTIONS.CHANGE_STICKER.CODE\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-listblock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"To Dos\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spin, {\n    spinning: loading,\n    str: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }\n  }) : todos.map(todo => /*#__PURE__*/React.createElement(\"a\", {\n    className: `media online ${todo.type === (activeSubCategory === null || activeSubCategory === void 0 ? void 0 : activeSubCategory.type) ? ' active' : ''}`,\n    onClick: () => onSetActiveSubCategory(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: getIcons(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"media-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, todo.label), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, todo.value))))));\n};\n\nexport default List;\nList.defaultProps = {\n  isPrimaryFilter: false\n};\nList.propTypes = {\n  isPrimaryFilter: PropTypes.bool,\n  onChangeListview: PropTypes.func\n};","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/Todo/List.js"],"names":["React","PropTypes","Etar","Consent","Emar","VerbalOrder","Ebox","DrugRecord","CarePlan","Xray","ChangeSticker","TodoIcons","SUB_MODULE","ACTIONS","MODULE","canPerformAction","isModuleAccessible","Spin","TODO_ICONS","TODO_CATEGORY","SUB_CATEGORY","getMappedTodoKey","getIcons","List","props","todos","loading","dashboardCount","onSetActiveSubCategory","activeSubCategory","validationParams","moduleId","RX_ORDER","subModuleId","RX_ORDER_TODO","checkSubAction","CONSENT_OBTAINED","CODE","validationParams1","CHANGE_STICKER","map","todo","type","label","value","defaultProps","isPrimaryFilter","propTypes","bool","onChangeListview","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Etar, Consent, Emar, VerbalOrder, Ebox, DrugRecord, CarePlan, Xray, ChangeSticker } from '../../assets/images/resident-detail/todo/index';\n// import { TODO_ICONS } from '../../constants/prescription'\nimport { TodoIcons } from './index'\nimport { SUB_MODULE, ACTIONS, MODULE } from '../../constants/subscription';\nimport { canPerformAction, isModuleAccessible } from '../../util/common';\nimport { Spin } from '../../components/common';\nimport { TODO_ICONS, TODO_CATEGORY, SUB_CATEGORY } from '../../constants/todo'\nimport { getMappedTodoKey, getIcons } from '../../util/todo'\n\n// const getIcons = (record) => {\n//     let subcat = getMappedTodoKey(record.type)\n//     if (subcat)\n//         return require('../../assets/images/dashboard/' + TODO_ICONS[subcat])\n//     else\n//         return require('../../assets/images/dashboard/drugs.svg')\n// }\nconst List = (props) => {\n    const { todos, loading, dashboardCount, onSetActiveSubCategory, activeSubCategory } = props\n\n    const validationParams = {\n        moduleId: MODULE.RX_ORDER,\n        subModuleId: SUB_MODULE.RX_ORDER_TODO,\n        checkSubAction: ACTIONS.CONSENT_OBTAINED.CODE\n    }\n    const validationParams1 = {\n        moduleId: MODULE.RX_ORDER,\n        subModuleId: SUB_MODULE.RX_ORDER_TODO,\n        checkSubAction: ACTIONS.CHANGE_STICKER.CODE\n    }\n\n    return <>\n        <div className=\"todo-listblock\">\n            <h2 className=\"title\">To Dos</h2>\n            {/* <span className=\"green\" style={{ paddingLeft: '20px' }}>\n                {dashboardCount}\n            </span> */}\n            {/* <span className=\"red\">33</span> do not remove this comment */}\n        </div>\n        <div className=\"todo-list\">\n            {\n                loading ? <Spin spinning={loading} str=\"center\" />\n                    : todos.map(todo => <a className={`media online ${todo.type === activeSubCategory?.type ? ' active' : ''}`}\n                        onClick={() => onSetActiveSubCategory(todo)}>\n                        <div className=\"contact-profile\">\n                            <img src={getIcons(todo)} />\n                        </div>\n                        <div className=\"media-body\">\n                            <h3 className=\"name\">{todo.label}</h3>\n                            <span className=\"green\">{todo.value}</span>\n                            {/* <span className=\"red\">02</span> do not remove this comment*/}\n                        </div>\n                    </a>\n                    )\n            }\n            {/* {\n                isModuleAccessible(MODULE.TODO) && canPerformAction(validationParams) ?\n                    <a href=\"#\" className=\"media online\">\n                        <div className=\"contact-profile\">\n                            <Consent className=\"consent\" />\n                        </div>\n                        <div className=\"media-body\">\n                            <h3 className=\"name\">Consent</h3>\n                            <span className=\"green\">10</span>\n                            <span className=\"red\">01</span>\n                        </div>\n                    </a> : null\n            } */}\n            {/* \n            {\n                isModuleAccessible(MODULE.TODO) && canPerformAction(validationParams1) ?\n                    <a href=\"#\" className=\"media online\">\n                        <div className=\"contact-profile\">\n                            <ChangeSticker className=\"cs\" />\n                        </div>\n                        <div className=\"media-body\">\n                            <h3 className=\"name\">Change Sticker</h3>\n                            <span className=\"green\">23</span>\n                            <span className=\"red\">02</span>\n                        </div>\n                    </a> : null\n            } */}\n\n        </div>\n\n    </>\n}\nexport default List\nList.defaultProps = {\n    isPrimaryFilter: false\n}\nList.propTypes = {\n    isPrimaryFilter: PropTypes.bool,\n    onChangeListview: PropTypes.func\n}"]},"metadata":{},"sourceType":"module"}