{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/Residents.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { ChevronDoubleLeft, Filters, PlusBtn } from '../../../assets/images/resident-detail/index';\nimport ResidentBlock from './ResidentBlock';\nimport ResidentListFilter from './ResidentListFilter';\nimport { getResidents } from '../../../services/api/routes/resident';\nimport axios from '../../../services/api/services/common';\nimport { Toast, Spin, Search } from '../../../components/common';\nimport AddResidentPopup from './AddResident/index';\nimport { MoreDots } from '../../../assets/images/pmr/index';\nimport Image from '../../../components/common/Image';\nimport TogglePane from \"./togglePane\";\nimport { canPerformAction } from '../../../util/common';\nimport { ACTIONS, MODULE } from '../../../constants/subscription';\nimport { STATUS } from '../../../constants/resident';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { openResident } from '../../../appRedux/actions/Resident';\nconst initFilter = {\n  page: 1,\n  limit: 15,\n  fields: [],\n  sortBy: {\n    mergeLFName: 'ASC'\n  },\n  find: {\n    status: STATUS.ACTIVE\n  },\n  populate: [{\n    'homeAreaId': ['name']\n  }, {\n    'physicianId': [\"mergeLFName\", \"type\", {\n      \"assignedCustomer\": [\"isActive\", \"homeId\", {\n        \"designationId\": [\"name\", \"code\", \"parentId\"]\n      }] // match: { homeId: '5cd963ea1fd1603a09ae7f9f' }\n\n    }]\n  }]\n};\n\nconst Residents = props => {\n  const openedResidents = useSelector(state => state.resident.openedResidents);\n  const [showFilter, setShowFilter] = useState(false);\n  const [hidePane, setHidePane] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [infyLoader, setInfyLoader] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [count, setCount] = useState(0);\n  const [residentData, setResidentData] = useState([]);\n  const [filter, setFilter] = useState(initFilter);\n  const [showAddResident, setShowAddResident] = useState(false);\n  const [isAddResidentValidated, setIsAddResidentValidated] = useState(false);\n  const [WindowWidth, setWindowWidth] = useState(window.innerWidth);\n  const addResidentParams = {\n    moduleId: MODULE.RESIDENT,\n    actiontoCheck: ACTIONS.ADD.CODE\n  };\n\n  const handleResize = () => {\n    if (WindowWidth > 1023) {\n      setHidePane(false);\n    } else {\n      setHidePane(true);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"load\", handleResize);\n  }, []);\n  useEffect(() => {\n    if (filter.hasOwnProperty('search') && filter.search['keyword']) {\n      const delayDebounceFn = setTimeout(() => {\n        fetch();\n      }, 600);\n      return () => clearTimeout(delayDebounceFn);\n    } else fetch();\n  }, [filter]);\n\n  const fetch = async () => {\n    if (filter.page === 1) {\n      setResidentData([]);\n      setLoader(true);\n    }\n\n    try {\n      let res = await axios({ ...getResidents,\n        data: {\n          'query': { ...filter\n          }\n        }\n      });\n\n      if (res) {\n        if (res.code === 'OK') {\n          let listData = filter.page === 1 ? [] : [...residentData];\n          listData = listData.concat(res.data.data);\n          setResidentData(listData);\n          setCount(res.data.count);\n          if (res.data.data.length < filter.limit) setHasMore(false);else setHasMore(true);\n\n          if (listData.length > 0 && openedResidents && Object.keys(openedResidents).length === 0) {\n            let user = listData[0];\n            openResident(user);\n          } // if (filter.page === 1) {\n          //     document.getElementsByClassName('resi_person_wrap')[0].scrollTo(0, 0)\n          // }\n\n        } else Toast.error(res.message);\n      }\n\n      setLoader(false);\n      setInfyLoader(false);\n    } catch {\n      setLoader(false);\n      setInfyLoader(false);\n    }\n  };\n\n  const handleInfiniteLoad = page => {\n    setInfyLoader(true);\n    setFilter({ ...filter,\n      page: page + 1\n    });\n  };\n\n  const onSearch = e => {\n    console.log(\"onSearch -> e\", e);\n    let value = e.target.value;\n    let obj = { ...filter,\n      page: 1,\n      search: {\n        keyword: value,\n        keys: ['mergeLFName']\n      }\n    };\n    setFilter(obj);\n  };\n\n  const applyFilter = filterObj => {\n    setFilter({ ...filterObj,\n      page: 1\n    });\n    setShowFilter(false);\n  };\n\n  const handleAddResident = action => {\n    setShowAddResident(action);\n  };\n\n  const handleAddedResident = isAdded => {\n    if (isAdded) {\n      fetch();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: hidePane ? 'residents_container collapsed' : 'residents_container',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search_resi form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, !hidePane && /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    style: {\n      width: '100%'\n    },\n    placeholder: \"Search Resident\",\n    onChange: onSearch,\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hide_pane\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, !hidePane && /*#__PURE__*/React.createElement(\"a\", {\n    className: `show_filter ${showFilter && 'showed'}`,\n    onClick: () => setShowFilter(s => !s),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Filters, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    className: hidePane ? 'collapse_pane collapsed' : 'collapse_pane',\n    onClick: () => setHidePane(!hidePane),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ChevronDoubleLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  })))), hidePane && /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"pane_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, \"ALL RESIDENTS\"), !hidePane ? /*#__PURE__*/React.createElement(React.Fragment, null, !showFilter ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resi_person_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, loader ? /*#__PURE__*/React.createElement(Spin, {\n    spinning: loader,\n    str: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }) : null, residentData && residentData.length > 0 ? /*#__PURE__*/React.createElement(InfiniteScroll, {\n    initialLoad: false,\n    loadMore: handleInfiniteLoad,\n    hasMore: hasMore && !loader && !infyLoader,\n    threshold: 20,\n    useWindow: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  }, residentData.map((user, i) => /*#__PURE__*/React.createElement(ResidentBlock, {\n    i: i,\n    isOpened: !!openedResidents[user._id],\n    user: user,\n    key: user._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 45\n    }\n  })), infyLoader ? /*#__PURE__*/React.createElement(Spin, {\n    spinning: infyLoader,\n    str: \"center autoheight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 51\n    }\n  }) : null) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 35\n    }\n  }, \"No Data\")) : null, /*#__PURE__*/React.createElement(ResidentListFilter, {\n    showFilter: showFilter,\n    filter: filter,\n    initFilter: initFilter,\n    onChangeFilter: applyFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  })) : null, !hidePane && !showFilter && /*#__PURE__*/React.createElement(React.Fragment, null, canPerformAction(addResidentParams) ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add_resident\",\n    onClick: () => handleAddResident(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 59\n    }\n  }, /*#__PURE__*/React.createElement(PlusBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }, \"Add Resident\")) : null), showAddResident ? /*#__PURE__*/React.createElement(AddResidentPopup, {\n    homeId: props.homeId,\n    authUser: props.authUser,\n    isVisible: showAddResident,\n    onAddedResident: handleAddedResident,\n    onCancel: () => handleAddResident(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 35\n    }\n  }) : null));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  const {\n    authUser,\n    homeId\n  } = auth;\n  return {\n    authUser,\n    homeId\n  };\n};\n\nexport default connect(mapStateToProps)(Residents);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/Residents.js"],"names":["React","useState","useEffect","connect","useSelector","ChevronDoubleLeft","Filters","PlusBtn","ResidentBlock","ResidentListFilter","getResidents","axios","Toast","Spin","Search","AddResidentPopup","MoreDots","Image","TogglePane","canPerformAction","ACTIONS","MODULE","STATUS","InfiniteScroll","openResident","initFilter","page","limit","fields","sortBy","mergeLFName","find","status","ACTIVE","populate","Residents","props","openedResidents","state","resident","showFilter","setShowFilter","hidePane","setHidePane","loader","setLoader","infyLoader","setInfyLoader","hasMore","setHasMore","count","setCount","residentData","setResidentData","filter","setFilter","showAddResident","setShowAddResident","isAddResidentValidated","setIsAddResidentValidated","WindowWidth","setWindowWidth","window","innerWidth","addResidentParams","moduleId","RESIDENT","actiontoCheck","ADD","CODE","handleResize","addEventListener","hasOwnProperty","search","delayDebounceFn","setTimeout","fetch","clearTimeout","res","data","code","listData","concat","length","Object","keys","user","error","message","handleInfiniteLoad","onSearch","e","console","log","value","target","obj","keyword","applyFilter","filterObj","handleAddResident","action","handleAddedResident","isAdded","width","s","map","i","_id","homeId","authUser","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { ChevronDoubleLeft, Filters, PlusBtn } from '../../../assets/images/resident-detail/index';\nimport ResidentBlock from './ResidentBlock';\nimport ResidentListFilter from './ResidentListFilter';\nimport { getResidents } from '../../../services/api/routes/resident'\nimport axios from '../../../services/api/services/common'\nimport { Toast, Spin, Search } from '../../../components/common';\nimport AddResidentPopup from './AddResident/index';\nimport { MoreDots } from '../../../assets/images/pmr/index';\nimport Image from '../../../components/common/Image';\nimport TogglePane from \"./togglePane\";\nimport { canPerformAction } from '../../../util/common'\nimport { ACTIONS, MODULE } from '../../../constants/subscription';\nimport { STATUS } from '../../../constants/resident';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { openResident } from '../../../appRedux/actions/Resident'\n\nconst initFilter = {\n    page: 1,\n    limit: 15,\n    fields: [],\n    sortBy: { mergeLFName: 'ASC' },\n    find: { status: STATUS.ACTIVE },\n    populate: [{ 'homeAreaId': ['name'] }, {\n        'physicianId': [\n            \"mergeLFName\",\n            \"type\",\n            {\n                \"assignedCustomer\": [\n                    \"isActive\",\n                    \"homeId\",\n                    {\n                        \"designationId\": [\n                            \"name\",\n                            \"code\",\n                            \"parentId\"\n                        ]\n                    }\n                ],\n                // match: { homeId: '5cd963ea1fd1603a09ae7f9f' }\n            }\n        ]\n    },]\n}\n\nconst Residents = (props) => {\n    const openedResidents = useSelector(state => state.resident.openedResidents)\n    const [showFilter, setShowFilter] = useState(false);\n    const [hidePane, setHidePane] = useState(false);\n    const [loader, setLoader] = useState(false);\n    const [infyLoader, setInfyLoader] = useState(false);\n    const [hasMore, setHasMore] = useState(true);\n    const [count, setCount] = useState(0);\n    const [residentData, setResidentData] = useState([]);\n    const [filter, setFilter] = useState(initFilter);\n    const [showAddResident, setShowAddResident] = useState(false);\n    const [isAddResidentValidated, setIsAddResidentValidated] = useState(false);\n    const [WindowWidth, setWindowWidth] = useState(window.innerWidth);\n    const addResidentParams = {\n        moduleId: MODULE.RESIDENT,\n        actiontoCheck: ACTIONS.ADD.CODE,\n    }\n\n    const handleResize = () => {\n        if (WindowWidth > 1023) {\n            setHidePane(false)\n        }\n        else {\n            setHidePane(true)\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"load\", handleResize);\n    }, [])\n\n    useEffect(() => {\n        if (filter.hasOwnProperty('search') && filter.search['keyword']) {\n            const delayDebounceFn = setTimeout(() => {\n                fetch()\n            }, 600)\n            return () => clearTimeout(delayDebounceFn)\n        } else\n            fetch()\n    }, [filter])\n\n    const fetch = async () => {\n        if (filter.page === 1) {\n            setResidentData([])\n            setLoader(true)\n        }\n\n        try {\n            let res = await axios({ ...getResidents, data: { 'query': { ...filter } } })\n            if (res) {\n                if (res.code === 'OK') {\n                    let listData = filter.page === 1 ? [] : [...residentData]\n                    listData = listData.concat(res.data.data)\n                    setResidentData(listData)\n                    setCount(res.data.count)\n                    if (res.data.data.length < filter.limit)\n                        setHasMore(false)\n                    else\n                        setHasMore(true)\n                    if (listData.length > 0 && openedResidents && Object.keys(openedResidents).length === 0) {\n                        let user = listData[0]\n                        openResident(user)\n                    }\n                    // if (filter.page === 1) {\n                    //     document.getElementsByClassName('resi_person_wrap')[0].scrollTo(0, 0)\n                    // }\n                } else\n                    Toast.error(res.message)\n            }\n            setLoader(false)\n            setInfyLoader(false)\n        }\n        catch{\n            setLoader(false)\n            setInfyLoader(false)\n        }\n    }\n\n    const handleInfiniteLoad = (page) => {\n        setInfyLoader(true)\n        setFilter({\n            ...filter,\n            page: page + 1\n        })\n    }\n\n    const onSearch = (e) => {\n        console.log(\"onSearch -> e\", e)\n        let value = e.target.value\n        let obj = {\n            ...filter,\n            page: 1,\n            search: {\n                keyword: value,\n                keys: ['mergeLFName'],\n            }\n        }\n        setFilter(obj)\n    }\n\n    const applyFilter = (filterObj) => {\n        setFilter({ ...filterObj, page: 1, })\n        setShowFilter(false)\n    }\n\n    const handleAddResident = (action) => {\n        setShowAddResident(action)\n    }\n\n    const handleAddedResident = (isAdded) => {\n        if (isAdded) {\n            fetch()\n        }\n    }\n    return (<>\n        <div className={hidePane ? 'residents_container collapsed' : 'residents_container'}>\n            <div className=\"search_resi form\">\n                {\n                    !hidePane &&\n                    <form>\n                        <div className=\"form_group\">\n                            <Search style={{ width: '100%' }}\n                                placeholder='Search Resident'\n                                onChange={onSearch}\n                                allowClear={true}\n                            />\n                        </div>\n                    </form>\n                }\n                <div className=\"hide_pane\">\n                    {\n                        !hidePane &&\n                        <a\n                            className={`show_filter ${showFilter && 'showed'}`}\n                            onClick={() => setShowFilter(s => !s)}\n                        >\n                            <Filters />\n                        </a>\n                    }\n                    <a className={hidePane ? 'collapse_pane collapsed' : 'collapse_pane'}\n                        onClick={() => setHidePane(!hidePane)}>\n                        <ChevronDoubleLeft />\n                    </a>\n                </div>\n            </div>\n\n            {hidePane &&\n                <h4 className=\"pane_name\">\n                    ALL RESIDENTS\n                        </h4>\n            }\n            {!hidePane ? <>\n                {!showFilter ?\n                    <div className=\"resi_person_wrap\">\n                        {loader ?\n                            <Spin spinning={loader} str='center' />\n                            : null}\n                        {\n                            residentData && residentData.length > 0 ?\n                                <InfiniteScroll\n                                    initialLoad={false}\n                                    loadMore={handleInfiniteLoad}\n                                    hasMore={hasMore && !loader && !infyLoader}\n                                    threshold={20}\n                                    useWindow={false}\n                                >\n                                    {\n                                        residentData.map((user, i) => (\n                                            <ResidentBlock i={i}\n                                                isOpened={!!openedResidents[user._id]}\n                                                user={user}\n                                                key={user._id}\n                                            />\n                                        ))\n                                    }\n                                    {infyLoader ? <Spin spinning={infyLoader} str='center autoheight' /> : null}\n                                </InfiniteScroll>\n                                : <p className=\"text-center\">No Data</p>\n                        }\n                    </div>\n                    : null\n                }\n                < ResidentListFilter showFilter={showFilter} filter={filter} initFilter={initFilter}\n                    onChangeFilter={applyFilter} />\n            </> : null}\n            {(!hidePane && !showFilter) && <>\n                {\n                    canPerformAction(addResidentParams) ? <div className=\"add_resident\" onClick={() => handleAddResident(true)}>\n                        <PlusBtn />\n                        <h3>Add Resident</h3>\n                    </div> : null\n                }\n            </>\n            }\n            {\n                showAddResident ? <AddResidentPopup\n                    homeId={props.homeId}\n                    authUser={props.authUser}\n                    isVisible={showAddResident}\n                    onAddedResident={handleAddedResident}\n                    onCancel={() => handleAddResident(false)}\n                /> : null\n            }\n        </div>\n    </>)\n\n}\n\nconst mapStateToProps = ({ auth }) => {\n    const { authUser, homeId } = auth;\n    return { authUser, homeId };\n};\nexport default connect(mapStateToProps)(Residents) "]},"metadata":{},"sourceType":"module"}