{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/common/Popup/archive-popup.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { TextArea, ErrorMsg, Toast, Button, Select, Option } from '../../common';\nimport Dialog from 'rc-dialog';\nimport { createForm } from 'rc-form';\nimport SubmasterFilter from '../../SubmasterFilter';\nlet errors;\n\nconst ArchivePopup = props => {\n  const {\n    visible,\n    onCancel,\n    onOk,\n    detail,\n    residentDetail,\n    form\n  } = props;\n  const {\n    getFieldDecorator,\n    getFieldError\n  } = form;\n  const [reasons, setReasons] = useState([]);\n\n  const handleOk = () => {\n    form.validateFields((err, values) => {\n      if (err) return;\n      if (onOk) onOk();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    visible: visible,\n    maskClosable: false,\n    onClose: onCancel //onOk={handleOk}\n    // okButtonProps={{ loading: loader || loading }}\n    ,\n    className: \"logout_popup archive_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content-log\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"name_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Archive \", detail.orderNumber, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, residentDetail.mergeLFName, \"  (Room No \", residentDetail.room, \")\"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Are you sure you want to\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"permanently archive this document?\")), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"components\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, getFieldDecorator('reason', {\n    rules: [{\n      required: true,\n      message: 'Please Select Reason'\n    }]\n  })( /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Reason\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, reasons.map(x => /*#__PURE__*/React.createElement(Option, {\n    value: x._id,\n    key: x._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 36\n    }\n  }, x.name))) // <SubmasterFilter placeholder=\"Select Reason\"\n  //   code=\"THIRD_PARTY_PRESCRIPTION_TYPE\"\n  // // onChange={onSubmasterChange} \n  // />\n  ), (errors = getFieldError('reason')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 51\n    }\n  }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"additional-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, getFieldDecorator('information', {\n    rules: [{\n      required: false,\n      message: 'Please Select Physician'\n    }]\n  })( /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"Additional Information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })), (errors = getFieldError('information')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 52\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"screen-btn gray-btn mb-0\",\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"CANCEL\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"screen-btn mb-0\",\n    onClick: handleOk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"YES\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottom-line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"This action cannot be undone\")));\n};\n\nexport default createForm()(ArchivePopup);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/common/Popup/archive-popup.js"],"names":["React","useState","useEffect","useContext","TextArea","ErrorMsg","Toast","Button","Select","Option","Dialog","createForm","SubmasterFilter","errors","ArchivePopup","props","visible","onCancel","onOk","detail","residentDetail","form","getFieldDecorator","getFieldError","reasons","setReasons","handleOk","validateFields","err","values","orderNumber","mergeLFName","room","rules","required","message","map","x","_id","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { TextArea, ErrorMsg, Toast, Button, Select, Option } from '../../common'\nimport Dialog from 'rc-dialog';\nimport { createForm } from 'rc-form'\nimport SubmasterFilter from '../../SubmasterFilter'\n\nlet errors\nconst ArchivePopup = (props) => {\n  const { visible, onCancel, onOk, detail, residentDetail, form } = props\n  const { getFieldDecorator, getFieldError } = form\n  const [reasons, setReasons] = useState([])\n\n  const handleOk = () => {\n    form.validateFields((err, values) => {\n      if (err) return\n      if (onOk)\n        onOk()\n    })\n  }\n\n  return <Dialog\n    visible={visible}\n    maskClosable={false}\n    onClose={onCancel}\n    //onOk={handleOk}\n    // okButtonProps={{ loading: loader || loading }}\n    className=\"logout_popup archive_wrap\"\n  >\n    <div className=\"popup-content-log\">\n      <h3 className=\"name_head\">Archive {detail.orderNumber}\n        <span>{residentDetail.mergeLFName}  (Room No {residentDetail.room})</span> </h3>\n      <div className=\"bb\"></div>\n      <h2>Are you sure you want to\n            <span>permanently archive this document?</span>\n      </h2>\n\n      <form action=\"\">\n        <div className=\"form_wrap\">\n          <div className=\"components\">\n            {getFieldDecorator('reason', {\n              rules: [\n                { required: true, message: 'Please Select Reason' }\n              ]\n            })(\n              <Select placeholder=\"Select Reason\">\n                {\n                  reasons.map(x => <Option value={x._id} key={x._id}>{x.name}</Option>)\n                }\n              </Select>\n              // <SubmasterFilter placeholder=\"Select Reason\"\n              //   code=\"THIRD_PARTY_PRESCRIPTION_TYPE\"\n              // // onChange={onSubmasterChange} \n              // />\n            )}\n            {(errors = getFieldError('reason')) ? <ErrorMsg errors={errors} /> : null}\n          </div>\n        </div>\n      </form>\n\n      <div className=\"additional-textarea\">\n        {getFieldDecorator('information', {\n          rules: [\n            { required: false, message: 'Please Select Physician' }\n          ]\n        })(\n          <TextArea placeholder=\"Additional Information\"></TextArea>\n        )}\n        {(errors = getFieldError('information')) ? <ErrorMsg errors={errors} /> : null}\n      </div>\n\n      <div className=\"mb-20\">\n        <Button className=\"screen-btn gray-btn mb-0\" onClick={onCancel}>CANCEL</Button>\n        <Button className=\"screen-btn mb-0\" onClick={handleOk}>YES</Button>\n      </div>\n      <div className=\"bottom-line\">\n        This action cannot be undone\n          </div>\n    </div>\n  </Dialog >\n}\n\nexport default createForm()(ArchivePopup);"]},"metadata":{},"sourceType":"module"}