{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/common/Button.js\";\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable react/prop-types */\nimport React, { useState } from \"react\";\nimport Spin from \"../common/Spin\";\nimport PropTypes from \"prop-types\";\nimport { UpdResidentDoc } from \"../../assets/images/resident-detail/index\";\nconst ButtonType = {\n  primary: \"btn primary-btn\",\n  secondary: \"btn grey-btn\",\n  danger: \"btn danger-btn\",\n  outline: \"btn outline\",\n  transparent: \"btn transparent-btn\"\n};\nconst ButtonSize = {\n  xs: \"btn-xs\",\n  lg: \"btn-lg\",\n  sm: \"btn-sm\"\n};\n\nconst Button = props => {\n  const {\n    loading,\n    children,\n    type,\n    size,\n    spinHeight,\n    onClick,\n    isUpload,\n    ...otherProps\n  } = props;\n  let classNames;\n  let stroke;\n\n  if (loading) {\n    classNames = ButtonType[type] + \" \" + ButtonSize[size] + \" spin_btn\";\n\n    if (ButtonSize[size] == \"btn-sm\") {\n      stroke = 2;\n    }\n\n    if (ButtonSize[size] == \"btn-xs\") {\n      stroke = 2;\n    }\n\n    if (ButtonSize[size] == \"btn-lg\") {\n      stroke = 4;\n    }\n  } else {\n    classNames = ButtonType[type] + \" \" + ButtonSize[size];\n  }\n\n  const handleClick = e => {\n    e.preventDefault();\n    if (onClick) onClick(e);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    className: classNames\n  }, otherProps, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Spin, {\n    spinning: true,\n    colorCode: \"#ffffff\",\n    str: \"left autoheight\",\n    strokeWidth: stroke,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }) : null, children));\n};\n\nButton.defaultProps = {\n  type: \"primary\",\n  size: \"sm\"\n};\nButton.propTypes = {\n  className: PropTypes.string,\n  loading: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  icon: PropTypes.object,\n  type: PropTypes.oneOf(Object.keys(ButtonType)),\n  size: PropTypes.oneOf(Object.keys(ButtonSize))\n};\nexport default Button;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/common/Button.js"],"names":["React","useState","Spin","PropTypes","UpdResidentDoc","ButtonType","primary","secondary","danger","outline","transparent","ButtonSize","xs","lg","sm","Button","props","loading","children","type","size","spinHeight","onClick","isUpload","otherProps","classNames","stroke","handleClick","e","preventDefault","defaultProps","propTypes","className","string","bool","disabled","func","name","value","icon","object","oneOf","Object","keys"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport React, { useState } from \"react\";\nimport Spin from \"../common/Spin\";\nimport PropTypes from \"prop-types\";\nimport { UpdResidentDoc } from \"../../assets/images/resident-detail/index\";\n\nconst ButtonType = {\n  primary: \"btn primary-btn\",\n  secondary: \"btn grey-btn\",\n  danger: \"btn danger-btn\",\n  outline: \"btn outline\",\n  transparent: \"btn transparent-btn\",\n};\nconst ButtonSize = {\n  xs: \"btn-xs\",\n  lg: \"btn-lg\",\n  sm: \"btn-sm\",\n};\n\nconst Button = (props) => {\n  const {\n    loading,\n    children,\n    type,\n    size,\n    spinHeight,\n    onClick,\n    isUpload,\n    ...otherProps\n  } = props;\n  let classNames;\n  let stroke;\n  if (loading) {\n    classNames = ButtonType[type] + \" \" + ButtonSize[size] + \" spin_btn\";\n    if (ButtonSize[size] == \"btn-sm\") {\n      stroke = 2;\n    }\n    if (ButtonSize[size] == \"btn-xs\") {\n      stroke = 2;\n    }\n    if (ButtonSize[size] == \"btn-lg\") {\n      stroke = 4;\n    }\n  } else {\n    classNames = ButtonType[type] + \" \" + ButtonSize[size];\n  }\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    if (onClick) onClick(e);\n  };\n\n  return (\n    <>\n      <button className={classNames} {...otherProps} onClick={handleClick}>\n        {loading ? (\n          <Spin\n            spinning={true}\n            colorCode={\"#ffffff\"}\n            str={\"left autoheight\"}\n            strokeWidth={stroke}\n          ></Spin>\n        ) : null}\n        {/* {\n          isUpload ? <UpdResidentDoc  /> : null\n        } */}\n        {children}\n      </button>\n    </>\n  );\n};\n\nButton.defaultProps = { type: \"primary\", size: \"sm\" };\nButton.propTypes = {\n  className: PropTypes.string,\n  loading: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  icon: PropTypes.object,\n  type: PropTypes.oneOf(Object.keys(ButtonType)),\n  size: PropTypes.oneOf(Object.keys(ButtonSize)),\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}