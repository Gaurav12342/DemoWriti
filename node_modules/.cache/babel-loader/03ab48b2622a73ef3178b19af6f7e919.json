{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/NotesPopup/List.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { deleteNote, getAllNotes, updateNote, upsertNote } from '../../services/api/routes/notes';\nimport axios from '../../services/api/config';\nimport Note from './View';\nimport Dialog from '../common/Popup';\nimport { Button } from '../common';\nimport { NoteUpsert } from './index';\nimport { masterPaginate } from '../../services/api/routes/master';\nimport moment from 'moment';\nimport _ from \"lodash\";\n\nconst List = props => {\n  const {\n    visible,\n    filterOptions,\n    isArOrderNote,\n    xRayNumber,\n    isUpsertList,\n    isNotApiCall,\n    defaultNotes,\n    isOnlyView\n  } = props;\n  const [notesData, setNotesData] = useState([]);\n  const [noteTypes, setNoteTypes] = useState([]);\n  const [visibleAdd, setVisibleAdd] = useState(false);\n  const authUser = useSelector(state => state.auth.authUser);\n  const [addButtonLoading, setAddButtonLoading] = useState(false);\n  useEffect(() => {\n    if (!!visible) {\n      if (isNotApiCall) setNotesData(defaultNotes || []);else fetch();\n      getNoteTypes();\n    }\n  }, []);\n\n  const fetch = async () => {\n    let obj = filterOptions;\n    console.log(\"ðŸš€ ~ file: List.js ~ line 45 ~ fetch ~ obj\", obj);\n\n    if (obj.query && obj.query.populate) {\n      obj.query.populate = _.concat(obj.query.populate, [{\n        noteType: []\n      }, {\n        \"history.noteType\": [\"name\"]\n      }, {\n        \"history.addedBy\": []\n      }]);\n    }\n\n    let isAr = isArOrderNote;\n    let objNotes = isAr ? {\n      isArOrderNote: isAr,\n      ...obj\n    } : obj;\n    axios({ ...getAllNotes,\n      data: objNotes\n    }).then(({\n      data\n    }) => {\n      let notesData = [];\n\n      if (data.code === 'OK') {\n        if (data.data && data.data.data && data.data.data.length > 0) {\n          notesData = data.data.data;\n        }\n      }\n\n      setNotesData(notesData);\n    });\n  };\n\n  const getNoteTypes = () => {\n    let data = {\n      query: {\n        find: {\n          isActive: true,\n          code: 'NOTE_TYPE'\n        },\n        populate: [{\n          subMaster: [],\n          match: {\n            isActive: true\n          }\n        }]\n      }\n    };\n    axios({ ...masterPaginate,\n      data\n    }).then(({\n      data\n    }) => {\n      if (data.code === 'OK') {\n        if (data.data.data.length > 0) {\n          const masterData = data.data.data[0];\n\n          if (masterData.subMaster && masterData.subMaster.length) {\n            setNoteTypes(masterData.subMaster);\n          }\n        }\n      }\n    });\n  };\n\n  const handleAddNote = visible => {\n    setVisibleAdd(visible);\n  };\n\n  const handleDelete = (noteObj, index) => {\n    if (isNotApiCall) {\n      let tempData = [...notesData];\n      let index = tempData.find((x, i) => i === index);\n      if (index < 0) return;\n      tempData.splice(index, 1);\n      setNotesData(tempData);\n    } else {\n      axios({ ...deleteNote,\n        url: `admin/note/${noteObj._id}`\n      }).then(({\n        data\n      }) => {\n        console.log('TCL: fetch -> data', data);\n\n        if (data.code === 'OK') {\n          fetch();\n        }\n      });\n    }\n  };\n\n  const handleUpdate = (noteId, updateData) => {\n    setAddButtonLoading(true);\n    axios({ ...updateNote,\n      url: `admin/note/${noteId}`,\n      data: updateData\n    }).then(({\n      data\n    }) => {\n      console.log('handleUpdate -> data', data);\n\n      if (data.code === 'OK') {\n        setAddButtonLoading(false);\n        fetch();\n      }\n    });\n  };\n\n  const handleAdd = data => {\n    let addRequest = { ...data,\n      ...props.addData,\n      addedBy: {\n        _id: authUser._id,\n        mergeLFName: authUser.mergeLFName,\n        type: authUser.type,\n        homeId: authUser.homeId\n      },\n      createdAt: moment().toISOString()\n    };\n\n    if (isNotApiCall) {\n      let tempNotes = [...notesData];\n      tempNotes.push(addRequest);\n      setNotesData(tempNotes);\n      handleAddNote(false);\n    } else {\n      setAddButtonLoading(true);\n      axios({ ...upsertNote,\n        data: addRequest\n      }).then(({\n        data\n      }) => {\n        console.log('handleUpdate -> data', data);\n\n        if (data.code === 'OK') {\n          handleAddNote(false); // notesData.push(data.data);\n          // setNotesData(notesData);\n\n          setAddButtonLoading(false);\n          fetch();\n        }\n      });\n    }\n  };\n\n  const handleClose = () => {\n    const options = {\n      notesData\n    };\n    props.onCancel(notesData.length, options);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, Object.assign({}, props, {\n    onCancel: () => handleClose() // props.onCancel(notesData.length, props.addData.subCategory)\n    ,\n    customChildren: true,\n    footer: false,\n    className: \"logout_popup add_notes_warp view_notes_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content-log\",\n    style: {\n      maxHeight: '90vh',\n      overflowY: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"name_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, props.modalTitle || 'View Note', isUpsertList == true ? /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginLeft: '10px'\n    },\n    onClick: () => handleAddNote(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, \"Add\") : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }), !!notesData && !!notesData.length && notesData.map((noteObj, i) => /*#__PURE__*/React.createElement(Note, {\n    index: i,\n    noteTypes: noteTypes,\n    xRayNumber: xRayNumber,\n    detail: noteObj,\n    handleDelete: () => handleDelete(noteObj, i),\n    onUpdate: fetch,\n    handleUpdate: handleUpdate,\n    isOnlyView: isOnlyView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }))), visibleAdd && /*#__PURE__*/React.createElement(NoteUpsert, {\n    addButtonLoading: addButtonLoading,\n    xRayNumber: xRayNumber,\n    noteTypes: noteTypes,\n    visible: visibleAdd,\n    onCancel: () => handleAddNote(false),\n    handleAdd: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default List;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/NotesPopup/List.js"],"names":["React","useEffect","useState","useSelector","deleteNote","getAllNotes","updateNote","upsertNote","axios","Note","Dialog","Button","NoteUpsert","masterPaginate","moment","_","List","props","visible","filterOptions","isArOrderNote","xRayNumber","isUpsertList","isNotApiCall","defaultNotes","isOnlyView","notesData","setNotesData","noteTypes","setNoteTypes","visibleAdd","setVisibleAdd","authUser","state","auth","addButtonLoading","setAddButtonLoading","fetch","getNoteTypes","obj","console","log","query","populate","concat","noteType","isAr","objNotes","data","then","code","length","find","isActive","subMaster","match","masterData","handleAddNote","handleDelete","noteObj","index","tempData","x","i","splice","url","_id","handleUpdate","noteId","updateData","handleAdd","addRequest","addData","addedBy","mergeLFName","type","homeId","createdAt","toISOString","tempNotes","push","handleClose","options","onCancel","maxHeight","overflowY","modalTitle","marginLeft","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux'\nimport {\n  deleteNote,\n  getAllNotes,\n  updateNote,\n  upsertNote,\n} from '../../services/api/routes/notes';\nimport axios from '../../services/api/config';\nimport Note from './View';\nimport Dialog from '../common/Popup';\nimport { Button } from '../common';\nimport { NoteUpsert } from './index';\nimport { masterPaginate } from '../../services/api/routes/master';\nimport moment from 'moment'\nimport _ from \"lodash\"\nconst List = (props) => {\n  const {\n    visible,\n    filterOptions,\n    isArOrderNote,\n    xRayNumber,\n    isUpsertList,\n    isNotApiCall,\n    defaultNotes,\n    isOnlyView\n  } = props;\n  const [notesData, setNotesData] = useState([]);\n  const [noteTypes, setNoteTypes] = useState([]);\n  const [visibleAdd, setVisibleAdd] = useState(false);\n  const authUser = useSelector(state => state.auth.authUser)\n  const [addButtonLoading,setAddButtonLoading] = useState(false)\n  useEffect(() => {\n    if (!!visible) {\n      if (isNotApiCall)\n        setNotesData(defaultNotes || [])\n      else\n        fetch();\n      getNoteTypes();\n    }\n  }, []);\n\n  const fetch = async () => {\n    let obj = filterOptions;\n    console.log(\"ðŸš€ ~ file: List.js ~ line 45 ~ fetch ~ obj\", obj)\n    if (obj.query && obj.query.populate) {\n      obj.query.populate = _.concat(obj.query.populate, [{ noteType: [] }, { \"history.noteType\": [\"name\"] }, { \"history.addedBy\": [], },])\n    }\n    let isAr = isArOrderNote;\n\n    let objNotes = isAr ? { isArOrderNote: isAr, ...obj } : obj;\n\n    axios({ ...getAllNotes, data: objNotes }).then(({ data }) => {\n      let notesData = [];\n      if (data.code === 'OK') {\n        if (data.data && data.data.data && data.data.data.length > 0) {\n          notesData = data.data.data;\n        }\n      }\n      setNotesData(notesData);\n    });\n  };\n\n  const getNoteTypes = () => {\n    let data = {\n      query: {\n        find: {\n          isActive: true,\n          code: 'NOTE_TYPE',\n        },\n        populate: [\n          {\n            subMaster: [],\n            match: { isActive: true },\n          },\n        ],\n      },\n    };\n    axios({ ...masterPaginate, data }).then(({ data }) => {\n      if (data.code === 'OK') {\n        if (data.data.data.length > 0) {\n          const masterData = data.data.data[0];\n          if (masterData.subMaster && masterData.subMaster.length) {\n            setNoteTypes(masterData.subMaster);\n          }\n        }\n      }\n    });\n  };\n\n  const handleAddNote = (visible) => {\n    setVisibleAdd(visible);\n  };\n\n  const handleDelete = (noteObj, index) => {\n    if (isNotApiCall) {\n      let tempData = [...notesData]\n      let index = tempData.find((x, i) => i === index)\n      if (index < 0)\n        return\n      tempData.splice(index, 1)\n      setNotesData(tempData)\n    } else {\n      axios({ ...deleteNote, url: `admin/note/${noteObj._id}` }).then(\n        ({ data }) => {\n          console.log('TCL: fetch -> data', data);\n          if (data.code === 'OK') {\n            fetch();\n          }\n        }\n      );\n    }\n  };\n\n  const handleUpdate = (noteId, updateData) => {\n    setAddButtonLoading(true)\n\n    axios({\n      ...updateNote,\n      url: `admin/note/${noteId}`,\n      data: updateData,\n    }).then(({ data }) => {\n      console.log('handleUpdate -> data', data);\n      if (data.code === 'OK') {\n      setAddButtonLoading(false)\n\n        fetch();\n      }\n    });\n  };\n\n  const handleAdd = (data) => {\n    let addRequest = {\n      ...data,\n      ...props.addData,\n      addedBy: { _id: authUser._id, mergeLFName: authUser.mergeLFName, type: authUser.type, homeId: authUser.homeId },\n      createdAt: moment().toISOString()\n    }\n    if (isNotApiCall) {\n      let tempNotes = [...notesData]\n      tempNotes.push(addRequest)\n      setNotesData(tempNotes)\n      handleAddNote(false);\n    } else {\n      setAddButtonLoading(true)\n      axios({ ...upsertNote, data: addRequest }).then(\n        ({ data }) => {\n          console.log('handleUpdate -> data', data);\n          if (data.code === 'OK') {\n            handleAddNote(false);\n            // notesData.push(data.data);\n            // setNotesData(notesData);\n      setAddButtonLoading(false)\n\n            fetch();\n          }\n        }\n      );\n    }\n  };\n\n  const handleClose = () => {\n    const options = {\n      notesData\n    }\n    props.onCancel(notesData.length, options)\n  }\n\n  return (\n    <Dialog\n      {...props}\n      onCancel={() =>\n        handleClose()\n        // props.onCancel(notesData.length, props.addData.subCategory)\n      }\n      customChildren={true}\n      footer={false}\n      className='logout_popup add_notes_warp view_notes_wrap'\n    >\n      <div\n        className='popup-content-log'\n        style={{ maxHeight: '90vh', overflowY: 'auto' }}\n      >\n        <h3 className='name_head'>\n          {props.modalTitle || 'View Note'}\n          {isUpsertList == true ? (\n            <Button\n              style={{ marginLeft: '10px' }}\n              onClick={() => handleAddNote(true)}\n            >\n              Add\n            </Button>\n          ) : null}\n        </h3>\n        <div className='bb'></div>\n        {!!notesData &&\n          !!notesData.length &&\n          notesData.map((noteObj, i) => (\n            <Note\n              index={i}\n              noteTypes={noteTypes}\n              xRayNumber={xRayNumber}\n              detail={noteObj}\n              handleDelete={() => handleDelete(noteObj, i)}\n              onUpdate={fetch}\n              handleUpdate={handleUpdate}\n              isOnlyView={isOnlyView}\n            />\n          ))}\n      </div>\n      {visibleAdd && (\n        <NoteUpsert\n        addButtonLoading={addButtonLoading}\n          xRayNumber={xRayNumber}\n          noteTypes={noteTypes}\n          visible={visibleAdd}\n          onCancel={() => handleAddNote(false)}\n          handleAdd={handleAdd}\n        />\n      )}\n    </Dialog>\n  );\n};\nexport default List;\n"]},"metadata":{},"sourceType":"module"}