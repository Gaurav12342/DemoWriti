{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Customers/ImagingDiagnostics/components/UpsertForm.js\";\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Input, Button, TextArea, ErrorMsg } from '../../../../components/common/index';\nimport { Download } from '../../../../assets/images/resident-detail/index';\nimport Thumbnail from \"../../../../components/common/Upload/Thumbnail\";\n\nconst _ = require('lodash');\n\nconst UpsertForm = props => {\n  let errors;\n  const {\n    form,\n    editImagningDiagnostics,\n    onTabChange,\n    onCancel,\n    editId,\n    onLogoVisible,\n    onXrayVisible,\n    onUltraSoundVisible,\n    onLogoData\n  } = props;\n  console.log('onLogoData', onLogoData);\n  const {\n    getFieldError,\n    getFieldDecorator,\n    setFieldsValue\n  } = form;\n  const PREVENT_SPECIAL_CHARS_ARRAY = ['e', '=', ',', '-', '.'];\n  useEffect(() => {\n    if (editId) {\n      if (editImagningDiagnostics) {\n        let emailData = _.find(editImagningDiagnostics.emails, {\n          isPrimary: true\n        });\n\n        let faxData = _.find(editImagningDiagnostics.faxes, {\n          isPrimary: true\n        });\n\n        let addressData = _.find(editImagningDiagnostics.addresses, {\n          isPrimary: true\n        });\n\n        let obj = {\n          name: editImagningDiagnostics.name,\n          code: editImagningDiagnostics.code,\n          phone: editImagningDiagnostics.phone,\n          website: editImagningDiagnostics.website,\n          email: emailData ? emailData.email : '',\n          fax: faxData ? faxData.fax : '',\n          city: addressData ? addressData.city : '',\n          country: addressData ? addressData.country : '',\n          line1: addressData ? addressData.line1 : '',\n          line2: addressData ? addressData.line2 : '',\n          postalCode: addressData ? addressData.postalCode : '',\n          province: addressData ? addressData.province : ''\n        };\n        setFieldsValue(obj);\n      }\n    }\n  }, [editImagningDiagnostics, editId]);\n\n  const GetFilename = url => {\n    if (url) {\n      let p = url.split('/').pop();\n      return p;\n    }\n\n    return \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Name\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"*\")), getFieldDecorator('name', {\n    rules: [{\n      required: true,\n      message: 'Please enter the name.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 14\n    }\n  })), (errors = getFieldError('name')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Email\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 18\n    }\n  }, \"*\")), getFieldDecorator('email', {\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please enter the email.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 14\n    }\n  })), (errors = getFieldError('email')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Fax\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 16\n    }\n  }, \"*\")), getFieldDecorator('fax', {\n    rules: [{\n      required: false,\n      message: 'Please enter the fax detail.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"fax\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 14\n    }\n  })), (errors = getFieldError('fax')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Phone No\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, \"*\")), getFieldDecorator('phone', {\n    rules: [{\n      required: false,\n      message: 'Please enter the phone number.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    name: \"phone\",\n    onKeyDown: evt => {\n      if (PREVENT_SPECIAL_CHARS_ARRAY.includes(evt.key)) evt.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  })), (errors = getFieldError('phone')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-6 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"Address 1\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 22\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"additional-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap mb-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, getFieldDecorator('line1', {\n    rules: [{\n      required: false,\n      message: 'Please enter the line1.!'\n    }]\n  })( /*#__PURE__*/React.createElement(TextArea, {\n    name: \"line1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 18\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-6 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, \"Address 2\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 22\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"additional-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap mb-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, getFieldDecorator('line2', {\n    rules: [{\n      required: false,\n      message: 'Please enter the line 2.!'\n    }]\n  })( /*#__PURE__*/React.createElement(TextArea, {\n    name: \"line2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 18\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, \"City\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, \"*\")), getFieldDecorator('city', {\n    rules: [{\n      required: false,\n      message: 'Please enter the city.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 14\n    }\n  })), (errors = getFieldError('city')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, \"Province\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, \"*\")), getFieldDecorator('province', {\n    rules: [{\n      required: false,\n      message: 'Please enter the province.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"province\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 14\n    }\n  })), (errors = getFieldError('province')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, \"Postal Code\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 24\n    }\n  }, \"*\")), getFieldDecorator('postalCode', {\n    rules: [{\n      required: false,\n      message: 'Please enter the postal code.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"postalCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 14\n    }\n  })), (errors = getFieldError('postalCode')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, \"Country\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 20\n    }\n  }, \"*\")), getFieldDecorator('country', {\n    rules: [{\n      required: false,\n      message: 'Please enter the country name.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 14\n    }\n  })), (errors = getFieldError('country')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '1%',\n      marginBottom: '135px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, \"Website\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 20\n    }\n  }, \"*\")), getFieldDecorator('website', {\n    rules: [{\n      required: false,\n      message: 'Please enter the website name.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"website\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 14\n    }\n  })), (errors = getFieldError('website')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, \"Code\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }, \"*\")), getFieldDecorator('code', {\n    rules: [{\n      required: false,\n      message: 'Please enter the stlCode.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 14\n    }\n  })), (errors = getFieldError('code')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, \"Logo\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    type: \"transparent\",\n    style: {\n      width: '100%'\n    },\n    onClick: onLogoVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }, \"Upload Logo\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, onLogoData && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upd_img_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Thumbnail, {\n    path: onLogoData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12\",\n    style: {\n      textAlign: 'right',\n      borderTop: '1px solid #919A9F',\n      paddingTop: '20px',\n      paddingBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"lg\",\n    type: \"secondary\",\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"lg\",\n    onClick: () => {\n      onTabChange('2');\n    } // onClick={props.onSave}\n    ,\n    style: {\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 11\n    }\n  }, \"Next\"))));\n};\n\nexport default withRouter(UpsertForm);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Customers/ImagingDiagnostics/components/UpsertForm.js"],"names":["React","useEffect","withRouter","Input","Button","TextArea","ErrorMsg","Download","Thumbnail","_","require","UpsertForm","props","errors","form","editImagningDiagnostics","onTabChange","onCancel","editId","onLogoVisible","onXrayVisible","onUltraSoundVisible","onLogoData","console","log","getFieldError","getFieldDecorator","setFieldsValue","PREVENT_SPECIAL_CHARS_ARRAY","emailData","find","emails","isPrimary","faxData","faxes","addressData","addresses","obj","name","code","phone","website","email","fax","city","country","line1","line2","postalCode","province","GetFilename","url","p","split","pop","marginTop","rules","required","message","type","evt","includes","key","preventDefault","marginBottom","width","textAlign","borderTop","paddingTop","paddingBottom","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Input,\n  Button,\n  TextArea,\n  ErrorMsg,\n} from '../../../../components/common/index';\nimport {\n  Download,\n} from '../../../../assets/images/resident-detail/index';\nimport Thumbnail from \"../../../../components/common/Upload/Thumbnail\";\nconst _ = require('lodash');\n\nconst UpsertForm = (props) => {\n  let errors;\n  const {\n    form,\n    editImagningDiagnostics,\n    onTabChange,\n    onCancel,\n    editId,\n    onLogoVisible,\n    onXrayVisible,\n    onUltraSoundVisible,\n    onLogoData\n  } = props;\n\n  console.log('onLogoData', onLogoData);\n\n  const { getFieldError, getFieldDecorator, setFieldsValue } = form;\n  const PREVENT_SPECIAL_CHARS_ARRAY = ['e', '=', ',', '-', '.'];\n  useEffect(() => {\n    if (editId) {\n      if (editImagningDiagnostics) {\n        let emailData = _.find(editImagningDiagnostics.emails, {\n          isPrimary: true,\n        });\n        let faxData = _.find(editImagningDiagnostics.faxes, {\n          isPrimary: true,\n        });\n        let addressData = _.find(editImagningDiagnostics.addresses, {\n          isPrimary: true,\n        });\n        let obj = {\n          name: editImagningDiagnostics.name,\n          code: editImagningDiagnostics.code,\n          phone: editImagningDiagnostics.phone,\n          website: editImagningDiagnostics.website,\n          email: emailData ? emailData.email : '',\n          fax: faxData ? faxData.fax : '',\n          city: addressData ? addressData.city : '',\n          country: addressData ? addressData.country : '',\n          line1: addressData ? addressData.line1 : '',\n          line2: addressData ? addressData.line2 : '',\n          postalCode: addressData ? addressData.postalCode : '',\n          province: addressData ? addressData.province : '',\n        };\n        setFieldsValue(obj);\n      }\n    }\n  }, [editImagningDiagnostics, editId]);\n\n  const GetFilename = (url) => {\n    if (url) {\n      let p = url.split('/').pop()\n      return p\n    }\n    return \"\";\n  }\n\n  return (\n    <>\n      <div className='form_row' style={{ marginTop: '2%' }}>\n        <div className='form_group col-3 required'>\n          <label>\n            Name<span>*</span>\n          </label>\n          {getFieldDecorator('name', {\n            rules: [\n              {\n                required: true,\n                message: 'Please enter the name.!',\n              },\n            ],\n          })(<Input name='name' />)}\n          {(errors = getFieldError('name')) ? (\n            <ErrorMsg errors={errors} />\n          ) : null}\n        </div>\n        <div className='form_group col-3 required'>\n          <label>\n            Email<span>*</span>\n          </label>\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please enter the email.!',\n              },\n            ],\n          })(<Input name='email' />)}\n          {(errors = getFieldError('email')) ? (\n            <ErrorMsg errors={errors} />\n          ) : null}\n        </div>\n\n        <div className='form_group col-3'>\n          <label>\n            Fax<span>*</span>\n          </label>\n          {getFieldDecorator('fax', {\n            rules: [\n              {\n                required: false,\n                message: 'Please enter the fax detail.!',\n              },\n            ],\n          })(<Input name='fax' />)}\n          {(errors = getFieldError('fax')) ? (\n            <ErrorMsg errors={errors} />\n          ) : null}\n        </div>\n\n        <div className='form_group col-3'>\n          <label>\n            Phone No<span>*</span>\n          </label>\n          {getFieldDecorator('phone', {\n            rules: [\n              {\n                required: false,\n                message: 'Please enter the phone number.!',\n              },\n            ],\n          })(\n            <Input\n              type='number'\n              name='phone'\n              onKeyDown={(evt) => {\n                if (PREVENT_SPECIAL_CHARS_ARRAY.includes(evt.key))\n                  evt.preventDefault();\n              }}\n            />\n          )}\n          {(errors = getFieldError('phone')) ? (\n            <ErrorMsg errors={errors} />\n          ) : null}\n        </div>\n      </div>\n\n      {/* <div className='form_row' style={{ marginTop: '1%' }}>\n        \n        \n      </div> */}\n\n      <div className='form_row' style={{ marginTop: '1%' }}>\n        <div className='form_group col-6 '>\n          <label>\n            Address 1<span>*</span>\n          </label>\n          <div className='additional-textarea'>\n            <div className='form_wrap mb-10'>\n              {getFieldDecorator('line1', {\n                rules: [\n                  {\n                    required: false,\n                    message: 'Please enter the line1.!',\n                  },\n                ],\n              })(<TextArea name='line1' />)}\n            </div>\n          </div>\n        </div>\n\n        <div className='form_group col-6 '>\n          <label>\n            Address 2<span>*</span>\n          </label>\n          <div className='additional-textarea'>\n            <div className='form_wrap mb-10'>\n              {getFieldDecorator('line2', {\n                rules: [\n                  {\n                    required: false,\n                    message: 'Please enter the line 2.!',\n                  },\n                ],\n              })(<TextArea name='line2' />)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='form_row' style={{ marginTop: '1%' }}>\n        <div className='form_group col-3 '>\n          <label>\n            City<span>*</span>\n          </label>\n          {getFieldDecorator('city', {\n            rules: [\n              {\n                required: false,\n                message: 'Please enter the city.!',\n              },\n            ],\n          })(<Input name='city' />)}\n          {(errors = getFieldError('city')) ? (\n            <ErrorMsg errors={errors} />\n          ) : null}\n        </div>\n\n        <div className='form_group col-3 '>\n          <label>\n            Province<span>*</span>\n          </label>\n          {getFieldDecorator('province', {\n            rules: [\n              {\n                required: false,\n                message: 'Please enter the province.!',\n              },\n            ],\n          })(<Input name='province' />)}\n          {(errors = getFieldError('province')) ? (\n            <ErrorMsg errors={errors} />\n          ) : null}\n        </div>\n\n        <div className='form_group col-3 '>\n          <label>\n            Postal Code<span>*</span>\n          </label>\n          {getFieldDecorator('postalCode', {\n            rules: [\n              {\n                required: false,\n                message: 'Please enter the postal code.!',\n              },\n            ],\n          })(<Input name='postalCode' />)}\n          {(errors = getFieldError('postalCode')) ? (\n            <ErrorMsg errors={errors} />\n          ) : null}\n        </div>\n\n        <div className='form_group col-3 '>\n          <label>\n            Country<span>*</span>\n          </label>\n          {getFieldDecorator('country', {\n            rules: [\n              {\n                required: false,\n                message: 'Please enter the country name.!',\n              },\n            ],\n          })(<Input name='country' />)}\n          {(errors = getFieldError('country')) ? (\n            <ErrorMsg errors={errors} />\n          ) : null}\n        </div>\n      </div>\n      <div\n        className='form_row'\n        style={{ marginTop: '1%', marginBottom: '135px' }}\n      >\n        <div className='form_group col-3'>\n          <label>\n            Website<span>*</span>\n          </label>\n          {getFieldDecorator('website', {\n            rules: [\n              {\n                required: false,\n                message: 'Please enter the website name.!',\n              },\n            ],\n          })(<Input name='website' />)}\n          {(errors = getFieldError('website')) ? (\n            <ErrorMsg errors={errors} />\n          ) : null}\n        </div>\n        <div className='form_group col-3'>\n          <label>\n            Code<span>*</span>\n          </label>\n          {getFieldDecorator('code', {\n            rules: [\n              {\n                required: false,\n                message: 'Please enter the stlCode.!',\n              },\n            ],\n          })(<Input name='code' />)}\n          {(errors = getFieldError('code')) ? (\n            <ErrorMsg errors={errors} />\n          ) : null}\n        </div>\n        <div className='form_group col-3 '>\n          <label>\n            Logo<span>*</span>\n          </label>\n          <>\n            <Button\n              type='transparent'\n              style={{\n                width: '100%',\n              }}\n              onClick={onLogoVisible}\n            >\n              Upload Logo\n            </Button>\n            <div className=\"form_row add-user\">\n              {onLogoData && (\n                <div className=\"upd_img_wrap\">\n                  <Thumbnail path={onLogoData} />\n                </div>\n              )}\n            </div>\n            {/* {onLogoData && (\n              <>\n                <div className=\"upd_img_wrap mt-20\">\n                  <a href={onLogoData} target=\"_blank\" download className=\"upd_img\">\n                    <div className=\"dwn_img\">\n                      <img src={onLogoData} />\n                      <div className=\"dwn_ico\">\n                        <Download />\n                      </div>\n                    </div>\n                    <p>\n                      {GetFilename(onLogoData)}\n                    </p>\n                  </a>\n\n                </div>\n              </>\n            )} */}\n          </>\n        </div>\n      </div>\n\n      <div className='form_row' style={{ marginTop: '1%' }}>\n        <div\n          className='form_group col-12'\n          style={{\n            textAlign: 'right',\n            borderTop: '1px solid #919A9F',\n            paddingTop: '20px',\n            paddingBottom: '10px',\n          }}\n        >\n          <Button size='lg' type='secondary' onClick={onCancel}>\n            Cancel\n          </Button>\n          <Button\n            size='lg'\n            onClick={() => {\n              onTabChange('2');\n            }}\n            // onClick={props.onSave}\n            style={{ marginLeft: '10px' }}\n          >\n            Next\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(UpsertForm);\n"]},"metadata":{},"sourceType":"module"}