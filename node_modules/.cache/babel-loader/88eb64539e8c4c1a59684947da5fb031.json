{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/PmrGroup/components/Upsert/UpsertForm.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Input, ErrorMsg, Select, Option, DateTimePicker, Search, Toast } from '../../../../components/common';\nimport HomeAreaFilter from '../../../../components/HomeAreaFilter';\nimport { PMR_SCHEDULE_GROUP_FREQUENCY } from '../../../../constants/pmr';\nimport moment from 'moment';\nimport { displayDate, setMomentObj } from '../../../../util/moment';\nimport { getUserNameWithDesignation } from '../../../../util/common';\nimport ReactTableScroll from 'rc-table-s';\nimport Tooltip from 'rc-tooltip';\nimport { Info } from '../../../../assets/images/popup';\n\nconst _ = require('lodash');\n\nlet pushDayDiff;\n\nconst UpsertForm = props => {\n  const {\n    visible,\n    form,\n    isSetPref,\n    loadResident,\n    total,\n    onHomeArea,\n    getDetail,\n    residentList,\n    onResidentId,\n    defaultValues,\n    onHomeAreaValue,\n    onSearch // errorRef\n\n  } = props;\n  console.log(\"UpsertForm -> props\", props);\n  const {\n    getFieldError,\n    getFieldDecorator,\n    validateFields,\n    setFieldsValue,\n    getFieldsValue\n  } = form;\n  let errors;\n  const [patientData, setPatientData] = useState('');\n  const errorRef = useRef(false);\n  useEffect(() => {\n    if (getDetail) {\n      let obj = {\n        groupName: getDetail.groupName,\n        frequency: getDetail.frequency,\n        totalDays: getDetail.totalDays,\n        pushDays: getDetail.pushDays,\n        dueDays: getDetail.dueDays,\n        startDate: setMomentObj(getDetail.startDate),\n        endDate: setMomentObj(getDetail.endDate),\n        pushDate: displayDate(getDetail.startDate),\n        dueDate: displayDate(getDetail.endDate),\n        homeAreaIds: _.map(getDetail === null || getDetail === void 0 ? void 0 : getDetail.homeAreaIds, dd => {\n          return dd.id;\n        })\n      };\n      setFieldsValue(obj);\n    }\n  }, [getDetail]);\n\n  const disabledDate = current => {\n    if (!current) {\n      return false;\n    }\n\n    const date = moment();\n    date.hour(0);\n    date.minute(0);\n    date.second(0);\n    return current && current < date.endOf('day'); // can not select days before today and today\n  };\n\n  const residentColumns = () => [{\n    text: 'Resident',\n    valueKey: 'mergeLFName',\n    width: '250px',\n    render: (text, record) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          wordWrap: 'break-word'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, text || '-', record.pmrGroup && _.size(record.pmrGroup) > 0 ? /*#__PURE__*/React.createElement(Tooltip, {\n        overlay: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 23\n          }\n        }, \"Group Name\"), _.map(record.pmrGroup, p => {\n          return /*#__PURE__*/React.createElement(\"ul\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }\n          }, p.groupName));\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Info, {\n        style: {\n          marginTop: '2px',\n          marginLeft: '5px',\n          cursor: 'pointer',\n          width: '17px',\n          height: '17px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      })) : null, \" \\xA0\\xA0\", /*#__PURE__*/React.createElement(Tooltip, {\n        overlay: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }\n        }, \"Added from\")),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          height: '30px',\n          width: '40px'\n        },\n        className: \"o_status submitted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, !record.pccId && !record.krollId ? 'WRITI' : 'KROLL'))));\n    }\n  }, {\n    text: \"Room No\",\n    valueKey: \"room\",\n    width: \"100px\",\n    render: text => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 16\n        }\n      }, text ? text : '-');\n    }\n  }, {\n    text: \"Home Area\",\n    valueKey: \"homeAreaId\",\n    width: \"200px\",\n    render: (text, record) => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 16\n        }\n      }, text ? text.name : \"-\");\n    }\n  }, {\n    text: 'Physician',\n    valueKey: 'physicianId',\n    width: '100px',\n    render: text => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 16\n        }\n      }, text ? getUserNameWithDesignation(text) : '-');\n    }\n  }, {\n    text: 'HC #',\n    valueKey: 'hc',\n    width: '100px',\n    render: text => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, text || '-')\n  }];\n\n  const dateFrequencyChanges = (value, key) => {\n    let frequency = null,\n        startDate = null,\n        endDate = null;\n    let fieldValue = getFieldsValue(['frequency', 'startDate', 'endDate']);\n    frequency = key === 'frequency' ? value : fieldValue.frequency;\n    startDate = key === 'startDate' ? value : fieldValue.startDate;\n    endDate = key === 'endDate' ? value : fieldValue.endDate;\n\n    if (frequency && startDate) {\n      if (frequency === PMR_SCHEDULE_GROUP_FREQUENCY.MONTHLY) {\n        endDate = moment(startDate).add(1, 'month');\n      } else if (frequency === PMR_SCHEDULE_GROUP_FREQUENCY.QUARTERLY) {\n        endDate = moment(startDate).add(3, 'month');\n      } else if (frequency === PMR_SCHEDULE_GROUP_FREQUENCY.SEMI_ANNUAL) {\n        endDate = moment(startDate).add(6, 'month');\n      } else if (frequency === PMR_SCHEDULE_GROUP_FREQUENCY.YEARLY) {\n        endDate = moment(startDate).add(1, 'year');\n      }\n\n      setFieldsValue({\n        endDate: endDate\n      }); // Set validation for start date, push days\n\n      let pushDiff = startDate.diff(moment().format(), 'days');\n      pushDayDiff = pushDiff + 1; //set max value for push days\n    }\n\n    if (startDate && endDate) {\n      let dayDiff = endDate.diff(startDate, 'days');\n      setFieldsValue({\n        totalDays: dayDiff\n      });\n    }\n  };\n\n  const dayChangeFn = (value, key) => {\n    value = parseInt(value);\n    let fieldValue = getFieldsValue(['startDate']);\n    let startDate = fieldValue.startDate;\n\n    if (key === 'pushDay') {\n      let validateObj = validatePushDueDays(value, pushDayDiff, 'Push Days');\n\n      if (!validateObj.validateStatus) {\n        Toast.error(validateObj.errorMsg);\n      }\n\n      if (value) {\n        let pushDate = moment(startDate).subtract(value, 'days').format('MM/DD/YYYY');\n        setFieldsValue({\n          pushDate: pushDate\n        });\n      } else {\n        setFieldsValue({\n          pushDate: ''\n        });\n      }\n    } else if (key === 'dueDay') {\n      let validateObj = validatePushDueDays(value, pushDayDiff, 'Due Days');\n\n      if (!validateObj.validateStatus) {\n        Toast.error(validateObj.errorMsg);\n        return;\n      }\n\n      if (value) {\n        if (value > form.getFieldValue('pushDays')) {\n          Toast.error(`Cannot add due days, which can go below the Start Date`);\n          return;\n        }\n\n        let dueDate = moment(startDate).subtract(value, 'days').format('MM/DD/YYYY');\n        setFieldsValue({\n          dueDate: dueDate\n        });\n      } else {\n        setFieldsValue({\n          dueDate: ''\n        });\n      }\n    }\n  };\n\n  function validatePushDueDays(number, pushDayDiff, key) {\n    if (!number) {\n      errorRef.current = {\n        validateStatus: false,\n        errorMsg: 'Please input minimum 1 day'\n      };\n      return errorRef.current;\n    }\n\n    if (!key) return;\n\n    if (number <= pushDayDiff) {\n      errorRef.current = {\n        validateStatus: true,\n        errorMsg: ''\n      };\n      return errorRef.current;\n    }\n\n    errorRef.current = {\n      validateStatus: false,\n      errorMsg: `Cannot add ${key}, which can go below the Start Date`\n    };\n    return errorRef.current;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, \"Group Name\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 23\n    }\n  }, \"*\")), getFieldDecorator('groupName', {\n    rules: [{\n      required: false,\n      whitespace: true\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: '100%'\n    },\n    name: \"groupName\",\n    placeholder: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  })), (errors = getFieldError('groupName')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }) : null), isSetPref ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, \"Frequency\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 26\n    }\n  }, \"*\")), getFieldDecorator('frequency', {\n    rules: [{\n      required: true,\n      message: 'Please Select Frequency'\n    }]\n  })( /*#__PURE__*/React.createElement(Select, {\n    name: \"frequency\",\n    mode: \"single\",\n    onChange: value => dateFrequencyChanges(value, 'frequency'),\n    placeholder: \"Select Frequency\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }\n  }, Object.keys(PMR_SCHEDULE_GROUP_FREQUENCY).map(val => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: val,\n      value: PMR_SCHEDULE_GROUP_FREQUENCY[val],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 23\n      }\n    }, val.replace(/_/g, ' '));\n  }))), (errors = getFieldError('frequency')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  }, \"Start Date\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 27\n    }\n  }, \"*\")), getFieldDecorator('startDate', {\n    rules: [{\n      required: true,\n      message: 'Please select Start date'\n    }]\n  })( /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"startDate\",\n    timePicker: false // value={}\n    ,\n    disabledDate: disabledDate,\n    placeholder: \"select start date\",\n    disabled: !form.getFieldValue('frequency'),\n    onChange: value => dateFrequencyChanges(value, 'startDate'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }\n  })), (errors = getFieldError('startDate')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 17\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 15\n    }\n  }, \"End Date\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 25\n    }\n  }, \"*\")), getFieldDecorator('endDate', {\n    rules: [{\n      required: true,\n      message: 'Please select end date'\n    }]\n  })( /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"endDate\",\n    placeholder: \"select end date\",\n    disabled: true,\n    onChange: value => dateFrequencyChanges(value, 'endDate'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 17\n    }\n  })), (errors = getFieldError('endDate')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 15\n    }\n  }, \"Total Days\"), getFieldDecorator('totalDays')( /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    name: \"totalDays\",\n    placeholder: \"Total Days\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 15\n    }\n  }, \"Push Days\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 26\n    }\n  }, \"*\")), getFieldDecorator('pushDays')( /*#__PURE__*/React.createElement(Input, {\n    name: \"pushDays\",\n    type: \"number\",\n    placeholder: \"Push Days\",\n    min: 1,\n    disabled: !form.getFieldValue('frequency') || !form.getFieldValue('startDate'),\n    onChange: e => dayChangeFn(e.target.value, 'pushDay'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 15\n    }\n  }, \"Push Date\"), getFieldDecorator('pushDate')( /*#__PURE__*/React.createElement(Input, {\n    name: \"pushDate\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 15\n    }\n  }, \"Due Days\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 25\n    }\n  }, \"*\")), getFieldDecorator('dueDays')( /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    name: \"dueDays\",\n    placeholder: \"Due Days\",\n    min: 0,\n    max: form.getFieldValue('pushDays'),\n    disabled: !form.getFieldValue('startDate'),\n    onChange: e => dayChangeFn(e.target.value, 'dueDay'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 15\n    }\n  }, \"Due Date\"), getFieldDecorator('dueDate')( /*#__PURE__*/React.createElement(Input, {\n    name: \"dueDate\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 15\n    }\n  }, \"Home Area\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 26\n    }\n  }, \"*\")), getFieldDecorator('homeAreaIds', {\n    rules: [{\n      required: true,\n      message: 'Please select home area'\n    }]\n  })( /*#__PURE__*/React.createElement(HomeAreaFilter, {\n    name: \"homeAreaIds\",\n    onChange: onHomeArea,\n    defaultValue: defaultValues // defaultValue={homeAreaDefault}\n    ,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 17\n    }\n  })), (errors = getFieldError('homeAreaIds')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 17\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page_head\",\n    style: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 17\n    }\n  }, \"Residents \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"r_no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 29\n    }\n  }, total ? total : '')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group\",\n    style: {\n      paddingTop: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 17\n    }\n  }, (onHomeAreaValue === null || onHomeAreaValue === void 0 ? void 0 : onHomeAreaValue.length) > 0 && residentList && /*#__PURE__*/React.createElement(Search, {\n    onChange: onSearch,\n    allowClear: true,\n    placeholder: \"Search by resident\",\n    style: {\n      width: '250px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(ReactTableScroll, {\n    data: residentList,\n    cols: residentColumns(),\n    showCheckbox: true,\n    onTableSelected: onResidentId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 15\n    }\n  }))) : null));\n};\n\nexport default UpsertForm;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/PmrGroup/components/Upsert/UpsertForm.js"],"names":["React","useEffect","useState","useRef","Input","ErrorMsg","Select","Option","DateTimePicker","Search","Toast","HomeAreaFilter","PMR_SCHEDULE_GROUP_FREQUENCY","moment","displayDate","setMomentObj","getUserNameWithDesignation","ReactTableScroll","Tooltip","Info","_","require","pushDayDiff","UpsertForm","props","visible","form","isSetPref","loadResident","total","onHomeArea","getDetail","residentList","onResidentId","defaultValues","onHomeAreaValue","onSearch","console","log","getFieldError","getFieldDecorator","validateFields","setFieldsValue","getFieldsValue","errors","patientData","setPatientData","errorRef","obj","groupName","frequency","totalDays","pushDays","dueDays","startDate","endDate","pushDate","dueDate","homeAreaIds","map","dd","id","disabledDate","current","date","hour","minute","second","endOf","residentColumns","text","valueKey","width","render","record","wordWrap","pmrGroup","size","p","marginTop","marginLeft","cursor","height","pccId","krollId","name","dateFrequencyChanges","value","key","fieldValue","MONTHLY","add","QUARTERLY","SEMI_ANNUAL","YEARLY","pushDiff","diff","format","dayDiff","dayChangeFn","parseInt","validateObj","validatePushDueDays","validateStatus","error","errorMsg","subtract","getFieldValue","number","rules","required","whitespace","message","Object","keys","val","replace","e","target","paddingLeft","paddingRight","paddingTop","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport {\n  Input,\n  ErrorMsg,\n  Select,\n  Option,\n  DateTimePicker,\n  Search,\n  Toast,\n} from '../../../../components/common';\nimport HomeAreaFilter from '../../../../components/HomeAreaFilter';\nimport { PMR_SCHEDULE_GROUP_FREQUENCY } from '../../../../constants/pmr';\nimport moment from 'moment';\nimport { displayDate, setMomentObj } from '../../../../util/moment';\nimport { getUserNameWithDesignation } from '../../../../util/common';\nimport ReactTableScroll from 'rc-table-s';\nimport Tooltip from 'rc-tooltip';\nimport { Info } from '../../../../assets/images/popup';\n\nconst _ = require('lodash');\n\nlet pushDayDiff;\n\nconst UpsertForm = (props) => {\n  const {\n    visible,\n    form,\n    isSetPref,\n    loadResident,\n    total,\n    onHomeArea,\n    getDetail,\n    residentList,\n    onResidentId,\n    defaultValues,\n    onHomeAreaValue,\n    onSearch,\n    // errorRef\n  } = props;\n  console.log(\"UpsertForm -> props\", props)\n\n  const {\n    getFieldError,\n    getFieldDecorator,\n    validateFields,\n    setFieldsValue,\n    getFieldsValue,\n  } = form;\n  let errors;\n  const [patientData, setPatientData] = useState('');\n  const errorRef = useRef(false);\n\n  useEffect(() => {\n    if (getDetail) {\n      let obj = {\n        groupName: getDetail.groupName,\n        frequency: getDetail.frequency,\n        totalDays: getDetail.totalDays,\n        pushDays: getDetail.pushDays,\n        dueDays: getDetail.dueDays,\n        startDate: setMomentObj(getDetail.startDate),\n        endDate: setMomentObj(getDetail.endDate),\n        pushDate: displayDate(getDetail.startDate),\n        dueDate: displayDate(getDetail.endDate),\n        homeAreaIds: _.map(getDetail?.homeAreaIds, (dd) => {\n          return dd.id;\n        }),\n      };\n      setFieldsValue(obj);\n    }\n  }, [getDetail]);\n\n  const disabledDate = (current) => {\n    if (!current) {\n      return false;\n    }\n    const date = moment();\n    date.hour(0);\n    date.minute(0);\n    date.second(0);\n    return current && current < date.endOf('day'); // can not select days before today and today\n  };\n\n  const residentColumns = () => [\n    {\n      text: 'Resident',\n      valueKey: 'mergeLFName',\n      width: '250px',\n      render: (text, record) => {\n        return (\n          <>\n            <span style={{ wordWrap: 'break-word' }}>\n              {text || '-'}\n              {record.pmrGroup && _.size(record.pmrGroup) > 0 ? (\n                <Tooltip\n                  overlay={\n                    <div>\n                      <b>Group Name</b>\n                      {_.map(record.pmrGroup, (p) => {\n                        return (\n                          <ul>\n                            <li>{p.groupName}</li>\n                          </ul>\n                        );\n                      })}\n                    </div>\n                  }\n                >\n                  <Info\n                    style={{\n                      marginTop: '2px',\n                      marginLeft: '5px',\n                      cursor: 'pointer',\n                      width: '17px',\n                      height: '17px',\n                    }}\n                  />\n                </Tooltip>\n              ) : null} &nbsp;&nbsp;\n              <Tooltip\n                overlay={\n                  <div>\n                    <b>Added from</b>\n                  </div>\n                }\n              >\n                <span style={{ height: '30px', width: '40px' }} className='o_status submitted'>{!record.pccId && !record.krollId ? 'WRITI' : 'KROLL'}</span>\n              </Tooltip>\n            </span>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Room No\",\n      valueKey: \"room\",\n      width: \"100px\",\n      render: (text) => {\n        return <span>{text ? text : '-'}</span>;\n      },\n    },\n    {\n      text: \"Home Area\",\n      valueKey: \"homeAreaId\",\n      width: \"200px\",\n      render: (text, record) => {\n        return <span>{text ? text.name : \"-\"}</span>;\n      },\n    },\n    {\n      text: 'Physician',\n      valueKey: 'physicianId',\n      width: '100px',\n      render: (text) => {\n        return <span>{text ? getUserNameWithDesignation(text) : '-'}</span>;\n      },\n    },\n    {\n      text: 'HC #',\n      valueKey: 'hc',\n      width: '100px',\n      render: (text) => <span>{text || '-'}</span>,\n    },\n  ];\n\n  const dateFrequencyChanges = (value, key) => {\n    let frequency = null,\n      startDate = null,\n      endDate = null;\n    let fieldValue = getFieldsValue(['frequency', 'startDate', 'endDate']);\n\n    frequency = key === 'frequency' ? value : fieldValue.frequency;\n    startDate = key === 'startDate' ? value : fieldValue.startDate;\n    endDate = key === 'endDate' ? value : fieldValue.endDate;\n\n    if (frequency && startDate) {\n      if (frequency === PMR_SCHEDULE_GROUP_FREQUENCY.MONTHLY) {\n        endDate = moment(startDate).add(1, 'month');\n      } else if (frequency === PMR_SCHEDULE_GROUP_FREQUENCY.QUARTERLY) {\n        endDate = moment(startDate).add(3, 'month');\n      } else if (frequency === PMR_SCHEDULE_GROUP_FREQUENCY.SEMI_ANNUAL) {\n        endDate = moment(startDate).add(6, 'month');\n      } else if (frequency === PMR_SCHEDULE_GROUP_FREQUENCY.YEARLY) {\n        endDate = moment(startDate).add(1, 'year');\n      }\n      setFieldsValue({ endDate: endDate });\n      // Set validation for start date, push days\n      let pushDiff = startDate.diff(moment().format(), 'days');\n      pushDayDiff = pushDiff + 1; //set max value for push days\n    }\n\n    if (startDate && endDate) {\n      let dayDiff = endDate.diff(startDate, 'days');\n      setFieldsValue({ totalDays: dayDiff });\n    }\n  };\n\n  const dayChangeFn = (value, key) => {\n    value = parseInt(value);\n    let fieldValue = getFieldsValue(['startDate']);\n    let startDate = fieldValue.startDate;\n\n    if (key === 'pushDay') {\n      let validateObj = validatePushDueDays(value, pushDayDiff, 'Push Days');\n      if (!validateObj.validateStatus) {\n        Toast.error(validateObj.errorMsg);\n      }\n      if (value) {\n        let pushDate = moment(startDate)\n          .subtract(value, 'days')\n          .format('MM/DD/YYYY');\n        setFieldsValue({\n          pushDate: pushDate,\n        });\n      } else {\n        setFieldsValue({ pushDate: '' });\n      }\n    } else if (key === 'dueDay') {\n      let validateObj = validatePushDueDays(value, pushDayDiff, 'Due Days');\n      if (!validateObj.validateStatus) {\n        Toast.error(validateObj.errorMsg);\n        return;\n      }\n      if (value) {\n        if (value > form.getFieldValue('pushDays')) {\n          Toast.error(`Cannot add due days, which can go below the Start Date`);\n          return;\n        }\n        let dueDate = moment(startDate)\n          .subtract(value, 'days')\n          .format('MM/DD/YYYY');\n        setFieldsValue({\n          dueDate: dueDate,\n        });\n      } else {\n        setFieldsValue({ dueDate: '' });\n      }\n    }\n  };\n\n  function validatePushDueDays(number, pushDayDiff, key) {\n    if (!number) {\n      errorRef.current = {\n        validateStatus: false,\n        errorMsg: 'Please input minimum 1 day',\n      };\n      return errorRef.current;\n    }\n    if (!key) return;\n\n    if (number <= pushDayDiff) {\n      errorRef.current = {\n        validateStatus: true,\n        errorMsg: '',\n      };\n      return errorRef.current;\n    }\n    errorRef.current = {\n      validateStatus: false,\n      errorMsg: `Cannot add ${key}, which can go below the Start Date`,\n    };\n    return errorRef.current;\n  }\n\n  return (\n    <>\n      <div className='form_row'>\n        <div className='form_group col-12'>\n          <label>\n            Group Name<span>*</span>\n          </label>\n          {getFieldDecorator('groupName', {\n            rules: [\n              {\n                required: false,\n                whitespace: true,\n              },\n            ],\n          })(\n            <Input\n              style={{ width: '100%' }}\n              name='groupName'\n              placeholder='Name'\n            />\n          )}\n          {(errors = getFieldError('groupName')) ? (\n            <ErrorMsg errors={errors} />\n          ) : null}\n        </div>\n        {isSetPref ? (\n          <>\n            <div className='form_group col-4 required'>\n              <label>\n                Frequency<span>*</span>\n              </label>\n              {getFieldDecorator('frequency', {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please Select Frequency',\n                  },\n                ],\n              })(\n                <Select\n                  name='frequency'\n                  mode='single'\n                  onChange={(value) => dateFrequencyChanges(value, 'frequency')}\n                  placeholder='Select Frequency'\n                >\n                  {Object.keys(PMR_SCHEDULE_GROUP_FREQUENCY).map((val) => {\n                    return (\n                      <Option\n                        key={val}\n                        value={PMR_SCHEDULE_GROUP_FREQUENCY[val]}\n                      >\n                        {val.replace(/_/g, ' ')}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              )}\n              {(errors = getFieldError('frequency')) ? (\n                <ErrorMsg errors={errors} />\n              ) : null}\n            </div>\n            <div className='form_group col-4 required'>\n              <label>\n                Start Date<span>*</span>\n              </label>\n              {getFieldDecorator('startDate', {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please select Start date',\n                  },\n                ],\n              })(\n                <DateTimePicker\n                  name='startDate'\n                  timePicker={false}\n                  // value={}\n                  disabledDate={disabledDate}\n                  placeholder='select start date'\n                  disabled={!form.getFieldValue('frequency')}\n                  onChange={(value) => dateFrequencyChanges(value, 'startDate')}\n                />\n              )}\n              {(errors = getFieldError('startDate')) ? (\n                <ErrorMsg errors={errors} />\n              ) : null}\n            </div>\n            <div className='form_group col-4 required'>\n              <label>\n                End Date<span>*</span>\n              </label>\n              {getFieldDecorator('endDate', {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please select end date',\n                  },\n                ],\n              })(\n                <DateTimePicker\n                  name='endDate'\n                  placeholder='select end date'\n                  disabled={true}\n                  onChange={(value) => dateFrequencyChanges(value, 'endDate')}\n                />\n              )}\n              {(errors = getFieldError('endDate')) ? (\n                <ErrorMsg errors={errors} />\n              ) : null}\n            </div>\n\n            <div className='form_group col-4'>\n              <label>Total Days</label>\n              {getFieldDecorator('totalDays')(\n                <Input\n                  type='number'\n                  name='totalDays'\n                  placeholder='Total Days'\n                  disabled={true}\n                />\n              )}\n            </div>\n            <div className='form_group col-4 required'>\n              <label>\n                Push Days<span>*</span>\n              </label>\n              {getFieldDecorator('pushDays')(\n                <Input\n                  name='pushDays'\n                  type='number'\n                  placeholder='Push Days'\n                  min={1}\n                  disabled={\n                    !form.getFieldValue('frequency') ||\n                    !form.getFieldValue('startDate')\n                  }\n                  onChange={(e) => dayChangeFn(e.target.value, 'pushDay')}\n                />\n              )}\n            </div>\n            <div className='form_group col-4'>\n              <label>Push Date</label>\n              {getFieldDecorator('pushDate')(\n                <Input name='pushDate' disabled />\n              )}\n            </div>\n            <div className='form_group col-4 required'>\n              <label>\n                Due Days<span>*</span>\n              </label>\n              {getFieldDecorator('dueDays')(\n                <Input\n                  type='number'\n                  name='dueDays'\n                  placeholder='Due Days'\n                  min={0}\n                  max={form.getFieldValue('pushDays')}\n                  disabled={!form.getFieldValue('startDate')}\n                  onChange={(e) => dayChangeFn(e.target.value, 'dueDay')}\n                />\n              )}\n            </div>\n            <div className='form_group col-4'>\n              <label>Due Date</label>\n              {getFieldDecorator('dueDate')(<Input name='dueDate' disabled />)}\n            </div>\n\n            <div className='form_group col-12 required'>\n              <label>\n                Home Area<span>*</span>\n              </label>\n              {getFieldDecorator('homeAreaIds', {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please select home area',\n                  },\n                ],\n              })(\n                <HomeAreaFilter\n                  name='homeAreaIds'\n                  onChange={onHomeArea}\n                  defaultValue={defaultValues}\n                  // defaultValue={homeAreaDefault}\n                  multiple={true}\n                />\n              )}\n              {(errors = getFieldError('homeAreaIds')) ? (\n                <ErrorMsg errors={errors} />\n              ) : null}\n            </div>\n\n            <div className='col-12'>\n              <div\n                className='page_head'\n                style={{ paddingLeft: 0, paddingRight: 0 }}\n              >\n                <h3>\n                  Residents <span className='r_no'>{total ? total : ''}</span>\n                </h3>\n\n                <div className='form_group' style={{ paddingTop: '5px' }}>\n                  {onHomeAreaValue?.length > 0 && residentList && (\n                    <Search\n                      onChange={onSearch}\n                      allowClear={true}\n                      placeholder='Search by resident'\n                      style={{ width: '250px' }}\n                    />\n                  )}\n                </div>\n              </div>\n              <ReactTableScroll\n                data={residentList}\n                cols={residentColumns()}\n                showCheckbox={true}\n                onTableSelected={onResidentId}\n              />\n            </div>\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n};\n\nexport default UpsertForm;\n"]},"metadata":{},"sourceType":"module"}