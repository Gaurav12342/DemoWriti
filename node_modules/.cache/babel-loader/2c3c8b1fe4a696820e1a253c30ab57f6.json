{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/common/Reminder/index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createForm } from 'rc-form';\nimport Upsert from './Upsert';\nimport { upsertReminder } from '../../../services/api/routes/common';\nimport CommonService from '../../../services/api/services/common';\nimport { Toast } from './../Toast';\nimport moment from 'moment';\n\nconst Reminder = props => {\n  const {\n    form,\n    visible,\n    onOk,\n    onCancel,\n    record,\n    authUser\n  } = props;\n  const [loader, setLoader] = useState(false);\n\n  const handleOk = value => {\n    form.validateFields((error, value) => {\n      console.log(error, value);\n      if (error) return;\n      setLoader(true);\n      const {\n        method,\n        url\n      } = upsertReminder;\n      value.subCategory = record.subCategory || undefined;\n      value.category = record.category;\n      value.admissionReadmissionId = record.admissionReadmissionId || undefined;\n      value.admissionRxOrderId = record.admissionRxOrderId || undefined; // obj.remindMeOn = AR_REMINDER.ONE_TIME;\n\n      value.timeZone = moment.tz.guess(true);\n      value.dateTime = moment(value.dateTime).seconds(0).tz(value.timeZone).milliseconds(0).toISOString();\n      value.remindsTo = [authUser._id]; // value.reminderGroup = AR_REMINDER_GROUP[\"SELF\"];\n\n      let res = CommonService({\n        method,\n        url,\n        data: value\n      });\n\n      if (res) {\n        const {\n          data\n        } = res;\n\n        if (data.code === \"OK\") {\n          Toast.success({\n            message: `${data.message}`\n          });\n          form.resetFields();\n          onOk(data.data);\n        } else {\n          Toast.error({\n            message: `${data.message}`\n          });\n        }\n\n        setLoader(false);\n      }\n\n      setLoader(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Upsert, Object.assign({}, props, {\n    loader: loader,\n    onOk: handleOk,\n    onCancel: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }\n  }));\n};\n\nReminder.defaultProps = {};\nReminder.propTypes = {\n  options: PropTypes.object,\n  onCancel: PropTypes.func\n};\nexport default createForm()(Reminder);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/common/Reminder/index.js"],"names":["React","useState","PropTypes","createForm","Upsert","upsertReminder","CommonService","Toast","moment","Reminder","props","form","visible","onOk","onCancel","record","authUser","loader","setLoader","handleOk","value","validateFields","error","console","log","method","url","subCategory","undefined","category","admissionReadmissionId","admissionRxOrderId","timeZone","tz","guess","dateTime","seconds","milliseconds","toISOString","remindsTo","_id","res","data","code","success","message","resetFields","defaultProps","propTypes","options","object","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createForm } from 'rc-form';\nimport Upsert from './Upsert'\nimport { upsertReminder } from '../../../services/api/routes/common'\nimport CommonService from '../../../services/api/services/common'\nimport { Toast } from './../Toast'\nimport moment from 'moment'\n\nconst Reminder = (props) => {\n    const { form, visible, onOk, onCancel, record, authUser } = props\n    const [loader, setLoader] = useState(false)\n\n    const handleOk = value => {\n        form.validateFields((error, value) => {\n            console.log(error, value);\n            if (error)\n                return\n            setLoader(true)\n            const { method, url } = upsertReminder\n            value.subCategory = record.subCategory || undefined;\n            value.category = record.category;\n            value.admissionReadmissionId = record.admissionReadmissionId || undefined;\n            value.admissionRxOrderId = record.admissionRxOrderId || undefined;\n            // obj.remindMeOn = AR_REMINDER.ONE_TIME;\n            value.timeZone = moment.tz.guess(true);\n            value.dateTime = moment(value.dateTime)\n                .seconds(0)\n                .tz(value.timeZone)\n                .milliseconds(0)\n                .toISOString();\n            value.remindsTo = [authUser._id];\n            // value.reminderGroup = AR_REMINDER_GROUP[\"SELF\"];\n            let res = CommonService({ method, url, data: value })\n            if (res) {\n                const { data } = res\n                if (data.code === \"OK\") {\n                    Toast.success({ message: `${data.message}` });\n                    form.resetFields();\n                    onOk(data.data);\n                } else {\n                    Toast.error({ message: `${data.message}` });\n                }\n                setLoader(false)\n            }\n            setLoader(false)\n        });\n    }\n\n    return <Upsert {...props} loader={loader}\n        onOk={handleOk} onCancel={onCancel} />\n}\n\nReminder.defaultProps = {};\nReminder.propTypes = {\n    options: PropTypes.object,\n    onCancel: PropTypes.func,\n};\nexport default createForm()(Reminder)"]},"metadata":{},"sourceType":"module"}