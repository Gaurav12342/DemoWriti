{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/components/common/Tab/PersistentTabs.js\";\nimport React, { useState, useEffect, memo } from 'react';\nimport { Tab, Tabs, TabList } from 'react-tabs';\n\nconst PersistentTabs = props => {\n  const {\n    canSwitchTab,\n    onSelect,\n    data: tabData\n  } = props;\n  const tabKeys = tabData.map(d => d.tabKey);\n  const [activeTabIndex, setActiveTabIndex] = useState(props.activeTabIndex || 0);\n  useEffect(() => {\n    setActiveTabIndex(props.activeTabIndex || 0);\n  }, [props.activeTabIndex]);\n\n  const getChildren = (children = []) => {\n    if (Array.isArray(children)) {\n      return children.filter(child => child && tabKeys.includes(child.props.tabKey));\n    } else if (children.constructor === Object) {\n      var _children$props;\n\n      if ((_children$props = children.props) === null || _children$props === void 0 ? void 0 : _children$props.children) {\n        return children.props.children.filter(child => child && tabKeys.includes(child.props.tabKey)) || [];\n      }\n    }\n\n    return [children];\n  };\n\n  const getDisplay = (childrens, index) => {\n    return childrens.length == 1 ? 'block' : activeTabIndex === index ? 'block' : 'none';\n  };\n\n  const childs = getChildren(props.children);\n  const children = React.Children.map(childs, (child, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: props.wrapperClass || 'resi_treat',\n      style: {\n        display: getDisplay(childs, index)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, React.cloneElement(child, {\n      isTabActive: activeTabIndex === index\n    }));\n  });\n\n  const handleSelect = tabIndex => {\n    if (!canSwitchTab) return;\n    setActiveTabIndex(tabIndex);\n    if (onSelect) onSelect(tabIndex);\n  };\n\n  return /*#__PURE__*/React.createElement(Tabs, {\n    selectedIndex: activeTabIndex,\n    onSelect: handleSelect,\n    className: \"tab_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TabList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, tabData.map((tab, index) => {\n    var _props$renderHeader;\n\n    return /*#__PURE__*/React.createElement(Tab, {\n      key: (tab.tabtitle || tab[props.titleKey]) + '_header',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, (_props$renderHeader = props.renderHeader) === null || _props$renderHeader === void 0 ? void 0 : _props$renderHeader.call(props, {\n      item: tab,\n      isActive: activeTabIndex == index\n    }));\n  })), children);\n};\n\nexport default memo(PersistentTabs);\nPersistentTabs.defaultProps = {\n  canSwitchTab: true\n};","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/components/common/Tab/PersistentTabs.js"],"names":["React","useState","useEffect","memo","Tab","Tabs","TabList","PersistentTabs","props","canSwitchTab","onSelect","data","tabData","tabKeys","map","d","tabKey","activeTabIndex","setActiveTabIndex","getChildren","children","Array","isArray","filter","child","includes","constructor","Object","getDisplay","childrens","index","length","childs","Children","wrapperClass","display","cloneElement","isTabActive","handleSelect","tabIndex","tab","tabtitle","titleKey","renderHeader","item","isActive","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, memo } from 'react';\nimport { Tab, Tabs, TabList } from 'react-tabs';\n\nconst PersistentTabs = (props) => {\n  const { canSwitchTab, onSelect, data: tabData } = props;\n  const tabKeys = tabData.map(d => d.tabKey);\n  const [activeTabIndex, setActiveTabIndex] = useState(props.activeTabIndex || 0);\n\n  useEffect(() => {\n    setActiveTabIndex(props.activeTabIndex || 0)\n  }, [props.activeTabIndex])\n\n  const getChildren = (children = []) => {\n\n    if (Array.isArray(children)) {\n      return children.filter(child => child && tabKeys.includes(child.props.tabKey))\n    } else if (children.constructor === Object) {\n      if (children.props?.children) {\n        return children.props.children.filter(child => child && tabKeys.includes(child.props.tabKey)) || []\n      }\n    }\n    return [children]\n  }\n\n  const getDisplay = (childrens, index) => {\n    return childrens.length == 1 ? 'block' : activeTabIndex === index ? 'block' : 'none'\n  }\n\n  const childs = getChildren(props.children);\n\n  const children = React.Children.map(childs, (child, index) => {\n    return (\n      <div\n        className={props.wrapperClass || 'resi_treat'}\n        style={{ display: getDisplay(childs, index) }}>\n        {React.cloneElement(child, { isTabActive: activeTabIndex === index })}\n      </div>\n    )\n  });\n\n  const handleSelect = (tabIndex) => {\n    if (!canSwitchTab) return\n    setActiveTabIndex(tabIndex)\n    if (onSelect)\n      onSelect(tabIndex)\n  }\n\n  return (\n    <Tabs selectedIndex={activeTabIndex} onSelect={handleSelect} className=\"tab_wrapper\" >\n      <TabList>\n        {tabData.map((tab, index) =>\n          <Tab key={(tab.tabtitle || tab[props.titleKey]) + '_header'}>\n            {\n              props.renderHeader?.({ item: tab, isActive: activeTabIndex == index })\n            }\n          </Tab>\n\n        )}\n      </TabList>\n      {children}\n    </Tabs>\n  );\n};\nexport default memo(PersistentTabs);\nPersistentTabs.defaultProps = {\n  canSwitchTab: true\n}"]},"metadata":{},"sourceType":"module"}