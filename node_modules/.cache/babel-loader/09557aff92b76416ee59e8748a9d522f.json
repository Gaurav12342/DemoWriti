{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Xray/List/DetailViewStl.js\";\nimport React, { Component } from 'react';\nimport { Button } from '../../../components/common/index';\nimport Modal from '../../../components/common/Popup/index';\nimport STLRequest from './STLRequest';\nimport STLResponse from './STLResponse';\nimport { IMAGING_DIAGNOSTIC_STATUS } from '../../../constants/xray';\nimport { Toast } from '../../../components/common/index';\nimport { getXrayPDF } from '../../../services/api/routes/x_ray';\nimport axios from '../../../services/api/config';\n\nclass DetailViewStl extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      downloadButton: false\n    };\n\n    this.handleCancel = () => {\n      this.props.onCancel(false, null);\n    };\n\n    this.downLoadXrayPdf = () => {\n      this.setState({\n        downloadButton: true\n      });\n      axios({ ...getXrayPDF,\n        data: {\n          xrayid: this.props.data.id\n        }\n      }).then(data => {\n        if (data.statusText === \"OK\") {\n          let a = document.createElement('a');\n          a.download = \"x-ray-result.pdf\";\n          a.href = data.data.data[0].path;\n          a.style.display = 'none';\n          document.body.appendChild(a);\n          a.click();\n          document.body.removeChild(a);\n          this.setState({\n            downloadButton: false\n          });\n        } else {\n          Toast.error('Something went wrong ');\n          this.setState({\n            downloadButton: false\n          });\n        }\n      }).catch(error => {\n        this.setState({\n          downloadButton: false\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      data,\n      isVisible,\n      onCancel\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Modal, {\n      maskClosable: false,\n      width: 750,\n      visible: isVisible,\n      onOk: this.handleCancel,\n      onCancel: this.handleCancel,\n      title: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, data.title), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"request_no\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, data.requestNo)),\n      footer: [/*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        className: \"screen-btn gray-btn\",\n        type: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, \"Print\"), data.status === IMAGING_DIAGNOSTIC_STATUS.COMPLETED ? /*#__PURE__*/React.createElement(Button, {\n        className: \"screen-btn\",\n        key: \"submit\",\n        loading: this.state.downloadButton,\n        onClick: this.downLoadXrayPdf,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }\n      }, \"Download\") : null)],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(STLRequest, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(STLResponse, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default DetailViewStl;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Xray/List/DetailViewStl.js"],"names":["React","Component","Button","Modal","STLRequest","STLResponse","IMAGING_DIAGNOSTIC_STATUS","Toast","getXrayPDF","axios","DetailViewStl","state","downloadButton","handleCancel","props","onCancel","downLoadXrayPdf","setState","data","xrayid","id","then","statusText","a","document","createElement","download","href","path","style","display","body","appendChild","click","removeChild","error","catch","render","isVisible","title","requestNo","status","COMPLETED"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from '../../../components/common/index'\nimport Modal from '../../../components/common/Popup/index'\nimport STLRequest from './STLRequest'\nimport STLResponse from './STLResponse'\nimport { IMAGING_DIAGNOSTIC_STATUS } from '../../../constants/xray';\nimport { Toast } from '../../../components/common/index';\nimport { getXrayPDF } from '../../../services/api/routes/x_ray';\nimport axios from '../../../services/api/config'\nclass DetailViewStl extends Component {\n\n    state = {\n        downloadButton: false\n    }\n    handleCancel = () => {\n        this.props.onCancel(false, null)\n    }\n    downLoadXrayPdf = () => {\n        this.setState({\n            downloadButton: true\n        })\n\n        axios({ ...getXrayPDF, data: { xrayid: this.props.data.id } }).then(data => {\n            if (data.statusText === \"OK\") {\n                let a = document.createElement('a');\n                a.download = \"x-ray-result.pdf\";\n                a.href = data.data.data[0].path\n                a.style.display = 'none';\n                document.body.appendChild(a);\n                a.click();\n                document.body.removeChild(a);\n                this.setState({\n                    downloadButton: false\n                })\n            }\n            else {\n                Toast.error('Something went wrong ')\n                this.setState({\n                    downloadButton: false\n                })\n            }\n\n        }).catch(error => {\n            this.setState({\n                downloadButton: false\n            })\n        })\n\n\n\n\n    }\n    render() {\n        const { data, isVisible, onCancel } = this.props\n\n        return (\n            <Modal\n                maskClosable={false}\n                width={750}\n                visible={isVisible}\n                onOk={this.handleCancel}\n                onCancel={this.handleCancel}\n                title={<div>\n                    <span>{data.title}</span>\n                    <span className=\"request_no\">{data.requestNo}</span>\n                </div>}\n                footer={[\n                    <>\n                        <Button className='screen-btn gray-btn' type=\"primary\">Print</Button>\n                        {\n                            data.status === IMAGING_DIAGNOSTIC_STATUS.COMPLETED ?\n                                <Button className='screen-btn' key=\"submit\"\n                                    loading={this.state.downloadButton}\n                                    onClick={this.downLoadXrayPdf}>\n                                    Download\n                            </Button> : null\n                        }\n                    </>\n                ]}>\n                <div >\n                    <STLRequest data={data}></STLRequest>\n                    <STLResponse data={data}></STLResponse>\n                </div>\n            </Modal>\n        );\n    }\n}\n\nexport default DetailViewStl;"]},"metadata":{},"sourceType":"module"}