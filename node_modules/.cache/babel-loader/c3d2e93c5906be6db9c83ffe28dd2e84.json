{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/Customers/Clientele/components/UpsertForm.js\";\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Input, Button, TextArea, ErrorMsg } from '../../../../components/common/index';\nimport Select, { Option } from '../../../../components/common/AutoComplete';\nimport { CLIENTELE_TYPE } from '../../../../constants/Customer';\n\nconst _ = require('lodash');\n\nfunction UpsertForm(props) {\n  let errors;\n  const {\n    form,\n    queryData,\n    getPharmacy,\n    organization,\n    imgDia,\n    editCustomerData,\n    handleClienteleRedirect,\n    editId,\n    onTabChange\n  } = props;\n  const {\n    getFieldError,\n    getFieldDecorator,\n    setFieldsValue,\n    getFieldsValue,\n    getFieldValue\n  } = form;\n  const PREVENT_SPECIAL_CHARS_ARRAY = ['e', '=', ',', '-', '.'];\n  useEffect(() => {\n    if (editId) {\n      if (editCustomerData) {\n        let emailData = _.find(editCustomerData.emails, {\n          isPrimary: true\n        });\n\n        let faxData = _.find(editCustomerData.faxes, {\n          isPrimary: true\n        });\n\n        let addressData = _.find(editCustomerData.addresses);\n\n        let obj = {\n          name: editCustomerData.name,\n          code: editCustomerData.code,\n          phone: editCustomerData.phone,\n          website: editCustomerData.website,\n          pharmacyId: editCustomerData.pharmacyId,\n          orgId: editCustomerData.orgId,\n          imagingAndDiagnosticId: editCustomerData.imagingAndDiagnosticId,\n          email: emailData ? emailData.email : '',\n          fax: faxData ? faxData.fax : '',\n          city: addressData ? addressData.city : '',\n          line1: addressData ? addressData.line1 : '',\n          line2: addressData ? addressData.line2 : '',\n          postalCode: addressData ? addressData.postalCode : '',\n          province: addressData ? addressData.province : '',\n          country: addressData ? addressData.country : ''\n        };\n        setFieldsValue(obj);\n        setFieldsValue({\n          stlCode: editCustomerData ? editCustomerData.stlCode : ''\n        });\n      } else {\n        return null;\n      }\n    }\n  }, [editId, editCustomerData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Name\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, \"*\")), getFieldDecorator('name', {\n    rules: [{\n      required: true,\n      message: 'Please enter the name.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }\n  })), (errors = getFieldError('name')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }) : null), queryData == CLIENTELE_TYPE.HOME && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Associated pharmacy\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 36\n    }\n  }, \"*\")), getFieldDecorator('pharmacyId', {\n    rules: [{\n      required: false,\n      message: 'Please enter the name.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Select, {\n    name: \"pharmacyId\",\n    placeholder: \"Select associate pharmacy\",\n    showSearch: true,\n    filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, getPharmacy.map(data => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: data._id,\n      value: data._id,\n      disabled: !data.isActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 23\n      }\n    }, data.name);\n  })))), queryData == CLIENTELE_TYPE.HOME ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Organization\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, \"*\")), getFieldDecorator('orgId', {\n    rules: [{\n      required: false,\n      message: 'Please enter the name.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Select, {\n    name: \"orgId\",\n    showSearch: true,\n    filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    placeholder: \"Select organization\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, organization && organization.length ? organization.map(data => /*#__PURE__*/React.createElement(Option, {\n    key: data._id,\n    value: data._id,\n    disabled: !data.isActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 23\n    }\n  }, data.name)) : null))) : null, queryData == CLIENTELE_TYPE.HOME && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"Imagine and Diagnostics\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 40\n    }\n  }, \"*\")), getFieldDecorator('imagingAndDiagnosticId', {\n    rules: [{\n      required: false,\n      message: 'Please enter the name.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Select, {\n    showSearch: true,\n    filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    name: \"imagingAndDiagnosticId\",\n    placeholder: \"Select imagning and diagnostics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, imgDia && imgDia.length && imgDia.map(data => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: data._id,\n      value: data._id,\n      disabled: !data.isActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, data.name);\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, \"Email\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 20\n    }\n  }, \"*\")), getFieldDecorator('email', {\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please enter the email addrsess.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 16\n    }\n  })), (errors = getFieldError('email')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, \"Fax\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 18\n    }\n  }, \"*\")), getFieldDecorator('fax', {\n    rules: [{\n      required: false,\n      message: 'Please enter the fax.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"fax\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 16\n    }\n  })), (errors = getFieldError('fax')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, \"Phone No\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 23\n    }\n  }, \"*\")), getFieldDecorator('phone', {\n    rules: [{\n      required: false,\n      message: 'Please enter the phone number.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    name: \"phone\",\n    onKeyDown: evt => {\n      if (PREVENT_SPECIAL_CHARS_ARRAY.includes(evt.key)) evt.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  })), (errors = getFieldError('phone')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, \"Website\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 22\n    }\n  }, \"*\")), getFieldDecorator('website', {\n    rules: [{\n      required: false,\n      message: 'Please enter the website.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"website\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 16\n    }\n  })), (errors = getFieldError('website')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-6 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, \"address1\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 23\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"additional-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap mb-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }, getFieldDecorator('line1', {\n    rules: [{\n      required: false,\n      message: 'Please enter the addrsess line 1.!'\n    }]\n  })( /*#__PURE__*/React.createElement(TextArea, {\n    name: \"line1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 20\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-6 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, \"address2\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 23\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"additional-textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap mb-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }, getFieldDecorator('line2', {\n    rules: [{\n      required: false,\n      message: 'Please enter the addrsess line 2.!'\n    }]\n  })( /*#__PURE__*/React.createElement(TextArea, {\n    name: \"line2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 20\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, \"City\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 19\n    }\n  }, \"*\")), getFieldDecorator('city', {\n    rules: [{\n      required: false,\n      message: 'Please enter the city.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 16\n    }\n  })), (errors = getFieldError('city')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 15\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, \"Province\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 23\n    }\n  }, \"*\")), getFieldDecorator('province', {\n    rules: [{\n      required: false,\n      message: 'Please enter the province.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"province\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 16\n    }\n  })), (errors = getFieldError('province')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }, \"Postal Code\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 26\n    }\n  }, \"*\")), getFieldDecorator('postalCode', {\n    rules: [{\n      required: false,\n      message: 'Please enter the postal code.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"postalCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 16\n    }\n  })), (errors = getFieldError('postalCode')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 15\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }, \"Country\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 22\n    }\n  }, \"*\")), getFieldDecorator('country', {\n    rules: [{\n      required: false,\n      message: 'Please enter the country.!'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 16\n    }\n  })), (errors = getFieldError('country')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 15\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginBottom: '250px',\n      opacity: getFieldValue('imagingAndDiagnosticId') ? '1' : '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }, \"StlCode\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 22\n    }\n  }, \"*\")), getFieldDecorator('stlCode', {\n    rules: [{\n      required: !!getFieldValue('imagingAndDiagnosticId'),\n      message: 'Please enter stl code'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    name: \"stlCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 16\n    }\n  })), (errors = getFieldError('stlCode')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 15\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row\",\n    style: {\n      marginTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group col-12 required\",\n    style: {\n      textAlign: 'right',\n      borderTop: '1px solid #919A9F',\n      paddingTop: '20px',\n      paddingBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    size: \"lg\",\n    type: \"secondary\",\n    onClick: handleClienteleRedirect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 15\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginLeft: '10px'\n    },\n    size: \"lg\",\n    onClick: () => {\n      onTabChange('2');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 15\n    }\n  }, \"Next\"))))));\n}\n\nexport default withRouter(UpsertForm);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/Customers/Clientele/components/UpsertForm.js"],"names":["React","useEffect","withRouter","Input","Button","TextArea","ErrorMsg","Select","Option","CLIENTELE_TYPE","_","require","UpsertForm","props","errors","form","queryData","getPharmacy","organization","imgDia","editCustomerData","handleClienteleRedirect","editId","onTabChange","getFieldError","getFieldDecorator","setFieldsValue","getFieldsValue","getFieldValue","PREVENT_SPECIAL_CHARS_ARRAY","emailData","find","emails","isPrimary","faxData","faxes","addressData","addresses","obj","name","code","phone","website","pharmacyId","orgId","imagingAndDiagnosticId","email","fax","city","line1","line2","postalCode","province","country","stlCode","marginTop","rules","required","message","HOME","input","option","children","toLowerCase","indexOf","map","data","_id","isActive","length","type","evt","includes","key","preventDefault","marginBottom","opacity","textAlign","borderTop","paddingTop","paddingBottom","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Input,\n  Button,\n  TextArea,\n  ErrorMsg,\n} from '../../../../components/common/index';\nimport Select, { Option } from '../../../../components/common/AutoComplete';\nimport { CLIENTELE_TYPE } from '../../../../constants/Customer';\nconst _ = require('lodash');\n\nfunction UpsertForm(props) {\n  let errors;\n  const {\n    form,\n    queryData,\n    getPharmacy,\n    organization,\n    imgDia,\n    editCustomerData,\n    handleClienteleRedirect,\n    editId,\n    onTabChange,\n  } = props;\n  const {\n    getFieldError,\n    getFieldDecorator,\n    setFieldsValue,\n    getFieldsValue,\n    getFieldValue,\n  } = form;\n  const PREVENT_SPECIAL_CHARS_ARRAY = ['e', '=', ',', '-', '.'];\n\n  useEffect(() => {\n    if (editId) {\n      if (editCustomerData) {\n        let emailData = _.find(editCustomerData.emails, { isPrimary: true });\n        let faxData = _.find(editCustomerData.faxes, { isPrimary: true });\n        let addressData = _.find(editCustomerData.addresses);\n        let obj = {\n          name: editCustomerData.name,\n          code: editCustomerData.code,\n          phone: editCustomerData.phone,\n          website: editCustomerData.website,\n          pharmacyId: editCustomerData.pharmacyId,\n          orgId: editCustomerData.orgId,\n          imagingAndDiagnosticId: editCustomerData.imagingAndDiagnosticId,\n          email: emailData ? emailData.email : '',\n          fax: faxData ? faxData.fax : '',\n          city: addressData ? addressData.city : '',\n          line1: addressData ? addressData.line1 : '',\n          line2: addressData ? addressData.line2 : '',\n          postalCode: addressData ? addressData.postalCode : '',\n          province: addressData ? addressData.province : '',\n          country: addressData ? addressData.country : '',\n        };\n        setFieldsValue(obj);\n        setFieldsValue({\n          stlCode: editCustomerData ? editCustomerData.stlCode : '',\n        });\n      } else {\n        return null;\n      }\n    }\n  }, [editId, editCustomerData]);\n\n  return (\n    <>\n      <>\n        <div className='form_row' style={{ marginTop: '2%' }}>\n          <div className='form_group col-3 required'>\n            <label>\n              Name<span>*</span>\n            </label>\n            {getFieldDecorator('name', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please enter the name.!',\n                },\n              ],\n            })(<Input name='name' />)}\n            {(errors = getFieldError('name')) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n\n          {queryData == CLIENTELE_TYPE.HOME && (\n            <div className='form_group col-3 '>\n              <label>\n                Associated pharmacy<span>*</span>\n              </label>\n              {getFieldDecorator('pharmacyId', {\n                rules: [\n                  {\n                    required: false,\n                    message: 'Please enter the name.!',\n                  },\n                ],\n              })(\n                <Select\n                  name='pharmacyId'\n                  placeholder='Select associate pharmacy'\n                  showSearch\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {getPharmacy.map((data) => {\n                    return (\n                      <Option key={data._id} value={data._id} disabled={!data.isActive}>\n                        {data.name}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              )}\n            </div>\n          )}\n\n          {queryData == CLIENTELE_TYPE.HOME ? (\n            <div className='form_group col-3 '>\n              <label>\n                Organization<span>*</span>\n              </label>\n              {getFieldDecorator('orgId', {\n                rules: [\n                  {\n                    required: false,\n                    message: 'Please enter the name.!',\n                  },\n                ],\n              })(\n                <Select\n                  name='orgId'\n                  showSearch\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                  placeholder='Select organization'\n                >\n                  {organization && organization.length\n                    ? organization.map((data) => (\n                      <Option key={data._id} value={data._id} disabled={!data.isActive}>\n                        {data.name}\n                      </Option>\n                    ))\n                    : null}\n                </Select>\n              )}\n            </div>\n          ) : null}\n\n          {queryData == CLIENTELE_TYPE.HOME && (\n            <div className='form_group col-3 '>\n              <label>\n                Imagine and Diagnostics<span>*</span>\n              </label>\n              {getFieldDecorator('imagingAndDiagnosticId', {\n                rules: [\n                  {\n                    required: false,\n                    message: 'Please enter the name.!',\n                  },\n                ],\n              })(\n                <Select\n                  showSearch\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                  name='imagingAndDiagnosticId'\n                  placeholder='Select imagning and diagnostics'\n                >\n                  {imgDia &&\n                    imgDia.length &&\n                    imgDia.map((data) => {\n                      return (\n                        <Option key={data._id} value={data._id} disabled={!data.isActive}>\n                          {data.name}\n                        </Option>\n                      );\n                    })}\n                </Select>\n              )}\n            </div>\n          )}\n        </div>\n\n        <div className='form_row' style={{ marginTop: '1%' }}>\n          <div className='form_group col-3 required'>\n            <label>\n              Email<span>*</span>\n            </label>\n            {getFieldDecorator('email', {\n              rules: [\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail!',\n                },\n                {\n                  required: true,\n                  message: 'Please enter the email addrsess.!',\n                },\n              ],\n            })(<Input name='email' />)}\n            {(errors = getFieldError('email')) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n\n          <div className='form_group col-3'>\n            <label>\n              Fax<span>*</span>\n            </label>\n            {getFieldDecorator('fax', {\n              rules: [\n                {\n                  required: false,\n                  message: 'Please enter the fax.!',\n                },\n              ],\n            })(<Input name='fax' />)}\n            {(errors = getFieldError('fax')) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n\n          <div className='form_group col-3'>\n            <label>\n              Phone No<span>*</span>\n            </label>\n            {getFieldDecorator('phone', {\n              rules: [\n                {\n                  required: false,\n                  message: 'Please enter the phone number.!',\n                },\n              ],\n            })(\n              <Input\n                type='number'\n                name='phone'\n                onKeyDown={(evt) => {\n                  if (PREVENT_SPECIAL_CHARS_ARRAY.includes(evt.key))\n                    evt.preventDefault();\n                }}\n              />\n            )}\n            {(errors = getFieldError('phone')) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n\n          <div className='form_group col-3'>\n            <label>\n              Website<span>*</span>\n            </label>\n            {getFieldDecorator('website', {\n              rules: [\n                {\n                  required: false,\n                  message: 'Please enter the website.!',\n                },\n              ],\n            })(<Input name='website' />)}\n            {(errors = getFieldError('website')) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n        </div>\n\n        <div className='form_row' style={{ marginTop: '1%' }}>\n          <div className='form_group col-6 '>\n            <label>\n              address1<span>*</span>\n            </label>\n            <div className='additional-textarea'>\n              <div className='form_wrap mb-10'>\n                {getFieldDecorator('line1', {\n                  rules: [\n                    {\n                      required: false,\n                      message: 'Please enter the addrsess line 1.!',\n                    },\n                  ],\n                })(<TextArea name='line1' />)}\n              </div>\n            </div>\n          </div>\n\n          <div className='form_group col-6 '>\n            <label>\n              address2<span>*</span>\n            </label>\n            <div className='additional-textarea'>\n              <div className='form_wrap mb-10'>\n                {getFieldDecorator('line2', {\n                  rules: [\n                    {\n                      required: false,\n                      message: 'Please enter the addrsess line 2.!',\n                    },\n                  ],\n                })(<TextArea name='line2' />)}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className='form_row'>\n          <div className='form_group col-3 '>\n            <label>\n              City<span>*</span>\n            </label>\n            {getFieldDecorator('city', {\n              rules: [\n                {\n                  required: false,\n                  message: 'Please enter the city.!',\n                },\n              ],\n            })(<Input name='city' />)}\n            {(errors = getFieldError('city')) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n\n          <div className='form_group col-3 '>\n            <label>\n              Province<span>*</span>\n            </label>\n            {getFieldDecorator('province', {\n              rules: [\n                {\n                  required: false,\n                  message: 'Please enter the province.!',\n                },\n              ],\n            })(<Input name='province' />)}\n            {(errors = getFieldError('province')) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n\n          <div className='form_group col-3 '>\n            <label>\n              Postal Code<span>*</span>\n            </label>\n            {getFieldDecorator('postalCode', {\n              rules: [\n                {\n                  required: false,\n                  message: 'Please enter the postal code.!',\n                },\n              ],\n            })(<Input name='postalCode' />)}\n            {(errors = getFieldError('postalCode')) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n\n          <div className='form_group col-3 '>\n            <label>\n              Country<span>*</span>\n            </label>\n            {getFieldDecorator('country', {\n              rules: [\n                {\n                  required: false,\n                  message: 'Please enter the country.!',\n                },\n              ],\n            })(<Input name='country' />)}\n            {(errors = getFieldError('country')) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n        </div>\n\n        <div\n          className='form_row'\n          style={{\n            marginBottom: '250px',\n            opacity: getFieldValue('imagingAndDiagnosticId') ? '1' : '0',\n          }}\n        >\n          {/* {getFieldValue(\"imagingAndDiagnosticId\") ? ( */}\n          <div className='form_group col-3 '>\n            <label>\n              StlCode<span>*</span>\n            </label>\n            {getFieldDecorator('stlCode', {\n              rules: [\n                {\n                  required: !!getFieldValue('imagingAndDiagnosticId'),\n                  message: 'Please enter stl code',\n                },\n              ],\n            })(<Input name='stlCode' />)}\n            {(errors = getFieldError('stlCode')) ? (\n              <ErrorMsg errors={errors} />\n            ) : null}\n          </div>\n          {/* ) : null} */}\n        </div>\n\n        <div className='form_row' style={{ marginTop: '1%' }}>\n          <div\n            className='form_group col-12 required'\n            style={{\n              textAlign: 'right',\n              borderTop: '1px solid #919A9F',\n              paddingTop: '20px',\n              paddingBottom: '10px',\n            }}\n          >\n            <>\n              <Button\n                size='lg'\n                type='secondary'\n                onClick={handleClienteleRedirect}\n              >\n                Cancel\n              </Button>\n              <Button\n                style={{ marginLeft: '10px' }}\n                size='lg'\n                onClick={() => {\n                  onTabChange('2');\n                }}\n              >\n                Next\n              </Button>\n            </>\n          </div>\n        </div>\n      </>\n    </>\n  );\n}\nexport default withRouter(UpsertForm);\n"]},"metadata":{},"sourceType":"module"}