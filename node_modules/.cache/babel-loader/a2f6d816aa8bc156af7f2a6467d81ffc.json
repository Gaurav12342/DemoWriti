{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/NotesTab/index.js\";\nimport { da, te } from \"date-fns/locale\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { ConfirmPopup, Toast } from \"../../../../components/common\";\nimport Table from \"../../../../components/common/Table/index\";\nimport axios from \"../../../../services/api/config\";\nimport { getAllNotes, updateNote } from \"../../../../services/api/routes/notes\";\nimport { userPaginate } from \"../../../../services/api/routes/user\";\nimport { USER_TYPE } from \"./../../../../constants/User\";\nimport { displayDateTime } from \"../../../../util/moment\";\nimport { getUserNameWithDesignation } from \"../../../../util/common\";\nimport _, { filter } from \"lodash\";\nimport { priority } from \"./../../../../constants/notes\";\nimport { Edit, Info } from \"../../../../assets/images/popup\";\nimport { DelNotes } from \"../../../../assets/images/resident-detail\";\nimport EditModal from \"./Components/Editmodel\";\nimport Header from \"./Components/Header\";\nimport moment from \"moment\";\nimport ViewNotesPopup from \"../../../../components/NotesPopup/View\";\nimport ViewNoteModal from \"../../../../components/NotesPopup/ViewNoteModal\";\n\nconst NoteTab = props => {\n  const {\n    isTabActive,\n    authUser,\n    resident\n  } = props;\n  const [apiFilter, setApiFilter] = useState({\n    page: 1,\n    limit: 10,\n    populate: [{\n      prescriptionOrderId: [\"orderNumber\"]\n    }, {\n      prescriptionMedicationId: [\"uniqueNumber\"]\n    }, {\n      pmrId: [\"pmrId\"]\n    }, {\n      addedBy: [\"mergeLFName\", \"type\", {\n        \"assignedCustomer\": [\"isActive\", \"homeId\", {\n          \"designationId\": [\"name\", \"code\", \"parentId\"]\n        }]\n      }]\n    }, {\n      pmrOrderId: [\"orderNumber\"]\n    }, {\n      xrayId: [\"orderNumber\"]\n    }, {\n      residentDocumentId: [\"residentDocId\"]\n    }, {\n      virtualVisitId: [\"_id\"]\n    }, {\n      noteType: [\"name\"]\n    }, {\n      \"history.noteType\": [\"name\"]\n    }, {\n      \"history.addedBy\": []\n    }],\n    find: {\n      residentId: resident.currentResidentId,\n      isDeleted: false\n    }\n  });\n  const [userListForFilter, setUserListForFilter] = useState([]);\n  const [userListForFilterLoading, setUserListForFilterLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState(0);\n  const [showConfirmMessage, setShowConfirmMessage] = useState(false);\n  const [idForRecordToDelete, setIdForRecordToDelete] = useState(false);\n  const [isEditVisible, setIsEditVisible] = useState(false);\n  const [noteRecordForEdit, setNoteRecordForEdit] = useState({});\n  const [updateButtonLoading, setUpdateButtonLoading] = useState(true);\n  const [tableLoading, setTableLoading] = useState(true);\n  const [detailViewVisible, setDetailViewVisible] = useState(false);\n  const [detailViewRecord, setDetailViewRecord] = useState({});\n  useEffect(() => {\n    if (isTabActive) {\n      fetch();\n    }\n  }, [isTabActive, apiFilter]);\n  useEffect(() => {\n    if (isTabActive) {\n      setUserListForFilterLoading(true);\n      let userFilter = {\n        fields: [\"mergeLFName\"],\n        find: {\n          type: [USER_TYPE.HOME.NURSE, USER_TYPE.HOME.PHYSICIAN]\n        }\n      };\n      axios({ ...userPaginate,\n        data: {\n          query: userFilter\n        }\n      }).then(data => {\n        if (data.data.code === \"OK\") {\n          setUserListForFilter(data.data.data.list);\n        } else {\n          Toast.error(data.data.message);\n        }\n\n        setUserListForFilterLoading(false);\n      }).catch(error => {\n        setUserListForFilterLoading(false);\n      });\n    }\n  }, [isTabActive]);\n\n  const fetch = () => {\n    setTableLoading(true);\n    axios({ ...getAllNotes,\n      data: {\n        query: apiFilter\n      }\n    }).then(data => {\n      if (data.data.code === \"OK\") {\n        _.map(data.data.data.data, record => {\n          if (record.prescriptionOrderId) {\n            record.recordName = `Prescription Order ${record.prescriptionOrderId.orderNumber}`;\n            return;\n          } else if (record.residentDocumentId) {\n            record.recordName = `Resident Document ${record.residentDocumentId.residentDocId}`;\n            return;\n          } else if (record.pmrId) {\n            record.recordName = `Pmr ${record.pmrId.pmrId}`;\n            return;\n          } else if (record.xrayId) {\n            record.recordName = `Xray ${record.xrayId.orderNumber}`;\n            return;\n          } else if (record.prescriptionMedicationId) {\n            record.recordName = `Prescription-Medication  ${record.prescriptionMedicationId.uniqueNumber}`;\n            return;\n          } else if (record.pmrOrderId) {\n            record.recordName = `Pmr Order ${record.pmrOrderId.orderNumber}`;\n            return;\n          } else if (record.virtualVisitId) {\n            record.recordName = `Virtual Visit `;\n            return;\n          }\n        });\n\n        setCount(data.data.data.count);\n        setData(data.data.data.data);\n        console.log(\"ðŸš€ ~ file: index.js ~ line 144 ~ .then ~ data.data.data.data\", data.data.data.data); // _.includes(data.data.data.data,(x)=>{x.isActive=true})\n      }\n\n      setTableLoading(false);\n    }).catch(error => {\n      setTableLoading(false);\n    });\n  };\n\n  const onShowSizeChange = size => {\n    if (size) {\n      setApiFilter(prevFilter => ({ ...prevFilter,\n        limit: size,\n        page: 1\n      }));\n    }\n  };\n\n  const handleDeleteNoteButtonClick = record => {\n    setIdForRecordToDelete(record._id);\n    setShowConfirmMessage(true);\n  };\n\n  const handleEditNoteButtonClick = record => {\n    setNoteRecordForEdit(record);\n    setIsEditVisible(true);\n  };\n\n  const handleNoteEditClose = () => {\n    setIsEditVisible(false);\n  };\n\n  const handleNoteUpdate = (id, data) => {\n    setUpdateButtonLoading(true);\n    const {\n      method,\n      url,\n      baseURL\n    } = updateNote;\n    axios({\n      method,\n      url: `${url}/${id}`,\n      baseURL,\n      data\n    }).then(data => {\n      if (data.data.code === \"OK\") {\n        fetch();\n        Toast.success(data.data.message);\n      } else {\n        Toast.error(data.data.message);\n      }\n\n      setUpdateButtonLoading(false);\n      handleNoteEditClose();\n    }).catch(error => {\n      setUpdateButtonLoading(false);\n      handleNoteEditClose();\n      Toast.error(error);\n    });\n  };\n\n  const handleDeleteNote = () => {\n    const {\n      method,\n      url,\n      baseURL\n    } = updateNote;\n    axios({\n      method,\n      url: `${url}/${idForRecordToDelete}`,\n      baseURL,\n      data: {\n        isDeleted: true\n      }\n    }).then(data => {\n      if (data.data.code === \"OK\") {\n        fetch();\n        Toast.success(data.data.message);\n      } else {\n        Toast.error(data.data.message);\n      }\n    }).catch(error => {\n      Toast.error(error);\n    });\n  };\n\n  const handleTableChange = pagination => {\n    if (!pagination) return;\n    let tempFilter = apiFilter;\n    tempFilter = { ...tempFilter,\n      page: pagination.current,\n      limit: pagination.pageSize\n    };\n    setApiFilter(tempFilter);\n  };\n\n  const handleDateFilter = filterDate => {\n    let tempFilter = { ...apiFilter\n    };\n\n    if (filterDate) {\n      tempFilter = { ...tempFilter,\n        gte: [{\n          createdAt: moment(filterDate).startOf(\"day\")\n        }],\n        lte: [{\n          createdAt: moment(filterDate).endOf(\"day\")\n        }]\n      };\n    } else {\n      tempFilter = _.omit(tempFilter, [\"lte\", \"gte\"]);\n    }\n\n    setApiFilter(tempFilter);\n  };\n\n  const handleNoteTypeChangeFilter = noteType => {\n    let tempFilter = { ...apiFilter\n    };\n\n    if (noteType) {\n      tempFilter.find = { ...tempFilter.find,\n        noteType: noteType\n      };\n    } else {\n      tempFilter.find = _.omit(tempFilter.find, \"noteType\");\n    }\n\n    setApiFilter(tempFilter);\n  };\n\n  const handleNotePriorityFilter = priority => {\n    let tempFilter = { ...apiFilter\n    };\n\n    if (priority) {\n      tempFilter.find = { ...tempFilter.find,\n        priority: priority\n      };\n    } else {\n      tempFilter.find = _.omit(tempFilter.find, \"priority\");\n    }\n\n    setApiFilter(tempFilter);\n  };\n\n  const handleAddedByFilter = addedBy => {\n    let tempFilter = { ...apiFilter\n    };\n\n    if (addedBy) {\n      tempFilter.find = { ...tempFilter.find,\n        addedBy: addedBy\n      };\n    } else {\n      tempFilter.find = _.omit(tempFilter.find, \"addedBy\");\n    }\n\n    setApiFilter(tempFilter);\n  };\n\n  const handleTypeOfDocFilter = type => {\n    let tempFilter = { ...apiFilter\n    };\n\n    if (type) {\n      tempFilter.ne = [{\n        [type]: null\n      }];\n    } else {\n      tempFilter = _.omit(tempFilter, \"ne\");\n    }\n\n    setApiFilter(tempFilter);\n  };\n\n  const handleNoteViewModal = (record, action) => {\n    console.log(\"ðŸš€ ~ file: index.js ~ line 266 ~ handleNoteViewModal ~ record\", record, action);\n    setDetailViewRecord(record);\n    setDetailViewVisible(action);\n  };\n\n  const columns = [{\n    title: \"Sr.No\",\n    keyword: \"index\",\n    dataIndex: \"index\",\n    render: (text, record, index) => /*#__PURE__*/React.createElement(\"div\", {\n      style: (record === null || record === void 0 ? void 0 : record.isAlert) == true ? {\n        color: 'red'\n      } : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 40\n      }\n    }, (apiFilter.page - 1) * apiFilter.limit + (index + 1))\n  }, {\n    title: \"Associated Document\",\n    dataIndex: \"recordName\" // render: (text, record) => {\n    //   if (record.prescriptionOrderId) {\n    //     return (\n    //       <>\n    //         {\"Prescription Order \"}\n    //         {record.prescriptionOrderId.orderNumber}\n    //       </>\n    //     );\n    //   } else if (record.residentDocumentId) {\n    //     return (\n    //       <>\n    //         {\"Resident Document \"}\n    //         {record.residentDocumentId.residentDocId}\n    //       </>\n    //     );\n    //   } else if (record.pmrId) {\n    //     return (\n    //       <>\n    //         {\"Pmr \"}\n    //         {record.pmrId.pmrId}\n    //       </>\n    //     );\n    //   } else if (record.xrayId) {\n    //     return (\n    //       <>\n    //         {\"Xray \"}\n    //         {record.xrayId.orderNumber}\n    //       </>\n    //     );\n    //   } else if (record.prescriptionMedicationId) {\n    //     return (\n    //       <>\n    //         {\"Prescription-Medication \"}\n    //         {record.prescriptionMedicationId.uniqueNumber}\n    //       </>\n    //     );\n    //   } else if (record.pmrOrderId) {\n    //     return (\n    //       <>\n    //         {\"PmrOrder \"}\n    //         {record.pmrOrderId.orderNumber}\n    //       </>\n    //     );\n    //   } else if (record.virtualVisitId) {\n    //     return <>{\"Virtual Visit \"}</>;\n    //   }\n    // },\n\n  }, {\n    title: \"Added By\",\n    dataIndex: \"addedBy\",\n    render: (text, record) => /*#__PURE__*/React.createElement(\"div\", {\n      style: (record === null || record === void 0 ? void 0 : record.isAlert) == true ? {\n        color: 'red'\n      } : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 33\n      }\n    }, text ? getUserNameWithDesignation(text) : '-')\n  }, {\n    title: \"Date & Time\",\n    dataIndex: \"createdAt\",\n    render: (text, record) => /*#__PURE__*/React.createElement(\"div\", {\n      style: (record === null || record === void 0 ? void 0 : record.isAlert) == true ? {\n        color: 'red'\n      } : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 33\n      }\n    }, \" \", text ? displayDateTime(text) : \"\")\n  }, {\n    title: \"Note\",\n    dataIndex: \"note\",\n    render: (text, record) => /*#__PURE__*/React.createElement(\"div\", {\n      style: (record === null || record === void 0 ? void 0 : record.isAlert) == true ? {\n        color: 'red'\n      } : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 33\n      }\n    }, text ? text : \"\", \" \")\n  }, {\n    title: \"Note Type\",\n    dataIndex: \"noteType\",\n    render: (text, record) => /*#__PURE__*/React.createElement(\"div\", {\n      style: (record === null || record === void 0 ? void 0 : record.isAlert) == true ? {\n        color: 'red'\n      } : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 33\n      }\n    }, text ? text.name : \"\")\n  }, // {\n  //   title: \"Priority\",\n  //   dataIndex: \"priority\",\n  //   render: (text, record) => (\n  //     <>{text ? _.invert(priority)[parseInt(text)] : \"\"}</>\n  //   ),\n  // },\n  {\n    title: \"Actions\",\n    // dataIndex: \"priority\",\n    showRefresh: true,\n    render: (text, record) =>\n    /*#__PURE__*/\n    // authUser._id === record.addedBy?._id ?\n    React.createElement(\"div\", {\n      className: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => handleEditNoteButtonClick(record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 13\n      }\n    }, \"Edit\")), /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => handleDeleteNoteButtonClick(record),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DelNotes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 13\n      }\n    }, \"Delete Note\")), /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => handleNoteViewModal(record, true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Info, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 13\n      }\n    }, \"View\"))) // : \"\"\n\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    handleDateFilter: handleDateFilter,\n    handleNoteTypeChangeFilter: handleNoteTypeChangeFilter,\n    handleNotePriorityFilter: handleNotePriorityFilter,\n    userListForFilter: userListForFilter,\n    handleAddedByFilter: handleAddedByFilter,\n    handleTypeOfDocFilter: handleTypeOfDocFilter,\n    userListForFilterLoading: userListForFilterLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }\n  }), showConfirmMessage && /*#__PURE__*/React.createElement(ConfirmPopup, {\n    title: \"Are you sure you want to delete this note?\",\n    okText: \"Yes\",\n    visible: showConfirmMessage,\n    onCancel: () => {\n      setShowConfirmMessage(false);\n    },\n    onOk: () => {\n      setShowConfirmMessage(false);\n      handleDeleteNote();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table // loading={true}\n  , {\n    columns: columns,\n    datasource: data,\n    loading: tableLoading,\n    pagination: {\n      current: apiFilter.page,\n      pageSize: apiFilter.limit,\n      total: count,\n      showSizeChanger: true,\n      onShowSizeChange: onShowSizeChange\n    },\n    onChange: handleTableChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }\n  }), isEditVisible && /*#__PURE__*/React.createElement(EditModal, {\n    visible: isEditVisible,\n    isEdit: true,\n    detail: noteRecordForEdit,\n    onCancel: handleNoteEditClose,\n    handleUpdate: handleNoteUpdate,\n    updateButtonLoading: updateButtonLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }\n  }), detailViewVisible && /*#__PURE__*/React.createElement(ViewNoteModal, {\n    xRayNumber: detailViewRecord.recordName,\n    detail: detailViewRecord,\n    visible: detailViewVisible,\n    isOnlyView: true // notesType={}\n    ,\n    footer: null,\n    onClose: () => {\n      setDetailViewVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = props => {\n  const {\n    auth,\n    resident\n  } = props;\n  return {\n    authUser: auth.authUser,\n    resident\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(NoteTab));","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/ResidentDetail/View/NotesTab/index.js"],"names":["da","te","React","useEffect","useState","connect","withRouter","ConfirmPopup","Toast","Table","axios","getAllNotes","updateNote","userPaginate","USER_TYPE","displayDateTime","getUserNameWithDesignation","_","filter","priority","Edit","Info","DelNotes","EditModal","Header","moment","ViewNotesPopup","ViewNoteModal","NoteTab","props","isTabActive","authUser","resident","apiFilter","setApiFilter","page","limit","populate","prescriptionOrderId","prescriptionMedicationId","pmrId","addedBy","pmrOrderId","xrayId","residentDocumentId","virtualVisitId","noteType","find","residentId","currentResidentId","isDeleted","userListForFilter","setUserListForFilter","userListForFilterLoading","setUserListForFilterLoading","data","setData","count","setCount","showConfirmMessage","setShowConfirmMessage","idForRecordToDelete","setIdForRecordToDelete","isEditVisible","setIsEditVisible","noteRecordForEdit","setNoteRecordForEdit","updateButtonLoading","setUpdateButtonLoading","tableLoading","setTableLoading","detailViewVisible","setDetailViewVisible","detailViewRecord","setDetailViewRecord","fetch","userFilter","fields","type","HOME","NURSE","PHYSICIAN","query","then","code","list","error","message","catch","map","record","recordName","orderNumber","residentDocId","uniqueNumber","console","log","onShowSizeChange","size","prevFilter","handleDeleteNoteButtonClick","_id","handleEditNoteButtonClick","handleNoteEditClose","handleNoteUpdate","id","method","url","baseURL","success","handleDeleteNote","handleTableChange","pagination","tempFilter","current","pageSize","handleDateFilter","filterDate","gte","createdAt","startOf","lte","endOf","omit","handleNoteTypeChangeFilter","handleNotePriorityFilter","handleAddedByFilter","handleTypeOfDocFilter","ne","handleNoteViewModal","action","columns","title","keyword","dataIndex","render","text","index","isAlert","color","name","showRefresh","total","showSizeChanger","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import { da, te } from \"date-fns/locale\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { ConfirmPopup, Toast } from \"../../../../components/common\";\nimport Table from \"../../../../components/common/Table/index\";\n\nimport axios from \"../../../../services/api/config\";\nimport { getAllNotes, updateNote } from \"../../../../services/api/routes/notes\";\nimport { userPaginate } from \"../../../../services/api/routes/user\";\nimport { USER_TYPE } from \"./../../../../constants/User\";\nimport { displayDateTime } from \"../../../../util/moment\";\nimport { getUserNameWithDesignation } from \"../../../../util/common\";\nimport _, { filter } from \"lodash\";\nimport { priority } from \"./../../../../constants/notes\";\nimport { Edit, Info } from \"../../../../assets/images/popup\";\nimport { DelNotes } from \"../../../../assets/images/resident-detail\";\nimport EditModal from \"./Components/Editmodel\";\nimport Header from \"./Components/Header\";\nimport moment from \"moment\";\nimport ViewNotesPopup from \"../../../../components/NotesPopup/View\";\nimport ViewNoteModal from \"../../../../components/NotesPopup/ViewNoteModal\";\n\nconst NoteTab = (props) => {\n  const { isTabActive, authUser, resident } = props;\n  const [apiFilter, setApiFilter] = useState({\n    page: 1,\n    limit: 10,\n    populate: [\n      {\n        prescriptionOrderId: [\"orderNumber\"],\n      },\n      {\n        prescriptionMedicationId: [\"uniqueNumber\"],\n      },\n      {\n        pmrId: [\"pmrId\"],\n      },\n      {\n        addedBy: [\n          \"mergeLFName\",\n          \"type\",\n          {\n            \"assignedCustomer\": [\n              \"isActive\",\n              \"homeId\",\n              {\n                \"designationId\": [\n                  \"name\",\n                  \"code\",\n                  \"parentId\"\n                ]\n              }\n            ]\n          }\n        ],\n      },\n      {\n        pmrOrderId: [\"orderNumber\"],\n      },\n      {\n        xrayId: [\"orderNumber\"],\n      },\n      {\n        residentDocumentId: [\"residentDocId\"],\n      },\n      {\n        virtualVisitId: [\"_id\"],\n      },\n      {\n        noteType: [\"name\"],\n      },\n      {\n        \"history.noteType\": [\"name\"],\n      },\n      {\n        \"history.addedBy\": [],\n      },\n    ],\n    find: {\n      residentId: resident.currentResidentId,\n      isDeleted: false,\n    },\n  });\n  const [userListForFilter, setUserListForFilter] = useState([]);\n  const [userListForFilterLoading, setUserListForFilterLoading] = useState(\n    false\n  );\n\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState(0);\n  const [showConfirmMessage, setShowConfirmMessage] = useState(false);\n  const [idForRecordToDelete, setIdForRecordToDelete] = useState(false);\n  const [isEditVisible, setIsEditVisible] = useState(false);\n  const [noteRecordForEdit, setNoteRecordForEdit] = useState({});\n  const [updateButtonLoading, setUpdateButtonLoading] = useState(true);\n  const [tableLoading, setTableLoading] = useState(true);\n  const [detailViewVisible, setDetailViewVisible] = useState(false);\n  const [detailViewRecord, setDetailViewRecord] = useState({});\n  useEffect(() => {\n    if (isTabActive) {\n      fetch();\n    }\n  }, [isTabActive, apiFilter]);\n\n  useEffect(() => {\n    if (isTabActive) {\n      setUserListForFilterLoading(true);\n      let userFilter = {\n        fields: [\"mergeLFName\"],\n        find: {\n          type: [USER_TYPE.HOME.NURSE, USER_TYPE.HOME.PHYSICIAN],\n        },\n      };\n      axios({ ...userPaginate, data: { query: userFilter } })\n        .then((data) => {\n          if (data.data.code === \"OK\") {\n            setUserListForFilter(data.data.data.list);\n          } else {\n            Toast.error(data.data.message);\n          }\n          setUserListForFilterLoading(false);\n        })\n        .catch((error) => {\n          setUserListForFilterLoading(false);\n        });\n    }\n  }, [isTabActive]);\n\n  const fetch = () => {\n    setTableLoading(true);\n    axios({ ...getAllNotes, data: { query: apiFilter } })\n      .then((data) => {\n        if (data.data.code === \"OK\") {\n          _.map(data.data.data.data, (record) => {\n            if (record.prescriptionOrderId) {\n              record.recordName = `Prescription Order ${record.prescriptionOrderId.orderNumber}`;\n              return;\n            } else if (record.residentDocumentId) {\n              record.recordName = `Resident Document ${record.residentDocumentId.residentDocId}`;\n              return;\n            } else if (record.pmrId) {\n              record.recordName = `Pmr ${record.pmrId.pmrId}`;\n              return;\n            } else if (record.xrayId) {\n              record.recordName = `Xray ${record.xrayId.orderNumber}`;\n              return;\n            } else if (record.prescriptionMedicationId) {\n              record.recordName = `Prescription-Medication  ${record.prescriptionMedicationId.uniqueNumber}`;\n              return;\n            } else if (record.pmrOrderId) {\n              record.recordName = `Pmr Order ${record.pmrOrderId.orderNumber}`;\n              return;\n            } else if (record.virtualVisitId) {\n              record.recordName = `Virtual Visit `;\n              return;\n            }\n          });\n          setCount(data.data.data.count);\n          setData(data.data.data.data);\n          console.log(\"ðŸš€ ~ file: index.js ~ line 144 ~ .then ~ data.data.data.data\", data.data.data.data)\n          // _.includes(data.data.data.data,(x)=>{x.isActive=true})\n        }\n        setTableLoading(false);\n      })\n      .catch((error) => {\n        setTableLoading(false);\n      });\n  };\n\n  const onShowSizeChange = (size) => {\n    if (size) {\n      setApiFilter((prevFilter) => ({ ...prevFilter, limit: size, page: 1 }));\n    }\n  };\n  const handleDeleteNoteButtonClick = (record) => {\n    setIdForRecordToDelete(record._id);\n    setShowConfirmMessage(true);\n  };\n\n  const handleEditNoteButtonClick = (record) => {\n    setNoteRecordForEdit(record);\n    setIsEditVisible(true);\n  };\n\n  const handleNoteEditClose = () => {\n    setIsEditVisible(false);\n  };\n\n  const handleNoteUpdate = (id, data) => {\n    setUpdateButtonLoading(true);\n    const { method, url, baseURL } = updateNote;\n    axios({\n      method,\n      url: `${url}/${id}`,\n      baseURL,\n      data,\n    })\n      .then((data) => {\n        if (data.data.code === \"OK\") {\n          fetch();\n          Toast.success(data.data.message);\n        } else {\n          Toast.error(data.data.message);\n        }\n        setUpdateButtonLoading(false);\n        handleNoteEditClose();\n      })\n      .catch((error) => {\n        setUpdateButtonLoading(false);\n        handleNoteEditClose();\n        Toast.error(error);\n      });\n  };\n\n  const handleDeleteNote = () => {\n    const { method, url, baseURL } = updateNote;\n\n    axios({\n      method,\n      url: `${url}/${idForRecordToDelete}`,\n      baseURL,\n      data: {\n        isDeleted: true,\n      },\n    })\n      .then((data) => {\n        if (data.data.code === \"OK\") {\n          fetch();\n          Toast.success(data.data.message);\n        } else {\n          Toast.error(data.data.message);\n        }\n      })\n      .catch((error) => {\n        Toast.error(error);\n      });\n  };\n\n  const handleTableChange = (pagination) => {\n    if (!pagination) return;\n    let tempFilter = apiFilter;\n    tempFilter = {\n      ...tempFilter,\n      page: pagination.current,\n      limit: pagination.pageSize,\n    };\n    setApiFilter(tempFilter);\n  };\n\n  const handleDateFilter = (filterDate) => {\n    let tempFilter = { ...apiFilter };\n    if (filterDate) {\n      tempFilter = {\n        ...tempFilter,\n        gte: [{ createdAt: moment(filterDate).startOf(\"day\") }],\n        lte: [{ createdAt: moment(filterDate).endOf(\"day\") }],\n      };\n    } else {\n      tempFilter = _.omit(tempFilter, [\"lte\", \"gte\"]);\n    }\n    setApiFilter(tempFilter);\n  };\n\n  const handleNoteTypeChangeFilter = (noteType) => {\n    let tempFilter = { ...apiFilter };\n    if (noteType) {\n      tempFilter.find = {\n        ...tempFilter.find,\n        noteType: noteType,\n      };\n    } else {\n      tempFilter.find = _.omit(tempFilter.find, \"noteType\");\n    }\n    setApiFilter(tempFilter);\n  };\n\n  const handleNotePriorityFilter = (priority) => {\n    let tempFilter = { ...apiFilter };\n    if (priority) {\n      tempFilter.find = {\n        ...tempFilter.find,\n        priority: priority,\n      };\n    } else {\n      tempFilter.find = _.omit(tempFilter.find, \"priority\");\n    }\n    setApiFilter(tempFilter);\n  };\n\n  const handleAddedByFilter = (addedBy) => {\n    let tempFilter = { ...apiFilter };\n    if (addedBy) {\n      tempFilter.find = {\n        ...tempFilter.find,\n        addedBy: addedBy,\n      };\n    } else {\n      tempFilter.find = _.omit(tempFilter.find, \"addedBy\");\n    }\n    setApiFilter(tempFilter);\n  };\n\n  const handleTypeOfDocFilter = (type) => {\n    let tempFilter = { ...apiFilter };\n    if (type) {\n      tempFilter.ne = [{ [type]: null }];\n    } else {\n      tempFilter = _.omit(tempFilter, \"ne\");\n    }\n    setApiFilter(tempFilter);\n  };\n\n  const handleNoteViewModal = (record, action) => {\n    console.log(\n      \"ðŸš€ ~ file: index.js ~ line 266 ~ handleNoteViewModal ~ record\",\n      record,\n      action\n    );\n    setDetailViewRecord(record);\n    setDetailViewVisible(action);\n  };\n  const columns = [\n    {\n      title: \"Sr.No\",\n      keyword: \"index\",\n      dataIndex: \"index\",\n      render: (text, record, index) => <div style={record?.isAlert == true ? { color: 'red' } : null}>{(apiFilter.page - 1) * apiFilter.limit + (index + 1)}</div>,\n    },\n    {\n      title: \"Associated Document\",\n      dataIndex: \"recordName\",\n      // render: (text, record) => {\n      //   if (record.prescriptionOrderId) {\n      //     return (\n      //       <>\n      //         {\"Prescription Order \"}\n      //         {record.prescriptionOrderId.orderNumber}\n      //       </>\n      //     );\n      //   } else if (record.residentDocumentId) {\n      //     return (\n      //       <>\n      //         {\"Resident Document \"}\n      //         {record.residentDocumentId.residentDocId}\n      //       </>\n      //     );\n      //   } else if (record.pmrId) {\n      //     return (\n      //       <>\n      //         {\"Pmr \"}\n      //         {record.pmrId.pmrId}\n      //       </>\n      //     );\n      //   } else if (record.xrayId) {\n      //     return (\n      //       <>\n      //         {\"Xray \"}\n      //         {record.xrayId.orderNumber}\n      //       </>\n      //     );\n      //   } else if (record.prescriptionMedicationId) {\n      //     return (\n      //       <>\n      //         {\"Prescription-Medication \"}\n      //         {record.prescriptionMedicationId.uniqueNumber}\n      //       </>\n      //     );\n      //   } else if (record.pmrOrderId) {\n      //     return (\n      //       <>\n      //         {\"PmrOrder \"}\n      //         {record.pmrOrderId.orderNumber}\n      //       </>\n      //     );\n      //   } else if (record.virtualVisitId) {\n      //     return <>{\"Virtual Visit \"}</>;\n      //   }\n      // },\n    },\n    {\n      title: \"Added By\",\n      dataIndex: \"addedBy\",\n      render: (text, record) => <div style={record?.isAlert == true ? { color: 'red' } : null}>{text ? getUserNameWithDesignation(text) : '-'}</div>,\n    },\n    {\n      title: \"Date & Time\",\n      dataIndex: \"createdAt\",\n      render: (text, record) => <div style={record?.isAlert == true ? { color: 'red' } : null}> {text ? displayDateTime(text) : \"\"}</div>,\n    },\n    {\n      title: \"Note\",\n      dataIndex: \"note\",\n      render: (text, record) => <div style={record?.isAlert == true ? { color: 'red' } : null}>{text ? text : \"\"} </div>,\n    },\n    {\n      title: \"Note Type\",\n      dataIndex: \"noteType\",\n      render: (text, record) => <div style={record?.isAlert == true ? { color: 'red' } : null}>{text ? text.name : \"\"}</div>,\n    },\n\n    // {\n    //   title: \"Priority\",\n    //   dataIndex: \"priority\",\n    //   render: (text, record) => (\n    //     <>{text ? _.invert(priority)[parseInt(text)] : \"\"}</>\n    //   ),\n    // },\n    {\n      title: \"Actions\",\n      // dataIndex: \"priority\",\n      showRefresh: true,\n\n      render: (text, record) => (\n        // authUser._id === record.addedBy?._id ?\n        <div className=\"actions\">\n          <a onClick={() => handleEditNoteButtonClick(record)}>\n            <Edit />\n            <p>Edit</p>\n          </a>\n          <a onClick={() => handleDeleteNoteButtonClick(record)}>\n            <DelNotes />\n            <p>Delete Note</p>\n          </a>\n          <a onClick={() => handleNoteViewModal(record, true)}>\n            <Info />\n            <p>View</p>\n          </a>\n        </div>\n        // : \"\"\n      ),\n    },\n  ];\n  return (\n    <>\n      <Header\n        handleDateFilter={handleDateFilter}\n        handleNoteTypeChangeFilter={handleNoteTypeChangeFilter}\n        handleNotePriorityFilter={handleNotePriorityFilter}\n        userListForFilter={userListForFilter}\n        handleAddedByFilter={handleAddedByFilter}\n        handleTypeOfDocFilter={handleTypeOfDocFilter}\n        userListForFilterLoading={userListForFilterLoading}\n      />\n      {showConfirmMessage && (\n        <ConfirmPopup\n          title={\"Are you sure you want to delete this note?\"}\n          okText=\"Yes\"\n          visible={showConfirmMessage}\n          onCancel={() => {\n            setShowConfirmMessage(false);\n          }}\n          onOk={() => {\n            setShowConfirmMessage(false);\n            handleDeleteNote();\n          }}\n        />\n      )}\n      <Table\n        // loading={true}\n        columns={columns}\n        datasource={data}\n        loading={tableLoading}\n        pagination={{\n          current: apiFilter.page,\n          pageSize: apiFilter.limit,\n          total: count,\n          showSizeChanger: true,\n          onShowSizeChange: onShowSizeChange,\n        }}\n        onChange={handleTableChange}\n      />\n      {isEditVisible && (\n        <EditModal\n          visible={isEditVisible}\n          isEdit={true}\n          detail={noteRecordForEdit}\n          onCancel={handleNoteEditClose}\n          handleUpdate={handleNoteUpdate}\n          updateButtonLoading={updateButtonLoading}\n        />\n      )}\n      {detailViewVisible && (\n        <ViewNoteModal\n          xRayNumber={detailViewRecord.recordName}\n          detail={detailViewRecord}\n          visible={detailViewVisible}\n          isOnlyView={true}\n          // notesType={}\n          footer={null}\n          onClose={() => {\n            setDetailViewVisible(false);\n          }}\n        />\n      )}\n    </>\n  );\n};\nconst mapStateToProps = (props) => {\n  const { auth, resident } = props;\n  return { authUser: auth.authUser, resident };\n};\nexport default connect(mapStateToProps)(withRouter(NoteTab));\n"]},"metadata":{},"sourceType":"module"}