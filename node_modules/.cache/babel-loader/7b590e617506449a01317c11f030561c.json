{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/UserAuth/ForgotPassword/index.js\";\nimport React, { useState } from 'react';\nimport ForgotPassword from './ForgotPassword';\nimport { createForm } from 'rc-form';\nimport { forgotPassword } from '../../../services/api/routes/auth';\nimport axios from '../../../services/api/config';\nimport { Toast } from '../../../components/common/Toast';\nimport routes from '../../../routes/constant';\n\nfunction ForgotPasswordMain(props) {\n  const [btnload, setBtnLoading] = useState(false);\n\n  const handleForgotPass = () => {\n    const {\n      validateFields\n    } = props.form;\n    validateFields((error, values) => {\n      if (error) {\n        return;\n      }\n\n      setBtnLoading(true);\n      let data = {\n        username: values.email\n      };\n      axios({ ...forgotPassword,\n        data\n      }).then(({\n        data\n      }) => {\n        console.log(\"TCL: handleForgotPass -> data\", data);\n        setBtnLoading(false);\n\n        if (data.code === 'OK') {\n          props.history.push({\n            pathname: routes.login.path\n          });\n          Toast.success(data.message);\n          props.form.resetFields();\n        }\n      }).catch(err => setBtnLoading(false));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ForgotPassword, {\n    loading: btnload // onForgotPassSubmit={(e) => { e.preventDefault(); console.log('btnClicked') }}\n    ,\n    onForgotPassSubmit: handleForgotPass,\n    form: props.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  });\n}\n\nexport default createForm('forgotPassword')(ForgotPasswordMain);","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/UserAuth/ForgotPassword/index.js"],"names":["React","useState","ForgotPassword","createForm","forgotPassword","axios","Toast","routes","ForgotPasswordMain","props","btnload","setBtnLoading","handleForgotPass","validateFields","form","error","values","data","username","email","then","console","log","code","history","push","pathname","login","path","success","message","resetFields","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,SAASC,KAAT,QAAsB,kCAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AACA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/B,QAAM,CAACC,OAAD,EAAUC,aAAV,IAA2BV,QAAQ,CAAC,KAAD,CAAzC;;AACA,QAAMW,gBAAgB,GAAG,MAAM;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAqBJ,KAAK,CAACK,IAAjC;AACAD,IAAAA,cAAc,CAAC,CAACE,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAID,KAAJ,EAAW;AACP;AACH;;AACDJ,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA,UAAIM,IAAI,GAAG;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACG;AAAnB,OAAX;AACAd,MAAAA,KAAK,CAAC,EAAE,GAAGD,cAAL;AAAqBa,QAAAA;AAArB,OAAD,CAAL,CAAmCG,IAAnC,CAAwC,CAAC;AAAEH,QAAAA;AAAF,OAAD,KAAc;AAClDI,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CL,IAA7C;AACAN,QAAAA,aAAa,CAAC,KAAD,CAAb;;AACA,YAAIM,IAAI,CAACM,IAAL,KAAc,IAAlB,EAAwB;AACpBd,UAAAA,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmB;AACfC,YAAAA,QAAQ,EAAEnB,MAAM,CAACoB,KAAP,CAAaC;AADR,WAAnB;AAGAtB,UAAAA,KAAK,CAACuB,OAAN,CAAcZ,IAAI,CAACa,OAAnB;AACArB,UAAAA,KAAK,CAACK,IAAN,CAAWiB,WAAX;AACH;AACJ,OAVD,EAUGC,KAVH,CAUSC,GAAG,IAAItB,aAAa,CAAC,KAAD,CAV7B;AAWH,KAjBa,CAAd;AAkBH,GApBD;;AAqBA,sBAAQ,oBAAC,cAAD;AACJ,IAAA,OAAO,EAAED,OADL,CAEJ;AAFI;AAGJ,IAAA,kBAAkB,EAAEE,gBAHhB;AAIJ,IAAA,IAAI,EAAEH,KAAK,CAACK,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AAMH;;AAED,eAAeX,UAAU,CAAC,gBAAD,CAAV,CAA6BK,kBAA7B,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport ForgotPassword from './ForgotPassword'\nimport { createForm } from 'rc-form';\nimport { forgotPassword } from '../../../services/api/routes/auth'\nimport axios from '../../../services/api/config'\nimport { Toast } from '../../../components/common/Toast';\nimport routes from '../../../routes/constant';\nfunction ForgotPasswordMain(props) {\n    const [btnload, setBtnLoading] = useState(false)\n    const handleForgotPass = () => {\n        const { validateFields } = props.form\n        validateFields((error, values) => {\n            if (error) {\n                return\n            }\n            setBtnLoading(true)\n            let data = { username: values.email }\n            axios({ ...forgotPassword, data }).then(({ data }) => {\n                console.log(\"TCL: handleForgotPass -> data\", data)\n                setBtnLoading(false)\n                if (data.code === 'OK') {\n                    props.history.push({\n                        pathname: routes.login.path\n                    })\n                    Toast.success(data.message)\n                    props.form.resetFields();\n                }\n            }).catch(err => setBtnLoading(false))\n        })\n    }\n    return (<ForgotPassword\n        loading={btnload}\n        // onForgotPassSubmit={(e) => { e.preventDefault(); console.log('btnClicked') }}\n        onForgotPassSubmit={handleForgotPass}\n        form={props.form}\n    />)\n}\n\nexport default createForm('forgotPassword')(ForgotPasswordMain) "]},"metadata":{},"sourceType":"module"}