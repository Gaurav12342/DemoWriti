{"ast":null,"code":"var _jsxFileName = \"/home/gauravpendherkar/DemoWriti/src/containers/UserAuth/UpdateDefaultPassword/UpdateDefaultPassword.js\";\nimport React from 'react';\nimport { Input, ErrorMsg, Button } from '../../../components/common/index';\nimport routes from '../../../routes/constant';\nimport { Logo } from '../../../assets/images/index';\nimport { Link } from 'react-router-dom';\n\nfunction UpdateDefaultPassword(props) {\n  const {\n    form,\n    onReset,\n    btnLoading,\n    onBackLogin,\n    hideshowpasschange,\n    showPassword\n  } = props;\n  const {\n    getFieldError,\n    getFieldDecorator\n  } = form;\n  let errors;\n\n  const compareToFirstPassword = (rule, value, callback) => {\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  const validateToNextPassword = (rule, value, callback) => {\n    if (value && value === form.getFieldValue('currentPassword')) {\n      callback('Old password and new password could not be same');\n      return;\n    }\n\n    if (value) {\n      form.validateFields(['confirm'], {\n        force: true\n      });\n    }\n\n    callback();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_wrap defaultPasswordWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container defaultPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    height: \"70\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Reset Password\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page_head2 align-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"To access our panel you will have to reset a new password.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pmr_list_wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patient_order_wrap\",\n    style: {\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_wrap flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group required col-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }, \"Current Password\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 56\n    }\n  }, \"*\")), getFieldDecorator('currentPassword', {\n    rules: [{\n      required: true,\n      message: 'Please input your old password!'\n    }, {\n      min: 8,\n      message: 'Password must be minimum of 8 digit.'\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    ispass: true,\n    type: showPassword[\"currentPass\"] ? \"text\" : \"password\",\n    placeholder: \"Current Password\",\n    hideshowpasschange: () => hideshowpasschange('currentPass'),\n    show: showPassword[\"currentPass\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }\n  })), (errors = getFieldError('currentPassword')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 80\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group required col-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, \"New Password\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 52\n    }\n  }, \"*\")), getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }, {\n      min: 8,\n      message: 'New Password must be minimum of 8 digit.'\n    }, {\n      validator: validateToNextPassword\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    ispass: true,\n    type: showPassword[\"password\"] ? \"text\" : \"password\",\n    placeholder: \"New Password\",\n    hideshowpasschange: () => hideshowpasschange('password'),\n    show: showPassword[\"password\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }\n  })), (errors = getFieldError('password')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 73\n    }\n  }) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_row add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form_group required col-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, \"Confirm Password\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 56\n    }\n  }, \"*\")), getFieldDecorator('newPassword', {\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, {\n      validator: compareToFirstPassword\n    }]\n  })( /*#__PURE__*/React.createElement(Input, {\n    ispass: true,\n    type: showPassword[\"newPass\"] ? \"text\" : \"password\",\n    placeholder: \"Retype New Password\",\n    hideshowpasschange: () => hideshowpasschange('newPass'),\n    show: showPassword[\"newPass\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 36\n    }\n  })), (errors = getFieldError('newPassword')) ? /*#__PURE__*/React.createElement(ErrorMsg, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 76\n    }\n  }) : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"compnents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signBtn send-btn2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"lg\",\n    loading: btnLoading,\n    onClick: onReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(Link, {\n    to: routes.login.path,\n    onClick: onBackLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"back-to-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 39\n    }\n  }, \"Back to Login\")))))))));\n}\n\nexport default UpdateDefaultPassword;","map":{"version":3,"sources":["/home/gauravpendherkar/DemoWriti/src/containers/UserAuth/UpdateDefaultPassword/UpdateDefaultPassword.js"],"names":["React","Input","ErrorMsg","Button","routes","Logo","Link","UpdateDefaultPassword","props","form","onReset","btnLoading","onBackLogin","hideshowpasschange","showPassword","getFieldError","getFieldDecorator","errors","compareToFirstPassword","rule","value","callback","getFieldValue","validateToNextPassword","validateFields","force","border","rules","required","message","min","validator","login","path"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Input, ErrorMsg, Button } from '../../../components/common/index'\nimport routes from '../../../routes/constant'\nimport { Logo } from '../../../assets/images/index'\nimport { Link } from 'react-router-dom'\n\nfunction UpdateDefaultPassword(props) {\n\n    const { form, onReset, btnLoading, onBackLogin, hideshowpasschange, showPassword } = props\n    const { getFieldError, getFieldDecorator } = form\n    let errors\n\n    const compareToFirstPassword = (rule, value, callback) => {\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    };\n\n    const validateToNextPassword = (rule, value, callback) => {\n        if (value && value === form.getFieldValue('currentPassword')) {\n            callback('Old password and new password could not be same');\n            return;\n        }\n        if (value) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n\n    return <div className=\"pmr_wrap defaultPasswordWrap\">\n        <div className=\"container defaultPassword\">\n            <div className=\"page_head\">\n                <Logo height=\"70\" />\n            </div>\n            <div className=\"page_head\">\n                <h3>Reset Password</h3>\n            </div>\n            <div className=\"page_head2 align-center\">\n                <label>To access our panel you will have to reset a new password.</label>\n            </div>\n            <div className=\"pmr_list_wrap\">\n                <div className=\"patient_order_wrap\" style={{ border: \"none\" }}>\n                    <div className=\"form_wrap flex-wrap\">\n                        <div className='form_row add-user'>\n                            <div className='form_group required col-10'>\n                                <label>Current Password<span>*</span></label>\n                                {getFieldDecorator('currentPassword', {\n                                    rules: [{\n                                        required: true, message: 'Please input your old password!',\n                                    }, {\n                                        min: 8,\n                                        message: 'Password must be minimum of 8 digit.',\n                                    },\n                                    ],\n                                })(\n                                    <Input\n                                        ispass={true}\n                                        type={showPassword[\"currentPass\"] ? \"text\" : \"password\"}\n                                        placeholder=\"Current Password\"\n                                        hideshowpasschange={() => hideshowpasschange('currentPass')}\n                                        show={showPassword[\"currentPass\"]}\n                                    />\n                                )}\n                                {(errors = getFieldError('currentPassword')) ? <ErrorMsg errors={errors} /> : null}\n                            </div>\n                        </div>\n                        <div className='form_row add-user'>\n                            <div className='form_group required col-10'>\n                                <label>New Password<span>*</span></label>\n                                {getFieldDecorator('password', {\n                                    rules: [{\n                                        required: true, message: 'Please input your password!',\n                                    }, {\n                                        min: 8,\n                                        message: 'New Password must be minimum of 8 digit.',\n                                    }, {\n                                        validator: validateToNextPassword,\n                                    }],\n                                })(\n                                    <Input\n                                        ispass={true}\n                                        type={showPassword[\"password\"] ? \"text\" : \"password\"}\n                                        placeholder=\"New Password\"\n                                        hideshowpasschange={() => hideshowpasschange('password')}\n                                        show={showPassword[\"password\"]}\n                                    />\n                                )}\n                                {(errors = getFieldError('password')) ? <ErrorMsg errors={errors} /> : null}\n                            </div>\n                        </div>\n                        <div className='form_row add-user'>\n                            <div className='form_group required col-10'>\n                                <label>Confirm Password<span>*</span></label>\n                                {getFieldDecorator('newPassword', {\n                                    rules: [{\n                                        required: true, message: 'Please confirm your password!',\n                                    }, {\n                                        validator: compareToFirstPassword,\n                                    }],\n                                })(<Input\n                                    ispass={true}\n                                    type={showPassword[\"newPass\"] ? \"text\" : \"password\"}\n                                    placeholder=\"Retype New Password\"\n                                    hideshowpasschange={() => hideshowpasschange('newPass')}\n                                    show={showPassword[\"newPass\"]}\n                                />\n                                )}\n                                {(errors = getFieldError('newPassword')) ? <ErrorMsg errors={errors} /> : null}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"compnents\">\n                        <div className=\"signBtn send-btn2\">\n                            <Button size=\"lg\" loading={btnLoading} onClick={onReset}>Reset</Button>\n                            <Link to={routes.login.path} onClick={onBackLogin}>\n                                <span><a className=\"back-to-login\">Back to Login</a></span>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div >\n}\nexport default UpdateDefaultPassword"]},"metadata":{},"sourceType":"module"}